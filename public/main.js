(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var OBJFile = function () {
  function OBJFile(fileContents, defaultModelName) {
    _classCallCheck(this, OBJFile);

    this._reset();
    this.fileContents = fileContents;
    this.defaultModelName = defaultModelName || 'untitled';
  }

  _createClass(OBJFile, [{
    key: '_reset',
    value: function _reset() {
      this.result = {
        models: [],
        materialLibraries: []
      };
      this.currentMaterial = '';
      this.currentGroup = '';
      this.smoothingGroup = 0;
    }
  }, {
    key: 'parse',
    value: function parse() {
      this._reset();

      var _stripComments = function _stripComments(lineString) {
        var commentIndex = lineString.indexOf('#');
        if (commentIndex > -1) {
          return lineString.substring(0, commentIndex);
        }
        return lineString;
      };

      var lines = this.fileContents.split('\n');
      for (var i = 0; i < lines.length; i += 1) {
        var line = _stripComments(lines[i]);

        var lineItems = line.replace(/\s\s+/g, ' ').trim().split(' ');

        switch (lineItems[0].toLowerCase()) {
          case 'o':
            // Start A New Model
            this._parseObject(lineItems);
            break;
          case 'g':
            // Start a new polygon group
            this._parseGroup(lineItems);
            break;
          case 'v':
            // Define a vertex for the current model
            this._parseVertexCoords(lineItems);
            break;
          case 'vt':
            // Texture Coords
            this._parseTextureCoords(lineItems);
            break;
          case 'vn':
            // Define a vertex normal for the current model
            this._parseVertexNormal(lineItems);
            break;
          case 's':
            // Smooth shading statement
            this._parseSmoothShadingStatement(lineItems);
            break;
          case 'f':
            // Define a Face/Polygon
            this._parsePolygon(lineItems);
            break;
          case 'mtllib':
            // Reference to a material library file (.mtl)
            this._parseMtlLib(lineItems);
            break;
          case 'usemtl':
            // Sets the current material to be applied to polygons defined from this point forward
            this._parseUseMtl(lineItems);
            break;
        }
      }

      return this.result;
    }
  }, {
    key: '_currentModel',
    value: function _currentModel() {
      if (this.result.models.length == 0) {
        this.result.models.push({
          name: this.defaultModelName,
          vertices: [],
          textureCoords: [],
          vertexNormals: [],
          faces: []
        });
        this.currentGroup = '';
        this.smoothingGroup = 0;
      }

      return this.result.models[this.result.models.length - 1];
    }
  }, {
    key: '_parseObject',
    value: function _parseObject(lineItems) {
      var modelName = lineItems.length >= 2 ? lineItems[1] : this._getDefaultModelName();
      this.result.models.push({
        name: modelName,
        vertices: [],
        textureCoords: [],
        vertexNormals: [],
        faces: []
      });
      this.currentGroup = '';
      this.smoothingGroup = 0;
    }
  }, {
    key: '_parseGroup',
    value: function _parseGroup(lineItems) {
      if (lineItems.length != 2) {
        throw 'Group statements must have exactly 1 argument (eg. g group_1)';
      }

      this.currentGroup = lineItems[1];
    }
  }, {
    key: '_parseVertexCoords',
    value: function _parseVertexCoords(lineItems) {
      var x = lineItems.length >= 2 ? parseFloat(lineItems[1]) : 0.0;
      var y = lineItems.length >= 3 ? parseFloat(lineItems[2]) : 0.0;
      var z = lineItems.length >= 4 ? parseFloat(lineItems[3]) : 0.0;

      this._currentModel().vertices.push({ x: x, y: y, z: z });
    }
  }, {
    key: '_parseTextureCoords',
    value: function _parseTextureCoords(lineItems) {
      var u = lineItems.length >= 2 ? parseFloat(lineItems[1]) : 0.0;
      var v = lineItems.length >= 3 ? parseFloat(lineItems[2]) : 0.0;
      var w = lineItems.length >= 4 ? parseFloat(lineItems[3]) : 0.0;

      this._currentModel().textureCoords.push({ u: u, v: v, w: w });
    }
  }, {
    key: '_parseVertexNormal',
    value: function _parseVertexNormal(lineItems) {
      var x = lineItems.length >= 2 ? parseFloat(lineItems[1]) : 0.0;
      var y = lineItems.length >= 3 ? parseFloat(lineItems[2]) : 0.0;
      var z = lineItems.length >= 4 ? parseFloat(lineItems[3]) : 0.0;

      this._currentModel().vertexNormals.push({ x: x, y: y, z: z });
    }
  }, {
    key: '_parsePolygon',
    value: function _parsePolygon(lineItems) {
      var totalVertices = lineItems.length - 1;
      if (totalVertices < 3) {
        throw 'Face statement has less than 3 vertices' + this.filePath + this.lineNumber;
      }

      var face = {
        material: this.currentMaterial,
        group: this.currentGroup,
        smoothingGroup: this.smoothingGroup,
        vertices: []
      };

      for (var i = 0; i < totalVertices; i += 1) {
        var vertexString = lineItems[i + 1];
        var vertexValues = vertexString.split('/');

        if (vertexValues.length < 1 || vertexValues.length > 3) {
          throw 'Two many values (separated by /) for a single vertex' + this.filePath + this.lineNumber;
        }

        var vertexIndex = 0;
        var textureCoordsIndex = 0;
        var vertexNormalIndex = 0;
        vertexIndex = parseInt(vertexValues[0]);
        if (vertexValues.length > 1 && !vertexValues[1] == '') {
          textureCoordsIndex = parseInt(vertexValues[1]);
        }
        if (vertexValues.length > 2) {
          vertexNormalIndex = parseInt(vertexValues[2]);
        }

        if (vertexIndex == 0) {
          throw 'Faces uses invalid vertex index of 0';
        }

        // Negative vertex indices refer to the nth last defined vertex
        // convert these to postive indices for simplicity
        if (vertexIndex < 0) {
          vertexIndex = this._currentModel().vertices.length + 1 + vertexIndex;
        }

        face.vertices.push({
          vertexIndex: vertexIndex,
          textureCoordsIndex: textureCoordsIndex,
          vertexNormalIndex: vertexNormalIndex
        });
      }
      this._currentModel().faces.push(face);
    }
  }, {
    key: '_parseMtlLib',
    value: function _parseMtlLib(lineItems) {
      if (lineItems.length >= 2) {
        this.result.materialLibraries.push(lineItems[1]);
      }
    }
  }, {
    key: '_parseUseMtl',
    value: function _parseUseMtl(lineItems) {
      if (lineItems.length >= 2) {
        this.currentMaterial = lineItems[1];
      }
    }
  }, {
    key: '_parseSmoothShadingStatement',
    value: function _parseSmoothShadingStatement(lineItems) {
      if (lineItems.length != 2) {
        throw 'Smoothing group statements must have exactly 1 argument (eg. s <number|off>)';
      }

      var groupNumber = lineItems[1].toLowerCase() == 'off' ? 0 : parseInt(lineItems[1]);
      this.smoothingGroup = groupNumber;
    }
  }]);

  return OBJFile;
}();

module.exports = OBJFile;
},{}],2:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Functor = require("../Data.Functor");
var Data_Semigroup = require("../Data.Semigroup");
var Alt = function (Functor0, alt) {
    this.Functor0 = Functor0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Data_Functor.functorArray;
}, Data_Semigroup.append(Data_Semigroup.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
module.exports = {
    Alt: Alt,
    alt: alt,
    altArray: altArray
};

},{"../Data.Functor":130,"../Data.Semigroup":185}],3:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var Alternative = function (Applicative0, Plus1) {
    this.Applicative0 = Applicative0;
    this.Plus1 = Plus1;
};
var alternativeArray = new Alternative(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Plus.plusArray;
});
module.exports = {
    Alternative: Alternative,
    alternativeArray: alternativeArray
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Plus":59,"../Data.Functor":130}],4:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Applicative = function (Apply0, pure) {
    this.Apply0 = Apply0;
    this.pure = pure;
};
var pure = function (dict) {
    return dict.pure;
};
var unless = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (!v) {
                return v1;
            };
            if (v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 62, column 1 - line 62, column 65: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var when = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var liftA1 = function (dictApplicative) {
    return function (f) {
        return function (a) {
            return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return Control_Apply.applyFn;
}, function (x) {
    return function (v) {
        return x;
    };
});
var applicativeArray = new Applicative(function () {
    return Control_Apply.applyArray;
}, function (x) {
    return [ x ];
});
module.exports = {
    Applicative: Applicative,
    pure: pure,
    liftA1: liftA1,
    unless: unless,
    when: when,
    applicativeFn: applicativeFn,
    applicativeArray: applicativeArray
};

},{"../Control.Apply":6,"../Data.Functor":130,"../Data.Unit":220}],5:[function(require,module,exports){
"use strict";

exports.arrayApply = function (fs) {
  return function (xs) {
    var l = fs.length;
    var k = xs.length;
    var result = new Array(l*k);
    var n = 0;
    for (var i = 0; i < l; i++) {
      var f = fs[i];
      for (var j = 0; j < k; j++) {
        result[n++] = f(xs[j]);
      }
    }
    return result;
  };
};

},{}],6:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Apply = function (Functor0, apply) {
    this.Functor0 = Functor0;
    this.apply = apply;
};
var applyFn = new Apply(function () {
    return Data_Functor.functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var applyArray = new Apply(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayApply);
var apply = function (dict) {
    return dict.apply;
};
var applyFirst = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
        };
    };
};
var applySecond = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
        };
    };
};
var lift2 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
            };
        };
    };
};
var lift3 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift4 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift5 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    Apply: Apply,
    apply: apply,
    applyFirst: applyFirst,
    applySecond: applySecond,
    lift2: lift2,
    lift3: lift3,
    lift4: lift4,
    lift5: lift5,
    applyFn: applyFn,
    applyArray: applyArray
};

},{"../Control.Category":11,"../Data.Function":125,"../Data.Functor":130,"./foreign":5}],7:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapply = require("../Control.Biapply");
var Biapplicative = function (Biapply0, bipure) {
    this.Biapply0 = Biapply0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    bipure: bipure,
    Biapplicative: Biapplicative
};

},{"../Control.Biapply":8}],8:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Function = require("../Data.Function");
var Biapply = function (Bifunctor0, biapply) {
    this.Bifunctor0 = Bifunctor0;
    this.biapply = biapply;
};
var biapply = function (dict) {
    return dict.biapply;
};
var biapplyFirst = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.id(Control_Category.categoryFn))))(a))(b);
        };
    };
};
var biapplySecond = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"])(Data_Function["const"]))(a))(b);
        };
    };
};
var bilift2 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
module.exports = {
    biapply: biapply,
    Biapply: Biapply,
    biapplyFirst: biapplyFirst,
    biapplySecond: biapplySecond,
    bilift2: bilift2,
    bilift3: bilift3
};

},{"../Control.Category":11,"../Data.Bifunctor":88,"../Data.Function":125}],9:[function(require,module,exports){
"use strict";

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

},{}],10:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Bind = function (Apply0, bind) {
    this.Apply0 = Apply0;
    this.bind = bind;
};
var Discard = function (discard) {
    this.discard = discard;
};
var discard = function (dict) {
    return dict.discard;
};
var bindFn = new Bind(function () {
    return Control_Apply.applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var bindArray = new Bind(function () {
    return Control_Apply.applyArray;
}, $foreign.arrayBind);
var bind = function (dict) {
    return dict.bind;
};
var bindFlipped = function (dictBind) {
    return Data_Function.flip(bind(dictBind));
};
var composeKleisliFlipped = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bindFlipped(dictBind)(f)(g(a));
            };
        };
    };
};
var composeKleisli = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bind(dictBind)(f(a))(g);
            };
        };
    };
};
var discardUnit = new Discard(function (dictBind) {
    return bind(dictBind);
});
var ifM = function (dictBind) {
    return function (cond) {
        return function (t) {
            return function (f) {
                return bind(dictBind)(cond)(function (cond$prime) {
                    if (cond$prime) {
                        return t;
                    };
                    return f;
                });
            };
        };
    };
};
var join = function (dictBind) {
    return function (m) {
        return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Bind: Bind,
    bind: bind,
    bindFlipped: bindFlipped,
    Discard: Discard,
    discard: discard,
    join: join,
    composeKleisli: composeKleisli,
    composeKleisliFlipped: composeKleisliFlipped,
    ifM: ifM,
    bindFn: bindFn,
    bindArray: bindArray,
    discardUnit: discardUnit
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Data.Function":125,"../Data.Functor":130,"../Data.Unit":220,"./foreign":9}],11:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Category = function (Semigroupoid0, id) {
    this.Semigroupoid0 = Semigroupoid0;
    this.id = id;
};
var id = function (dict) {
    return dict.id;
};
var categoryFn = new Category(function () {
    return Control_Semigroupoid.semigroupoidFn;
}, function (x) {
    return x;
});
module.exports = {
    Category: Category,
    id: id,
    categoryFn: categoryFn
};

},{"../Control.Semigroupoid":60}],12:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Extend = require("../Control.Extend");
var Data_Functor = require("../Data.Functor");
var Comonad = function (Extend0, extract) {
    this.Extend0 = Extend0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad,
    extract: extract
};

},{"../Control.Extend":14,"../Data.Functor":130}],13:[function(require,module,exports){
"use strict";

exports.arrayExtend = function(f) {
  return function(xs) {
    return xs.map(function (_, i, xs) {
      return f(xs.slice(i));
    });
  };
};

},{}],14:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Data_Functor = require("../Data.Functor");
var Data_Semigroup = require("../Data.Semigroup");
var Extend = function (Functor0, extend) {
    this.Functor0 = Functor0;
    this.extend = extend;
};
var extendFn = function (dictSemigroup) {
    return new Extend(function () {
        return Data_Functor.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
                });
            };
        };
    });
};
var extendArray = new Extend(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayExtend);
var extend = function (dict) {
    return dict.extend;
};
var extendFlipped = function (dictExtend) {
    return function (w) {
        return function (f) {
            return extend(dictExtend)(f)(w);
        };
    };
};
var duplicate = function (dictExtend) {
    return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));
};
var composeCoKleisliFlipped = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f(extend(dictExtend)(g)(w));
            };
        };
    };
};
var composeCoKleisli = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g(extend(dictExtend)(f)(w));
            };
        };
    };
};
module.exports = {
    Extend: Extend,
    extend: extend,
    extendFlipped: extendFlipped,
    composeCoKleisli: composeCoKleisli,
    composeCoKleisliFlipped: composeCoKleisliFlipped,
    duplicate: duplicate,
    extendFn: extendFn,
    extendArray: extendArray
};

},{"../Control.Category":11,"../Data.Functor":130,"../Data.Semigroup":185,"./foreign":13}],15:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Unit = require("../Data.Unit");
var Lazy = function (defer) {
    this.defer = defer;
};
var lazyUnit = new Lazy(function (v) {
    return Data_Unit.unit;
});
var lazyFn = new Lazy(function (f) {
    return function (x) {
        return f(Data_Unit.unit)(x);
    };
});
var defer = function (dict) {
    return dict.defer;
};
var fix = function (dictLazy) {
    return function (f) {
        return defer(dictLazy)(function (v) {
            return f(fix(dictLazy)(f));
        });
    };
};
module.exports = {
    defer: defer,
    Lazy: Lazy,
    fix: fix,
    lazyFn: lazyFn,
    lazyUnit: lazyUnit
};

},{"../Data.Unit":220}],16:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_Internal = require("../Control.Monad.Aff.Internal");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var fromAVBox = Unsafe_Coerce.unsafeCoerce;
var killVar = function (q) {
    return function (e) {
        return fromAVBox(Control_Monad_Aff_Internal._killVar(Control_Monad_Aff.nonCanceler, q, e));
    };
};
var makeVar = fromAVBox(Control_Monad_Aff_Internal._makeVar(Control_Monad_Aff.nonCanceler));
var peekVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._peekVar(Control_Monad_Aff.nonCanceler, q));
};
var putVar = function (q) {
    return function (a) {
        return fromAVBox(Control_Monad_Aff_Internal._putVar(Control_Monad_Aff.nonCanceler, q, a));
    };
};
var makeVar$prime = function (a) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(makeVar)(function (v) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(putVar(v)(a))(function () {
            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v);
        });
    });
};
var takeVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._takeVar(Control_Monad_Aff.nonCanceler, q));
};
var modifyVar = function (f) {
    return function (v) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(takeVar(v))(function ($2) {
            return putVar(v)(f($2));
        });
    };
};
var tryPeekVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._tryPeekVar(Data_Maybe.Nothing.value, Data_Maybe.Just.create, Control_Monad_Aff.nonCanceler, q));
};
var tryTakeVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._tryTakeVar(Data_Maybe.Nothing.value, Data_Maybe.Just.create, Control_Monad_Aff.nonCanceler, q));
};
module.exports = {
    makeVar: makeVar,
    "makeVar'": makeVar$prime,
    takeVar: takeVar,
    peekVar: peekVar,
    putVar: putVar,
    modifyVar: modifyVar,
    killVar: killVar,
    tryTakeVar: tryTakeVar,
    tryPeekVar: tryPeekVar
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Aff":20,"../Control.Monad.Aff.Internal":18,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Exception":28,"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Maybe":156,"../Prelude":263,"../Unsafe.Coerce":281}],17:[function(require,module,exports){
"use strict";

exports._makeVar = function (nonCanceler) {
  return function (success) {
    success({
      consumers: [],
      producers: [],
      error: undefined
    });
    return nonCanceler;
  };
};

exports._takeVar = function (nonCanceler, avar) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.producers.length > 0) {
      avar.producers.shift()(success, error);
    } else {
      avar.consumers.push({ peek: false, success: success, error: error });
    }

    return nonCanceler;
  };
};

exports._tryTakeVar = function (nothing, just, nonCanceler, avar) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.producers.length > 0) {
      avar.producers.shift()(function (x) {
        return success(just(x));
      }, error);
    } else {
      success(nothing);
    }
    return nonCanceler;
  };
};

exports._peekVar = function (nonCanceler, avar) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.producers.length > 0) {
      avar.producers[0](success, error);
    } else {
      avar.consumers.push({ peek: true, success: success, error: error });
    }
    return nonCanceler;
  };
};

exports._tryPeekVar = function (nothing, just, nonCanceler, avar) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.producers.length > 0) {
      avar.producers[0](function (x) {
        return success(just(x));
      }, error);
    } else {
      success(nothing);
    }
    return nonCanceler;
  };
};

exports._putVar = function (nonCanceler, avar, a) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else {
      var shouldQueue = true;
      var consumers = [];
      var consumer;

      while (true) {
        consumer = avar.consumers.shift();
        if (consumer) {
          consumers.push(consumer);
          if (consumer.peek) {
            continue;
          } else {
            shouldQueue = false;
          }
        }
        break;
      }

      if (shouldQueue) {
        avar.producers.push(function (success) {
          success(a);
          return nonCanceler;
        });
      }

      for (var i = 0; i < consumers.length; i++) {
        consumers[i].success(a);
      }

      success({});
    }

    return nonCanceler;
  };
};

exports._killVar = function (nonCanceler, avar, e) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else {
      avar.error = e;
      while (avar.consumers.length) {
        avar.consumers.shift().error(e);
      }
      success({});
    }

    return nonCanceler;
  };
};

},{}],18:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
module.exports = {
    _makeVar: $foreign._makeVar,
    _takeVar: $foreign._takeVar,
    _tryTakeVar: $foreign._tryTakeVar,
    _peekVar: $foreign._peekVar,
    _tryPeekVar: $foreign._tryPeekVar,
    _putVar: $foreign._putVar,
    _killVar: $foreign._killVar
};

},{"../Control.Monad.Eff.Exception":28,"../Data.Function.Uncurried":124,"../Data.Maybe":156,"../Prelude":263,"./foreign":17}],19:[function(require,module,exports){
(function (setImmediate,clearImmediate){
/* globals setTimeout, clearTimeout, setImmediate, clearImmediate */
"use strict";

exports._cancelWith = function (nonCanceler, aff, canceler1) {
  return function (success, error) {
    var canceler2 = aff(success, error);

    return function (e) {
      return function (success, error) {
        var cancellations = 0;
        var result = false;
        var errored = false;

        var s = function (bool) {
          cancellations = cancellations + 1;
          result = result || bool;

          if (cancellations === 2 && !errored) {
            success(result);
          }
        };

        var f = function (err) {
          if (!errored) {
            errored = true;
            error(err);
          }
        };

        canceler2(e)(s, f);
        canceler1(e)(s, f);

        return nonCanceler;
      };
    };
  };
};

exports._delay = function (nonCanceler, millis) {
  var set = setTimeout;
  var clear = clearTimeout;
  if (millis <= 0 && typeof setImmediate === "function") {
    set = setImmediate;
    clear = clearImmediate;
  }
  return function (success) {
    var timedOut = false;
    var timer = set(function () {
      timedOut = true;
      success();
    }, millis);

    return function () {
      return function (s) {
        if (timedOut) {
          s(false);
        } else {
          clear(timer);
          s(true);
        }
        return nonCanceler;
      };
    };
  };
};

exports._unsafeInterleaveAff = function (aff) {
  return aff;
};

exports._forkAff = function (nonCanceler, aff) {
  var voidF = function () {};

  return function (success) {
    var canceler = aff(voidF, voidF);
    success(canceler);
    return nonCanceler;
  };
};

exports._forkAll = function (nonCanceler, foldl, affs) {
  var voidF = function () {};

  return function (success) {
    var cancelers = foldl(function (acc) {
      return function (aff) {
        acc.push(aff(voidF, voidF));
        return acc;
      };
    })([])(affs);

    var canceler = function (e) {
      return function (success, error) {
        var cancellations = 0;
        var result        = false;
        var errored       = false;

        var s = function (bool) {
          cancellations = cancellations + 1;
          result        = result || bool;

          if (cancellations === cancelers.length && !errored) {
            success(result);
          }
        };

        var f = function (err) {
          if (!errored) {
            errored = true;
            error(err);
          }
        };

        for (var i = 0; i < cancelers.length; i++) {
          cancelers[i](e)(s, f);
        }

        return nonCanceler;
      };
    };

    success(canceler);
    return nonCanceler;
  };
};

exports._makeAff = function (cb) {
  return function (success, error) {
    try {
      return cb(function (e) {
        return function () {
          error(e);
        };
      })(function (v) {
        return function () {
          success(v);
        };
      })();
    } catch (err) {
      error(err);
    }
  };
};

exports._pure = function (nonCanceler, v) {
  return function (success) {
    success(v);
    return nonCanceler;
  };
};

exports._throwError = function (nonCanceler, e) {
  return function (success, error) {
    error(e);
    return nonCanceler;
  };
};

exports._fmap = function (f, aff) {
  return function (success, error) {
    return aff(function (v) {
      success(f(v));
    }, error);
  };
};

exports._bind = function (alwaysCanceler, aff, f) {
  return function (success, error) {
    var canceler1, canceler2;

    var isCanceled    = false;
    var requestCancel = false;

    var onCanceler = function () {};

    canceler1 = aff(function (v) {
      if (requestCancel) {
        isCanceled = true;

        return alwaysCanceler;
      } else {
        canceler2 = f(v)(success, error);

        onCanceler(canceler2);

        return canceler2;
      }
    }, error);

    return function (e) {
      return function (s, f) {
        requestCancel = true;

        if (canceler2 !== undefined) {
          return canceler2(e)(s, f);
        } else {
          return canceler1(e)(function (bool) {
            if (bool || isCanceled) {
              s(true);
            } else {
              onCanceler = function (canceler) {
                canceler(e)(s, f);
              };
            }
          }, f);
        }
      };
    };
  };
};

exports._attempt = function (Left, Right, aff) {
  return function (success) {
    return aff(function (v) {
      success(Right(v));
    }, function (e) {
      success(Left(e));
    });
  };
};

exports._runAff = function (errorT, successT, aff) {
  // If errorT or successT throw, and an Aff is comprised only of synchronous
  // effects, then it's possible for makeAff/liftEff to accidentally catch
  // it, which may end up rerunning the Aff depending on error recovery
  // behavior. To mitigate this, we observe synchronicity using mutation. If
  // an Aff is observed to be synchronous, we let the stack reset and run the
  // handlers outside of the normal callback flow.
  return function () {
    var status = 0;
    var result, success;

    var canceler = aff(function (v) {
      if (status === 2) {
        successT(v)();
      } else {
        status = 1;
        result = v;
        success = true;
      }
    }, function (e) {
      if (status === 2) {
        errorT(e)();
      } else {
        status = 1;
        result = e;
        success = false;
      }
    });

    if (status === 1) {
      if (success) {
        successT(result)();
      } else {
        errorT(result)();
      }
    } else {
      status = 2;
    }

    return canceler;
  };
};

exports._liftEff = function (nonCanceler, e) {
  return function (success, error) {
    var result;
    try {
      result = e();
    } catch (err) {
      error(err);
      return nonCanceler;
    }

    success(result);
    return nonCanceler;
  };
};

exports._tailRecM = function (isLeft, f, a) {
  return function (success, error) {
    return function go (acc) {
      var result, status, canceler;

      // Observes synchronous effects using a flag.
      //   status = 0 (unresolved status)
      //   status = 1 (synchronous effect)
      //   status = 2 (asynchronous effect)

      var csuccess = function (v) {
        // If the status is still unresolved, we have observed a
        // synchronous effect. Otherwise, the status will be `2`.
        if (status === 0) {
          // Store the result for further synchronous processing.
          result = v;
          status = 1;
        } else {
          // When we have observed an asynchronous effect, we use normal
          // recursion. This is safe because we will be on a new stack.
          if (isLeft(v)) {
            go(v.value0);
          } else {
            success(v.value0);
          }
        }
      };

      while (true) {
        status = 0;
        canceler = f(acc)(csuccess, error);

        // If the status has already resolved to `1` by our Aff handler, then
        // we have observed a synchronous effect. Otherwise it will still be
        // `0`.
        if (status === 1) {
          // When we have observed a synchronous effect, we merely swap out the
          // accumulator and continue the loop, preserving stack.
          if (isLeft(result)) {
            acc = result.value0;
            continue;
          } else {
            success(result.value0);
          }
        } else {
          // If the status has not resolved yet, then we have observed an
          // asynchronous effect.
          status = 2;
        }
        return canceler;
      }

    }(a);
  };
};

}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"timers":284}],20:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Aff_Internal = require("../Control.Monad.Aff.Internal");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Parallel = require("../Control.Parallel");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ParAff = function (x) {
    return x;
};
var Canceler = function (x) {
    return x;
};
var runAff = function (ex) {
    return function (f) {
        return function (aff) {
            return $foreign._runAff(ex, f, aff);
        };
    };
};
var newtypeParAff = new Data_Newtype.Newtype(function (n) {
    return n;
}, ParAff);
var makeAff$prime = function (h) {
    return $foreign._makeAff(h);
};
var functorAff = new Data_Functor.Functor(function (f) {
    return function (fa) {
        return $foreign._fmap(f, fa);
    };
});
var functorParAff = functorAff;
var fromAVBox = Unsafe_Coerce.unsafeCoerce;
var cancel = function (v) {
    return v;
};
var launchAff = (function () {
    var lowerEx = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($54) {
        return Canceler(Data_Functor.map(Data_Functor.functorFn)($foreign._unsafeInterleaveAff)(cancel($54)));
    });
    return function ($55) {
        return lowerEx(runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($foreign._unsafeInterleaveAff($55)));
    };
})();
var attempt = function (aff) {
    return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
};
var apathize = function (a) {
    return Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit))(attempt(a));
};
var applyAff = new Control_Apply.Apply(function () {
    return functorAff;
}, function (ff) {
    return function (fa) {
        return $foreign._bind(alwaysCanceler, ff, function (f) {
            return Data_Functor.map(functorAff)(f)(fa);
        });
    };
});
var applicativeAff = new Control_Applicative.Applicative(function () {
    return applyAff;
}, function (v) {
    return $foreign._pure(nonCanceler, v);
});
var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(false));
var alwaysCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(true));
var cancelWith = function (aff) {
    return function (c) {
        return $foreign._cancelWith(nonCanceler, aff, c);
    };
};
var delay = function (v) {
    return $foreign._delay(nonCanceler, v);
};
var forkAff = function (aff) {
    return $foreign._forkAff(nonCanceler, aff);
};
var forkAll = function (dictFoldable) {
    return function (affs) {
        return $foreign._forkAll(nonCanceler, Data_Foldable.foldl(dictFoldable), affs);
    };
};
var killVar = function (q) {
    return function (e) {
        return fromAVBox(Control_Monad_Aff_Internal._killVar(nonCanceler, q, e));
    };
};
var liftEff$prime = function (eff) {
    return attempt($foreign._unsafeInterleaveAff($foreign._liftEff(nonCanceler, eff)));
};
var makeAff = function (h) {
    return makeAff$prime(function (e) {
        return function (a) {
            return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Function["const"](nonCanceler))(h(e)(a));
        };
    });
};
var makeVar = fromAVBox(Control_Monad_Aff_Internal._makeVar(nonCanceler));
var putVar = function (q) {
    return function (a) {
        return fromAVBox(Control_Monad_Aff_Internal._putVar(nonCanceler, q, a));
    };
};
var takeVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._takeVar(nonCanceler, q));
};
var semigroupAff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (a) {
        return function (b) {
            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_Semigroup.append(dictSemigroup))(a))(b);
        };
    });
};
var monoidAff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
};
var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function (e) {
            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(v(e)))(v1(e));
        };
    };
});
var monoidCanceler = new Data_Monoid.Monoid(function () {
    return semigroupCanceler;
}, Data_Function["const"](Control_Applicative.pure(applicativeAff)(true)));
var bindAff = new Control_Bind.Bind(function () {
    return applyAff;
}, function (fa) {
    return function (f) {
        return $foreign._bind(alwaysCanceler, fa, f);
    };
});
var applyParAff = new Control_Apply.Apply(function () {
    return functorParAff;
}, function (v) {
    return function (v1) {
        var putOrKill = function (v2) {
            return Data_Either.either(killVar(v2))(putVar(v2));
        };
        return Control_Bind.bind(bindAff)(makeVar)(function (v2) {
            return Control_Bind.bind(bindAff)(makeVar)(function (v3) {
                return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v2))(attempt(v))))(function (v4) {
                    return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v3))(attempt(v1))))(function (v5) {
                        return cancelWith(Control_Apply.apply(applyAff)(takeVar(v2))(takeVar(v3)))(Data_Semigroup.append(semigroupCanceler)(v4)(v5));
                    });
                });
            });
        });
    };
});
var applicativeParAff = new Control_Applicative.Applicative(function () {
    return applyParAff;
}, function ($56) {
    return ParAff(Control_Applicative.pure(applicativeAff)($56));
});
var semigroupParAff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (a) {
        return function (b) {
            return Control_Apply.apply(applyParAff)(Data_Functor.map(functorParAff)(Data_Semigroup.append(dictSemigroup))(a))(b);
        };
    });
};
var monoidParAff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupParAff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeParAff)(Data_Monoid.mempty(dictMonoid)));
};
var monadAff = new Control_Monad.Monad(function () {
    return applicativeAff;
}, function () {
    return bindAff;
});
var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
    return monadAff;
}, function (eff) {
    return $foreign._liftEff(nonCanceler, eff);
});
var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadAff;
}, function (f) {
    return function (a) {
        var isLoop = function (v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return true;
            };
            return false;
        };
        return $foreign._tailRecM(isLoop, f, a);
    };
});
var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
    return monadAff;
}, function (e) {
    return $foreign._throwError(nonCanceler, e);
});
var $$finally = function (aff1) {
    return function (aff2) {
        return Control_Bind.bind(bindAff)(attempt(aff1))(function (v) {
            return Control_Bind.bind(bindAff)(aff2)(function (v1) {
                return Data_Either.either(Control_Monad_Error_Class.throwError(monadThrowAff))(Control_Applicative.pure(applicativeAff))(v);
            });
        });
    };
};
var parallelParAff = new Control_Parallel_Class.Parallel(function () {
    return applicativeParAff;
}, function () {
    return monadAff;
}, ParAff, function (v) {
    return v;
});
var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowAff;
}, function (aff) {
    return function (ex) {
        return Control_Bind.bind(bindAff)(attempt(aff))(Data_Either.either(ex)(Control_Applicative.pure(applicativeAff)));
    };
});
var altParAff = new Control_Alt.Alt(function () {
    return functorParAff;
}, function (v) {
    return function (v1) {
        var maybeKill = function (va) {
            return function (ve) {
                return function (err) {
                    return Control_Bind.bind(bindAff)(takeVar(ve))(function (v2) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(Control_Applicative.when(applicativeAff)(v2 === 1)(killVar(va)(err)))(function () {
                            return putVar(ve)(v2 + 1 | 0);
                        });
                    });
                };
            };
        };
        var done = function (cs) {
            return function (get) {
                return function (va) {
                    return function (x) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(putVar(va)(x))(function () {
                            return Control_Bind.bind(bindAff)(Data_Functor.map(functorAff)(get)(takeVar(cs)))(function (v2) {
                                return Data_Functor["void"](functorAff)(cancel(v2)(Control_Monad_Eff_Exception.error("Alt early exit")));
                            });
                        });
                    };
                };
            };
        };
        return Control_Bind.bind(bindAff)(makeVar)(function (v2) {
            return Control_Bind.bind(bindAff)(makeVar)(function (v3) {
                return Control_Bind.bind(bindAff)(makeVar)(function (v4) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(putVar(v3)(0))(function () {
                        return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v2)(v3))(done(v4)(Data_Tuple.snd)(v2)))(attempt(v))))(function (v5) {
                            return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v2)(v3))(done(v4)(Data_Tuple.fst)(v2)))(attempt(v1))))(function (v6) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(putVar(v4)(new Data_Tuple.Tuple(v5, v6)))(function () {
                                    return cancelWith(takeVar(v2))(Data_Semigroup.append(semigroupCanceler)(v5)(v6));
                                });
                            });
                        });
                    });
                });
            });
        });
    };
});
var altAff = new Control_Alt.Alt(function () {
    return functorAff;
}, function (a1) {
    return function (a2) {
        return Control_Bind.bind(bindAff)(attempt(a1))(Data_Either.either(Data_Function["const"](a2))(Control_Applicative.pure(applicativeAff)));
    };
});
var plusAff = new Control_Plus.Plus(function () {
    return altAff;
}, Control_Monad_Error_Class.throwError(monadThrowAff)(Control_Monad_Eff_Exception.error("Always fails")));
var alternativeAff = new Control_Alternative.Alternative(function () {
    return applicativeAff;
}, function () {
    return plusAff;
});
var monadZero = new Control_MonadZero.MonadZero(function () {
    return alternativeAff;
}, function () {
    return monadAff;
});
var monadPlusAff = new Control_MonadPlus.MonadPlus(function () {
    return monadZero;
});
var plusParAff = new Control_Plus.Plus(function () {
    return altParAff;
}, Control_Plus.empty(plusAff));
var alternativeParAff = new Control_Alternative.Alternative(function () {
    return applicativeParAff;
}, function () {
    return plusParAff;
});
module.exports = {
    Canceler: Canceler,
    apathize: apathize,
    attempt: attempt,
    cancel: cancel,
    cancelWith: cancelWith,
    "finally": $$finally,
    forkAff: forkAff,
    forkAll: forkAll,
    delay: delay,
    launchAff: launchAff,
    "liftEff'": liftEff$prime,
    makeAff: makeAff,
    "makeAff'": makeAff$prime,
    nonCanceler: nonCanceler,
    runAff: runAff,
    ParAff: ParAff,
    semigroupAff: semigroupAff,
    monoidAff: monoidAff,
    functorAff: functorAff,
    applyAff: applyAff,
    applicativeAff: applicativeAff,
    bindAff: bindAff,
    monadAff: monadAff,
    monadEffAff: monadEffAff,
    monadThrowAff: monadThrowAff,
    monadErrorAff: monadErrorAff,
    altAff: altAff,
    plusAff: plusAff,
    alternativeAff: alternativeAff,
    monadZero: monadZero,
    monadPlusAff: monadPlusAff,
    monadRecAff: monadRecAff,
    semigroupCanceler: semigroupCanceler,
    monoidCanceler: monoidCanceler,
    newtypeParAff: newtypeParAff,
    semigroupParAff: semigroupParAff,
    monoidParAff: monoidParAff,
    functorParAff: functorParAff,
    applyParAff: applyParAff,
    applicativeParAff: applicativeParAff,
    altParAff: altParAff,
    plusParAff: plusParAff,
    alternativeParAff: alternativeParAff,
    parallelParAff: parallelParAff
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.Monad.Aff.Internal":18,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Class":23,"../Control.Monad.Eff.Exception":28,"../Control.Monad.Error.Class":41,"../Control.Monad.Rec.Class":47,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Parallel":58,"../Control.Parallel.Class":57,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Time.Duration":204,"../Data.Tuple":212,"../Data.Unit":220,"../Prelude":263,"../Unsafe.Coerce":281,"./foreign":19}],21:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Prelude = require("../Prelude");
var MonadCont = function (Monad0, callCC) {
    this.Monad0 = Monad0;
    this.callCC = callCC;
};
var callCC = function (dict) {
    return dict.callCC;
};
module.exports = {
    MonadCont: MonadCont,
    callCC: callCC
};

},{"../Prelude":263}],22:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var ContT = function (x) {
    return x;
};
var withContT = function (f) {
    return function (v) {
        return function (k) {
            return v(f(k));
        };
    };
};
var runContT = function (v) {
    return function (k) {
        return v(k);
    };
};
var newtypeContT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ContT);
var monadTransContT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(k);
        };
    };
});
var mapContT = function (f) {
    return function (v) {
        return function (k) {
            return f(v(k));
        };
    };
};
var functorContT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (k) {
                return v(function (a) {
                    return k(f(a));
                });
            };
        };
    });
};
var applyContT = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorContT(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return function (k) {
                return v(function (g) {
                    return v1(function (a) {
                        return k(g(a));
                    });
                });
            };
        };
    });
};
var bindContT = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyContT(dictBind.Apply0());
    }, function (v) {
        return function (k) {
            return function (k$prime) {
                return v(function (a) {
                    var v1 = k(a);
                    return v1(k$prime);
                });
            };
        };
    });
};
var applicativeContT = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyContT(dictApplicative.Apply0());
    }, function (a) {
        return function (k) {
            return k(a);
        };
    });
};
var monadContT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeContT(dictMonad.Applicative0());
    }, function () {
        return bindContT(dictMonad.Bind1());
    });
};
var monadAskContT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadContT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderContT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskContT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return function (v) {
            return function (k) {
                return Control_Bind.bind(((dictMonadReader.MonadAsk0()).Monad0()).Bind1())(Control_Monad_Reader_Class.ask(dictMonadReader.MonadAsk0()))(function (v1) {
                    return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function ($45) {
                        return Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](v1))(k($45));
                    }));
                });
            };
        };
    });
};
var monadContContT = function (dictMonad) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadContT(dictMonad);
    }, function (f) {
        return function (k) {
            var v = f(function (a) {
                return function (v1) {
                    return k(a);
                };
            });
            return v(k);
        };
    });
};
var monadEffContT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadContT(dictMonadEff.Monad0());
    }, function ($46) {
        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($46));
    });
};
var monadStateContT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadContT(dictMonadState.Monad0());
    }, function ($47) {
        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($47));
    });
};
module.exports = {
    ContT: ContT,
    runContT: runContT,
    mapContT: mapContT,
    withContT: withContT,
    newtypeContT: newtypeContT,
    monadContContT: monadContContT,
    functorContT: functorContT,
    applyContT: applyContT,
    applicativeContT: applicativeContT,
    bindContT: bindContT,
    monadContT: monadContT,
    monadTransContT: monadTransContT,
    monadEffContT: monadEffContT,
    monadAskContT: monadAskContT,
    monadReaderContT: monadReaderContT,
    monadStateContT: monadStateContT
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.Monad.Cont.Class":21,"../Control.Monad.Eff.Class":23,"../Control.Monad.Reader.Class":45,"../Control.Monad.State.Class":50,"../Control.Monad.Trans.Class":51,"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Functor":130,"../Data.Newtype":171,"../Prelude":263}],23:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var MonadEff = function (Monad0, liftEff) {
    this.Monad0 = Monad0;
    this.liftEff = liftEff;
};
var monadEffEff = new MonadEff(function () {
    return Control_Monad_Eff.monadEff;
}, Control_Category.id(Control_Category.categoryFn));
var liftEff = function (dict) {
    return dict.liftEff;
};
module.exports = {
    liftEff: liftEff,
    MonadEff: MonadEff,
    monadEffEff: monadEffEff
};

},{"../Control.Category":11,"../Control.Monad":54,"../Control.Monad.Eff":40}],24:[function(require,module,exports){
"use strict";

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.warn = function (s) {
  return function () {
    console.warn(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

exports.info = function (s) {
  return function () {
    console.info(s);
    return {};
  };
};

},{}],25:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var warnShow = function (dictShow) {
    return function (a) {
        return $foreign.warn(Data_Show.show(dictShow)(a));
    };
};
var logShow = function (dictShow) {
    return function (a) {
        return $foreign.log(Data_Show.show(dictShow)(a));
    };
};
var infoShow = function (dictShow) {
    return function (a) {
        return $foreign.info(Data_Show.show(dictShow)(a));
    };
};
var errorShow = function (dictShow) {
    return function (a) {
        return $foreign.error(Data_Show.show(dictShow)(a));
    };
};
module.exports = {
    logShow: logShow,
    warnShow: warnShow,
    errorShow: errorShow,
    infoShow: infoShow,
    log: $foreign.log,
    warn: $foreign.warn,
    error: $foreign.error,
    info: $foreign.info
};

},{"../Control.Monad.Eff":40,"../Data.Show":189,"../Data.Unit":220,"./foreign":24}],26:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var unsafeThrowException = function ($0) {
    return Control_Monad_Eff_Unsafe.unsafePerformEff(Control_Monad_Eff_Exception.throwException($0));
};
var unsafeThrow = function ($1) {
    return unsafeThrowException(Control_Monad_Eff_Exception.error($1));
};
module.exports = {
    unsafeThrowException: unsafeThrowException,
    unsafeThrow: unsafeThrow
};

},{"../Control.Monad.Eff.Exception":28,"../Control.Monad.Eff.Unsafe":36,"../Control.Semigroupoid":60}],27:[function(require,module,exports){
"use strict";

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.name = function (e) {
  return e.name || "Error";
};

exports.stackImpl = function (just) {
  return function (nothing) {
    return function (e) {
      return e.stack ? just(e.stack) : nothing;
    };
  };
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};

},{}],28:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var $$try = function (action) {
    return $foreign.catchException(function ($0) {
        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Either.Left.create($0));
    })(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Either.Right.create)(action));
};
var $$throw = function ($1) {
    return $foreign.throwException($foreign.error($1));
};
var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = new Data_Show.Show($foreign.showErrorImpl);
module.exports = {
    stack: stack,
    "throw": $$throw,
    "try": $$try,
    showError: showError,
    error: $foreign.error,
    message: $foreign.message,
    name: $foreign.name,
    throwException: $foreign.throwException,
    catchException: $foreign.catchException
};

},{"../Control.Applicative":4,"../Control.Monad.Eff":40,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Show":189,"../Prelude":263,"./foreign":27}],29:[function(require,module,exports){
"use strict";

exports.random = Math.random;

},{}],30:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Int = require("../Data.Int");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Prelude = require("../Prelude");
var randomRange = function (min) {
    return function (max) {
        return function __do() {
            var v = $foreign.random();
            return v * (max - min) + min;
        };
    };
};
var randomInt = function (low) {
    return function (high) {
        return function __do() {
            var v = $foreign.random();
            var asNumber = ((Data_Int.toNumber(high) - Data_Int.toNumber(low)) + 1) * v + Data_Int.toNumber(low);
            return Data_Int.floor(asNumber);
        };
    };
};
var randomBool = Data_Functor.map(Control_Monad_Eff.functorEff)(function (v) {
    return v < 0.5;
})($foreign.random);
module.exports = {
    randomInt: randomInt,
    randomRange: randomRange,
    randomBool: randomBool,
    random: $foreign.random
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Data.Function":125,"../Data.Functor":130,"../Data.Int":146,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semiring":187,"../Prelude":263,"./foreign":29}],31:[function(require,module,exports){
"use strict";

exports.newRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports["modifyRef'"] = function (ref) {
  return function (f) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.writeRef = function (ref) {
  return function (val) {
    return function () {
      ref.value = val;
      return {};
    };
  };
};

},{}],32:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var modifyRef = function (ref) {
    return function (f) {
        return $foreign["modifyRef'"](ref)(function (s) {
            return {
                state: f(s),
                value: Data_Unit.unit
            };
        });
    };
};
module.exports = {
    modifyRef: modifyRef,
    newRef: $foreign.newRef,
    readRef: $foreign.readRef,
    "modifyRef'": $foreign["modifyRef'"],
    writeRef: $foreign.writeRef
};

},{"../Control.Monad.Eff":40,"../Data.Unit":220,"../Prelude":263,"./foreign":31}],33:[function(require,module,exports){
/* global exports */
"use strict";

exports.setTimeout = function (ms) {
  return function (fn) {
    return function () {
      return setTimeout(fn, ms);
    };
  };
};

exports.clearTimeout = function (id) {
  return function () {
    clearTimeout(id);
  };
};

exports.setInterval = function (ms) {
  return function (fn) {
    return function () {
      return setInterval(fn, ms);
    };
  };
};

exports.clearInterval = function (id) {
  return function () {
    clearInterval(id);
  };
};

},{}],34:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var TimeoutId = function (x) {
    return x;
};
var IntervalId = function (x) {
    return x;
};
var eqTimeoutId = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordTimeoutId = new Data_Ord.Ord(function () {
    return eqTimeoutId;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
var eqIntervalId = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordIntervalId = new Data_Ord.Ord(function () {
    return eqIntervalId;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
module.exports = {
    eqTimeoutId: eqTimeoutId,
    ordTimeoutId: ordTimeoutId,
    eqIntervalId: eqIntervalId,
    ordIntervalId: ordIntervalId,
    setTimeout: $foreign.setTimeout,
    clearTimeout: $foreign.clearTimeout,
    setInterval: $foreign.setInterval,
    clearInterval: $foreign.clearInterval
};

},{"../Control.Monad.Eff":40,"../Data.Eq":111,"../Data.Ord":178,"../Prelude":263,"./foreign":33}],35:[function(require,module,exports){
"use strict";

exports.unsafeCoerceEff = function (f) {
  return f;
};

},{}],36:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var unsafePerformEff = function ($0) {
    return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0));
};
module.exports = {
    unsafePerformEff: unsafePerformEff,
    unsafeCoerceEff: $foreign.unsafeCoerceEff
};

},{"../Control.Monad.Eff":40,"../Control.Semigroupoid":60,"./foreign":35}],37:[function(require,module,exports){
/* global exports */

// module Control.Monad.Eff.WebGL


    "use strict";

    exports.runWebGl_ = function (f) {
      return f;
  };

},{}],38:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
module.exports = {
    runWebGl_: $foreign.runWebGl_
};

},{"../Control.Monad.Eff":40,"./foreign":37}],39:[function(require,module,exports){
"use strict";

exports.pureE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],40:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var monadEff = new Control_Monad.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Control_Bind.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Control_Apply.Apply(function () {
    return functorEff;
}, Control_Monad.ap(monadEff));
var applicativeEff = new Control_Applicative.Applicative(function () {
    return applyEff;
}, $foreign.pureE);
var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
var semigroupEff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEff)(Data_Semigroup.append(dictSemigroup)));
};
var monoidEff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupEff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeEff)(Data_Monoid.mempty(dictMonoid)));
};
module.exports = {
    semigroupEff: semigroupEff,
    monoidEff: monoidEff,
    functorEff: functorEff,
    applyEff: applyEff,
    applicativeEff: applicativeEff,
    bindEff: bindEff,
    monadEff: monadEff,
    runPure: $foreign.runPure,
    untilE: $foreign.untilE,
    whileE: $foreign.whileE,
    forE: $foreign.forE,
    foreachE: $foreign.foreachE
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Semigroup":185,"../Data.Unit":220,"./foreign":39}],41:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var MonadThrow = function (Monad0, throwError) {
    this.Monad0 = Monad0;
    this.throwError = throwError;
};
var MonadError = function (MonadThrow0, catchError) {
    this.MonadThrow0 = MonadThrow0;
    this.catchError = catchError;
};
var throwError = function (dict) {
    return dict.throwError;
};
var monadThrowMaybe = new MonadThrow(function () {
    return Data_Maybe.monadMaybe;
}, Data_Function["const"](Data_Maybe.Nothing.value));
var monadThrowEither = new MonadThrow(function () {
    return Data_Either.monadEither;
}, Data_Either.Left.create);
var monadErrorMaybe = new MonadError(function () {
    return monadThrowMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
            return v1(Data_Unit.unit);
        };
        if (v instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 76, column 1 - line 76, column 50: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var monadErrorEither = new MonadError(function () {
    return monadThrowEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Either.Left) {
            return v1(v.value0);
        };
        if (v instanceof Data_Either.Right) {
            return new Data_Either.Right(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 69, column 1 - line 69, column 53: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var catchError = function (dict) {
    return dict.catchError;
};
var catchJust = function (dictMonadError) {
    return function (p) {
        return function (act) {
            return function (handler) {
                var handle = function (e) {
                    var v = p(e);
                    if (v instanceof Data_Maybe.Nothing) {
                        return throwError(dictMonadError.MonadThrow0())(e);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return handler(v.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 54, column 5 - line 56, column 26: " + [ v.constructor.name ]);
                };
                return catchError(dictMonadError)(act)(handle);
            };
        };
    };
};
var $$try = function (dictMonadError) {
    return function (a) {
        return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))(function ($21) {
            return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Data_Either.Left.create($21));
        });
    };
};
var withResource = function (dictMonadError) {
    return function (acquire) {
        return function (release) {
            return function (kleisli) {
                return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(acquire)(function (v) {
                    return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())($$try(dictMonadError)(kleisli(v)))(function (v1) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(release(v))(function () {
                            return Data_Either.either(throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0()))(v1);
                        });
                    });
                });
            };
        };
    };
};
module.exports = {
    catchError: catchError,
    throwError: throwError,
    MonadThrow: MonadThrow,
    MonadError: MonadError,
    catchJust: catchJust,
    "try": $$try,
    withResource: withResource,
    monadThrowEither: monadThrowEither,
    monadErrorEither: monadErrorEither,
    monadThrowMaybe: monadThrowMaybe,
    monadErrorMaybe: monadErrorMaybe
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Unit":220,"../Prelude":263}],42:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var ExceptT = function (x) {
    return x;
};
var withExceptT = function (dictFunctor) {
    return function (f) {
        return function (v) {
            var mapLeft = function (v1) {
                return function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return new Data_Either.Right(v2.value0);
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return new Data_Either.Left(v1(v2.value0));
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 44, column 3 - line 44, column 32: " + [ v1.constructor.name, v2.constructor.name ]);
                };
            };
            return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
        };
    };
};
var runExceptT = function (v) {
    return v;
};
var newtypeExceptT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ExceptT);
var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v));
        });
    };
});
var mapExceptT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorExceptT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    });
};
var except = function (dictApplicative) {
    return function ($96) {
        return ExceptT(Control_Applicative.pure(dictApplicative)($96));
    };
};
var monadExceptT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeExceptT(dictMonad);
    }, function () {
        return bindExceptT(dictMonad);
    });
};
var bindExceptT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
            })(function (a) {
                var v1 = k(a);
                return v1;
            }));
        };
    });
};
var applyExceptT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadExceptT(dictMonad)));
};
var applicativeExceptT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyExceptT(dictMonad);
    }, function ($98) {
        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
    });
};
var monadAskExceptT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadExceptT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderExceptT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskExceptT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContExceptT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadExceptT(dictMonadCont.Monad0());
    }, function (f) {
        return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            var v = f(function (a) {
                return ExceptT(c(new Data_Either.Right(a)));
            });
            return v;
        }));
    });
};
var monadEffExceptT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadExceptT(dictMonadEff.Monad0());
    }, function ($99) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($99));
    });
};
var monadRecExceptT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadExceptT(dictMonadRec.Monad0());
    }, function (f) {
        return function ($100) {
            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                    var v = f(a);
                    return v;
                })())(function (m$prime) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                        if (m$prime instanceof Data_Either.Left) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans line 76, column 14 - line 79, column 43: " + [ m$prime.constructor.name ]);
                    })());
                });
            })($100));
        };
    });
};
var monadStateExceptT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadExceptT(dictMonadState.Monad0());
    }, function (f) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellExceptT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadExceptT(dictMonadTell.Monad0());
    }, function ($101) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($101));
    });
};
var monadWriterExceptT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellExceptT(dictMonadWriter.MonadTell0());
    }, mapExceptT(function (m) {
        return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(Data_Functor.map(Data_Either.functorEither)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapExceptT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())((function () {
                if (v instanceof Data_Either.Left) {
                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Control_Category.id(Control_Category.categoryFn));
                };
                if (v instanceof Data_Either.Right) {
                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 138, column 10 - line 140, column 44: " + [ v.constructor.name ]);
            })());
        }));
    }));
};
var monadThrowExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadExceptT(dictMonad);
    }, function ($102) {
        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
    });
};
var monadErrorExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function (a) {
                var v1 = k(a);
                return v1;
            })(function ($103) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($103));
            }));
        };
    });
};
var altExceptT = function (dictSemigroup) {
    return function (dictMonad) {
        return new Control_Alt.Alt(function () {
            return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
        }, function (v) {
            return function (v1) {
                return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v2.value0));
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return Control_Bind.bind(dictMonad.Bind1())(v1)(function (v3) {
                            if (v3 instanceof Data_Either.Right) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v3.value0));
                            };
                            if (v3 instanceof Data_Either.Left) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Except.Trans line 88, column 9 - line 90, column 49: " + [ v3.constructor.name ]);
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 84, column 5 - line 90, column 49: " + [ v2.constructor.name ]);
                });
            };
        });
    };
};
var plusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Plus.Plus(function () {
            return altExceptT(dictMonoid.Semigroup0())(dictMonad);
        }, Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var alternativeExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Alternative.Alternative(function () {
            return applicativeExceptT(dictMonad);
        }, function () {
            return plusExceptT(dictMonoid)(dictMonad);
        });
    };
};
var monadZeroExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadZero.MonadZero(function () {
            return alternativeExceptT(dictMonoid)(dictMonad);
        }, function () {
            return monadExceptT(dictMonad);
        });
    };
};
var monadPlusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadPlus.MonadPlus(function () {
            return monadZeroExceptT(dictMonoid)(dictMonad);
        });
    };
};
module.exports = {
    ExceptT: ExceptT,
    runExceptT: runExceptT,
    withExceptT: withExceptT,
    mapExceptT: mapExceptT,
    except: except,
    newtypeExceptT: newtypeExceptT,
    functorExceptT: functorExceptT,
    applyExceptT: applyExceptT,
    applicativeExceptT: applicativeExceptT,
    bindExceptT: bindExceptT,
    monadExceptT: monadExceptT,
    monadRecExceptT: monadRecExceptT,
    altExceptT: altExceptT,
    plusExceptT: plusExceptT,
    alternativeExceptT: alternativeExceptT,
    monadPlusExceptT: monadPlusExceptT,
    monadZeroExceptT: monadZeroExceptT,
    monadTransExceptT: monadTransExceptT,
    monadEffExceptT: monadEffExceptT,
    monadContExceptT: monadContExceptT,
    monadThrowExceptT: monadThrowExceptT,
    monadErrorExceptT: monadErrorExceptT,
    monadAskExceptT: monadAskExceptT,
    monadReaderExceptT: monadReaderExceptT,
    monadStateExceptT: monadStateExceptT,
    monadTellExceptT: monadTellExceptT,
    monadWriterExceptT: monadWriterExceptT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Monad":54,"../Control.Monad.Cont.Class":21,"../Control.Monad.Eff.Class":23,"../Control.Monad.Error.Class":41,"../Control.Monad.Reader.Class":45,"../Control.Monad.Rec.Class":47,"../Control.Monad.State.Class":50,"../Control.Monad.Trans.Class":51,"../Control.Monad.Writer.Class":52,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Function":125,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Tuple":212,"../Prelude":263}],43:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
var runExcept = function ($0) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
};
var mapExcept = function (f) {
    return Control_Monad_Except_Trans.mapExceptT(function ($1) {
        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
    });
};
module.exports = {
    runExcept: runExcept,
    mapExcept: mapExcept,
    withExcept: withExcept
};

},{"../Control.Monad.Error.Class":41,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Identity":142,"../Data.Newtype":171,"../Prelude":263}],44:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var MaybeT = function (x) {
    return x;
};
var runMaybeT = function (v) {
    return v;
};
var newtypeMaybeT = new Data_Newtype.Newtype(function (n) {
    return n;
}, MaybeT);
var monadTransMaybeT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function ($75) {
        return MaybeT(Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create)($75));
    };
});
var mapMaybeT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorMaybeT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
        };
    });
};
var monadMaybeT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeMaybeT(dictMonad);
    }, function () {
        return bindMaybeT(dictMonad);
    });
};
var bindMaybeT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyMaybeT(dictMonad);
    }, function (v) {
        return function (f) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                if (v1 instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
                };
                if (v1 instanceof Data_Maybe.Just) {
                    var v2 = f(v1.value0);
                    return v2;
                };
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 55, column 11 - line 57, column 42: " + [ v1.constructor.name ]);
            });
        };
    });
};
var applyMaybeT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadMaybeT(dictMonad)));
};
var applicativeMaybeT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyMaybeT(dictMonad);
    }, function ($76) {
        return MaybeT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create($76)));
    });
};
var monadAskMaybeT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadMaybeT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderMaybeT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskMaybeT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContMaybeT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadMaybeT(dictMonadCont.Monad0());
    }, function (f) {
        return MaybeT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            var v = f(function (a) {
                return MaybeT(c(new Data_Maybe.Just(a)));
            });
            return v;
        }));
    });
};
var monadEffMaybe = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadMaybeT(dictMonadEff.Monad0());
    }, function ($77) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($77));
    });
};
var monadRecMaybeT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadMaybeT(dictMonadRec.Monad0());
    }, function (f) {
        return function ($78) {
            return MaybeT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                    var v = f(a);
                    return v;
                })())(function (m$prime) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                        if (m$prime instanceof Data_Maybe.Nothing) {
                            return new Control_Monad_Rec_Class.Done(Data_Maybe.Nothing.value);
                        };
                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                        };
                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Maybe.Just(m$prime.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 85, column 16 - line 88, column 43: " + [ m$prime.constructor.name ]);
                    })());
                });
            })($78));
        };
    });
};
var monadStateMaybeT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadMaybeT(dictMonadState.Monad0());
    }, function (f) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellMaybeT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadMaybeT(dictMonadTell.Monad0());
    }, function ($79) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($79));
    });
};
var monadWriterMaybeT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellMaybeT(dictMonadWriter.MonadTell0());
    }, mapMaybeT(function (m) {
        return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapMaybeT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())((function () {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.id(Control_Category.categoryFn));
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Tuple.Tuple(new Data_Maybe.Just(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 122, column 10 - line 124, column 42: " + [ v.constructor.name ]);
            })());
        }));
    }));
};
var monadThrowMaybeT = function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadMaybeT(dictMonadThrow.Monad0());
    }, function (e) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
};
var monadErrorMaybeT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowMaybeT(dictMonadError.MonadThrow0());
    }, function (v) {
        return function (h) {
            return MaybeT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
                var v1 = h(a);
                return v1;
            }));
        };
    });
};
var altMaybeT = function (dictMonad) {
    return new Control_Alt.Alt(function () {
        return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
                if (v2 instanceof Data_Maybe.Nothing) {
                    return v1;
                };
                return Control_Applicative.pure(dictMonad.Applicative0())(v2);
            });
        };
    });
};
var plusMaybeT = function (dictMonad) {
    return new Control_Plus.Plus(function () {
        return altMaybeT(dictMonad);
    }, Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value));
};
var alternativeMaybeT = function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
        return applicativeMaybeT(dictMonad);
    }, function () {
        return plusMaybeT(dictMonad);
    });
};
var monadZeroMaybeT = function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeMaybeT(dictMonad);
    }, function () {
        return monadMaybeT(dictMonad);
    });
};
var monadPlusMaybeT = function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroMaybeT(dictMonad);
    });
};
module.exports = {
    MaybeT: MaybeT,
    runMaybeT: runMaybeT,
    mapMaybeT: mapMaybeT,
    newtypeMaybeT: newtypeMaybeT,
    functorMaybeT: functorMaybeT,
    applyMaybeT: applyMaybeT,
    applicativeMaybeT: applicativeMaybeT,
    bindMaybeT: bindMaybeT,
    monadMaybeT: monadMaybeT,
    monadTransMaybeT: monadTransMaybeT,
    altMaybeT: altMaybeT,
    plusMaybeT: plusMaybeT,
    alternativeMaybeT: alternativeMaybeT,
    monadPlusMaybeT: monadPlusMaybeT,
    monadZeroMaybeT: monadZeroMaybeT,
    monadRecMaybeT: monadRecMaybeT,
    monadEffMaybe: monadEffMaybe,
    monadContMaybeT: monadContMaybeT,
    monadThrowMaybeT: monadThrowMaybeT,
    monadErrorMaybeT: monadErrorMaybeT,
    monadAskMaybeT: monadAskMaybeT,
    monadReaderMaybeT: monadReaderMaybeT,
    monadStateMaybeT: monadStateMaybeT,
    monadTellMaybeT: monadTellMaybeT,
    monadWriterMaybeT: monadWriterMaybeT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Monad":54,"../Control.Monad.Cont.Class":21,"../Control.Monad.Eff.Class":23,"../Control.Monad.Error.Class":41,"../Control.Monad.Reader.Class":45,"../Control.Monad.Rec.Class":47,"../Control.Monad.State.Class":50,"../Control.Monad.Trans.Class":51,"../Control.Monad.Writer.Class":52,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Tuple":212,"../Prelude":263}],45:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Prelude = require("../Prelude");
var MonadAsk = function (Monad0, ask) {
    this.Monad0 = Monad0;
    this.ask = ask;
};
var MonadReader = function (MonadAsk0, local) {
    this.MonadAsk0 = MonadAsk0;
    this.local = local;
};
var monadAskFun = new MonadAsk(function () {
    return Control_Monad.monadFn;
}, Control_Category.id(Control_Category.categoryFn));
var monadReaderFun = new MonadReader(function () {
    return monadAskFun;
}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));
var local = function (dict) {
    return dict.local;
};
var ask = function (dict) {
    return dict.ask;
};
var asks = function (dictMonadAsk) {
    return function (f) {
        return Data_Functor.map((((dictMonadAsk.Monad0()).Bind1()).Apply0()).Functor0())(f)(ask(dictMonadAsk));
    };
};
module.exports = {
    ask: ask,
    local: local,
    MonadAsk: MonadAsk,
    asks: asks,
    MonadReader: MonadReader,
    monadAskFun: monadAskFun,
    monadReaderFun: monadReaderFun
};

},{"../Control.Category":11,"../Control.Monad":54,"../Control.Semigroupoid":60,"../Data.Functor":130,"../Prelude":263}],46:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Distributive = require("../Data.Distributive");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var ReaderT = function (x) {
    return x;
};
var withReaderT = function (f) {
    return function (v) {
        return function ($66) {
            return v(f($66));
        };
    };
};
var runReaderT = function (v) {
    return v;
};
var newtypeReaderT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ReaderT);
var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function ($67) {
        return ReaderT(Data_Function["const"]($67));
    };
});
var mapReaderT = function (f) {
    return function (v) {
        return function ($68) {
            return f(v($68));
        };
    };
};
var functorReaderT = function (dictFunctor) {
    return new Data_Functor.Functor(function ($69) {
        return mapReaderT(Data_Functor.map(dictFunctor)($69));
    });
};
var distributiveReaderT = function (dictDistributive) {
    return new Data_Distributive.Distributive(function () {
        return functorReaderT(dictDistributive.Functor0());
    }, function (dictFunctor) {
        return function (f) {
            return function ($70) {
                return Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($70));
            };
        };
    }, function (dictFunctor) {
        return function (a) {
            return function (e) {
                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
                    return r(e);
                })(a);
            };
        };
    });
};
var applyReaderT = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorReaderT(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return function (r) {
                return Control_Apply.apply(dictApply)(v(r))(v1(r));
            };
        };
    });
};
var bindReaderT = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyReaderT(dictBind.Apply0());
    }, function (v) {
        return function (k) {
            return function (r) {
                return Control_Bind.bind(dictBind)(v(r))(function (a) {
                    var v1 = k(a);
                    return v1(r);
                });
            };
        };
    });
};
var semigroupReaderT = function (dictApply) {
    return function (dictSemigroup) {
        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)));
    };
};
var applicativeReaderT = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyReaderT(dictApplicative.Apply0());
    }, function ($71) {
        return ReaderT(Data_Function["const"](Control_Applicative.pure(dictApplicative)($71)));
    });
};
var monadReaderT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeReaderT(dictMonad.Applicative0());
    }, function () {
        return bindReaderT(dictMonad.Bind1());
    });
};
var monadAskReaderT = function (dictMonad) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadReaderT(dictMonad);
    }, Control_Applicative.pure(dictMonad.Applicative0()));
};
var monadReaderReaderT = function (dictMonad) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskReaderT(dictMonad);
    }, withReaderT);
};
var monadContReaderT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadReaderT(dictMonadCont.Monad0());
    }, function (f) {
        return function (r) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var v = f(function ($72) {
                    return ReaderT(Data_Function["const"](c($72)));
                });
                return v(r);
            });
        };
    });
};
var monadEffReader = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadReaderT(dictMonadEff.Monad0());
    }, function ($73) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($73));
    });
};
var monadRecReaderT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadReaderT(dictMonadRec.Monad0());
    }, function (k) {
        return function (a) {
            var k$prime = function (r) {
                return function (a$prime) {
                    var v = k(a$prime);
                    return Control_Bind.bindFlipped((dictMonadRec.Monad0()).Bind1())(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0()))(v(r));
                };
            };
            return function (r) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
            };
        };
    });
};
var monadStateReaderT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadReaderT(dictMonadState.Monad0());
    }, function ($74) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($74));
    });
};
var monadTellReaderT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadReaderT(dictMonadTell.Monad0());
    }, function ($75) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($75));
    });
};
var monadWriterReaderT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellReaderT(dictMonadWriter.MonadTell0());
    }, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)));
};
var monadThrowReaderT = function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadReaderT(dictMonadThrow.Monad0());
    }, function ($76) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)($76));
    });
};
var monadErrorReaderT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowReaderT(dictMonadError.MonadThrow0());
    }, function (v) {
        return function (h) {
            return function (r) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
                    var v1 = h(e);
                    return v1(r);
                });
            };
        };
    });
};
var monoidReaderT = function (dictApplicative) {
    return function (dictMonoid) {
        return new Data_Monoid.Monoid(function () {
            return semigroupReaderT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(applicativeReaderT(dictApplicative))(Data_Monoid.mempty(dictMonoid)));
    };
};
var altReaderT = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorReaderT(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return function (r) {
                return Control_Alt.alt(dictAlt)(v(r))(v1(r));
            };
        };
    });
};
var plusReaderT = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altReaderT(dictPlus.Alt0());
    }, Data_Function["const"](Control_Plus.empty(dictPlus)));
};
var alternativeReaderT = function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
        return applicativeReaderT(dictAlternative.Applicative0());
    }, function () {
        return plusReaderT(dictAlternative.Plus1());
    });
};
var monadZeroReaderT = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeReaderT(dictMonadZero.Alternative1());
    }, function () {
        return monadReaderT(dictMonadZero.Monad0());
    });
};
var monadPlusReaderT = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroReaderT(dictMonadPlus.MonadZero0());
    });
};
module.exports = {
    ReaderT: ReaderT,
    runReaderT: runReaderT,
    withReaderT: withReaderT,
    mapReaderT: mapReaderT,
    newtypeReaderT: newtypeReaderT,
    functorReaderT: functorReaderT,
    applyReaderT: applyReaderT,
    applicativeReaderT: applicativeReaderT,
    altReaderT: altReaderT,
    plusReaderT: plusReaderT,
    alternativeReaderT: alternativeReaderT,
    bindReaderT: bindReaderT,
    monadReaderT: monadReaderT,
    monadZeroReaderT: monadZeroReaderT,
    semigroupReaderT: semigroupReaderT,
    monoidReaderT: monoidReaderT,
    monadPlusReaderT: monadPlusReaderT,
    monadTransReaderT: monadTransReaderT,
    monadEffReader: monadEffReader,
    monadContReaderT: monadContReaderT,
    monadThrowReaderT: monadThrowReaderT,
    monadErrorReaderT: monadErrorReaderT,
    monadAskReaderT: monadAskReaderT,
    monadReaderReaderT: monadReaderReaderT,
    monadStateReaderT: monadStateReaderT,
    monadTellReaderT: monadTellReaderT,
    monadWriterReaderT: monadWriterReaderT,
    distributiveReaderT: distributiveReaderT,
    monadRecReaderT: monadRecReaderT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.Monad.Cont.Class":21,"../Control.Monad.Eff.Class":23,"../Control.Monad.Error.Class":41,"../Control.Monad.Reader.Class":45,"../Control.Monad.Rec.Class":47,"../Control.Monad.State.Class":50,"../Control.Monad.Trans.Class":51,"../Control.Monad.Writer.Class":52,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Distributive":106,"../Data.Function":125,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Prelude":263}],47:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Loop = (function () {
    function Loop(value0) {
        this.value0 = value0;
    };
    Loop.create = function (value0) {
        return new Loop(value0);
    };
    return Loop;
})();
var Done = (function () {
    function Done(value0) {
        this.value0 = value0;
    };
    Done.create = function (value0) {
        return new Done(value0);
    };
    return Done;
})();
var MonadRec = function (Monad0, tailRecM) {
    this.Monad0 = Monad0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var tailRecM2 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return tailRecM(dictMonadRec)(function (o) {
                    return f(o.a)(o.b);
                })({
                    a: a,
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return tailRecM(dictMonadRec)(function (o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a,
                        b: b,
                        c: c
                    });
                };
            };
        };
    };
};
var tailRecEff = function (f) {
    return function (a) {
        var fromDone = function (v) {
            var __unused = function (dictPartial1) {
                return function ($dollar16) {
                    return $dollar16;
                };
            };
            return __unused()((function () {
                if (v instanceof Done) {
                    return v.value0;
                };
                throw new Error("Failed pattern match at Control.Monad.Rec.Class line 141, column 28 - line 141, column 42: " + [ v.constructor.name ]);
            })());
        };
        var f$prime = function ($52) {
            return Control_Monad_Eff_Unsafe.unsafeCoerceEff(f($52));
        };
        return function __do() {
            var v = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Monad_ST.newSTRef)(f$prime(a))();
            (function () {
                while (!(function __do() {
                    var v1 = v.value;
                    if (v1 instanceof Loop) {
                        var v2 = f$prime(v1.value0)();
                        var v3 = v.value = v2;
                        return false;
                    };
                    if (v1 instanceof Done) {
                        return true;
                    };
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 130, column 5 - line 135, column 26: " + [ v1.constructor.name ]);
                })()) {

                };
                return {};
            })();
            return Data_Functor.map(Control_Monad_Eff.functorEff)(fromDone)(Control_Monad_ST.readSTRef(v))();
        };
    };
};
var tailRec = function (f) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Loop) {
                $copy_v = f(v.value0);
                return;
            };
            if (v instanceof Done) {
                $tco_done = true;
                return v.value0;
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 96, column 3 - line 96, column 25: " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($53) {
        return go(f($53));
    };
};
var monadRecMaybe = new MonadRec(function () {
    return Data_Maybe.monadMaybe;
}, function (f) {
    return function (a0) {
        var g = function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return new Done(Data_Maybe.Nothing.value);
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {
                return new Loop(f(v.value0.value0));
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {
                return new Done(new Data_Maybe.Just(v.value0.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 120, column 7 - line 120, column 31: " + [ v.constructor.name ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecIdentity = new MonadRec(function () {
    return Data_Identity.monadIdentity;
}, function (f) {
    var runIdentity = function (v) {
        return v;
    };
    return function ($54) {
        return Data_Identity.Identity(tailRec(function ($55) {
            return runIdentity(f($55));
        })($54));
    };
});
var monadRecFunction = new MonadRec(function () {
    return Control_Monad.monadFn;
}, function (f) {
    return function (a0) {
        return function (e) {
            return tailRec(function (a) {
                return f(a)(e);
            })(a0);
        };
    };
});
var monadRecEither = new MonadRec(function () {
    return Data_Either.monadEither;
}, function (f) {
    return function (a0) {
        var g = function (v) {
            if (v instanceof Data_Either.Left) {
                return new Done(new Data_Either.Left(v.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                return new Loop(f(v.value0.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                return new Done(new Data_Either.Right(v.value0.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 112, column 7 - line 112, column 33: " + [ v.constructor.name ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecEff = new MonadRec(function () {
    return Control_Monad_Eff.monadEff;
}, tailRecEff);
var functorStep = new Data_Functor.Functor(function (f) {
    return function (v) {
        if (v instanceof Loop) {
            return new Loop(v.value0);
        };
        if (v instanceof Done) {
            return new Done(f(v.value0));
        };
        throw new Error("Failed pattern match at Control.Monad.Rec.Class line 28, column 1 - line 28, column 41: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var forever = function (dictMonadRec) {
    return function (ma) {
        return tailRecM(dictMonadRec)(function (u) {
            return Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(new Loop(u))(ma);
        })(Data_Unit.unit);
    };
};
var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Loop) {
                return new Loop(v(v2.value0));
            };
            if (v2 instanceof Done) {
                return new Done(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 32, column 1 - line 32, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
module.exports = {
    Loop: Loop,
    Done: Done,
    MonadRec: MonadRec,
    tailRec: tailRec,
    tailRecM: tailRecM,
    tailRecM2: tailRecM2,
    tailRecM3: tailRecM3,
    forever: forever,
    functorStep: functorStep,
    bifunctorStep: bifunctorStep,
    monadRecIdentity: monadRecIdentity,
    monadRecEff: monadRecEff,
    monadRecFunction: monadRecFunction,
    monadRecEither: monadRecEither,
    monadRecMaybe: monadRecMaybe
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad":54,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Unsafe":36,"../Control.Monad.ST":49,"../Control.Semigroupoid":60,"../Data.Bifunctor":88,"../Data.Either":108,"../Data.Functor":130,"../Data.Identity":142,"../Data.Maybe":156,"../Data.Unit":220,"../Partial.Unsafe":253,"../Prelude":263}],48:[function(require,module,exports){
"use strict";

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      return ref.value = f(ref.value); // eslint-disable-line no-return-assign
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      return ref.value = a; // eslint-disable-line no-return-assign
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],49:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var pureST = function (st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST,
    newSTRef: $foreign.newSTRef,
    readSTRef: $foreign.readSTRef,
    modifySTRef: $foreign.modifySTRef,
    writeSTRef: $foreign.writeSTRef,
    runST: $foreign.runST
};

},{"../Control.Monad.Eff":40,"./foreign":48}],50:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var MonadState = function (Monad0, state) {
    this.Monad0 = Monad0;
    this.state = state;
};
var state = function (dict) {
    return dict.state;
};
var put = function (dictMonadState) {
    return function (s) {
        return state(dictMonadState)(function (v) {
            return new Data_Tuple.Tuple(Data_Unit.unit, s);
        });
    };
};
var modify = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
        });
    };
};
var gets = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(f(s), s);
        });
    };
};
var get = function (dictMonadState) {
    return state(dictMonadState)(function (s) {
        return new Data_Tuple.Tuple(s, s);
    });
};
module.exports = {
    state: state,
    MonadState: MonadState,
    get: get,
    gets: gets,
    put: put,
    modify: modify
};

},{"../Data.Tuple":212,"../Data.Unit":220,"../Prelude":263}],51:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Prelude = require("../Prelude");
var MonadTrans = function (lift) {
    this.lift = lift;
};
var lift = function (dict) {
    return dict.lift;
};
module.exports = {
    lift: lift,
    MonadTrans: MonadTrans
};

},{"../Prelude":263}],52:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var MonadTell = function (Monad0, tell) {
    this.Monad0 = Monad0;
    this.tell = tell;
};
var MonadWriter = function (MonadTell0, listen, pass) {
    this.MonadTell0 = MonadTell0;
    this.listen = listen;
    this.pass = pass;
};
var tell = function (dict) {
    return dict.tell;
};
var pass = function (dict) {
    return dict.pass;
};
var listen = function (dict) {
    return dict.listen;
};
var listens = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(listen(dictMonadWriter)(m))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
            });
        };
    };
};
var censor = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v, f));
            }));
        };
    };
};
module.exports = {
    listen: listen,
    pass: pass,
    tell: tell,
    MonadTell: MonadTell,
    MonadWriter: MonadWriter,
    listens: listens,
    censor: censor
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Data.Function":125,"../Data.Tuple":212,"../Prelude":263}],53:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var WriterT = function (x) {
    return x;
};
var runWriterT = function (v) {
    return v;
};
var newtypeWriterT = new Data_Newtype.Newtype(function (n) {
    return n;
}, WriterT);
var monadTransWriterT = function (dictMonoid) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, Data_Monoid.mempty(dictMonoid)));
            });
        };
    });
};
var mapWriterT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorWriterT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
            return new Data_Tuple.Tuple(f(v.value0), v.value1);
        }));
    });
};
var execWriterT = function (dictFunctor) {
    return function (v) {
        return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
    };
};
var applyWriterT = function (dictSemigroup) {
    return function (dictApply) {
        return new Control_Apply.Apply(function () {
            return functorWriterT(dictApply.Functor0());
        }, function (v) {
            return function (v1) {
                var k = function (v3) {
                    return function (v4) {
                        return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
                    };
                };
                return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
            };
        });
    };
};
var bindWriterT = function (dictSemigroup) {
    return function (dictBind) {
        return new Control_Bind.Bind(function () {
            return applyWriterT(dictSemigroup)(dictBind.Apply0());
        }, function (v) {
            return function (k) {
                return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
                    var v2 = k(v1.value0);
                    return Data_Functor.map((dictBind.Apply0()).Functor0())(function (v3) {
                        return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
                    })(v2);
                }));
            };
        });
    };
};
var applicativeWriterT = function (dictMonoid) {
    return function (dictApplicative) {
        return new Control_Applicative.Applicative(function () {
            return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
        }, function (a) {
            return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
        });
    };
};
var monadWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad.Monad(function () {
            return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
        }, function () {
            return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
        });
    };
};
var monadAskWriterT = function (dictMonoid) {
    return function (dictMonadAsk) {
        return new Control_Monad_Reader_Class.MonadAsk(function () {
            return monadWriterT(dictMonoid)(dictMonadAsk.Monad0());
        }, Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
    };
};
var monadReaderWriterT = function (dictMonoid) {
    return function (dictMonadReader) {
        return new Control_Monad_Reader_Class.MonadReader(function () {
            return monadAskWriterT(dictMonoid)(dictMonadReader.MonadAsk0());
        }, function (f) {
            return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
        });
    };
};
var monadContWriterT = function (dictMonoid) {
    return function (dictMonadCont) {
        return new Control_Monad_Cont_Class.MonadCont(function () {
            return monadWriterT(dictMonoid)(dictMonadCont.Monad0());
        }, function (f) {
            return WriterT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var v = f(function (a) {
                    return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
                });
                return v;
            }));
        });
    };
};
var monadEffWriter = function (dictMonoid) {
    return function (dictMonadEff) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadWriterT(dictMonoid)(dictMonadEff.Monad0());
        }, function ($123) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($123));
        });
    };
};
var monadRecWriterT = function (dictMonoid) {
    return function (dictMonadRec) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadWriterT(dictMonoid)(dictMonadRec.Monad0());
        }, function (f) {
            return function (a) {
                var f$prime = function (v) {
                    return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                        var v1 = f(v.value0);
                        return v1;
                    })())(function (v1) {
                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                            if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
                                return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
                            };
                            if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
                                return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Writer.Trans line 85, column 16 - line 87, column 47: " + [ v1.value0.constructor.name ]);
                        })());
                    });
                };
                return WriterT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
            };
        });
    };
};
var monadStateWriterT = function (dictMonoid) {
    return function (dictMonadState) {
        return new Control_Monad_State_Class.MonadState(function () {
            return monadWriterT(dictMonoid)(dictMonadState.Monad0());
        }, function (f) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
        });
    };
};
var monadTellWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad_Writer_Class.MonadTell(function () {
            return monadWriterT(dictMonoid)(dictMonad);
        }, function ($124) {
            return WriterT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Tuple.Tuple.create(Data_Unit.unit)($124)));
        });
    };
};
var monadWriterWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad_Writer_Class.MonadWriter(function () {
            return monadTellWriterT(dictMonoid)(dictMonad);
        }, function (v) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
            });
        }, function (v) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
            });
        });
    };
};
var monadThrowWriterT = function (dictMonoid) {
    return function (dictMonadThrow) {
        return new Control_Monad_Error_Class.MonadThrow(function () {
            return monadWriterT(dictMonoid)(dictMonadThrow.Monad0());
        }, function (e) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
        });
    };
};
var monadErrorWriterT = function (dictMonoid) {
    return function (dictMonadError) {
        return new Control_Monad_Error_Class.MonadError(function () {
            return monadThrowWriterT(dictMonoid)(dictMonadError.MonadThrow0());
        }, function (v) {
            return function (h) {
                return WriterT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
                    var v1 = h(e);
                    return v1;
                }));
            };
        });
    };
};
var altWriterT = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorWriterT(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Alt.alt(dictAlt)(v)(v1);
        };
    });
};
var plusWriterT = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altWriterT(dictPlus.Alt0());
    }, Control_Plus.empty(dictPlus));
};
var alternativeWriterT = function (dictMonoid) {
    return function (dictAlternative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeWriterT(dictMonoid)(dictAlternative.Applicative0());
        }, function () {
            return plusWriterT(dictAlternative.Plus1());
        });
    };
};
var monadZeroWriterT = function (dictMonoid) {
    return function (dictMonadZero) {
        return new Control_MonadZero.MonadZero(function () {
            return alternativeWriterT(dictMonoid)(dictMonadZero.Alternative1());
        }, function () {
            return monadWriterT(dictMonoid)(dictMonadZero.Monad0());
        });
    };
};
var monadPlusWriterT = function (dictMonoid) {
    return function (dictMonadPlus) {
        return new Control_MonadPlus.MonadPlus(function () {
            return monadZeroWriterT(dictMonoid)(dictMonadPlus.MonadZero0());
        });
    };
};
module.exports = {
    WriterT: WriterT,
    runWriterT: runWriterT,
    execWriterT: execWriterT,
    mapWriterT: mapWriterT,
    newtypeWriterT: newtypeWriterT,
    functorWriterT: functorWriterT,
    applyWriterT: applyWriterT,
    applicativeWriterT: applicativeWriterT,
    altWriterT: altWriterT,
    plusWriterT: plusWriterT,
    alternativeWriterT: alternativeWriterT,
    bindWriterT: bindWriterT,
    monadWriterT: monadWriterT,
    monadRecWriterT: monadRecWriterT,
    monadZeroWriterT: monadZeroWriterT,
    monadPlusWriterT: monadPlusWriterT,
    monadTransWriterT: monadTransWriterT,
    monadEffWriter: monadEffWriter,
    monadContWriterT: monadContWriterT,
    monadThrowWriterT: monadThrowWriterT,
    monadErrorWriterT: monadErrorWriterT,
    monadAskWriterT: monadAskWriterT,
    monadReaderWriterT: monadReaderWriterT,
    monadStateWriterT: monadStateWriterT,
    monadTellWriterT: monadTellWriterT,
    monadWriterWriterT: monadWriterWriterT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.Monad.Cont.Class":21,"../Control.Monad.Eff.Class":23,"../Control.Monad.Error.Class":41,"../Control.Monad.Reader.Class":45,"../Control.Monad.Rec.Class":47,"../Control.Monad.State.Class":50,"../Control.Monad.Trans.Class":51,"../Control.Monad.Writer.Class":52,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Tuple":212,"../Data.Unit":220,"../Prelude":263}],54:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Monad = function (Applicative0, Bind1) {
    this.Applicative0 = Applicative0;
    this.Bind1 = Bind1;
};
var whenM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.when(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var unlessM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.unless(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var monadFn = new Monad(function () {
    return Control_Applicative.applicativeFn;
}, function () {
    return Control_Bind.bindFn;
});
var monadArray = new Monad(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Bind.bindArray;
});
var liftM1 = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(a)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(f(v));
            });
        };
    };
};
var ap = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                });
            });
        };
    };
};
module.exports = {
    Monad: Monad,
    liftM1: liftM1,
    ap: ap,
    whenM: whenM,
    unlessM: unlessM,
    monadFn: monadFn,
    monadArray: monadArray
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Data.Functor":130,"../Data.Unit":220}],55:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var MonadPlus = function (MonadZero0) {
    this.MonadZero0 = MonadZero0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_MonadZero.monadZeroArray;
});
module.exports = {
    MonadPlus: MonadPlus,
    monadPlusArray: monadPlusArray
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.MonadZero":56,"../Control.Plus":59,"../Data.Functor":130}],56:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var MonadZero = function (Alternative1, Monad0) {
    this.Alternative1 = Alternative1;
    this.Monad0 = Monad0;
};
var monadZeroArray = new MonadZero(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Control_Monad.monadArray;
});
var guard = function (dictMonadZero) {
    return function (v) {
        if (v) {
            return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
        };
        if (!v) {
            return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
        };
        throw new Error("Failed pattern match at Control.MonadZero line 54, column 1 - line 54, column 52: " + [ v.constructor.name ]);
    };
};
module.exports = {
    MonadZero: MonadZero,
    guard: guard,
    monadZeroArray: monadZeroArray
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.Plus":59,"../Data.Functor":130,"../Data.Unit":220}],57:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Compose = require("../Data.Functor.Compose");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var ParCont = function (x) {
    return x;
};
var Parallel = function (Applicative1, Monad0, parallel, sequential) {
    this.Applicative1 = Applicative1;
    this.Monad0 = Monad0;
    this.parallel = parallel;
    this.sequential = sequential;
};
var unsafeWithRef = Control_Monad_Eff_Unsafe.unsafeCoerceEff;
var sequential = function (dict) {
    return dict.sequential;
};
var parallel = function (dict) {
    return dict.parallel;
};
var newtypeParCont = new Data_Newtype.Newtype(function (n) {
    return n;
}, ParCont);
var monadParWriterT = function (dictMonoid) {
    return function (dictParallel) {
        return new Parallel(function () {
            return Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid)(dictParallel.Applicative1());
        }, function () {
            return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictParallel.Monad0());
        }, Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)), Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)));
    };
};
var monadParReaderT = function (dictParallel) {
    return new Parallel(function () {
        return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());
    }, function () {
        return Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());
    }, Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)), Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)));
};
var monadParMaybeT = function (dictParallel) {
    return new Parallel(function () {
        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Maybe.applicativeMaybe);
    }, function () {
        return Control_Monad_Maybe_Trans.monadMaybeT(dictParallel.Monad0());
    }, function (v) {
        return parallel(dictParallel)(v);
    }, function (v) {
        return sequential(dictParallel)(v);
    });
};
var monadParExceptT = function (dictParallel) {
    return new Parallel(function () {
        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
    }, function () {
        return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
    }, function (v) {
        return parallel(dictParallel)(v);
    }, function (v) {
        return sequential(dictParallel)(v);
    });
};
var monadParParCont = function (dictMonadEff) {
    return new Parallel(function () {
        return applicativeParCont(dictMonadEff);
    }, function () {
        return Control_Monad_Cont_Trans.monadContT(dictMonadEff.Monad0());
    }, ParCont, function (v) {
        return v;
    });
};
var functorParCont = function (dictMonadEff) {
    return new Data_Functor.Functor(function (f) {
        return function ($54) {
            return parallel(monadParParCont(dictMonadEff))(Data_Functor.map(Control_Monad_Cont_Trans.functorContT((((dictMonadEff.Monad0()).Bind1()).Apply0()).Functor0()))(f)(sequential(monadParParCont(dictMonadEff))($54)));
        };
    });
};
var applyParCont = function (dictMonadEff) {
    return new Control_Apply.Apply(function () {
        return functorParCont(dictMonadEff);
    }, function (v) {
        return function (v1) {
            return ParCont(function (k) {
                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v2) {
                    return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v3) {
                        return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                            return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v3))))(function (v4) {
                                if (v4 instanceof Data_Maybe.Nothing) {
                                    return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(new Data_Maybe.Just(a))));
                                };
                                if (v4 instanceof Data_Maybe.Just) {
                                    return k(a(v4.value0));
                                };
                                throw new Error("Failed pattern match at Control.Parallel.Class line 80, column 7 - line 82, column 26: " + [ v4.constructor.name ]);
                            });
                        }))(function () {
                            return Control_Monad_Cont_Trans.runContT(v1)(function (b) {
                                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v4) {
                                    if (v4 instanceof Data_Maybe.Nothing) {
                                        return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v3)(new Data_Maybe.Just(b))));
                                    };
                                    if (v4 instanceof Data_Maybe.Just) {
                                        return k(v4.value0(b));
                                    };
                                    throw new Error("Failed pattern match at Control.Parallel.Class line 86, column 7 - line 88, column 26: " + [ v4.constructor.name ]);
                                });
                            });
                        });
                    });
                });
            });
        };
    });
};
var applicativeParCont = function (dictMonadEff) {
    return new Control_Applicative.Applicative(function () {
        return applyParCont(dictMonadEff);
    }, function ($55) {
        return parallel(monadParParCont(dictMonadEff))(Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT((dictMonadEff.Monad0()).Applicative0()))($55));
    });
};
var altParCont = function (dictMonadEff) {
    return new Control_Alt.Alt(function () {
        return functorParCont(dictMonadEff);
    }, function (v) {
        return function (v1) {
            return ParCont(function (k) {
                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(false))))(function (v2) {
                    return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                        return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v3) {
                            if (v3) {
                                return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
                            };
                            return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(true))))(function () {
                                return k(a);
                            });
                        });
                    }))(function () {
                        return Control_Monad_Cont_Trans.runContT(v1)(function (a) {
                            return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v3) {
                                if (v3) {
                                    return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
                                };
                                return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(true))))(function () {
                                    return k(a);
                                });
                            });
                        });
                    });
                });
            });
        };
    });
};
var plusParCont = function (dictMonadEff) {
    return new Control_Plus.Plus(function () {
        return altParCont(dictMonadEff);
    }, ParCont(function (v) {
        return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
    }));
};
var alternativeParCont = function (dictMonadEff) {
    return new Control_Alternative.Alternative(function () {
        return applicativeParCont(dictMonadEff);
    }, function () {
        return plusParCont(dictMonadEff);
    });
};
module.exports = {
    Parallel: Parallel,
    parallel: parallel,
    sequential: sequential,
    ParCont: ParCont,
    monadParExceptT: monadParExceptT,
    monadParReaderT: monadParReaderT,
    monadParWriterT: monadParWriterT,
    monadParMaybeT: monadParMaybeT,
    newtypeParCont: newtypeParCont,
    functorParCont: functorParCont,
    applyParCont: applyParCont,
    applicativeParCont: applicativeParCont,
    altParCont: altParCont,
    plusParCont: plusParCont,
    alternativeParCont: alternativeParCont,
    monadParParCont: monadParParCont
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad.Cont.Trans":22,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Class":23,"../Control.Monad.Eff.Ref":32,"../Control.Monad.Eff.Unsafe":36,"../Control.Monad.Except.Trans":42,"../Control.Monad.Maybe.Trans":44,"../Control.Monad.Reader.Trans":46,"../Control.Monad.Writer.Trans":53,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Function":125,"../Data.Functor":130,"../Data.Functor.Compose":127,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Unit":220,"../Prelude":263}],58:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alternative = require("../Control.Alternative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var parTraverse_ = function (dictParallel) {
    return function (dictFoldable) {
        return function (f) {
            return function ($17) {
                return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function ($18) {
                    return Control_Parallel_Class.parallel(dictParallel)(f($18));
                })($17));
            };
        };
    };
};
var parTraverse = function (dictParallel) {
    return function (dictTraversable) {
        return function (f) {
            return function ($19) {
                return Control_Parallel_Class.sequential(dictParallel)(Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())(function ($20) {
                    return Control_Parallel_Class.parallel(dictParallel)(f($20));
                })($19));
            };
        };
    };
};
var parSequence_ = function (dictParallel) {
    return function (dictFoldable) {
        return parTraverse_(dictParallel)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var parSequence = function (dictParallel) {
    return function (dictTraversable) {
        return parTraverse(dictParallel)(dictTraversable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var parOneOfMap = function (dictParallel) {
    return function (dictAlternative) {
        return function (dictFoldable) {
            return function (dictFunctor) {
                return function (f) {
                    return function ($21) {
                        return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(function ($22) {
                            return Control_Parallel_Class.parallel(dictParallel)(f($22));
                        })($21));
                    };
                };
            };
        };
    };
};
var parOneOf = function (dictParallel) {
    return function (dictAlternative) {
        return function (dictFoldable) {
            return function (dictFunctor) {
                return function ($23) {
                    return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel))($23));
                };
            };
        };
    };
};
var parApply = function (dictParallel) {
    return function (mf) {
        return function (ma) {
            return Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Control_Parallel_Class.parallel(dictParallel)(mf))(Control_Parallel_Class.parallel(dictParallel)(ma)));
        };
    };
};
module.exports = {
    parTraverse: parTraverse,
    parTraverse_: parTraverse_,
    parSequence: parSequence,
    parSequence_: parSequence_,
    parOneOf: parOneOf,
    parOneOfMap: parOneOfMap,
    parApply: parApply
};

},{"../Control.Alternative":3,"../Control.Apply":6,"../Control.Category":11,"../Control.Parallel.Class":57,"../Control.Semigroupoid":60,"../Data.Foldable":116,"../Data.Traversable":209,"../Prelude":263}],59:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Data_Functor = require("../Data.Functor");
var Plus = function (Alt0, empty) {
    this.Alt0 = Alt0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus,
    empty: empty,
    plusArray: plusArray
};

},{"../Control.Alt":2,"../Data.Functor":130}],60:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var compose = function (dict) {
    return dict.compose;
};
var composeFlipped = function (dictSemigroupoid) {
    return function (f) {
        return function (g) {
            return compose(dictSemigroupoid)(g)(f);
        };
    };
};
module.exports = {
    compose: compose,
    Semigroupoid: Semigroupoid,
    composeFlipped: composeFlipped,
    semigroupoidFn: semigroupoidFn
};

},{}],61:[function(require,module,exports){
/* global EventTarget */
"use strict";

exports._readEventTarget = function (left) {
  return function (right) {
    return function (foreign) {
      return foreign instanceof EventTarget ? right(foreign) : left("Value is not an EventTarget");
    };
  };
};

},{}],62:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var EventType = function (x) {
    return x;
};
var wheelEventToEvent = Unsafe_Coerce.unsafeCoerce;
var uiEventToEvent = Unsafe_Coerce.unsafeCoerce;
var touchEventToEvent = Unsafe_Coerce.unsafeCoerce;
var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
var readPopStateEvent = Data_Foreign.unsafeReadTagged("PopStateEvent");
var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
var readEventTarget = function ($3) {
    return Data_Newtype.wrap(Control_Monad_Except_Trans.newtypeExceptT)(Data_Newtype.wrap(Data_Identity.newtypeIdentity)(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function ($4) {
        return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.ForeignError.create($4));
    })($foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create)($3))));
};
var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
var readClipboardEvent = Data_Foreign.unsafeReadTagged("ClipboardEvent");
var progressEventToEvent = Unsafe_Coerce.unsafeCoerce;
var popStateEventToEvent = Unsafe_Coerce.unsafeCoerce;
var ordEventType = Data_Ord.ordString;
var newtypeEventType = new Data_Newtype.Newtype(function (n) {
    return n;
}, EventType);
var mouseEventToEvent = Unsafe_Coerce.unsafeCoerce;
var keyboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
var inputEventToEvent = Unsafe_Coerce.unsafeCoerce;
var focusEventToEvent = Unsafe_Coerce.unsafeCoerce;
var eqEventType = Data_Eq.eqString;
var customEventToEvent = Unsafe_Coerce.unsafeCoerce;
var compositionEventToEvent = Unsafe_Coerce.unsafeCoerce;
var clipboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    EventType: EventType,
    readEventTarget: readEventTarget,
    customEventToEvent: customEventToEvent,
    readCustomEvent: readCustomEvent,
    uiEventToEvent: uiEventToEvent,
    readUIEvent: readUIEvent,
    focusEventToEvent: focusEventToEvent,
    readFocusEvent: readFocusEvent,
    mouseEventToEvent: mouseEventToEvent,
    readMouseEvent: readMouseEvent,
    wheelEventToEvent: wheelEventToEvent,
    readWheelEvent: readWheelEvent,
    touchEventToEvent: touchEventToEvent,
    readTouchEvent: readTouchEvent,
    inputEventToEvent: inputEventToEvent,
    readInputEvent: readInputEvent,
    keyboardEventToEvent: keyboardEventToEvent,
    readKeyboardEvent: readKeyboardEvent,
    compositionEventToEvent: compositionEventToEvent,
    readCompositionEvent: readCompositionEvent,
    popStateEventToEvent: popStateEventToEvent,
    readPopStateEvent: readPopStateEvent,
    progressEventToEvent: progressEventToEvent,
    readProgressEvent: readProgressEvent,
    clipboardEventToEvent: clipboardEventToEvent,
    readClipboardEvent: readClipboardEvent,
    newtypeEventType: newtypeEventType,
    eqEventType: eqEventType,
    ordEventType: ordEventType
};

},{"../Control.Applicative":4,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../Data.Bifunctor":88,"../Data.Either":108,"../Data.Eq":111,"../Data.Foreign":121,"../Data.Identity":142,"../Data.List.Types":150,"../Data.Newtype":171,"../Data.Ord":178,"../Prelude":263,"../Unsafe.Coerce":281,"./foreign":61}],63:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var DOM_Event_Types = require("../DOM.Event.Types");
var Data_Foreign = require("../Data.Foreign");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var readFileList = Data_Foreign.unsafeReadTagged("FileList");
var fileToBlob = Unsafe_Coerce.unsafeCoerce;
var fileReaderToEventTarget = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    fileToBlob: fileToBlob,
    fileReaderToEventTarget: fileReaderToEventTarget,
    readFileList: readFileList
};

},{"../DOM.Event.Types":62,"../Data.Foreign":121,"../Unsafe.Coerce":281}],64:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_Util_FFI = require("../DOM.Util.FFI");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ElementId = function (x) {
    return x;
};
var textToNode = Unsafe_Coerce.unsafeCoerce;
var readNode = DOM_Util_FFI.unsafeReadProtoTagged("Node");
var readElement = DOM_Util_FFI.unsafeReadProtoTagged("Element");
var readDocument = DOM_Util_FFI.unsafeReadProtoTagged("Document");
var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
var oOrdElementId = Data_Ord.ordString;
var newtypeElementId = new Data_Newtype.Newtype(function (n) {
    return n;
}, ElementId);
var eqElementId = Data_Eq.eqString;
var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var elementToNode = Unsafe_Coerce.unsafeCoerce;
var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNode = Unsafe_Coerce.unsafeCoerce;
var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
var commentToNode = Unsafe_Coerce.unsafeCoerce;
var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    readNode: readNode,
    readDocument: readDocument,
    documentToNonElementParentNode: documentToNonElementParentNode,
    documentToParentNode: documentToParentNode,
    documentToNode: documentToNode,
    documentToEventTarget: documentToEventTarget,
    ElementId: ElementId,
    readElement: readElement,
    elementToParentNode: elementToParentNode,
    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode,
    elementToNode: elementToNode,
    elementToEventTarget: elementToEventTarget,
    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode,
    textToNode: textToNode,
    commentToNode: commentToNode,
    processingInstructionToNode: processingInstructionToNode,
    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode,
    documentFragmentToParentNode: documentFragmentToParentNode,
    documentFragmentToNode: documentFragmentToNode,
    documentTypeToNode: documentTypeToNode,
    newtypeElementId: newtypeElementId,
    eqElementId: eqElementId,
    oOrdElementId: oOrdElementId
};

},{"../DOM.Event.Types":62,"../DOM.Util.FFI":66,"../Data.Eq":111,"../Data.Foreign":121,"../Data.Newtype":171,"../Data.Ord":178,"../Prelude":263,"../Unsafe.Coerce":281}],65:[function(require,module,exports){
"use strict";

exports._unsafeReadProtoTagged = (function () {
  var tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
  return function (name) {
    return function (failure) {
      return function (success) {
        return function (value) {
          var obj = value;
          while (obj != null) {
            var proto = Object.getPrototypeOf(obj);
            var ctor = tagOf(proto);
            if (ctor === name) {
              return success(value);
            } else if (ctor === "Object") {
              return failure(tagOf(value));
            }
            obj = proto;
          }
          return failure(tagOf(value));
        };
      };
    };
  };
}());

},{}],66:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Prelude = require("../Prelude");
var unsafeReadProtoTagged = function (name) {
    return $foreign._unsafeReadProtoTagged(name)(function ($0) {
        return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Left.create(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.TypeMismatch.create(name)($0))));
    })(function ($1) {
        return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Right.create($1));
    });
};
module.exports = {
    unsafeReadProtoTagged: unsafeReadProtoTagged
};

},{"../Control.Applicative":4,"../Control.Monad.Except":43,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Foreign":121,"../Data.Identity":142,"../Data.List.Types":150,"../Prelude":263,"./foreign":65}],67:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
module.exports = {};

},{}],68:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Eff = require("../Control.Monad.Eff");
module.exports = {};

},{"../Control.Monad.Eff":40}],69:[function(require,module,exports){
"use strict";

function id(x) {
  return x;
}

exports.fromNull = function () {
  return null;
};

exports.fromBoolean = id;
exports.fromNumber = id;
exports.fromString = id;
exports.fromArray = id;
exports.fromObject = id;

exports.jsonNull = null;

exports.stringify = function (j) {
  return JSON.stringify(j);
};

var objToString = Object.prototype.toString;
var objKeys = Object.keys;

function isArray(a) {
  return objToString.call(a) === "[object Array]";
}

exports._foldJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
  if (j == null) return isNull(null);
  else if (typeof j === "boolean") return isBool(j);
  else if (typeof j === "number") return isNum(j);
  else if (typeof j === "string") return isStr(j);
  else if (objToString.call(j) === "[object Array]")
    return isArr(j);
  else return isObj(j);
};

exports._compare = function _compare (EQ, GT, LT, a, b) {
  if (a == null) {
    if (b == null) return EQ;
    else return LT;
  } else if (typeof a === "boolean") {
    if (typeof b === "boolean") {
      // boolean / boolean
      if (a === b) return EQ;
      else if (a === false) return LT;
      else return GT;
    } else if (b == null) return GT;
    else return LT;
  } else if (typeof a === "number") {
    if (typeof b === "number") {
      if (a === b) return EQ;
      else if (a < b) return LT;
      else return GT;
    } else if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else return LT;
  } else if (typeof a === "string") {
    if (typeof b === "string") {
      if (a === b) return EQ;
      else if (a < b) return LT;
      else return GT;
    } else if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else if (typeof b === "number") return GT;
    else return LT;
  } else if (isArray(a)) {
    if (isArray(b)) {
      for (var i = 0; i < Math.min(a.length, b.length); i++) {
        var ca = _compare(EQ, GT, LT, a[i], b[i]);
        if (ca !== EQ) return ca;
      }
      if (a.length === b.length) return EQ;
      else if (a.length < b.length) return LT;
      else return GT;
    } else if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else if (typeof b === "number") return GT;
    else if (typeof b === "string") return GT;
    else return LT;
  } else {
    if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else if (typeof b === "number") return GT;
    else if (typeof b === "string") return GT;
    else if (isArray(b)) return GT;
    else {
      var akeys = objKeys(a);
      var bkeys = objKeys(b);
      if (akeys.length < bkeys.length) return LT;
      else if (akeys.length > bkeys.length) return GT;
      var keys = akeys.concat(bkeys).sort();
      for (var j = 0; j < keys.length; j++) {
        var k = keys[j];
        if (a[k] === undefined) return LT;
        else if (b[k] === undefined) return GT;
        var ck = _compare(EQ, GT, LT, a[k], b[k]);
        if (ck !== EQ) return ck;
      }
      return EQ;
    }
  }
};

},{}],70:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Show = require("../Data.Show");
var Data_StrMap = require("../Data.StrMap");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var verbJsonType = function (def) {
    return function (f) {
        return function (fold) {
            return fold(def)(f);
        };
    };
};
var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var showJson = new Data_Show.Show($foreign.stringify);
var showJNull = new Data_Show.Show(function (v) {
    return "null";
});
var jsonZero = $foreign.fromNumber(0.0);
var jsonTrue = $foreign.fromBoolean(true);
var jsonSingletonObject = function (key) {
    return function (val) {
        return $foreign.fromObject(Data_StrMap.singleton(key)(val));
    };
};
var jsonSingletonArray = function (j) {
    return $foreign.fromArray([ j ]);
};
var jsonFalse = $foreign.fromBoolean(false);
var jsonEmptyString = $foreign.fromString("");
var jsonEmptyObject = $foreign.fromObject(Data_StrMap.empty);
var jsonEmptyArray = $foreign.fromArray([  ]);
var jNull = $foreign.jsonNull;
var isJsonType = verbJsonType(false)(Data_Function["const"](true));
var foldJsonString = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isString = isJsonType(foldJsonString);
var toString = toJsonType(foldJsonString);
var foldJsonObject = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
        };
    };
};
var isObject = isJsonType(foldJsonObject);
var toObject = toJsonType(foldJsonObject);
var foldJsonNumber = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isNumber = isJsonType(foldJsonNumber);
var toNumber = toJsonType(foldJsonNumber);
var foldJsonNull = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isNull = isJsonType(foldJsonNull);
var toNull = toJsonType(foldJsonNull);
var foldJsonBoolean = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isBoolean = isJsonType(foldJsonBoolean);
var toBoolean = toJsonType(foldJsonBoolean);
var foldJsonArray = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
        };
    };
};
var isArray = isJsonType(foldJsonArray);
var toArray = toJsonType(foldJsonArray);
var foldJson = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (json) {
                            return $foreign._foldJson(a, b, c, d, e, f, json);
                        };
                    };
                };
            };
        };
    };
};
var ordJson = new Data_Ord.Ord(function () {
    return eqJson;
}, function (a) {
    return function (b) {
        return $foreign._compare(Data_Ordering.EQ.value, Data_Ordering.GT.value, Data_Ordering.LT.value, a, b);
    };
});
var eqJson = new Data_Eq.Eq(function (j1) {
    return function (j2) {
        return Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Ord.compare(ordJson)(j1)(j2))(Data_Ordering.EQ.value);
    };
});
var eqJNull = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var ordJNull = new Data_Ord.Ord(function () {
    return eqJNull;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
module.exports = {
    foldJson: foldJson,
    foldJsonNull: foldJsonNull,
    foldJsonBoolean: foldJsonBoolean,
    foldJsonNumber: foldJsonNumber,
    foldJsonString: foldJsonString,
    foldJsonArray: foldJsonArray,
    foldJsonObject: foldJsonObject,
    isNull: isNull,
    isBoolean: isBoolean,
    isNumber: isNumber,
    isString: isString,
    isArray: isArray,
    isObject: isObject,
    toNull: toNull,
    toBoolean: toBoolean,
    toNumber: toNumber,
    toString: toString,
    toArray: toArray,
    toObject: toObject,
    jNull: jNull,
    jsonTrue: jsonTrue,
    jsonFalse: jsonFalse,
    jsonZero: jsonZero,
    jsonEmptyString: jsonEmptyString,
    jsonEmptyArray: jsonEmptyArray,
    jsonSingletonArray: jsonSingletonArray,
    jsonEmptyObject: jsonEmptyObject,
    jsonSingletonObject: jsonSingletonObject,
    eqJNull: eqJNull,
    ordJNull: ordJNull,
    showJNull: showJNull,
    eqJson: eqJson,
    ordJson: ordJson,
    showJson: showJson,
    fromNull: $foreign.fromNull,
    fromBoolean: $foreign.fromBoolean,
    fromNumber: $foreign.fromNumber,
    fromString: $foreign.fromString,
    fromArray: $foreign.fromArray,
    fromObject: $foreign.fromObject,
    jsonNull: $foreign.jsonNull,
    stringify: $foreign.stringify
};

},{"../Data.Eq":111,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Show":189,"../Data.StrMap":193,"../Data.Tuple":212,"../Prelude":263,"../Unsafe.Coerce":281,"./foreign":69}],71:[function(require,module,exports){
"use strict";

exports._jsonParser = function (fail, succ, s) {
  try {
    return succ(JSON.parse(s));
  }
  catch (e) {
    return fail(e.message);
  }
};

},{}],72:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Argonaut_Core = require("../Data.Argonaut.Core");
var Data_Either = require("../Data.Either");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var jsonParser = function (j) {
    return $foreign._jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
};
module.exports = {
    jsonParser: jsonParser
};

},{"../Data.Argonaut.Core":70,"../Data.Either":108,"../Data.Function.Uncurried":124,"./foreign":71}],73:[function(require,module,exports){
"use strict";

exports.fold1Impl = function (f) {
  return function (xs) {
    var acc = xs[0];
    var len = xs.length;
    for (var i = 1; i < len; i++) {
      acc = f(acc)(xs[i]);
    }
    return acc;
  };
};

exports.traverse1Impl = function () {
  function Cont(fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function finalCell(head) {
    return new ConsCell(head, emptyList);
  }

  function consList(x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray(list) {
    var arr = [];
    var xs = list;
    while (xs !== emptyList) {
      arr.push(xs.head);
      xs = xs.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (f) {
        var buildFrom = function (x, ys) {
          return apply(map(consList)(f(x)))(ys);
        };

        var go = function (acc, currentLen, xs) {
          if (currentLen === 0) {
            return acc;
          } else {
            var last = xs[currentLen - 1];
            return new Cont(function () {
              var built = go(buildFrom(last, acc), currentLen - 1, xs);
              return built;
            });
          }
        };

        return function (array) {
          var acc = map(finalCell)(f(array[array.length - 1]));
          var result = go(acc, array.length - 1, array);
          while (result instanceof Cont) {
            result = result.fn();
          }

          return map(listToArray)(result);
        };
      };
    };
  };
}();

},{}],74:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var NonEmptyArray = function (x) {
    return x;
};
var unsafeFromArray = NonEmptyArray;
var traversableWithIndexNonEmptyArray = Data_TraversableWithIndex.traversableWithIndexArray;
var traversableNonEmptyArray = Data_Traversable.traversableArray;
var toArray = function (v) {
    return v;
};
var unionBy$prime = function (eq) {
    return function (xs) {
        return function ($46) {
            return unsafeFromArray(Data_Array.unionBy(eq)(toArray(xs))($46));
        };
    };
};
var union$prime = function (dictEq) {
    return unionBy$prime(Data_Eq.eq(dictEq));
};
var unionBy = function (eq) {
    return function (xs) {
        return function ($47) {
            return unionBy$prime(eq)(xs)(toArray($47));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var unzip = function ($48) {
    return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(NonEmptyArray)(NonEmptyArray)(Data_Array.unzip(toArray($48)));
};
var updateAt = function (i) {
    return function (x) {
        return function ($49) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(NonEmptyArray)(Data_Array.updateAt(i)(x)(toArray($49)));
        };
    };
};
var zip = function (xs) {
    return function (ys) {
        return NonEmptyArray(Data_Array.zip(toArray(xs))(toArray(ys)));
    };
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            return NonEmptyArray(Data_Array.zipWith(f)(toArray(xs))(toArray(ys)));
        };
    };
};
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmptyArray)(Data_Array.zipWithA(dictApplicative)(f)(toArray(xs))(toArray(ys)));
            };
        };
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function ($50) {
            return Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(NonEmptyArray)(Data_Array.some(dictAlternative)(dictLazy)($50));
        };
    };
};
var snoc$prime = function (xs) {
    return function (x) {
        return unsafeFromArray(Data_Array.snoc(xs)(x));
    };
};
var snoc = function (xs) {
    return function (x) {
        return unsafeFromArray(Data_Array.snoc(toArray(xs))(x));
    };
};
var singleton = function ($51) {
    return NonEmptyArray(Data_Array.singleton($51));
};
var showNonEmptyArray = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(NonEmptyArray " + (Data_Show.show(Data_Show.showArray(dictShow))(v) + ")");
    });
};
var semigroupNonEmptyArray = Data_Semigroup.semigroupArray;
var replicate = function (i) {
    return function (x) {
        return NonEmptyArray(Data_Array.replicate(Data_Ord.max(Data_Ord.ordInt)(1)(i))(x));
    };
};
var range = function (x) {
    return function (y) {
        return unsafeFromArray(Data_Array.range(x)(y));
    };
};
var ordNonEmptyArray = function (dictOrd) {
    return Data_Ord.ordArray(dictOrd);
};
var ord1NonEmptyArray = Data_Ord.ord1Array;
var monadNonEmptyArray = Control_Monad.monadArray;
var modifyAt = function (i) {
    return function (f) {
        return function ($52) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(NonEmptyArray)(Data_Array.modifyAt(i)(f)(toArray($52)));
        };
    };
};
var intersectBy$prime = function (eq) {
    return function (xs) {
        return Data_Array.intersectBy(eq)(toArray(xs));
    };
};
var intersectBy = function (eq) {
    return function (xs) {
        return function ($53) {
            return intersectBy$prime(eq)(xs)(toArray($53));
        };
    };
};
var intersect$prime = function (dictEq) {
    return intersectBy$prime(Data_Eq.eq(dictEq));
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var insertAt = function (i) {
    return function (x) {
        return function ($54) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(NonEmptyArray)(Data_Array.insertAt(i)(x)(toArray($54)));
        };
    };
};
var functorWithIndexNonEmptyArray = Data_FunctorWithIndex.functorWithIndexArray;
var functorNonEmptyArray = Data_Functor.functorArray;
var fromFoldable1 = function (dictFoldable1) {
    return function ($55) {
        return unsafeFromArray(Data_Array.fromFoldable(dictFoldable1.Foldable0())($55));
    };
};
var fromArray = function (xs) {
    if (Data_Array.length(xs) > 0) {
        return new Data_Maybe.Just(xs);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Array.NonEmpty line 176, column 1 - line 176, column 58: " + [ xs.constructor.name ]);
};
var fromFoldable = function (dictFoldable) {
    return function ($56) {
        return fromArray(Data_Array.fromFoldable(dictFoldable)($56));
    };
};
var foldableWithIndexNonEmptyArray = Data_FoldableWithIndex.foldableWithIndexArray;
var foldableNonEmptyArray = Data_Foldable.foldableArray;
var foldable1NonEmptyArray = new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableNonEmptyArray;
}, function (dictSemigroup) {
    return $foreign.fold1Impl(Data_Semigroup.append(dictSemigroup));
}, function (dictSemigroup) {
    return Data_Semigroup_Foldable.foldMap1Default(foldable1NonEmptyArray)(functorNonEmptyArray)(dictSemigroup);
});
var traversable1NonEmptyArray = new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1NonEmptyArray;
}, function () {
    return traversableNonEmptyArray;
}, function (dictApply) {
    return Data_Semigroup_Traversable.sequence1Default(traversable1NonEmptyArray)(dictApply);
}, function (dictApply) {
    return $foreign.traverse1Impl(Control_Apply.apply(dictApply))(Data_Functor.map(dictApply.Functor0()));
});
var eqNonEmptyArray = function (dictEq) {
    return Data_Eq.eqArray(dictEq);
};
var eq1NonEmptyArray = Data_Eq.eq1Array;
var difference$prime = function (dictEq) {
    return function (xs) {
        return Data_Array.difference(dictEq)(toArray(xs));
    };
};
var cons$prime = function (x) {
    return function (xs) {
        return unsafeFromArray(Data_Array.cons(x)(xs));
    };
};
var fromNonEmpty = function (v) {
    return cons$prime(v.value0)(v.value1);
};
var concat = function ($57) {
    return NonEmptyArray(Data_Array.concat(toArray(Data_Functor.map(functorNonEmptyArray)(toArray)($57))));
};
var bindNonEmptyArray = Control_Bind.bindArray;
var concatMap = Data_Function.flip(Control_Bind.bind(bindNonEmptyArray));
var applyNonEmptyArray = Control_Apply.applyArray;
var applicativeNonEmptyArray = Control_Applicative.applicativeArray;
var appendArray = function (xs) {
    return function (ys) {
        return unsafeFromArray(Data_Semigroup.append(Data_Semigroup.semigroupArray)(toArray(xs))(ys));
    };
};
var alterAt = function (i) {
    return function (f) {
        return function ($58) {
            return Data_Array.alterAt(i)(f)(toArray($58));
        };
    };
};
var altNonEmptyArray = Control_Alt.altArray;
var adaptMaybe = function (f) {
    return function ($59) {
        return Data_Maybe.fromJust()(f(toArray($59)));
    };
};
var head = adaptMaybe(Data_Array.head);
var init = adaptMaybe(Data_Array.init);
var last = adaptMaybe(Data_Array.last);
var tail = adaptMaybe(Data_Array.tail);
var uncons = adaptMaybe(Data_Array.uncons);
var toNonEmpty = function ($60) {
    return (function (v) {
        return new Data_NonEmpty.NonEmpty(v.head, v.tail);
    })(uncons($60));
};
var unsnoc = adaptMaybe(Data_Array.unsnoc);
var adaptAny = function (f) {
    return function ($61) {
        return f(toArray($61));
    };
};
var catMaybes = adaptAny(Data_Array.catMaybes);
var $$delete = function (dictEq) {
    return function (x) {
        return adaptAny(Data_Array["delete"](dictEq)(x));
    };
};
var deleteAt = function (i) {
    return adaptAny(Data_Array.deleteAt(i));
};
var deleteBy = function (f) {
    return function (x) {
        return adaptAny(Data_Array.deleteBy(f)(x));
    };
};
var difference = function (dictEq) {
    return function (xs) {
        return adaptAny(difference$prime(dictEq)(xs));
    };
};
var drop = function (i) {
    return adaptAny(Data_Array.drop(i));
};
var dropEnd = function (i) {
    return adaptAny(Data_Array.dropEnd(i));
};
var dropWhile = function (f) {
    return adaptAny(Data_Array.dropWhile(f));
};
var elemIndex = function (dictEq) {
    return function (x) {
        return adaptAny(Data_Array.elemIndex(dictEq)(x));
    };
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return adaptAny(Data_Array.elemLastIndex(dictEq)(x));
    };
};
var filter = function (f) {
    return adaptAny(Data_Array.filter(f));
};
var filterA = function (dictApplicative) {
    return function (f) {
        return adaptAny(Data_Array.filterA(dictApplicative)(f));
    };
};
var findIndex = function (x) {
    return adaptAny(Data_Array.findIndex(x));
};
var findLastIndex = function (x) {
    return adaptAny(Data_Array.findLastIndex(x));
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (acc) {
            return adaptAny(Data_Array.foldM(dictMonad)(f)(acc));
        };
    };
};
var foldRecM = function (dictMonadRec) {
    return function (f) {
        return function (acc) {
            return adaptAny(Data_Array.foldRecM(dictMonadRec)(f)(acc));
        };
    };
};
var index = adaptAny(Data_Array.index);
var length = adaptAny(Data_Array.length);
var mapMaybe = function (f) {
    return adaptAny(Data_Array.mapMaybe(f));
};
var partition = function (f) {
    return adaptAny(Data_Array.partition(f));
};
var slice = function (start) {
    return function (end) {
        return adaptAny(Data_Array.slice(start)(end));
    };
};
var span = function (f) {
    return adaptAny(Data_Array.span(f));
};
var take = function (i) {
    return adaptAny(Data_Array.take(i));
};
var takeEnd = function (i) {
    return adaptAny(Data_Array.takeEnd(i));
};
var takeWhile = function (f) {
    return adaptAny(Data_Array.takeWhile(f));
};
var toUnfoldable = function (dictUnfoldable) {
    return adaptAny(Data_Array.toUnfoldable(dictUnfoldable));
};
var unsafeAdapt = function (f) {
    return function ($62) {
        return NonEmptyArray(adaptAny(f)($62));
    };
};
var cons = function (x) {
    return unsafeAdapt(Data_Array.cons(x));
};
var insert = function (dictOrd) {
    return function (x) {
        return unsafeAdapt(Data_Array.insert(dictOrd)(x));
    };
};
var insertBy = function (f) {
    return function (x) {
        return unsafeAdapt(Data_Array.insertBy(f)(x));
    };
};
var modifyAtIndices = function (dictFoldable) {
    return function (is) {
        return function (f) {
            return unsafeAdapt(Data_Array.modifyAtIndices(dictFoldable)(is)(f));
        };
    };
};
var nub = function (dictEq) {
    return unsafeAdapt(Data_Array.nub(dictEq));
};
var nubBy = function (f) {
    return unsafeAdapt(Data_Array.nubBy(f));
};
var reverse = unsafeAdapt(Data_Array.reverse);
var sort = function (dictOrd) {
    return unsafeAdapt(Data_Array.sort(dictOrd));
};
var sortBy = function (f) {
    return unsafeAdapt(Data_Array.sortBy(f));
};
var sortWith = function (dictOrd) {
    return function (f) {
        return unsafeAdapt(Data_Array.sortWith(dictOrd)(f));
    };
};
var updateAtIndices = function (dictFoldable) {
    return function (pairs) {
        return unsafeAdapt(Data_Array.updateAtIndices(dictFoldable)(pairs));
    };
};
var unsafeIndex = function (dictPartial) {
    return adaptAny(Data_Array.unsafeIndex(dictPartial));
};
module.exports = {
    fromArray: fromArray,
    fromNonEmpty: fromNonEmpty,
    toArray: toArray,
    toNonEmpty: toNonEmpty,
    fromFoldable: fromFoldable,
    fromFoldable1: fromFoldable1,
    toUnfoldable: toUnfoldable,
    singleton: singleton,
    range: range,
    replicate: replicate,
    some: some,
    length: length,
    cons: cons,
    "cons'": cons$prime,
    snoc: snoc,
    "snoc'": snoc$prime,
    appendArray: appendArray,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    updateAtIndices: updateAtIndices,
    modifyAt: modifyAt,
    modifyAtIndices: modifyAtIndices,
    alterAt: alterAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    partition: partition,
    filterA: filterA,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    sort: sort,
    sortBy: sortBy,
    sortWith: sortWith,
    slice: slice,
    take: take,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    drop: drop,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    nub: nub,
    nubBy: nubBy,
    union: union,
    "union'": union$prime,
    unionBy: unionBy,
    "unionBy'": unionBy$prime,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    "difference'": difference$prime,
    intersect: intersect,
    "intersect'": intersect$prime,
    intersectBy: intersectBy,
    "intersectBy'": intersectBy$prime,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM,
    foldRecM: foldRecM,
    unsafeIndex: unsafeIndex,
    showNonEmptyArray: showNonEmptyArray,
    eqNonEmptyArray: eqNonEmptyArray,
    eq1NonEmptyArray: eq1NonEmptyArray,
    ordNonEmptyArray: ordNonEmptyArray,
    ord1NonEmptyArray: ord1NonEmptyArray,
    semigroupNonEmptyArray: semigroupNonEmptyArray,
    functorNonEmptyArray: functorNonEmptyArray,
    functorWithIndexNonEmptyArray: functorWithIndexNonEmptyArray,
    foldableNonEmptyArray: foldableNonEmptyArray,
    foldableWithIndexNonEmptyArray: foldableWithIndexNonEmptyArray,
    foldable1NonEmptyArray: foldable1NonEmptyArray,
    traversableNonEmptyArray: traversableNonEmptyArray,
    traversableWithIndexNonEmptyArray: traversableWithIndexNonEmptyArray,
    traversable1NonEmptyArray: traversable1NonEmptyArray,
    applyNonEmptyArray: applyNonEmptyArray,
    applicativeNonEmptyArray: applicativeNonEmptyArray,
    bindNonEmptyArray: bindNonEmptyArray,
    monadNonEmptyArray: monadNonEmptyArray,
    altNonEmptyArray: altNonEmptyArray
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Lazy":15,"../Control.Monad":54,"../Control.Monad.Rec.Class":47,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Bifunctor":88,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Foldable":116,"../Data.FoldableWithIndex":117,"../Data.Function":125,"../Data.Functor":130,"../Data.FunctorWithIndex":132,"../Data.Maybe":156,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Semigroup.Traversable":183,"../Data.Show":189,"../Data.Traversable":209,"../Data.TraversableWithIndex":210,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":73}],75:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Ring = require("../Data.Ring");
var Prelude = require("../Prelude");
var tail = function (dictPartial) {
    return function (xs) {
        return Data_Array.slice(1)(Data_Array.length(xs))(xs);
    };
};
var last = function (dictPartial) {
    return function (xs) {
        return xs[Data_Array.length(xs) - 1 | 0];
    };
};
var init = function (dictPartial) {
    return function (xs) {
        return Data_Array.slice(0)(Data_Array.length(xs) - 1 | 0)(xs);
    };
};
var head = function (dictPartial) {
    return function (xs) {
        return xs[0];
    };
};
module.exports = {
    head: head,
    tail: tail,
    last: last,
    init: init
};

},{"../Data.Array":80,"../Data.Ring":181,"../Prelude":263}],76:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Semiring = require("../Data.Semiring");
var Prelude = require("../Prelude");
var Iterator = (function () {
    function Iterator(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Iterator.create = function (value0) {
        return function (value1) {
            return new Iterator(value0, value1);
        };
    };
    return Iterator;
})();
var peek = function (v) {
    return function __do() {
        var v1 = Control_Monad_ST.readSTRef(v.value1)();
        return v.value0(v1);
    };
};
var next = function (v) {
    return function __do() {
        var v1 = Control_Monad_ST.readSTRef(v.value1)();
        var v2 = Control_Monad_ST.modifySTRef(v.value1)(function (v2) {
            return v2 + 1 | 0;
        })();
        return v.value0(v1);
    };
};
var pushWhile = function (p) {
    return function (iter) {
        return function (array) {
            return function __do() {
                var v = Control_Monad_ST.newSTRef(false)();
                while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                    (function __do() {
                        var v1 = peek(iter)();
                        if (v1 instanceof Data_Maybe.Just && p(v1.value0)) {
                            var v2 = Data_Array_ST.pushSTArray(array)(v1.value0)();
                            return Data_Functor["void"](Control_Monad_Eff.functorEff)(next(iter))();
                        };
                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                    })();
                };
                return {};
            };
        };
    };
};
var pushAll = pushWhile(Data_Function["const"](true));
var iterator = function (f) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Iterator.create(f))(Control_Monad_ST.newSTRef(0));
};
var iterate = function (iter) {
    return function (f) {
        return function __do() {
            var v = Control_Monad_ST.newSTRef(false)();
            while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                (function __do() {
                    var v1 = next(iter)();
                    if (v1 instanceof Data_Maybe.Just) {
                        return f(v1.value0)();
                    };
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                    };
                    throw new Error("Failed pattern match at Data.Array.ST.Iterator line 39, column 5 - line 41, column 46: " + [ v1.constructor.name ]);
                })();
            };
            return {};
        };
    };
};
var exhausted = function ($27) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.isNothing)(peek($27));
};
module.exports = {
    iterator: iterator,
    iterate: iterate,
    next: next,
    peek: peek,
    exhausted: exhausted,
    pushWhile: pushWhile,
    pushAll: pushAll
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.ST":49,"../Control.Semigroupoid":60,"../Data.Array.ST":78,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Semiring":187,"../Prelude":263}],77:[function(require,module,exports){
"use strict";

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],78:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var unsafeThaw = function ($7) {
    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($7);
};
var unsafeFreeze = function ($8) {
    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($8);
};
var thaw = $foreign.copyImpl;
var withArray = function (f) {
    return function (xs) {
        return function __do() {
            var v = thaw(xs)();
            var v1 = f(v)();
            return unsafeFreeze(v)();
        };
    };
};
var pushSTArray = function (arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([ a ]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var modifySTArray = function (xs) {
    return function (i) {
        return function (f) {
            return function __do() {
                var v = peekSTArray(xs)(i)();
                if (v instanceof Data_Maybe.Just) {
                    return $foreign.pokeSTArray(xs)(i)(f(v.value0))();
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return false;
                };
                throw new Error("Failed pattern match at Data.Array.ST line 127, column 3 - line 129, column 26: " + [ v.constructor.name ]);
            };
        };
    };
};
var freeze = $foreign.copyImpl;
module.exports = {
    withArray: withArray,
    peekSTArray: peekSTArray,
    pushSTArray: pushSTArray,
    modifySTArray: modifySTArray,
    freeze: freeze,
    thaw: thaw,
    unsafeFreeze: unsafeFreeze,
    unsafeThaw: unsafeThaw,
    runSTArray: $foreign.runSTArray,
    emptySTArray: $foreign.emptySTArray,
    pokeSTArray: $foreign.pokeSTArray,
    pushAllSTArray: $foreign.pushAllSTArray,
    spliceSTArray: $foreign.spliceSTArray,
    toAssocArray: $foreign.toAssocArray
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.ST":49,"../Control.Semigroupoid":60,"../Data.Maybe":156,"../Prelude":263,"../Unsafe.Coerce":281,"./foreign":77}],79:[function(require,module,exports){
"use strict";

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = new Array(step * (end - start) + 1);
    var i = start, n = 0;
    while (i !== end) {
      result[n++] = i;
      i += step;
    }
    result[n] = i;
    return result;
  };
};

var replicate = function (count) {
  return function (value) {
    if (count < 1) {
      return [];
    }
    var result = new Array(count);
    return result.fill(value);
  };
};

var replicatePolyfill = function (count) {
  return function (value) {
    var result = [];
    var n = 0;
    for (var i = 0; i < count; i++) {
      result[n++] = value;
    }
    return result;
  };
};

// In browsers that have Array.prototype.fill we use it, as it's faster.
exports.replicate = typeof Array.prototype.fill === "function" ?
    replicate :
    replicatePolyfill;

exports.fromFoldableImpl = (function () {
  function Cons(head, tail) {
    this.head = head;
    this.tail = tail;
  }
  var emptyList = {};

  function curryCons(head) {
    return function (tail) {
      return new Cons(head, tail);
    };
  }

  function listToArray(list) {
    var result = [];
    var count = 0;
    var xs = list;
    while (xs !== emptyList) {
      result[count++] = xs.head;
      xs = xs.tail;
    }
    return result;
  }

  return function (foldr) {
    return function (xs) {
      return listToArray(foldr(curryCons)(emptyList)(xs));
    };
  };
})();

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  if (xss.length <= 10000) {
    // This method is faster, but it crashes on big arrays.
    // So we use it when can and fallback to simple variant otherwise.
    return Array.prototype.concat.apply([], xss);
  }

  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

exports.partition = function (f) {
  return function (xs) {
    var yes = [];
    var no  = [];
    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x))
        yes.push(x);
      else
        no.push(x);
    }
    return { yes: yes, no: no };
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.take = function (n) {
  return function (l) {
    return n < 1 ? [] : l.slice(0, n);
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

//------------------------------------------------------------------------------
// Partial ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.unsafeIndexImpl = function (xs) {
  return function (n) {
    return xs[n];
  };
};

},{}],80:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Array_ST_Iterator = require("../Data.Array.ST.Iterator");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAtIndices = function (dictFoldable) {
    return function (us) {
        return function (xs) {
            return Control_Monad_ST.pureST(Data_Array_ST.withArray(function (res) {
                return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(dictFoldable)(Data_Tuple.uncurry(Data_Array_ST.pokeSTArray(res)))(us);
            })(xs));
        };
    };
};
var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeIndex = function (dictPartial) {
    return $foreign.unsafeIndexImpl;
};
var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x,
            tail: xs
        });
    };
});
var toUnfoldable = function (dictUnfoldable) {
    return function (xs) {
        var len = $foreign.length(xs);
        var f = function (i) {
            if (i < len) {
                return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
            };
            if (Data_Boolean.otherwise) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match at Data.Array line 139, column 3 - line 141, column 26: " + [ i.constructor.name ]);
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
    };
};
var takeEnd = function (n) {
    return function (xs) {
        return $foreign.drop($foreign.length(xs) - n | 0)(xs);
    };
};
var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var v = comp(x)(y);
                if (v instanceof Data_Ordering.GT) {
                    return 1;
                };
                if (v instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if (v instanceof Data_Ordering.LT) {
                    return -1 | 0;
                };
                throw new Error("Failed pattern match at Data.Array line 698, column 15 - line 703, column 1: " + [ v.constructor.name ]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sortWith = function (dictOrd) {
    return function (f) {
        return sortBy(Data_Ord.comparing(dictOrd)(f));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var $$null = function (xs) {
    return $foreign.length(xs) === 0;
};
var nubBy = function (eq) {
    return function (xs) {
        var v = uncons(xs);
        if (v instanceof Data_Maybe.Just) {
            return $foreign.cons(v.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                return !eq(v.value0.head)(y);
            })(v.value0.tail)));
        };
        if (v instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        throw new Error("Failed pattern match at Data.Array line 888, column 3 - line 890, column 18: " + [ v.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var modifyAtIndices = function (dictFoldable) {
    return function (is) {
        return function (f) {
            return function (xs) {
                return Control_Monad_ST.pureST(Data_Array_ST.withArray(function (res) {
                    return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(dictFoldable)(function (i) {
                        return Data_Array_ST.modifySTArray(res)(i)(f);
                    })(is);
                })(xs));
            };
        };
    };
};
var mapWithIndex = function (f) {
    return function (xs) {
        return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([  ]));
        };
    };
};
var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function (xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Data_Boolean.otherwise) {
        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
    };
    throw new Error("Failed pattern match at Data.Array line 319, column 1 - line 319, column 45: " + [ xs.constructor.name ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var last = function (xs) {
    return index(xs)($foreign.length(xs) - 1 | 0);
};
var unsnoc = function (xs) {
    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return function (v1) {
            return {
                init: v,
                last: v1
            };
        };
    })(init(xs)))(last(xs));
};
var modifyAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
var span = function (p) {
    return function (arr) {
        var go = function ($copy_i) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i) {
                var v = index(arr)(i);
                if (v instanceof Data_Maybe.Just) {
                    var $64 = p(v.value0);
                    if ($64) {
                        $copy_i = i + 1 | 0;
                        return;
                    };
                    $tco_done = true;
                    return new Data_Maybe.Just(i);
                };
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.Array line 830, column 5 - line 832, column 25: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_i);
            };
            return $tco_result;
        };
        var breakIndex = go(0);
        if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
            return {
                init: [  ],
                rest: arr
            };
        };
        if (breakIndex instanceof Data_Maybe.Just) {
            return {
                init: $foreign.slice(0)(breakIndex.value0)(arr),
                rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
            };
        };
        if (breakIndex instanceof Data_Maybe.Nothing) {
            return {
                init: arr,
                rest: [  ]
            };
        };
        throw new Error("Failed pattern match at Data.Array line 817, column 3 - line 823, column 30: " + [ breakIndex.constructor.name ]);
    };
};
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var unzip = function (xs) {
    return Control_Monad_ST.pureST(function __do() {
        var v = Data_Array_ST.emptySTArray();
        var v1 = Data_Array_ST.emptySTArray();
        var v2 = Data_Array_ST_Iterator.iterator(function (v2) {
            return index(xs)(v2);
        })();
        Data_Array_ST_Iterator.iterate(v2)(function (v3) {
            return function __do() {
                Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Array_ST.pushSTArray(v)(v3.value0))();
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Array_ST.pushSTArray(v1)(v3.value1))();
            };
        })();
        var v3 = Data_Array_ST.unsafeFreeze(v)();
        var v4 = Data_Array_ST.unsafeFreeze(v1)();
        return new Data_Tuple.Tuple(v3, v4);
    });
};
var head = function (xs) {
    return index(xs)(0);
};
var groupBy = function (op) {
    return function (xs) {
        return Control_Monad_ST.pureST(function __do() {
            var v = Data_Array_ST.emptySTArray();
            var v1 = Data_Array_ST_Iterator.iterator(function (v1) {
                return index(xs)(v1);
            })();
            Data_Array_ST_Iterator.iterate(v1)(function (x) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                    var v2 = Data_Array_ST.emptySTArray();
                    Data_Array_ST_Iterator.pushWhile(op(x))(v1)(v2)();
                    var v3 = Data_Array_ST.unsafeFreeze(v2)();
                    return Data_Array_ST.pushSTArray(v)(new Data_NonEmpty.NonEmpty(x, v3))();
                });
            })();
            return Data_Array_ST.unsafeFreeze(v)();
        });
    };
};
var group = function (dictEq) {
    return function (xs) {
        return groupBy(Data_Eq.eq(dictEq))(xs);
    };
};
var group$prime = function (dictOrd) {
    return function ($93) {
        return group(dictOrd.Eq0())(sort(dictOrd)($93));
    };
};
var fromFoldable = function (dictFoldable) {
    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
};
var foldRecM = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (array) {
                var go = function (res) {
                    return function (i) {
                        if (i >= $foreign.length(array)) {
                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(res));
                        };
                        if (Data_Boolean.otherwise) {
                            return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(f(res)(unsafeIndex()(array)(i)))(function (v) {
                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop({
                                    a: v,
                                    b: i + 1 | 0
                                }));
                            });
                        };
                        throw new Error("Failed pattern match at Data.Array line 1057, column 3 - line 1061, column 42: " + [ res.constructor.name, i.constructor.name ]);
                    };
                };
                return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(a)(0);
            };
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(a);
            })(function (b) {
                return function (bs) {
                    return Control_Bind.bind(dictMonad.Bind1())(f(a)(b))(function (a$prime) {
                        return foldM(dictMonad)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function (cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (v) {
                return v + 1 | 0;
            })(findLastIndex(function (y) {
                return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
            })(ys));
            return Data_Maybe.fromJust()(insertAt(i)(x)(ys));
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var dropEnd = function (n) {
    return function (xs) {
        return $foreign.take($foreign.length(xs) - n | 0)(xs);
    };
};
var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2.length === 0) {
                return [  ];
            };
            return Data_Maybe.maybe(v2)(function (i) {
                return Data_Maybe.fromJust()(deleteAt(i)(v2));
            })(findIndex(v(v1))(v2));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
var mapMaybe = function (f) {
    return concatMap(function ($94) {
        return Data_Maybe.maybe([  ])(singleton)(f($94));
    });
};
var filterA = function (dictApplicative) {
    return function (p) {
        return function ($95) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(mapMaybe(function (v) {
                if (v.value1) {
                    return new Data_Maybe.Just(v.value0);
                };
                return Data_Maybe.Nothing.value;
            }))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function (x) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.Tuple.create(x))(p(x));
            })($95));
        };
    };
};
var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
var alterAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                var v = f(x);
                if (v instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if (v instanceof Data_Maybe.Just) {
                    return updateAt(i)(v.value0)(xs);
                };
                throw new Error("Failed pattern match at Data.Array line 540, column 10 - line 542, column 32: " + [ v.constructor.name ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
module.exports = {
    fromFoldable: fromFoldable,
    toUnfoldable: toUnfoldable,
    singleton: singleton,
    some: some,
    many: many,
    "null": $$null,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    updateAtIndices: updateAtIndices,
    modifyAt: modifyAt,
    modifyAtIndices: modifyAtIndices,
    alterAt: alterAt,
    concatMap: concatMap,
    filterA: filterA,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    sortWith: sortWith,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM,
    foldRecM: foldRecM,
    unsafeIndex: unsafeIndex,
    range: $foreign.range,
    replicate: $foreign.replicate,
    length: $foreign.length,
    cons: $foreign.cons,
    snoc: $foreign.snoc,
    reverse: $foreign.reverse,
    concat: $foreign.concat,
    filter: $foreign.filter,
    partition: $foreign.partition,
    slice: $foreign.slice,
    take: $foreign.take,
    drop: $foreign.drop,
    zipWith: $foreign.zipWith
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Lazy":15,"../Control.Monad.Eff":40,"../Control.Monad.Rec.Class":47,"../Control.Monad.ST":49,"../Control.Semigroupoid":60,"../Data.Array.ST":78,"../Data.Array.ST.Iterator":76,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Traversable":209,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":79}],81:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67}],82:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown");
var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip");
var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker");
var Data_Bifunctor_Product = require("../Data.Bifunctor.Product");
var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($97) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f($97));
                })(function ($98) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(g($98));
                })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
            };
        };
    };
};
var bifor_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldableJoker = function (dictFoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (v) {
            return function (r) {
                return function (v1) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(r)(v1);
                };
            };
        };
    }, function (v) {
        return function (r) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldl(dictFoldable)(r)(u)(v1);
                };
            };
        };
    }, function (v) {
        return function (r) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldr(dictFoldable)(r)(u)(v1);
                };
            };
        };
    });
};
var bifoldableClown = function (dictFoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (l) {
            return function (v) {
                return function (v1) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(l)(v1);
                };
            };
        };
    }, function (l) {
        return function (v) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldl(dictFoldable)(l)(u)(v1);
                };
            };
        };
    }, function (l) {
        return function (v) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldr(dictFoldable)(l)(u)(v1);
                };
            };
        };
    });
};
var bifoldMapDefaultR = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($99) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f($99));
                })(function ($100) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(g($100));
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
};
var bifoldMapDefaultL = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return bifoldl(dictBifoldable)(function (m) {
                    return function (a) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(f(a));
                    };
                })(function (m) {
                    return function (b) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(g(b));
                    };
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifoldableFlip = function (dictBifoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (r) {
            return function (l) {
                return function (v) {
                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
                };
            };
        };
    }, function (r) {
        return function (l) {
            return function (u) {
                return function (v) {
                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    }, function (r) {
        return function (l) {
            return function (u) {
                return function (v) {
                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    });
};
var bifoldableWrap = function (dictBifoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (l) {
            return function (r) {
                return function (v) {
                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
                };
            };
        };
    }, function (l) {
        return function (r) {
            return function (u) {
                return function (v) {
                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    }, function (l) {
        return function (r) {
            return function (u) {
                return function (v) {
                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    });
};
var bifoldlDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($101) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($101)));
                    })(function ($102) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(g)($102)));
                    })(p)))(z);
                };
            };
        };
    };
};
var bifoldrDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($103) {
                        return Data_Monoid_Endo.Endo(f($103));
                    })(function ($104) {
                        return Data_Monoid_Endo.Endo(g($104));
                    })(p))(z);
                };
            };
        };
    };
};
var bifoldableProduct = function (dictBifoldable) {
    return function (dictBifoldable1) {
        return new Bifoldable(function (dictMonoid) {
            return function (l) {
                return function (r) {
                    return function (v) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v.value0))(bifoldMap(dictBifoldable1)(dictMonoid)(l)(r)(v.value1));
                    };
                };
            };
        }, function (l) {
            return function (r) {
                return function (u) {
                    return function (m) {
                        return bifoldlDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
                    };
                };
            };
        }, function (l) {
            return function (r) {
                return function (u) {
                    return function (m) {
                        return bifoldrDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
                    };
                };
            };
        });
    };
};
var bifold = function (dictBifoldable) {
    return function (dictMonoid) {
        return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var biany = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($105) {
                    return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($106) {
                        return Data_Monoid_Disj.Disj(p($106));
                    })(function ($107) {
                        return Data_Monoid_Disj.Disj(q($107));
                    })($105));
                };
            };
        };
    };
};
var biall = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($108) {
                    return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($109) {
                        return Data_Monoid_Conj.Conj(p($109));
                    })(function ($110) {
                        return Data_Monoid_Conj.Conj(q($110));
                    })($108));
                };
            };
        };
    };
};
module.exports = {
    bifoldMap: bifoldMap,
    bifoldl: bifoldl,
    bifoldr: bifoldr,
    Bifoldable: Bifoldable,
    bifoldrDefault: bifoldrDefault,
    bifoldlDefault: bifoldlDefault,
    bifoldMapDefaultR: bifoldMapDefaultR,
    bifoldMapDefaultL: bifoldMapDefaultL,
    bifold: bifold,
    bitraverse_: bitraverse_,
    bifor_: bifor_,
    bisequence_: bisequence_,
    biany: biany,
    biall: biall,
    bifoldableClown: bifoldableClown,
    bifoldableJoker: bifoldableJoker,
    bifoldableFlip: bifoldableFlip,
    bifoldableProduct: bifoldableProduct,
    bifoldableWrap: bifoldableWrap
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Bifunctor.Clown":83,"../Data.Bifunctor.Flip":84,"../Data.Bifunctor.Joker":85,"../Data.Bifunctor.Product":86,"../Data.Bifunctor.Wrap":87,"../Data.Foldable":116,"../Data.Function":125,"../Data.Monoid":169,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Endo":167,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Unit":220,"../Prelude":263}],83:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Clown = function (x) {
    return x;
};
var showClown = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Clown " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordClown = function (dictOrd) {
    return dictOrd;
};
var newtypeClown = new Data_Newtype.Newtype(function (n) {
    return n;
}, Clown);
var functorClown = new Data_Functor.Functor(function (v) {
    return function (v1) {
        return v1;
    };
});
var eqClown = function (dictEq) {
    return dictEq;
};
var bifunctorClown = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (v) {
            return function (v1) {
                return Data_Functor.map(dictFunctor)(f)(v1);
            };
        };
    });
};
var biapplyClown = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorClown(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Apply.apply(dictApply)(v)(v1);
        };
    });
};
var biapplicativeClown = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyClown(dictApplicative.Apply0());
    }, function (a) {
        return function (v) {
            return Control_Applicative.pure(dictApplicative)(a);
        };
    });
};
module.exports = {
    Clown: Clown,
    newtypeClown: newtypeClown,
    eqClown: eqClown,
    ordClown: ordClown,
    showClown: showClown,
    functorClown: functorClown,
    bifunctorClown: bifunctorClown,
    biapplyClown: biapplyClown,
    biapplicativeClown: biapplicativeClown
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Biapplicative":7,"../Control.Biapply":8,"../Data.Bifunctor":88,"../Data.Eq":111,"../Data.Functor":130,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],84:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Flip = function (x) {
    return x;
};
var showFlip = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Flip " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordFlip = function (dictOrd) {
    return dictOrd;
};
var newtypeFlip = new Data_Newtype.Newtype(function (n) {
    return n;
}, Flip);
var functorFlip = function (dictBifunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Bifunctor.lmap(dictBifunctor)(f)(v);
        };
    });
};
var eqFlip = function (dictEq) {
    return dictEq;
};
var bifunctorFlip = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Bifunctor.bimap(dictBifunctor)(g)(f)(v);
            };
        };
    });
};
var biapplyFlip = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorFlip(dictBiapply.Bifunctor0());
    }, function (v) {
        return function (v1) {
            return Control_Biapply.biapply(dictBiapply)(v)(v1);
        };
    });
};
var biapplicativeFlip = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyFlip(dictBiapplicative.Biapply0());
    }, function (a) {
        return function (b) {
            return Control_Biapplicative.bipure(dictBiapplicative)(b)(a);
        };
    });
};
module.exports = {
    Flip: Flip,
    newtypeFlip: newtypeFlip,
    eqFlip: eqFlip,
    ordFlip: ordFlip,
    showFlip: showFlip,
    functorFlip: functorFlip,
    bifunctorFlip: bifunctorFlip,
    biapplyFlip: biapplyFlip,
    biapplicativeFlip: biapplicativeFlip
};

},{"../Control.Biapplicative":7,"../Control.Biapply":8,"../Data.Bifunctor":88,"../Data.Eq":111,"../Data.Functor":130,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],85:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Joker = function (x) {
    return x;
};
var showJoker = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Joker " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordJoker = function (dictOrd) {
    return dictOrd;
};
var newtypeJoker = new Data_Newtype.Newtype(function (n) {
    return n;
}, Joker);
var functorJoker = function (dictFunctor) {
    return new Data_Functor.Functor(function (g) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(g)(v);
        };
    });
};
var eqJoker = function (dictEq) {
    return dictEq;
};
var bifunctorJoker = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (v) {
        return function (g) {
            return function (v1) {
                return Data_Functor.map(dictFunctor)(g)(v1);
            };
        };
    });
};
var biapplyJoker = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorJoker(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Apply.apply(dictApply)(v)(v1);
        };
    });
};
var biapplicativeJoker = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyJoker(dictApplicative.Apply0());
    }, function (v) {
        return function (b) {
            return Control_Applicative.pure(dictApplicative)(b);
        };
    });
};
module.exports = {
    Joker: Joker,
    newtypeJoker: newtypeJoker,
    eqJoker: eqJoker,
    ordJoker: ordJoker,
    showJoker: showJoker,
    functorJoker: functorJoker,
    bifunctorJoker: bifunctorJoker,
    biapplyJoker: biapplyJoker,
    biapplicativeJoker: biapplicativeJoker
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Biapplicative":7,"../Control.Biapply":8,"../Data.Bifunctor":88,"../Data.Eq":111,"../Data.Functor":130,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],86:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Product = (function () {
    function Product(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Product.create = function (value0) {
        return function (value1) {
            return new Product(value0, value1);
        };
    };
    return Product;
})();
var showProduct = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(Product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var eqProduct = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordProduct = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqProduct(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var bifunctorProduct = function (dictBifunctor) {
    return function (dictBifunctor1) {
        return new Data_Bifunctor.Bifunctor(function (f) {
            return function (g) {
                return function (v) {
                    return new Product(Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v.value0), Data_Bifunctor.bimap(dictBifunctor1)(f)(g)(v.value1));
                };
            };
        });
    };
};
var biapplyProduct = function (dictBiapply) {
    return function (dictBiapply1) {
        return new Control_Biapply.Biapply(function () {
            return bifunctorProduct(dictBiapply.Bifunctor0())(dictBiapply1.Bifunctor0());
        }, function (v) {
            return function (v1) {
                return new Product(Control_Biapply.biapply(dictBiapply)(v.value0)(v1.value0), Control_Biapply.biapply(dictBiapply1)(v.value1)(v1.value1));
            };
        });
    };
};
var biapplicativeProduct = function (dictBiapplicative) {
    return function (dictBiapplicative1) {
        return new Control_Biapplicative.Biapplicative(function () {
            return biapplyProduct(dictBiapplicative.Biapply0())(dictBiapplicative1.Biapply0());
        }, function (a) {
            return function (b) {
                return new Product(Control_Biapplicative.bipure(dictBiapplicative)(a)(b), Control_Biapplicative.bipure(dictBiapplicative1)(a)(b));
            };
        });
    };
};
module.exports = {
    Product: Product,
    eqProduct: eqProduct,
    ordProduct: ordProduct,
    showProduct: showProduct,
    bifunctorProduct: bifunctorProduct,
    biapplyProduct: biapplyProduct,
    biapplicativeProduct: biapplicativeProduct
};

},{"../Control.Biapplicative":7,"../Control.Biapply":8,"../Data.Bifunctor":88,"../Data.Eq":111,"../Data.HeytingAlgebra":141,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],87:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Wrap = function (x) {
    return x;
};
var showWrap = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Wrap " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordWrap = function (dictOrd) {
    return dictOrd;
};
var newtypeWrap = new Data_Newtype.Newtype(function (n) {
    return n;
}, Wrap);
var functorWrap = function (dictBifunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Bifunctor.rmap(dictBifunctor)(f)(v);
        };
    });
};
var eqWrap = function (dictEq) {
    return dictEq;
};
var bifunctorWrap = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v);
            };
        };
    });
};
var biapplyWrap = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorWrap(dictBiapply.Bifunctor0());
    }, function (v) {
        return function (v1) {
            return Control_Biapply.biapply(dictBiapply)(v)(v1);
        };
    });
};
var biapplicativeWrap = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyWrap(dictBiapplicative.Biapply0());
    }, function (a) {
        return function (b) {
            return Control_Biapplicative.bipure(dictBiapplicative)(a)(b);
        };
    });
};
module.exports = {
    Wrap: Wrap,
    newtypeWrap: newtypeWrap,
    eqWrap: eqWrap,
    ordWrap: ordWrap,
    showWrap: showWrap,
    functorWrap: functorWrap,
    bifunctorWrap: bifunctorWrap,
    biapplyWrap: biapplyWrap,
    biapplicativeWrap: biapplicativeWrap
};

},{"../Control.Biapplicative":7,"../Control.Biapply":8,"../Data.Bifunctor":88,"../Data.Eq":111,"../Data.Functor":130,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],88:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (dictBifunctor) {
    return function (f) {
        return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
    };
};
var rmap = function (dictBifunctor) {
    return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
};
module.exports = {
    bimap: bimap,
    Bifunctor: Bifunctor,
    lmap: lmap,
    rmap: rmap
};

},{"../Control.Category":11}],89:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown");
var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip");
var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker");
var Data_Bifunctor_Product = require("../Data.Bifunctor.Product");
var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap");
var Data_Functor = require("../Data.Functor");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Bitraversable = function (Bifoldable1, Bifunctor0, bisequence, bitraverse) {
    this.Bifoldable1 = Bifoldable1;
    this.Bifunctor0 = Bifunctor0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var lfor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative))(t);
            };
        };
    };
};
var ltraverse = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative));
        };
    };
};
var rfor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative))(f)(t);
            };
        };
    };
};
var rtraverse = function (dictBitraversable) {
    return function (dictApplicative) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative));
    };
};
var bitraversableJoker = function (dictTraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableJoker(dictTraversable.Foldable1());
    }, function () {
        return Data_Bifunctor_Joker.bifunctorJoker(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (v) {
            return function (r) {
                return function (v1) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(r)(v1));
                };
            };
        };
    });
};
var bitraversableClown = function (dictTraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableClown(dictTraversable.Foldable1());
    }, function () {
        return Data_Bifunctor_Clown.bifunctorClown(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (l) {
            return function (v) {
                return function (v1) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(l)(v1));
                };
            };
        };
    });
};
var bisequenceDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bitraversableFlip = function (dictBitraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableFlip(dictBitraversable.Bifoldable1());
    }, function () {
        return Data_Bifunctor_Flip.bifunctorFlip(dictBitraversable.Bifunctor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bisequence(dictBitraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (r) {
            return function (l) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
                };
            };
        };
    });
};
var bitraversableProduct = function (dictBitraversable) {
    return function (dictBitraversable1) {
        return new Bitraversable(function () {
            return Data_Bifoldable.bifoldableProduct(dictBitraversable.Bifoldable1())(dictBitraversable1.Bifoldable1());
        }, function () {
            return Data_Bifunctor_Product.bifunctorProduct(dictBitraversable.Bifunctor0())(dictBitraversable1.Bifunctor0());
        }, function (dictApplicative) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bisequence(dictBitraversable)(dictApplicative)(v.value0)))(bisequence(dictBitraversable1)(dictApplicative)(v.value1));
            };
        }, function (dictApplicative) {
            return function (l) {
                return function (r) {
                    return function (v) {
                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v.value0)))(bitraverse(dictBitraversable1)(dictApplicative)(l)(r)(v.value1));
                    };
                };
            };
        });
    };
};
var bitraversableWrap = function (dictBitraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableWrap(dictBitraversable.Bifoldable1());
    }, function () {
        return Data_Bifunctor_Wrap.bifunctorWrap(dictBitraversable.Bifunctor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bisequence(dictBitraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (l) {
            return function (r) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
                };
            };
        };
    });
};
var bitraverseDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return function (t) {
                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable.Bifunctor0())(f)(g)(t));
                };
            };
        };
    };
};
var bifor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable,
    bitraverse: bitraverse,
    bisequence: bisequence,
    bitraverseDefault: bitraverseDefault,
    bisequenceDefault: bisequenceDefault,
    ltraverse: ltraverse,
    rtraverse: rtraverse,
    bifor: bifor,
    lfor: lfor,
    rfor: rfor,
    bitraversableClown: bitraversableClown,
    bitraversableJoker: bitraversableJoker,
    bitraversableFlip: bitraversableFlip,
    bitraversableProduct: bitraversableProduct,
    bitraversableWrap: bitraversableWrap
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Data.Bifoldable":82,"../Data.Bifunctor":88,"../Data.Bifunctor.Clown":83,"../Data.Bifunctor.Flip":84,"../Data.Bifunctor.Joker":85,"../Data.Bifunctor.Product":86,"../Data.Bifunctor.Wrap":87,"../Data.Functor":130,"../Data.Traversable":209,"../Prelude":263}],90:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var otherwise = true;
module.exports = {
    otherwise: otherwise
};

},{}],91:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Unit = require("../Data.Unit");
var BooleanAlgebra = function (HeytingAlgebra0) {
    this.HeytingAlgebra0 = HeytingAlgebra0;
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraUnit;
});
var booleanAlgebraFn = function (dictBooleanAlgebra) {
    return new BooleanAlgebra(function () {
        return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraBoolean;
});
module.exports = {
    BooleanAlgebra: BooleanAlgebra,
    booleanAlgebraBoolean: booleanAlgebraBoolean,
    booleanAlgebraUnit: booleanAlgebraUnit,
    booleanAlgebraFn: booleanAlgebraFn
};

},{"../Data.HeytingAlgebra":141,"../Data.Unit":220}],92:[function(require,module,exports){
"use strict";

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

exports.topNumber = Number.POSITIVE_INFINITY;
exports.bottomNumber = Number.NEGATIVE_INFINITY;

},{}],93:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Unit = require("../Data.Unit");
var Bounded = function (Ord0, bottom, top) {
    this.Ord0 = Ord0;
    this.bottom = bottom;
    this.top = top;
};
var top = function (dict) {
    return dict.top;
};
var boundedUnit = new Bounded(function () {
    return Data_Ord.ordUnit;
}, Data_Unit.unit, Data_Unit.unit);
var boundedOrdering = new Bounded(function () {
    return Data_Ord.ordOrdering;
}, Data_Ordering.LT.value, Data_Ordering.GT.value);
var boundedNumber = new Bounded(function () {
    return Data_Ord.ordNumber;
}, $foreign.bottomNumber, $foreign.topNumber);
var boundedInt = new Bounded(function () {
    return Data_Ord.ordInt;
}, $foreign.bottomInt, $foreign.topInt);
var boundedChar = new Bounded(function () {
    return Data_Ord.ordChar;
}, $foreign.bottomChar, $foreign.topChar);
var boundedBoolean = new Bounded(function () {
    return Data_Ord.ordBoolean;
}, false, true);
var bottom = function (dict) {
    return dict.bottom;
};
module.exports = {
    Bounded: Bounded,
    bottom: bottom,
    top: top,
    boundedBoolean: boundedBoolean,
    boundedInt: boundedInt,
    boundedChar: boundedChar,
    boundedOrdering: boundedOrdering,
    boundedUnit: boundedUnit,
    boundedNumber: boundedNumber
};

},{"../Data.Ord":178,"../Data.Ordering":179,"../Data.Unit":220,"./foreign":92}],94:[function(require,module,exports){
/* global exports */
"use strict";

// jshint maxparams: 3
exports.parseJSONImpl = function (left, right, str) {
  try {
    return right(JSON.parse(str));
  } catch (e) {
    return left(e.toString());
  }
};
// jshint maxparams: 1

exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

exports.writeObject = function (fields) {
  var record = {};
  for (var i = 0; i < fields.length; i++) {
    record[fields[i].key] = fields[i].value;
  }
  return record;
};

},{}],95:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Int = require("../Data.Int");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Prelude = require("../Prelude");
var Prop = function (x) {
    return x;
};
var ForeignError = (function () {
    function ForeignError(value0) {
        this.value0 = value0;
    };
    ForeignError.create = function (value0) {
        return new ForeignError(value0);
    };
    return ForeignError;
})();
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var JSONError = (function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
})();
var showForeignError = new Data_Show.Show(function (v) {
    if (v instanceof ForeignError) {
        return "(ForeignError " + (v.value0 + ")");
    };
    if (v instanceof ErrorAtIndex) {
        return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof ErrorAtProperty) {
        return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof JSONError) {
        return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof TypeMismatch) {
        return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Data.CForeign line 65, column 1 - line 65, column 47: " + [ v.constructor.name ]);
});
var renderForeignError = function (v) {
    if (v instanceof ForeignError) {
        return v.value0;
    };
    if (v instanceof ErrorAtIndex) {
        return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof ErrorAtProperty) {
        return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof JSONError) {
        return "JSON error: " + v.value0;
    };
    if (v instanceof TypeMismatch) {
        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    };
    throw new Error("Failed pattern match at Data.CForeign line 75, column 1 - line 75, column 45: " + [ v.constructor.name ]);
};
var fail = function ($118) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($118));
};
var parseJSON = function (json) {
    return $foreign.parseJSONImpl(function ($119) {
        return fail(JSONError.create($119));
    }, Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), json);
};
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    };
    if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch("array", $foreign.tagOf(value)));
    };
    throw new Error("Failed pattern match at Data.CForeign line 152, column 1 - line 152, column 42: " + [ value.constructor.name ]);
};
var unsafeReadTagged = function (tag) {
    return function (value) {
        if ($foreign.tagOf(value) === tag) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
        };
        if (Data_Boolean.otherwise) {
            return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
        };
        throw new Error("Failed pattern match at Data.CForeign line 111, column 1 - line 111, column 55: " + [ tag.constructor.name, value.constructor.name ]);
    };
};
var readBoolean = unsafeReadTagged("Boolean");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
    var fromNumber = function ($120) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($120));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
};
var readString = unsafeReadTagged("String");
var readChar = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));
    var fromString = function ($121) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String.toChar($121));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
};
var eqForeignError = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return x.value0 === y.value0;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            return x.value0 === y.value0 && x.value1 === y.value1;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var ordForeignError = new Data_Ord.Ord(function () {
    return eqForeignError;
}, function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof ForeignError) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ForeignError) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
        };
        if (x instanceof TypeMismatch) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TypeMismatch) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtIndex) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtIndex) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtProperty) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        throw new Error("Failed pattern match at Data.CForeign line 63, column 8 - line 63, column 52: " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    ForeignError: ForeignError,
    TypeMismatch: TypeMismatch,
    ErrorAtIndex: ErrorAtIndex,
    ErrorAtProperty: ErrorAtProperty,
    JSONError: JSONError,
    Prop: Prop,
    renderForeignError: renderForeignError,
    parseJSON: parseJSON,
    unsafeReadTagged: unsafeReadTagged,
    readString: readString,
    readChar: readChar,
    readBoolean: readBoolean,
    readNumber: readNumber,
    readInt: readInt,
    readArray: readArray,
    fail: fail,
    eqForeignError: eqForeignError,
    ordForeignError: ordForeignError,
    showForeignError: showForeignError,
    toForeign: $foreign.toForeign,
    unsafeFromForeign: $foreign.unsafeFromForeign,
    typeOf: $foreign.typeOf,
    tagOf: $foreign.tagOf,
    isNull: $foreign.isNull,
    isUndefined: $foreign.isUndefined,
    isArray: $foreign.isArray,
    writeObject: $foreign.writeObject
};

},{"../Control.Applicative":4,"../Control.Monad.Error.Class":41,"../Control.Monad.Except":43,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.Int":146,"../Data.List.NonEmpty":149,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Prelude":263,"./foreign":94}],96:[function(require,module,exports){
"use strict";

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};

exports.toLower = function (c) {
  return c.toLowerCase();
};

exports.toUpper = function (c) {
  return c.toUpperCase();
};

},{}],97:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    fromCharCode: $foreign.fromCharCode,
    toCharCode: $foreign.toCharCode,
    toLower: $foreign.toLower,
    toUpper: $foreign.toUpper
};

},{"./foreign":96}],98:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var CommutativeRing = function (Ring0) {
    this.Ring0 = Ring0;
};
var commutativeRingUnit = new CommutativeRing(function () {
    return Data_Ring.ringUnit;
});
var commutativeRingNumber = new CommutativeRing(function () {
    return Data_Ring.ringNumber;
});
var commutativeRingInt = new CommutativeRing(function () {
    return Data_Ring.ringInt;
});
var commutativeRingFn = function (dictCommutativeRing) {
    return new CommutativeRing(function () {
        return Data_Ring.ringFn(dictCommutativeRing.Ring0());
    });
};
module.exports = {
    CommutativeRing: CommutativeRing,
    commutativeRingInt: commutativeRingInt,
    commutativeRingNumber: commutativeRingNumber,
    commutativeRingUnit: commutativeRingUnit,
    commutativeRingFn: commutativeRingFn
};

},{"../Data.Ring":181,"../Data.Semiring":187,"../Data.Unit":220}],99:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Year = function (x) {
    return x;
};
var Monday = (function () {
    function Monday() {

    };
    Monday.value = new Monday();
    return Monday;
})();
var Tuesday = (function () {
    function Tuesday() {

    };
    Tuesday.value = new Tuesday();
    return Tuesday;
})();
var Wednesday = (function () {
    function Wednesday() {

    };
    Wednesday.value = new Wednesday();
    return Wednesday;
})();
var Thursday = (function () {
    function Thursday() {

    };
    Thursday.value = new Thursday();
    return Thursday;
})();
var Friday = (function () {
    function Friday() {

    };
    Friday.value = new Friday();
    return Friday;
})();
var Saturday = (function () {
    function Saturday() {

    };
    Saturday.value = new Saturday();
    return Saturday;
})();
var Sunday = (function () {
    function Sunday() {

    };
    Sunday.value = new Sunday();
    return Sunday;
})();
var January = (function () {
    function January() {

    };
    January.value = new January();
    return January;
})();
var February = (function () {
    function February() {

    };
    February.value = new February();
    return February;
})();
var March = (function () {
    function March() {

    };
    March.value = new March();
    return March;
})();
var April = (function () {
    function April() {

    };
    April.value = new April();
    return April;
})();
var May = (function () {
    function May() {

    };
    May.value = new May();
    return May;
})();
var June = (function () {
    function June() {

    };
    June.value = new June();
    return June;
})();
var July = (function () {
    function July() {

    };
    July.value = new July();
    return July;
})();
var August = (function () {
    function August() {

    };
    August.value = new August();
    return August;
})();
var September = (function () {
    function September() {

    };
    September.value = new September();
    return September;
})();
var October = (function () {
    function October() {

    };
    October.value = new October();
    return October;
})();
var November = (function () {
    function November() {

    };
    November.value = new November();
    return November;
})();
var December = (function () {
    function December() {

    };
    December.value = new December();
    return December;
})();
var Day = function (x) {
    return x;
};
var showYear = new Data_Show.Show(function (v) {
    return "(Year " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showWeekday = new Data_Show.Show(function (v) {
    if (v instanceof Monday) {
        return "Monday";
    };
    if (v instanceof Tuesday) {
        return "Tuesday";
    };
    if (v instanceof Wednesday) {
        return "Wednesday";
    };
    if (v instanceof Thursday) {
        return "Thursday";
    };
    if (v instanceof Friday) {
        return "Friday";
    };
    if (v instanceof Saturday) {
        return "Saturday";
    };
    if (v instanceof Sunday) {
        return "Sunday";
    };
    throw new Error("Failed pattern match at Data.Date.Component line 189, column 1 - line 189, column 37: " + [ v.constructor.name ]);
});
var showMonth = new Data_Show.Show(function (v) {
    if (v instanceof January) {
        return "January";
    };
    if (v instanceof February) {
        return "February";
    };
    if (v instanceof March) {
        return "March";
    };
    if (v instanceof April) {
        return "April";
    };
    if (v instanceof May) {
        return "May";
    };
    if (v instanceof June) {
        return "June";
    };
    if (v instanceof July) {
        return "July";
    };
    if (v instanceof August) {
        return "August";
    };
    if (v instanceof September) {
        return "September";
    };
    if (v instanceof October) {
        return "October";
    };
    if (v instanceof November) {
        return "November";
    };
    if (v instanceof December) {
        return "December";
    };
    throw new Error("Failed pattern match at Data.Date.Component line 104, column 1 - line 104, column 33: " + [ v.constructor.name ]);
});
var showDay = new Data_Show.Show(function (v) {
    return "(Day " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var ordYear = Data_Ord.ordInt;
var ordDay = Data_Ord.ordInt;
var genericYear = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Year" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Year))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Year", [ {
        sigConstructor: "Data.Date.Component.Year",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Date.Component.Year", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericWeekday = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Monday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Monday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Tuesday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Tuesday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Wednesday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Wednesday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Thursday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Thursday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Friday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Friday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Saturday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Saturday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Sunday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Sunday.value);
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Weekday", [ {
        sigConstructor: "Data.Date.Component.Monday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Tuesday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Wednesday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Thursday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Friday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Saturday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Sunday",
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof Monday) {
        return new Data_Generic.SProd("Data.Date.Component.Monday", [  ]);
    };
    if (v instanceof Tuesday) {
        return new Data_Generic.SProd("Data.Date.Component.Tuesday", [  ]);
    };
    if (v instanceof Wednesday) {
        return new Data_Generic.SProd("Data.Date.Component.Wednesday", [  ]);
    };
    if (v instanceof Thursday) {
        return new Data_Generic.SProd("Data.Date.Component.Thursday", [  ]);
    };
    if (v instanceof Friday) {
        return new Data_Generic.SProd("Data.Date.Component.Friday", [  ]);
    };
    if (v instanceof Saturday) {
        return new Data_Generic.SProd("Data.Date.Component.Saturday", [  ]);
    };
    if (v instanceof Sunday) {
        return new Data_Generic.SProd("Data.Date.Component.Sunday", [  ]);
    };
    throw new Error("Failed pattern match at Data.Date.Component line 159, column 8 - line 159, column 50: " + [ v.constructor.name ]);
});
var genericMonth = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.January" && v.value1.length === 0)) {
        return new Data_Maybe.Just(January.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.February" && v.value1.length === 0)) {
        return new Data_Maybe.Just(February.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.March" && v.value1.length === 0)) {
        return new Data_Maybe.Just(March.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.April" && v.value1.length === 0)) {
        return new Data_Maybe.Just(April.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.May" && v.value1.length === 0)) {
        return new Data_Maybe.Just(May.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.June" && v.value1.length === 0)) {
        return new Data_Maybe.Just(June.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.July" && v.value1.length === 0)) {
        return new Data_Maybe.Just(July.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.August" && v.value1.length === 0)) {
        return new Data_Maybe.Just(August.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.September" && v.value1.length === 0)) {
        return new Data_Maybe.Just(September.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.October" && v.value1.length === 0)) {
        return new Data_Maybe.Just(October.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.November" && v.value1.length === 0)) {
        return new Data_Maybe.Just(November.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.December" && v.value1.length === 0)) {
        return new Data_Maybe.Just(December.value);
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Month", [ {
        sigConstructor: "Data.Date.Component.January",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.February",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.March",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.April",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.May",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.June",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.July",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.August",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.September",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.October",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.November",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.December",
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof January) {
        return new Data_Generic.SProd("Data.Date.Component.January", [  ]);
    };
    if (v instanceof February) {
        return new Data_Generic.SProd("Data.Date.Component.February", [  ]);
    };
    if (v instanceof March) {
        return new Data_Generic.SProd("Data.Date.Component.March", [  ]);
    };
    if (v instanceof April) {
        return new Data_Generic.SProd("Data.Date.Component.April", [  ]);
    };
    if (v instanceof May) {
        return new Data_Generic.SProd("Data.Date.Component.May", [  ]);
    };
    if (v instanceof June) {
        return new Data_Generic.SProd("Data.Date.Component.June", [  ]);
    };
    if (v instanceof July) {
        return new Data_Generic.SProd("Data.Date.Component.July", [  ]);
    };
    if (v instanceof August) {
        return new Data_Generic.SProd("Data.Date.Component.August", [  ]);
    };
    if (v instanceof September) {
        return new Data_Generic.SProd("Data.Date.Component.September", [  ]);
    };
    if (v instanceof October) {
        return new Data_Generic.SProd("Data.Date.Component.October", [  ]);
    };
    if (v instanceof November) {
        return new Data_Generic.SProd("Data.Date.Component.November", [  ]);
    };
    if (v instanceof December) {
        return new Data_Generic.SProd("Data.Date.Component.December", [  ]);
    };
    throw new Error("Failed pattern match at Data.Date.Component line 64, column 8 - line 64, column 46: " + [ v.constructor.name ]);
});
var genericDay = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Day" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Day))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Day", [ {
        sigConstructor: "Data.Date.Component.Day",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Date.Component.Day", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var eqYear = Data_Eq.eqInt;
var eqWeekday = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Monday && y instanceof Monday) {
            return true;
        };
        if (x instanceof Tuesday && y instanceof Tuesday) {
            return true;
        };
        if (x instanceof Wednesday && y instanceof Wednesday) {
            return true;
        };
        if (x instanceof Thursday && y instanceof Thursday) {
            return true;
        };
        if (x instanceof Friday && y instanceof Friday) {
            return true;
        };
        if (x instanceof Saturday && y instanceof Saturday) {
            return true;
        };
        if (x instanceof Sunday && y instanceof Sunday) {
            return true;
        };
        return false;
    };
});
var ordWeekday = new Data_Ord.Ord(function () {
    return eqWeekday;
}, function (x) {
    return function (y) {
        if (x instanceof Monday && y instanceof Monday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Monday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Monday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Tuesday && y instanceof Tuesday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Tuesday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Tuesday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Wednesday && y instanceof Wednesday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Wednesday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Wednesday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Thursday && y instanceof Thursday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Thursday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Thursday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Friday && y instanceof Friday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Friday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Friday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Saturday && y instanceof Saturday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Saturday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Saturday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Sunday && y instanceof Sunday) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Date.Component line 158, column 8 - line 158, column 42: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqMonth = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof January && y instanceof January) {
            return true;
        };
        if (x instanceof February && y instanceof February) {
            return true;
        };
        if (x instanceof March && y instanceof March) {
            return true;
        };
        if (x instanceof April && y instanceof April) {
            return true;
        };
        if (x instanceof May && y instanceof May) {
            return true;
        };
        if (x instanceof June && y instanceof June) {
            return true;
        };
        if (x instanceof July && y instanceof July) {
            return true;
        };
        if (x instanceof August && y instanceof August) {
            return true;
        };
        if (x instanceof September && y instanceof September) {
            return true;
        };
        if (x instanceof October && y instanceof October) {
            return true;
        };
        if (x instanceof November && y instanceof November) {
            return true;
        };
        if (x instanceof December && y instanceof December) {
            return true;
        };
        return false;
    };
});
var ordMonth = new Data_Ord.Ord(function () {
    return eqMonth;
}, function (x) {
    return function (y) {
        if (x instanceof January && y instanceof January) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof January) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof January) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof February && y instanceof February) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof February) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof February) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof March && y instanceof March) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof March) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof March) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof April && y instanceof April) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof April) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof April) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof May && y instanceof May) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof May) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof May) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof June && y instanceof June) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof June) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof June) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof July && y instanceof July) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof July) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof July) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof August && y instanceof August) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof August) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof August) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof September && y instanceof September) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof September) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof September) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof October && y instanceof October) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof October) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof October) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof November && y instanceof November) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof November) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof November) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof December && y instanceof December) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Date.Component line 63, column 8 - line 63, column 38: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqDay = Data_Eq.eqInt;
var boundedYear = new Data_Bounded.Bounded(function () {
    return ordYear;
}, -271820 | 0, 275759);
var boundedWeekday = new Data_Bounded.Bounded(function () {
    return ordWeekday;
}, Monday.value, Sunday.value);
var boundedMonth = new Data_Bounded.Bounded(function () {
    return ordMonth;
}, January.value, December.value);
var boundedEnumYear = new Data_Enum.BoundedEnum(function () {
    return boundedYear;
}, function () {
    return enumYear;
}, 547580, function (v) {
    return v;
}, function (n) {
    if (n >= (-271821 | 0) && n <= 275759) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 37, column 1 - line 37, column 45: " + [ n.constructor.name ]);
});
var enumYear = new Data_Enum.Enum(function () {
    return ordYear;
}, function ($110) {
    return Data_Enum.toEnum(boundedEnumYear)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumYear)($110)));
}, function ($111) {
    return Data_Enum.toEnum(boundedEnumYear)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumYear)($111)));
});
var boundedEnumWeekday = new Data_Enum.BoundedEnum(function () {
    return boundedWeekday;
}, function () {
    return enumWeekday;
}, 7, function (v) {
    if (v instanceof Monday) {
        return 1;
    };
    if (v instanceof Tuesday) {
        return 2;
    };
    if (v instanceof Wednesday) {
        return 3;
    };
    if (v instanceof Thursday) {
        return 4;
    };
    if (v instanceof Friday) {
        return 5;
    };
    if (v instanceof Saturday) {
        return 6;
    };
    if (v instanceof Sunday) {
        return 7;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 180, column 14 - line 189, column 1: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 1) {
        return new Data_Maybe.Just(Monday.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Tuesday.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(Wednesday.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(Thursday.value);
    };
    if (v === 5) {
        return new Data_Maybe.Just(Friday.value);
    };
    if (v === 6) {
        return new Data_Maybe.Just(Saturday.value);
    };
    if (v === 7) {
        return new Data_Maybe.Just(Sunday.value);
    };
    return Data_Maybe.Nothing.value;
});
var enumWeekday = new Data_Enum.Enum(function () {
    return ordWeekday;
}, function ($112) {
    return Data_Enum.toEnum(boundedEnumWeekday)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumWeekday)($112)));
}, function ($113) {
    return Data_Enum.toEnum(boundedEnumWeekday)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumWeekday)($113)));
});
var boundedEnumMonth = new Data_Enum.BoundedEnum(function () {
    return boundedMonth;
}, function () {
    return enumMonth;
}, 12, function (v) {
    if (v instanceof January) {
        return 1;
    };
    if (v instanceof February) {
        return 2;
    };
    if (v instanceof March) {
        return 3;
    };
    if (v instanceof April) {
        return 4;
    };
    if (v instanceof May) {
        return 5;
    };
    if (v instanceof June) {
        return 6;
    };
    if (v instanceof July) {
        return 7;
    };
    if (v instanceof August) {
        return 8;
    };
    if (v instanceof September) {
        return 9;
    };
    if (v instanceof October) {
        return 10;
    };
    if (v instanceof November) {
        return 11;
    };
    if (v instanceof December) {
        return 12;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 90, column 14 - line 104, column 1: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 1) {
        return new Data_Maybe.Just(January.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(February.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(March.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(April.value);
    };
    if (v === 5) {
        return new Data_Maybe.Just(May.value);
    };
    if (v === 6) {
        return new Data_Maybe.Just(June.value);
    };
    if (v === 7) {
        return new Data_Maybe.Just(July.value);
    };
    if (v === 8) {
        return new Data_Maybe.Just(August.value);
    };
    if (v === 9) {
        return new Data_Maybe.Just(September.value);
    };
    if (v === 10) {
        return new Data_Maybe.Just(October.value);
    };
    if (v === 11) {
        return new Data_Maybe.Just(November.value);
    };
    if (v === 12) {
        return new Data_Maybe.Just(December.value);
    };
    return Data_Maybe.Nothing.value;
});
var enumMonth = new Data_Enum.Enum(function () {
    return ordMonth;
}, function ($114) {
    return Data_Enum.toEnum(boundedEnumMonth)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMonth)($114)));
}, function ($115) {
    return Data_Enum.toEnum(boundedEnumMonth)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMonth)($115)));
});
var boundedDay = new Data_Bounded.Bounded(function () {
    return ordDay;
}, 1, 31);
var boundedEnumDay = new Data_Enum.BoundedEnum(function () {
    return boundedDay;
}, function () {
    return enumDay;
}, 31, function (v) {
    return v;
}, function (n) {
    if (n >= 1 && n <= 31) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 137, column 1 - line 137, column 43: " + [ n.constructor.name ]);
});
var enumDay = new Data_Enum.Enum(function () {
    return ordDay;
}, function ($116) {
    return Data_Enum.toEnum(boundedEnumDay)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumDay)($116)));
}, function ($117) {
    return Data_Enum.toEnum(boundedEnumDay)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumDay)($117)));
});
module.exports = {
    January: January,
    February: February,
    March: March,
    April: April,
    May: May,
    June: June,
    July: July,
    August: August,
    September: September,
    October: October,
    November: November,
    December: December,
    Monday: Monday,
    Tuesday: Tuesday,
    Wednesday: Wednesday,
    Thursday: Thursday,
    Friday: Friday,
    Saturday: Saturday,
    Sunday: Sunday,
    eqYear: eqYear,
    ordYear: ordYear,
    genericYear: genericYear,
    boundedYear: boundedYear,
    enumYear: enumYear,
    boundedEnumYear: boundedEnumYear,
    showYear: showYear,
    eqMonth: eqMonth,
    ordMonth: ordMonth,
    genericMonth: genericMonth,
    boundedMonth: boundedMonth,
    enumMonth: enumMonth,
    boundedEnumMonth: boundedEnumMonth,
    showMonth: showMonth,
    eqDay: eqDay,
    ordDay: ordDay,
    genericDay: genericDay,
    boundedDay: boundedDay,
    enumDay: enumDay,
    boundedEnumDay: boundedEnumDay,
    showDay: showDay,
    eqWeekday: eqWeekday,
    ordWeekday: ordWeekday,
    genericWeekday: genericWeekday,
    boundedWeekday: boundedWeekday,
    enumWeekday: enumWeekday,
    boundedEnumWeekday: boundedEnumWeekday,
    showWeekday: showWeekday
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.Enum":109,"../Data.Eq":111,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],100:[function(require,module,exports){
"use strict";

var createDate = function (y, m, d) {
  var date = new Date(Date.UTC(y, m, d));
  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }
  return date;
};

exports.canonicalDateImpl = function (ctor, y, m, d) {
  var date = createDate(y, m - 1, d);
  return ctor(date.getUTCFullYear())(date.getUTCMonth() + 1)(date.getUTCDate());
};

exports.calcWeekday = function (y, m, d) {
  return createDate(y, m - 1, d).getUTCDay();
};

exports.calcDiff = function (y1, m1, d1, y2, m2, d2) {
  var dt1 = createDate(y1, m1 - 1, d1);
  var dt2 = createDate(y2, m2 - 1, d2);
  return dt1.getTime() - dt2.getTime();
};

},{}],101:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Date_Component = require("../Data.Date.Component");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var $$Date = (function () {
    function $$Date(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    $$Date.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new $$Date(value0, value1, value2);
            };
        };
    };
    return $$Date;
})();
var year = function (v) {
    return v.value0;
};
var weekday = function (v) {
    var n = $foreign.calcWeekday(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2);
    var $44 = n === 0;
    if ($44) {
        return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(7));
    };
    return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(n));
};
var showDate = new Data_Show.Show(function (v) {
    return "(Date " + (Data_Show.show(Data_Date_Component.showYear)(v.value0) + (" " + (Data_Show.show(Data_Date_Component.showMonth)(v.value1) + (" " + (Data_Show.show(Data_Date_Component.showDay)(v.value2) + ")")))));
});
var month = function (v) {
    return v.value1;
};
var isLeapYear = function (y) {
    var y$prime = Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(y);
    return y$prime % 4 === 0 && (y$prime % 400 === 0 || !(y$prime % 100 === 0));
};
var lastDayOfMonth = function (y) {
    return function (m) {
        var unsafeDay = function ($98) {
            return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)($98));
        };
        if (m instanceof Data_Date_Component.January) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.February) {
            if (isLeapYear(y)) {
                return unsafeDay(29);
            };
            if (Data_Boolean.otherwise) {
                return unsafeDay(28);
            };
        };
        if (m instanceof Data_Date_Component.March) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.April) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.May) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.June) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.July) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.August) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.September) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.October) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.November) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.December) {
            return unsafeDay(31);
        };
        throw new Error("Failed pattern match at Data.Date line 89, column 22 - line 104, column 3: " + [ m.constructor.name ]);
    };
};
var genericDate = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Date" && v.value1.length === 3)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just($$Date.create))(Data_Generic.fromSpine(Data_Date_Component.genericYear)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Date_Component.genericMonth)(v["value1"][1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Date_Component.genericDay)(v["value1"][2](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Date", [ {
        sigConstructor: "Data.Date.Date",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date_Component.genericYear)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date_Component.genericMonth)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date_Component.genericDay)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Date.Date", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Date_Component.genericYear)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Date_Component.genericMonth)(v.value1);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Date_Component.genericDay)(v.value2);
    } ]);
});
var eqDate = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Date_Component.eqYear)(x.value0)(y.value0) && Data_Eq.eq(Data_Date_Component.eqMonth)(x.value1)(y.value1) && Data_Eq.eq(Data_Date_Component.eqDay)(x.value2)(y.value2);
    };
});
var ordDate = new Data_Ord.Ord(function () {
    return eqDate;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Date_Component.ordYear)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v1 = Data_Ord.compare(Data_Date_Component.ordMonth)(x.value1)(y.value1);
        if (v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Date_Component.ordDay)(x.value2)(y.value2);
    };
});
var diff = function (dictDuration) {
    return function (v) {
        return function (v1) {
            return Data_Time_Duration.toDuration(dictDuration)($foreign.calcDiff(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2, v1.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v1.value1), v1.value2));
        };
    };
};
var day = function (v) {
    return v.value2;
};
var canonicalDate = function (y) {
    return function (m) {
        return function (d) {
            var mkDate = function (y$prime) {
                return function (m$prime) {
                    return function (d$prime) {
                        return new $$Date(y$prime, Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)), d$prime);
                    };
                };
            };
            return $foreign.canonicalDateImpl(mkDate, y, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m), d);
        };
    };
};
var exactDate = function (y) {
    return function (m) {
        return function (d) {
            var dt = new $$Date(y, m, d);
            var $97 = Data_Eq.eq(eqDate)(canonicalDate(y)(m)(d))(dt);
            if ($97) {
                return new Data_Maybe.Just(dt);
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var boundedDate = new Data_Bounded.Bounded(function () {
    return ordDate;
}, new $$Date(Data_Bounded.bottom(Data_Date_Component.boundedYear), Data_Bounded.bottom(Data_Date_Component.boundedMonth), Data_Bounded.bottom(Data_Date_Component.boundedDay)), new $$Date(Data_Bounded.top(Data_Date_Component.boundedYear), Data_Bounded.top(Data_Date_Component.boundedMonth), Data_Bounded.top(Data_Date_Component.boundedDay)));
module.exports = {
    canonicalDate: canonicalDate,
    exactDate: exactDate,
    year: year,
    month: month,
    day: day,
    weekday: weekday,
    diff: diff,
    isLeapYear: isLeapYear,
    lastDayOfMonth: lastDayOfMonth,
    eqDate: eqDate,
    ordDate: ordDate,
    genericDate: genericDate,
    boundedDate: boundedDate,
    showDate: showDate
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.Date.Component":99,"../Data.Enum":109,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Time.Duration":204,"../Data.Unit":220,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":100}],102:[function(require,module,exports){
"use strict";

var createDateTime = function (y, m, d, h, mi, s, ms) {
  var dateTime = new Date(Date.UTC(y, m, d, h, mi, s, ms));
  if (y >= 0 && y < 100) {
    dateTime.setUTCFullYear(y);
  }
  return dateTime;
};

exports.fromDateTimeImpl = function (y, mo, d, h, mi, s, ms) {
  return createDateTime(y, mo - 1, d, h, mi, s, ms).getTime();
};

exports.toDateTimeImpl = function (ctor) {
  return function (instant) {
    var dt = new Date(instant);
    return ctor (dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
  };
};

},{}],103:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Apply = require("../Control.Apply");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Date = require("../Data.Date");
var Data_Date_Component = require("../Data.Date.Component");
var Data_DateTime = require("../Data.DateTime");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Time = require("../Data.Time");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Instant = function (x) {
    return x;
};
var unInstant = function (v) {
    return v;
};
var toDateTime = (function () {
    var mkDateTime = function (y) {
        return function (mo) {
            return function (d) {
                return function (h) {
                    return function (mi) {
                        return function (s) {
                            return function (ms) {
                                return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d), new Data_Time.Time(h, mi, s, ms));
                            };
                        };
                    };
                };
            };
        };
    };
    return $foreign.toDateTimeImpl(mkDateTime);
})();
var showInstant = new Data_Show.Show(function (v) {
    return "(Instant " + (Data_Show.show(Data_Time_Duration.showMilliseconds)(v) + ")");
});
var ordDateTime = Data_Time_Duration.ordMilliseconds;
var instant = function (v) {
    if (v >= -8.6399778816e15 && v <= 8.639977881599999e15) {
        return new Data_Maybe.Just(v);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.DateTime.Instant line 46, column 1 - line 46, column 41: " + [ v.constructor.name ]);
};
var genericDateTime = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.DateTime.Instant.Instant" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Instant))(Data_Generic.fromSpine(Data_Time_Duration.genericMilliseconds)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.DateTime.Instant.Instant", [ {
        sigConstructor: "Data.DateTime.Instant.Instant",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Duration.genericMilliseconds)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.DateTime.Instant.Instant", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Duration.genericMilliseconds)(v);
    } ]);
});
var fromDateTime = function (v) {
    return $foreign.fromDateTimeImpl(Data_Date.year(v.value0), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)), Data_Date.day(v.value0), Data_Time.hour(v.value1), Data_Time.minute(v.value1), Data_Time.second(v.value1), Data_Time.millisecond(v.value1));
};
var fromDate = function (d) {
    return $foreign.fromDateTimeImpl(Data_Date.year(d), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(d)), Data_Date.day(d), Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond));
};
var eqDateTime = Data_Time_Duration.eqMilliseconds;
var boundedInstant = new Data_Bounded.Bounded(function () {
    return ordDateTime;
}, -8.6399778816e15, 8.639977881599999e15);
module.exports = {
    instant: instant,
    unInstant: unInstant,
    fromDateTime: fromDateTime,
    fromDate: fromDate,
    toDateTime: toDateTime,
    eqDateTime: eqDateTime,
    ordDateTime: ordDateTime,
    genericDateTime: genericDateTime,
    boundedInstant: boundedInstant,
    showInstant: showInstant
};

},{"../Control.Apply":6,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.Date":101,"../Data.Date.Component":99,"../Data.DateTime":105,"../Data.Enum":109,"../Data.Eq":111,"../Data.Function.Uncurried":124,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Time":205,"../Data.Time.Component":203,"../Data.Time.Duration":204,"../Data.Unit":220,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":102}],104:[function(require,module,exports){
"use strict";

var createUTC = function (y, mo, d, h, m, s, ms) {
  var date = new Date(Date.UTC(y, mo, d, h, m, s, ms));
  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }
  return date.getTime();
};

exports.calcDiff = function (rec1, rec2) {
  var msUTC1 = createUTC(rec1.year, rec1.month - 1, rec1.day, rec1.hour, rec1.minute, rec1.second, rec1.millisecond);
  var msUTC2 = createUTC(rec2.year, rec2.month - 1, rec2.day, rec2.hour, rec2.minute, rec2.second, rec2.millisecond);
  return msUTC1 - msUTC2;
};

exports.adjustImpl = function (just) {
  return function (nothing) {
    return function (offset) {
      return function (rec) {
        var msUTC = createUTC(rec.year, rec.month - 1, rec.day, rec.hour, rec.minute, rec.second, rec.millisecond);
        var dt = new Date(msUTC + offset);
        return isNaN(dt.getTime()) ? nothing : just({
          year: dt.getUTCFullYear(),
          month: dt.getUTCMonth() + 1,
          day: dt.getUTCDate(),
          hour: dt.getUTCHours(),
          minute: dt.getUTCMinutes(),
          second: dt.getUTCSeconds(),
          millisecond: dt.getUTCMilliseconds()
        });
      };
    };
  };
};

},{}],105:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Data_Bounded = require("../Data.Bounded");
var Data_Date = require("../Data.Date");
var Data_Date_Component = require("../Data.Date.Component");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Time = require("../Data.Time");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var DateTime = (function () {
    function DateTime(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    DateTime.create = function (value0) {
        return function (value1) {
            return new DateTime(value0, value1);
        };
    };
    return DateTime;
})();
var toRecord = function (v) {
    return {
        year: Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)),
        month: Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)),
        day: Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)),
        hour: Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)),
        minute: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)),
        second: Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)),
        millisecond: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))
    };
};
var time = function (v) {
    return v.value1;
};
var showDateTime = new Data_Show.Show(function (v) {
    return "(DateTime " + (Data_Show.show(Data_Date.showDate)(v.value0) + (" " + (Data_Show.show(Data_Time.showTime)(v.value1) + ")")));
});
var modifyTimeF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(DateTime.create(v.value0))(f(v.value1));
        };
    };
};
var modifyTime = function (f) {
    return function (v) {
        return new DateTime(v.value0, f(v.value1));
    };
};
var modifyDateF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(Data_Function.flip(DateTime.create)(v.value1))(f(v.value0));
        };
    };
};
var modifyDate = function (f) {
    return function (v) {
        return new DateTime(f(v.value0), v.value1);
    };
};
var genericDateTime = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.DateTime.DateTime" && v.value1.length === 2)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(DateTime.create))(Data_Generic.fromSpine(Data_Date.genericDate)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time.genericTime)(v["value1"][1](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.DateTime.DateTime", [ {
        sigConstructor: "Data.DateTime.DateTime",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date.genericDate)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time.genericTime)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.DateTime.DateTime", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Date.genericDate)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time.genericTime)(v.value1);
    } ]);
});
var eqDateTime = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Date.eqDate)(x.value0)(y.value0) && Data_Eq.eq(Data_Time.eqTime)(x.value1)(y.value1);
    };
});
var ordDateTime = new Data_Ord.Ord(function () {
    return eqDateTime;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Date.ordDate)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Time.ordTime)(x.value1)(y.value1);
    };
});
var diff = function (dictDuration) {
    return function (dt1) {
        return function (dt2) {
            return Data_Time_Duration.toDuration(dictDuration)($foreign.calcDiff(toRecord(dt1), toRecord(dt2)));
        };
    };
};
var date = function (v) {
    return v.value0;
};
var boundedDateTime = new Data_Bounded.Bounded(function () {
    return ordDateTime;
}, new DateTime(Data_Bounded.bottom(Data_Date.boundedDate), Data_Bounded.bottom(Data_Time.boundedTime)), new DateTime(Data_Bounded.top(Data_Date.boundedDate), Data_Bounded.top(Data_Time.boundedTime)));
var adjust = function (dictDuration) {
    return function (d) {
        return function (dt) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)($foreign.adjustImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(Data_Time_Duration.fromDuration(dictDuration)(d))(toRecord(dt)))(function (rec) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(DateTime.create)(Control_Bind.join(Data_Maybe.bindMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Date.exactDate)(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(rec.year)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(rec.month)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(rec.day)))))(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Time.Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(rec.hour)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(rec.minute)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(rec.second)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(rec.millisecond)));
            });
        };
    };
};
module.exports = {
    DateTime: DateTime,
    date: date,
    modifyDate: modifyDate,
    modifyDateF: modifyDateF,
    time: time,
    modifyTime: modifyTime,
    modifyTimeF: modifyTimeF,
    adjust: adjust,
    diff: diff,
    eqDateTime: eqDateTime,
    ordDateTime: ordDateTime,
    genericDateTime: genericDateTime,
    boundedDateTime: boundedDateTime,
    showDateTime: showDateTime
};

},{"../Control.Apply":6,"../Control.Bind":10,"../Data.Bounded":93,"../Data.Date":101,"../Data.Date.Component":99,"../Data.Enum":109,"../Data.Eq":111,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Time":205,"../Data.Time.Component":203,"../Data.Time.Duration":204,"../Data.Unit":220,"../Prelude":263,"./foreign":104}],106:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var Distributive = function (Functor0, collect, distribute) {
    this.Functor0 = Functor0;
    this.collect = collect;
    this.distribute = distribute;
};
var distributiveIdentity = new Distributive(function () {
    return Data_Identity.functorIdentity;
}, function (dictFunctor) {
    return function (f) {
        return function ($11) {
            return Data_Identity.Identity(Data_Functor.map(dictFunctor)(function ($12) {
                return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(f($12));
            })($11));
        };
    };
}, function (dictFunctor) {
    return function ($13) {
        return Data_Identity.Identity(Data_Functor.map(dictFunctor)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))($13));
    };
});
var distribute = function (dict) {
    return dict.distribute;
};
var distributiveFunction = new Distributive(function () {
    return Data_Functor.functorFn;
}, function (dictFunctor) {
    return function (f) {
        return function ($14) {
            return distribute(distributiveFunction)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($14));
        };
    };
}, function (dictFunctor) {
    return function (a) {
        return function (e) {
            return Data_Functor.map(dictFunctor)(function (v) {
                return v(e);
            })(a);
        };
    };
});
var cotraverse = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($15) {
                return Data_Functor.map(dictDistributive.Functor0())(f)(distribute(dictDistributive)(dictFunctor)($15));
            };
        };
    };
};
var collectDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($16) {
                return distribute(dictDistributive)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($16));
            };
        };
    };
};
var collect = function (dict) {
    return dict.collect;
};
var distributeDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return collect(dictDistributive)(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    collect: collect,
    distribute: distribute,
    Distributive: Distributive,
    distributeDefault: distributeDefault,
    collectDefault: collectDefault,
    cotraverse: cotraverse,
    distributiveIdentity: distributiveIdentity,
    distributiveFunction: distributiveFunction
};

},{"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Functor":130,"../Data.Identity":142,"../Data.Newtype":171,"../Prelude":263}],107:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var DivisionRing = function (Ring0, recip) {
    this.Ring0 = Ring0;
    this.recip = recip;
};
var recip = function (dict) {
    return dict.recip;
};
var rightDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(a)(recip(dictDivisionRing)(b));
        };
    };
};
var leftDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(recip(dictDivisionRing)(b))(a);
        };
    };
};
var divisionringNumber = new DivisionRing(function () {
    return Data_Ring.ringNumber;
}, function (x) {
    return 1.0 / x;
});
module.exports = {
    DivisionRing: DivisionRing,
    recip: recip,
    leftDiv: leftDiv,
    rightDiv: rightDiv,
    divisionringNumber: divisionringNumber
};

},{"../Data.EuclideanRing":113,"../Data.Ring":181,"../Data.Semiring":187}],108:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Left) {
                return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Right) {
                return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Either line 160, column 1 - line 160, column 61: " + [ v.constructor.name ]);
        });
    };
};
var note$prime = function (f) {
    return Data_Maybe["maybe'"](function ($171) {
        return Left.create(f($171));
    })(Right.create);
};
var note = function (a) {
    return Data_Maybe.maybe(new Left(a))(Right.create);
};
var functorEither = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        if (v1 instanceof Right) {
            return new Right(v(v1.value0));
        };
        throw new Error("Failed pattern match at Data.Either line 36, column 1 - line 36, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));
var fromRight = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar62) {
                return $dollar62;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Right) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Either line 252, column 1 - line 252, column 52: " + [ v.constructor.name ]);
        })());
    };
};
var fromLeft = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar66) {
                return $dollar66;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Left) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Either line 247, column 1 - line 247, column 51: " + [ v.constructor.name ]);
        })());
    };
};
var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Left) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Right) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 200, column 1 - line 200, column 53: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Left) {
                return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
            };
            if (v1 instanceof Right) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 200, column 1 - line 200, column 53: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        return new Right(v(v1));
    };
});
var eqEither = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                };
                if (x instanceof Left) {
                    return Data_Ordering.LT.value;
                };
                if (y instanceof Left) {
                    return Data_Ordering.GT.value;
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 176, column 8 - line 176, column 64: " + [ x.constructor.name, y.constructor.name ]);
            };
        });
    };
};
var eq1Either = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqEither(dictEq)(dictEq1));
    });
};
var ord1Either = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Either(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));
    });
};
var either = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 229, column 1 - line 229, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
var choose = function (dictAlt) {
    return function (a) {
        return function (b) {
            return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
        };
    };
};
var boundedEither = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return new Left(v(v2.value0));
            };
            if (v2 instanceof Right) {
                return new Right(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 43, column 1 - line 43, column 45: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(z)(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(z)(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0)(z);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0)(z);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 206, column 1 - line 206, column 53: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v(v2.value0));
                };
                if (v2 instanceof Right) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v1(v2.value0));
                };
                throw new Error("Failed pattern match at Data.Either line 206, column 1 - line 206, column 53: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var applyEither = new Control_Apply.Apply(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return new Left(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map(functorEither)(v.value0)(v1);
        };
        throw new Error("Failed pattern match at Data.Either line 79, column 1 - line 79, column 41: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindEither = new Control_Bind.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (v) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
        };
    });
};
var semiringEither = function (dictSemiring) {
    return new Data_Semiring.Semiring(function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.add(dictSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.mul(dictSemiring))(x))(y);
        };
    }, new Right(Data_Semiring.one(dictSemiring)), new Right(Data_Semiring.zero(dictSemiring)));
};
var applicativeEither = new Control_Applicative.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Control_Monad.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return v1;
        };
        return v;
    };
});
module.exports = {
    Left: Left,
    Right: Right,
    either: either,
    choose: choose,
    isLeft: isLeft,
    isRight: isRight,
    fromLeft: fromLeft,
    fromRight: fromRight,
    note: note,
    "note'": note$prime,
    hush: hush,
    functorEither: functorEither,
    invariantEither: invariantEither,
    bifunctorEither: bifunctorEither,
    applyEither: applyEither,
    applicativeEither: applicativeEither,
    altEither: altEither,
    bindEither: bindEither,
    monadEither: monadEither,
    extendEither: extendEither,
    showEither: showEither,
    eqEither: eqEither,
    eq1Either: eq1Either,
    ordEither: ordEither,
    ord1Either: ord1Either,
    boundedEither: boundedEither,
    foldableEither: foldableEither,
    bifoldableEither: bifoldableEither,
    traversableEither: traversableEither,
    bitraversableEither: bitraversableEither,
    semiringEither: semiringEither,
    semigroupEither: semigroupEither
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Extend":14,"../Control.Monad":54,"../Control.Semigroupoid":60,"../Data.Bifoldable":82,"../Data.Bifunctor":88,"../Data.Bitraversable":89,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Traversable":209,"../Prelude":263}],109:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Char = require("../Data.Char");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Cardinality = function (x) {
    return x;
};
var Enum = function (Ord0, pred, succ) {
    this.Ord0 = Ord0;
    this.pred = pred;
    this.succ = succ;
};
var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
    this.Bounded0 = Bounded0;
    this.Enum1 = Enum1;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.toEnum = toEnum;
};
var toEnum = function (dict) {
    return dict.toEnum;
};
var succ = function (dict) {
    return dict.succ;
};
var pred = function (dict) {
    return dict.pred;
};
var ordCardinality = Data_Ord.ordInt;
var newtypeCardinality = new Data_Newtype.Newtype(function (n) {
    return n;
}, Cardinality);
var intStepFromTo = function (step) {
    return function (from) {
        return function (to) {
            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                var $54 = e <= to;
                if ($54) {
                    return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, e + step | 0));
                };
                return Data_Maybe.Nothing.value;
            })(from);
        };
    };
};
var fromEnum = function (dict) {
    return dict.fromEnum;
};
var toEnumWithDefaults = function (dictBoundedEnum) {
    return function (b) {
        return function (t) {
            return function (x) {
                var v = toEnum(dictBoundedEnum)(x);
                if (v instanceof Data_Maybe.Just) {
                    return v.value0;
                };
                if (v instanceof Data_Maybe.Nothing) {
                    var $57 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                    if ($57) {
                        return b;
                    };
                    return t;
                };
                throw new Error("Failed pattern match at Data.Enum line 272, column 28 - line 274, column 56: " + [ v.constructor.name ]);
            };
        };
    };
};
var eqCardinality = Data_Eq.eqInt;
var enumUnit = new Enum(function () {
    return Data_Ord.ordUnit;
}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));
var enumTuple = function (dictEnum) {
    return function (dictBoundedEnum) {
        return new Enum(function () {
            return Data_Tuple.ordTuple(dictEnum.Ord0())((dictBoundedEnum.Enum1()).Ord0());
        }, function (v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum.Bounded0())))(pred(dictEnum)(v.value0)))(function ($101) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($101));
            })(pred(dictBoundedEnum.Enum1())(v.value1));
        }, function (v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum.Bounded0())))(succ(dictEnum)(v.value0)))(function ($102) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($102));
            })(succ(dictBoundedEnum.Enum1())(v.value1));
        });
    };
};
var enumOrdering = new Enum(function () {
    return Data_Ord.ordOrdering;
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_Ordering.EQ) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v instanceof Data_Ordering.GT) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    throw new Error("Failed pattern match at Data.Enum line 84, column 1 - line 84, column 39: " + [ v.constructor.name ]);
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v instanceof Data_Ordering.EQ) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    if (v instanceof Data_Ordering.GT) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Enum line 84, column 1 - line 84, column 39: " + [ v.constructor.name ]);
});
var enumMaybe = function (dictBoundedEnum) {
    return new Enum(function () {
        return Data_Maybe.ordMaybe((dictBoundedEnum.Enum1()).Ord0());
    }, function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Maybe.Just.create(pred(dictBoundedEnum.Enum1())(v.value0));
        };
        throw new Error("Failed pattern match at Data.Enum line 92, column 1 - line 92, column 54: " + [ v.constructor.name ]);
    }, function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Just.create(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum.Bounded0())));
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum.Enum1())(v.value0));
        };
        throw new Error("Failed pattern match at Data.Enum line 92, column 1 - line 92, column 54: " + [ v.constructor.name ]);
    });
};
var enumInt = new Enum(function () {
    return Data_Ord.ordInt;
}, function (n) {
    var $70 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);
    if ($70) {
        return new Data_Maybe.Just(n - 1 | 0);
    };
    return Data_Maybe.Nothing.value;
}, function (n) {
    var $71 = n < Data_Bounded.top(Data_Bounded.boundedInt);
    if ($71) {
        return new Data_Maybe.Just(n + 1 | 0);
    };
    return Data_Maybe.Nothing.value;
});
var enumFromTo = function (dictEnum) {
    return function (dictUnfoldable) {
        return function (from) {
            return function (to) {
                var go = function (mx) {
                    return Control_Bind.bind(Data_Maybe.bindMaybe)(mx)(function (v) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Ord.lessThanOrEq(dictEnum.Ord0())(v)(to)))(function () {
                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(v, succ(dictEnum)(v)));
                        });
                    });
                };
                return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_Maybe.Just(from));
            };
        };
    };
};
var enumFromThenTo = function (dictBoundedEnum) {
    return function (a) {
        return function (b) {
            return function (c) {
                var c$prime = fromEnum(dictBoundedEnum)(c);
                var b$prime = fromEnum(dictBoundedEnum)(b);
                var a$prime = fromEnum(dictBoundedEnum)(a);
                return Data_Functor.map(Data_Functor.functorArray)(function ($103) {
                    return Data_Maybe.fromJust()(toEnum(dictBoundedEnum)($103));
                })(intStepFromTo(b$prime - a$prime | 0)(a$prime)(c$prime));
            };
        };
    };
};
var enumEither = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new Enum(function () {
            return Data_Either.ordEither((dictBoundedEnum.Enum1()).Ord0())((dictBoundedEnum1.Enum1()).Ord0());
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($104) {
                    return Data_Maybe.Just.create(Data_Either.Left.create($104));
                })(pred(dictBoundedEnum.Enum1())(v.value0));
            };
            if (v instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum.Bounded0()))))(function ($105) {
                    return Data_Maybe.Just.create(Data_Either.Right.create($105));
                })(pred(dictBoundedEnum1.Enum1())(v.value0));
            };
            throw new Error("Failed pattern match at Data.Enum line 98, column 1 - line 98, column 75: " + [ v.constructor.name ]);
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1.Bounded0()))))(function ($106) {
                    return Data_Maybe.Just.create(Data_Either.Left.create($106));
                })(succ(dictBoundedEnum.Enum1())(v.value0));
            };
            if (v instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($107) {
                    return Data_Maybe.Just.create(Data_Either.Right.create($107));
                })(succ(dictBoundedEnum1.Enum1())(v.value0));
            };
            throw new Error("Failed pattern match at Data.Enum line 98, column 1 - line 98, column 75: " + [ v.constructor.name ]);
        });
    };
};
var enumBoolean = new Enum(function () {
    return Data_Ord.ordBoolean;
}, function (v) {
    if (v) {
        return new Data_Maybe.Just(false);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    if (!v) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
});
var diag = function (a) {
    return new Data_Tuple.Tuple(a, a);
};
var downFrom = function (dictEnum) {
    return function (dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($108) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(pred(dictEnum)($108));
        });
    };
};
var upFrom = function (dictEnum) {
    return function (dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($109) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(succ(dictEnum)($109));
        });
    };
};
var upFromIncluding = function (dictEnum) {
    return function (dictUnfoldable) {
        return function (x) {
            return new Data_NonEmpty.NonEmpty(x, upFrom(dictEnum)(dictUnfoldable)(x));
        };
    };
};
var defaultToEnum = function (dictBounded) {
    return function (dictEnum) {
        return function (n) {
            if (n < 0) {
                return Data_Maybe.Nothing.value;
            };
            if (n === 0) {
                return new Data_Maybe.Just(Data_Bounded.bottom(dictBounded));
            };
            if (Data_Boolean.otherwise) {
                return Control_Bind.bind(Data_Maybe.bindMaybe)(defaultToEnum(dictBounded)(dictEnum)(n - 1 | 0))(succ(dictEnum));
            };
            throw new Error("Failed pattern match at Data.Enum line 251, column 1 - line 251, column 65: " + [ n.constructor.name ]);
        };
    };
};
var defaultSucc = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
        };
    };
};
var defaultPred = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) - 1 | 0);
        };
    };
};
var defaultFromEnum = function (dictEnum) {
    return function ($110) {
        return Data_Maybe.maybe(0)(function (prd) {
            return defaultFromEnum(dictEnum)(prd) + 1 | 0;
        })(pred(dictEnum)($110));
    };
};
var defaultCardinality = function (dictBounded) {
    return function (dictEnum) {
        var defaultCardinality$prime = function (i) {
            return function ($111) {
                return Data_Maybe.maybe(i)(defaultCardinality$prime(i + 1 | 0))(succ(dictEnum)($111));
            };
        };
        return Cardinality(defaultCardinality$prime(1)(Data_Bounded.bottom(dictBounded)));
    };
};
var charToEnum = function (v) {
    if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
        return Data_Maybe.Just.create(Data_Char.fromCharCode(v));
    };
    return Data_Maybe.Nothing.value;
};
var enumChar = new Enum(function () {
    return Data_Ord.ordChar;
}, defaultPred(charToEnum)(Data_Char.toCharCode), defaultSucc(charToEnum)(Data_Char.toCharCode));
var cardinality = function (dict) {
    return dict.cardinality;
};
var boundedEnumUnit = new BoundedEnum(function () {
    return Data_Bounded.boundedUnit;
}, function () {
    return enumUnit;
}, 1, Data_Function["const"](0), function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Data_Unit.unit);
    };
    return Data_Maybe.Nothing.value;
});
var boundedEnumTuple = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new BoundedEnum(function () {
            return Data_Tuple.boundedTuple(dictBoundedEnum.Bounded0())(dictBoundedEnum1.Bounded0());
        }, function () {
            return enumTuple(dictBoundedEnum.Enum1())(dictBoundedEnum1);
        }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) * Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum1)) | 0), (function () {
            var from = function (v) {
                return function (v1) {
                    return (fromEnum(dictBoundedEnum)(v1.value0) * v | 0) + fromEnum(dictBoundedEnum1)(v1.value1) | 0;
                };
            };
            return from(cardinality(dictBoundedEnum1));
        })(), (function () {
            var to = function (v) {
                return function (n) {
                    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(dictBoundedEnum)(n / v | 0)))(toEnum(dictBoundedEnum1)(n % v));
                };
            };
            return to(cardinality(dictBoundedEnum1));
        })());
    };
};
var boundedEnumOrdering = new BoundedEnum(function () {
    return Data_Bounded.boundedOrdering;
}, function () {
    return enumOrdering;
}, 3, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return 0;
    };
    if (v instanceof Data_Ordering.EQ) {
        return 1;
    };
    if (v instanceof Data_Ordering.GT) {
        return 2;
    };
    throw new Error("Failed pattern match at Data.Enum line 200, column 1 - line 200, column 53: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    return Data_Maybe.Nothing.value;
});
var boundedEnumMaybe = function (dictBoundedEnum) {
    return new BoundedEnum(function () {
        return Data_Maybe.boundedMaybe(dictBoundedEnum.Bounded0());
    }, function () {
        return enumMaybe(dictBoundedEnum);
    }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) + 1 | 0), function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return 0;
        };
        if (v instanceof Data_Maybe.Just) {
            return fromEnum(dictBoundedEnum)(v.value0) + 1 | 0;
        };
        throw new Error("Failed pattern match at Data.Enum line 210, column 1 - line 210, column 68: " + [ v.constructor.name ]);
    }, function (v) {
        if (v === 0) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
        };
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(toEnum(dictBoundedEnum)(v - 1 | 0));
    });
};
var boundedEnumEither = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new BoundedEnum(function () {
            return Data_Either.boundedEither(dictBoundedEnum.Bounded0())(dictBoundedEnum1.Bounded0());
        }, function () {
            return enumEither(dictBoundedEnum)(dictBoundedEnum1);
        }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) + Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum1)) | 0), function (v) {
            if (v instanceof Data_Either.Left) {
                return fromEnum(dictBoundedEnum)(v.value0);
            };
            if (v instanceof Data_Either.Right) {
                return fromEnum(dictBoundedEnum1)(v.value0) + Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) | 0;
            };
            throw new Error("Failed pattern match at Data.Enum line 217, column 1 - line 217, column 89: " + [ v.constructor.name ]);
        }, function (n) {
            var to = function (v) {
                if (n >= 0 && n < v) {
                    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(dictBoundedEnum)(n));
                };
                if (Data_Boolean.otherwise) {
                    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(dictBoundedEnum1)(n - v | 0));
                };
                throw new Error("Failed pattern match at Data.Enum line 224, column 5 - line 224, column 46: " + [ v.constructor.name ]);
            };
            return to(cardinality(dictBoundedEnum));
        });
    };
};
var boundedEnumChar = new BoundedEnum(function () {
    return Data_Bounded.boundedChar;
}, function () {
    return enumChar;
}, Data_Char.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - Data_Char.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, Data_Char.toCharCode, charToEnum);
var boundedEnumBoolean = new BoundedEnum(function () {
    return Data_Bounded.boundedBoolean;
}, function () {
    return enumBoolean;
}, 2, function (v) {
    if (!v) {
        return 0;
    };
    if (v) {
        return 1;
    };
    throw new Error("Failed pattern match at Data.Enum line 181, column 1 - line 181, column 51: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(false);
    };
    if (v === 1) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
});
module.exports = {
    Enum: Enum,
    succ: succ,
    pred: pred,
    defaultSucc: defaultSucc,
    defaultPred: defaultPred,
    enumFromTo: enumFromTo,
    enumFromThenTo: enumFromThenTo,
    upFrom: upFrom,
    upFromIncluding: upFromIncluding,
    downFrom: downFrom,
    Cardinality: Cardinality,
    BoundedEnum: BoundedEnum,
    cardinality: cardinality,
    toEnum: toEnum,
    fromEnum: fromEnum,
    toEnumWithDefaults: toEnumWithDefaults,
    defaultCardinality: defaultCardinality,
    defaultToEnum: defaultToEnum,
    defaultFromEnum: defaultFromEnum,
    newtypeCardinality: newtypeCardinality,
    eqCardinality: eqCardinality,
    ordCardinality: ordCardinality,
    enumBoolean: enumBoolean,
    enumInt: enumInt,
    enumChar: enumChar,
    enumUnit: enumUnit,
    enumOrdering: enumOrdering,
    enumMaybe: enumMaybe,
    enumEither: enumEither,
    enumTuple: enumTuple,
    boundedEnumBoolean: boundedEnumBoolean,
    boundedEnumChar: boundedEnumChar,
    boundedEnumUnit: boundedEnumUnit,
    boundedEnumOrdering: boundedEnumOrdering,
    boundedEnumMaybe: boundedEnumMaybe,
    boundedEnumEither: boundedEnumEither,
    boundedEnumTuple: boundedEnumTuple
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.Char":97,"../Data.Either":108,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Data.Unit":220,"../Partial.Unsafe":253,"../Prelude":263}],110:[function(require,module,exports){
"use strict";

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

},{}],111:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Eq = function (eq) {
    this.eq = eq;
};
var Eq1 = function (eq1) {
    this.eq1 = eq1;
};
var eqVoid = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqUnit = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqString = new Eq($foreign.refEq);
var eqNumber = new Eq($foreign.refEq);
var eqInt = new Eq($foreign.refEq);
var eqChar = new Eq($foreign.refEq);
var eqBoolean = new Eq($foreign.refEq);
var eq1 = function (dict) {
    return dict.eq1;
};
var eq = function (dict) {
    return dict.eq;
};
var eqArray = function (dictEq) {
    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
};
var eq1Array = new Eq1(function (dictEq) {
    return eq(eqArray(dictEq));
});
var notEq = function (dictEq) {
    return function (x) {
        return function (y) {
            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
        };
    };
};
var notEq1 = function (dictEq1) {
    return function (dictEq) {
        return function (x) {
            return function (y) {
                return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
            };
        };
    };
};
module.exports = {
    Eq: Eq,
    eq: eq,
    notEq: notEq,
    Eq1: Eq1,
    eq1: eq1,
    notEq1: notEq1,
    eqBoolean: eqBoolean,
    eqInt: eqInt,
    eqNumber: eqNumber,
    eqChar: eqChar,
    eqString: eqString,
    eqUnit: eqUnit,
    eqVoid: eqVoid,
    eqArray: eqArray,
    eq1Array: eq1Array
};

},{"../Data.Unit":220,"../Data.Void":225,"./foreign":110}],112:[function(require,module,exports){
"use strict";

exports.intDegree = function (x) {
  return Math.min(Math.abs(x), 2147483647);
};

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

},{}],113:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
    this.CommutativeRing0 = CommutativeRing0;
    this.degree = degree;
    this.div = div;
    this.mod = mod;
};
var mod = function (dict) {
    return dict.mod;
};
var gcd = function ($copy_dictEq) {
    return function ($copy_dictEuclideanRing) {
        return function ($copy_a) {
            return function ($copy_b) {
                var $tco_var_dictEq = $copy_dictEq;
                var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                var $tco_var_a = $copy_a;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                    var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                    if ($7) {
                        $tco_done = true;
                        return a;
                    };
                    $tco_var_dictEq = dictEq;
                    $tco_var_dictEuclideanRing = dictEuclideanRing;
                    $tco_var_a = b;
                    $copy_b = mod(dictEuclideanRing)(a)(b);
                    return;
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                };
                return $tco_result;
            };
        };
    };
};
var euclideanRingNumber = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingNumber;
}, function (v) {
    return 1;
}, $foreign.numDiv, function (v) {
    return function (v1) {
        return 0.0;
    };
});
var euclideanRingInt = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingInt;
}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
var div = function (dict) {
    return dict.div;
};
var lcm = function (dictEq) {
    return function (dictEuclideanRing) {
        return function (a) {
            return function (b) {
                var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                if ($8) {
                    return Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0());
                };
                return div(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
            };
        };
    };
};
var degree = function (dict) {
    return dict.degree;
};
module.exports = {
    EuclideanRing: EuclideanRing,
    degree: degree,
    div: div,
    mod: mod,
    gcd: gcd,
    lcm: lcm,
    euclideanRingInt: euclideanRingInt,
    euclideanRingNumber: euclideanRingNumber
};

},{"../Data.BooleanAlgebra":91,"../Data.CommutativeRing":98,"../Data.Eq":111,"../Data.HeytingAlgebra":141,"../Data.Ring":181,"../Data.Semiring":187,"./foreign":112}],114:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_DivisionRing = require("../Data.DivisionRing");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Field = function (EuclideanRing0) {
    this.EuclideanRing0 = EuclideanRing0;
};
var fieldNumber = new Field(function () {
    return Data_EuclideanRing.euclideanRingNumber;
});
module.exports = {
    Field: Field,
    fieldNumber: fieldNumber
};

},{"../Data.CommutativeRing":98,"../Data.DivisionRing":107,"../Data.EuclideanRing":113,"../Data.Ring":181,"../Data.Semiring":187}],115:[function(require,module,exports){
"use strict";

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],116:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var indexr = function (dictFoldable) {
    return function (idx) {
        var go = function (a) {
            return function (cursor) {
                if (cursor.elem instanceof Data_Maybe.Just) {
                    return cursor;
                };
                var $106 = cursor.pos === idx;
                if ($106) {
                    return {
                        elem: new Data_Maybe.Just(a),
                        pos: cursor.pos
                    };
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        return function ($193) {
            return (function (v) {
                return v.elem;
            })(foldr(dictFoldable)(go)({
                elem: Data_Maybe.Nothing.value,
                pos: 0
            })($193));
        };
    };
};
var $$null = function (dictFoldable) {
    return foldr(dictFoldable)(function (v) {
        return function (v1) {
            return false;
        };
    })(true);
};
var oneOf = function (dictFoldable) {
    return function (dictPlus) {
        return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
    };
};
var oneOfMap = function (dictFoldable) {
    return function (dictPlus) {
        return function (f) {
            return foldr(dictFoldable)(function ($194) {
                return Control_Alt.alt(dictPlus.Alt0())(f($194));
            })(Control_Plus.empty(dictPlus));
        };
    };
};
var traverse_ = function (dictApplicative) {
    return function (dictFoldable) {
        return function (f) {
            return foldr(dictFoldable)(function ($195) {
                return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var for_ = function (dictApplicative) {
    return function (dictFoldable) {
        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
    };
};
var sequence_ = function (dictApplicative) {
    return function (dictFoldable) {
        return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var indexl = function (dictFoldable) {
    return function (idx) {
        var go = function (cursor) {
            return function (a) {
                if (cursor.elem instanceof Data_Maybe.Just) {
                    return cursor;
                };
                var $109 = cursor.pos === idx;
                if ($109) {
                    return {
                        elem: new Data_Maybe.Just(a),
                        pos: cursor.pos
                    };
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        return function ($196) {
            return (function (v) {
                return v.elem;
            })(foldl(dictFoldable)(go)({
                elem: Data_Maybe.Nothing.value,
                pos: 0
            })($196));
        };
    };
};
var intercalate = function (dictFoldable) {
    return function (dictMonoid) {
        return function (sep) {
            return function (xs) {
                var go = function (v) {
                    return function (x) {
                        if (v.init) {
                            return {
                                init: false,
                                acc: x
                            };
                        };
                        return {
                            init: false,
                            acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                        };
                    };
                };
                return (foldl(dictFoldable)(go)({
                    init: true,
                    acc: Data_Monoid.mempty(dictMonoid)
                })(xs)).acc;
            };
        };
    };
};
var length = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(function (c) {
            return function (v) {
                return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
            };
        })(Data_Semiring.zero(dictSemiring));
    };
};
var maximumBy = function (dictFoldable) {
    return function (cmp) {
        var max$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $116 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
                        if ($116) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 378, column 3 - line 378, column 27: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
    };
};
var maximum = function (dictOrd) {
    return function (dictFoldable) {
        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var minimumBy = function (dictFoldable) {
    return function (cmp) {
        var min$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $120 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
                        if ($120) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 391, column 3 - line 391, column 27: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
    };
};
var minimum = function (dictOrd) {
    return function (dictFoldable) {
        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var product = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
    };
};
var sum = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
    };
};
var foldableMultiplicative = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Data_Maybe.Just) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableDisj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableConj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldMapDefaultR = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return foldr(dictFoldable)(function (x) {
                return function (acc) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);
var foldMapDefaultL = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return foldl(dictFoldable)(function (acc) {
                return function (x) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldableLast = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldlDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($197) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c)($197)));
                })(xs)))(u);
            };
        };
    };
};
var foldrDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($198) {
                    return Data_Monoid_Endo.Endo(c($198));
                })(xs))(u);
            };
        };
    };
};
var surroundMap = function (dictFoldable) {
    return function (dictSemigroup) {
        return function (d) {
            return function (t) {
                return function (f) {
                    var joined = function (a) {
                        return function (m) {
                            return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
                        };
                    };
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(joined)(f))(d);
                };
            };
        };
    };
};
var surround = function (dictFoldable) {
    return function (dictSemigroup) {
        return function (d) {
            return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.id(Control_Category.categoryFn));
        };
    };
};
var foldM = function (dictFoldable) {
    return function (dictMonad) {
        return function (f) {
            return function (a0) {
                return foldl(dictFoldable)(function (ma) {
                    return function (b) {
                        return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f)(b));
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
            };
        };
    };
};
var fold = function (dictFoldable) {
    return function (dictMonoid) {
        return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
    };
};
var findMap = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return p(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var find = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing && p(v1)) {
                    return new Data_Maybe.Just(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var any = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
    };
};
var elem = function (dictFoldable) {
    return function (dictEq) {
        return function ($199) {
            return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($199));
        };
    };
};
var notElem = function (dictFoldable) {
    return function (dictEq) {
        return function (x) {
            return function ($200) {
                return !elem(dictFoldable)(dictEq)(x)($200);
            };
        };
    };
};
var or = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
    };
};
var all = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
    };
};
var and = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable,
    foldr: foldr,
    foldl: foldl,
    foldMap: foldMap,
    foldrDefault: foldrDefault,
    foldlDefault: foldlDefault,
    foldMapDefaultL: foldMapDefaultL,
    foldMapDefaultR: foldMapDefaultR,
    fold: fold,
    foldM: foldM,
    traverse_: traverse_,
    for_: for_,
    sequence_: sequence_,
    oneOf: oneOf,
    oneOfMap: oneOfMap,
    intercalate: intercalate,
    surroundMap: surroundMap,
    surround: surround,
    and: and,
    or: or,
    all: all,
    any: any,
    sum: sum,
    product: product,
    elem: elem,
    notElem: notElem,
    indexl: indexl,
    indexr: indexr,
    find: find,
    findMap: findMap,
    maximum: maximum,
    maximumBy: maximumBy,
    minimum: minimum,
    minimumBy: minimumBy,
    "null": $$null,
    length: length,
    foldableArray: foldableArray,
    foldableMaybe: foldableMaybe,
    foldableFirst: foldableFirst,
    foldableLast: foldableLast,
    foldableAdditive: foldableAdditive,
    foldableDual: foldableDual,
    foldableDisj: foldableDisj,
    foldableConj: foldableConj,
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Maybe.Last":155,"../Data.Monoid":169,"../Data.Monoid.Additive":163,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Endo":167,"../Data.Monoid.Multiplicative":168,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Unit":220,"../Prelude":263,"./foreign":115}],117:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
    this.Foldable0 = Foldable0;
    this.foldMapWithIndex = foldMapWithIndex;
    this.foldlWithIndex = foldlWithIndex;
    this.foldrWithIndex = foldrWithIndex;
};
var foldrWithIndex = function (dict) {
    return dict.foldrWithIndex;
};
var traverseWithIndex_ = function (dictApplicative) {
    return function (dictFoldableWithIndex) {
        return function (f) {
            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                return function ($41) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f(i)($41));
                };
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var forWithIndex_ = function (dictApplicative) {
    return function (dictFoldableWithIndex) {
        return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
    };
};
var foldlWithIndex = function (dict) {
    return dict.foldlWithIndex;
};
var foldableWithIndexMultiplicative = new FoldableWithIndex(function () {
    return Data_Foldable.foldableMultiplicative;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
});
var foldableWithIndexMaybe = new FoldableWithIndex(function () {
    return Data_Foldable.foldableMaybe;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
});
var foldableWithIndexLast = new FoldableWithIndex(function () {
    return Data_Foldable.foldableLast;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableLast)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableLast)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableLast)(f(Data_Unit.unit));
});
var foldableWithIndexFirst = new FoldableWithIndex(function () {
    return Data_Foldable.foldableFirst;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableFirst)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
});
var foldableWithIndexDual = new FoldableWithIndex(function () {
    return Data_Foldable.foldableDual;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDual)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDual)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDual)(f(Data_Unit.unit));
});
var foldableWithIndexDisj = new FoldableWithIndex(function () {
    return Data_Foldable.foldableDisj;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDisj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
});
var foldableWithIndexConj = new FoldableWithIndex(function () {
    return Data_Foldable.foldableConj;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableConj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableConj)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableConj)(f(Data_Unit.unit));
});
var foldableWithIndexAdditive = new FoldableWithIndex(function () {
    return Data_Foldable.foldableAdditive;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableAdditive)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
});
var foldWithIndexM = function (dictFoldableWithIndex) {
    return function (dictMonad) {
        return function (f) {
            return function (a0) {
                return foldlWithIndex(dictFoldableWithIndex)(function (i) {
                    return function (ma) {
                        return function (b) {
                            return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f(i))(b));
                        };
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
            };
        };
    };
};
var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
    return function (dictMonoid) {
        return function (f) {
            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                return function (x) {
                    return function (acc) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableWithIndexArray = new FoldableWithIndex(function () {
    return Data_Foldable.foldableArray;
}, function (dictMonoid) {
    return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
}, function (f) {
    return function (z) {
        return function ($42) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
                return function (v) {
                    return f(v.value0)(y)(v.value1);
                };
            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($42));
        };
    };
}, function (f) {
    return function (z) {
        return function ($43) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
                return function (y) {
                    return f(v.value0)(v.value1)(y);
                };
            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($43));
        };
    };
});
var foldMapWithIndexDefaultL = function (dictFoldableWithIndex) {
    return function (dictMonoid) {
        return function (f) {
            return foldlWithIndex(dictFoldableWithIndex)(function (i) {
                return function (acc) {
                    return function (x) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)(x));
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMapWithIndex = function (dict) {
    return dict.foldMapWithIndex;
};
var foldlWithIndexDefault = function (dictFoldableWithIndex) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function (i) {
                    return function ($44) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c(i))($44)));
                    };
                })(xs)))(u);
            };
        };
    };
};
var foldrWithIndexDefault = function (dictFoldableWithIndex) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo)(function (i) {
                    return function ($45) {
                        return Data_Monoid_Endo.Endo(c(i)($45));
                    };
                })(xs))(u);
            };
        };
    };
};
var surroundMapWithIndex = function (dictFoldableWithIndex) {
    return function (dictSemigroup) {
        return function (d) {
            return function (t) {
                return function (f) {
                    var joined = function (i) {
                        return function (a) {
                            return function (m) {
                                return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(i)(a))(m));
                            };
                        };
                    };
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo)(joined)(f))(d);
                };
            };
        };
    };
};
var findWithIndex = function (dictFoldableWithIndex) {
    return function (p) {
        var go = function (i) {
            return function (v) {
                return function (v1) {
                    if (v instanceof Data_Maybe.Nothing && p(i)(v1)) {
                        return new Data_Maybe.Just(v1);
                    };
                    return v;
                };
            };
        };
        return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
    };
};
var anyWithIndex = function (dictFoldableWithIndex) {
    return function (dictHeytingAlgebra) {
        return function (t) {
            return function ($46) {
                return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))(function (i) {
                    return function ($47) {
                        return Data_Monoid_Disj.Disj(t(i)($47));
                    };
                })($46));
            };
        };
    };
};
var allWithIndex = function (dictFoldableWithIndex) {
    return function (dictHeytingAlgebra) {
        return function (t) {
            return function ($48) {
                return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function (i) {
                    return function ($49) {
                        return Data_Monoid_Conj.Conj(t(i)($49));
                    };
                })($48));
            };
        };
    };
};
module.exports = {
    FoldableWithIndex: FoldableWithIndex,
    foldrWithIndex: foldrWithIndex,
    foldlWithIndex: foldlWithIndex,
    foldMapWithIndex: foldMapWithIndex,
    foldrWithIndexDefault: foldrWithIndexDefault,
    foldlWithIndexDefault: foldlWithIndexDefault,
    foldMapWithIndexDefaultR: foldMapWithIndexDefaultR,
    foldMapWithIndexDefaultL: foldMapWithIndexDefaultL,
    foldWithIndexM: foldWithIndexM,
    traverseWithIndex_: traverseWithIndex_,
    forWithIndex_: forWithIndex_,
    surroundMapWithIndex: surroundMapWithIndex,
    allWithIndex: allWithIndex,
    anyWithIndex: anyWithIndex,
    findWithIndex: findWithIndex,
    foldableWithIndexArray: foldableWithIndexArray,
    foldableWithIndexMaybe: foldableWithIndexMaybe,
    foldableWithIndexFirst: foldableWithIndexFirst,
    foldableWithIndexLast: foldableWithIndexLast,
    foldableWithIndexAdditive: foldableWithIndexAdditive,
    foldableWithIndexDual: foldableWithIndexDual,
    foldableWithIndexDisj: foldableWithIndexDisj,
    foldableWithIndexConj: foldableWithIndexConj,
    foldableWithIndexMultiplicative: foldableWithIndexMultiplicative
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Foldable":116,"../Data.Function":125,"../Data.FunctorWithIndex":132,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Maybe.Last":155,"../Data.Monoid":169,"../Data.Monoid.Additive":163,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Endo":167,"../Data.Monoid.Multiplicative":168,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Unit":220,"../Prelude":263}],118:[function(require,module,exports){
"use strict";

exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};

},{}],119:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Prelude = require("../Prelude");
var Index = function (errorAt, hasOwnProperty, hasProperty, index) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.index = index;
};
var Indexable = function (ix) {
    this.ix = ix;
};
var unsafeReadProp = function (k) {
    return function (value) {
        return $foreign.unsafeReadPropImpl(Data_Foreign.fail(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
    };
};
var readProp = unsafeReadProp;
var readIndex = unsafeReadProp;
var ix = function (dict) {
    return dict.ix;
};
var index = function (dict) {
    return dict.index;
};
var indexableExceptT = new Indexable(function (dictIndex) {
    return function (f) {
        return function (i) {
            return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Function.flip(index(dictIndex))(i))(f);
        };
    };
});
var indexableForeign = new Indexable(function (dictIndex) {
    return index(dictIndex);
});
var hasPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasProperty(v, value);
        };
        return false;
    };
};
var hasProperty = function (dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasOwnProperty(v, value);
        };
        return false;
    };
};
var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readIndex));
var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));
var hasOwnProperty = function (dict) {
    return dict.hasOwnProperty;
};
var errorAt = function (dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index,
    Indexable: Indexable,
    readProp: readProp,
    readIndex: readIndex,
    ix: ix,
    index: index,
    hasProperty: hasProperty,
    hasOwnProperty: hasOwnProperty,
    errorAt: errorAt,
    indexString: indexString,
    indexInt: indexInt,
    indexableForeign: indexableForeign,
    indexableExceptT: indexableExceptT
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Except.Trans":42,"../Data.Eq":111,"../Data.Foreign":121,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.List.NonEmpty":149,"../Prelude":263,"./foreign":118}],120:[function(require,module,exports){
"use strict";

exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

},{}],121:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Int = require("../Data.Int");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Prelude = require("../Prelude");
var ForeignError = (function () {
    function ForeignError(value0) {
        this.value0 = value0;
    };
    ForeignError.create = function (value0) {
        return new ForeignError(value0);
    };
    return ForeignError;
})();
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var JSONError = (function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
})();
var showForeignError = new Data_Show.Show(function (v) {
    if (v instanceof ForeignError) {
        return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof ErrorAtIndex) {
        return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof ErrorAtProperty) {
        return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof JSONError) {
        return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof TypeMismatch) {
        return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Data.Foreign line 64, column 1 - line 64, column 47: " + [ v.constructor.name ]);
});
var renderForeignError = function (v) {
    if (v instanceof ForeignError) {
        return v.value0;
    };
    if (v instanceof ErrorAtIndex) {
        return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof ErrorAtProperty) {
        return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof JSONError) {
        return "JSON error: " + v.value0;
    };
    if (v instanceof TypeMismatch) {
        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    };
    throw new Error("Failed pattern match at Data.Foreign line 74, column 1 - line 74, column 45: " + [ v.constructor.name ]);
};
var readUndefined = function (value) {
    if ($foreign.isUndefined(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 155, column 1 - line 155, column 46: " + [ value.constructor.name ]);
};
var readNullOrUndefined = function (value) {
    if ($foreign.isNull(value) || $foreign.isUndefined(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 160, column 1 - line 160, column 52: " + [ value.constructor.name ]);
};
var readNull = function (value) {
    if ($foreign.isNull(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 150, column 1 - line 150, column 41: " + [ value.constructor.name ]);
};
var fail = function ($121) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($121));
};
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    };
    if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch("array", $foreign.tagOf(value)));
    };
    throw new Error("Failed pattern match at Data.Foreign line 145, column 1 - line 145, column 42: " + [ value.constructor.name ]);
};
var unsafeReadTagged = function (tag) {
    return function (value) {
        if ($foreign.tagOf(value) === tag) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
        };
        if (Data_Boolean.otherwise) {
            return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
        };
        throw new Error("Failed pattern match at Data.Foreign line 104, column 1 - line 104, column 55: " + [ tag.constructor.name, value.constructor.name ]);
    };
};
var readBoolean = unsafeReadTagged("Boolean");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
    var fromNumber = function ($122) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($122));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
};
var readString = unsafeReadTagged("String");
var readChar = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));
    var fromString = function ($123) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String.toChar($123));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
};
var eqForeignError = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return x.value0 === y.value0;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            return x.value0 === y.value0 && x.value1 === y.value1;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var ordForeignError = new Data_Ord.Ord(function () {
    return eqForeignError;
}, function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof ForeignError) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ForeignError) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
        };
        if (x instanceof TypeMismatch) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TypeMismatch) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtIndex) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtIndex) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtProperty) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        throw new Error("Failed pattern match at Data.Foreign line 62, column 8 - line 62, column 52: " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    ForeignError: ForeignError,
    TypeMismatch: TypeMismatch,
    ErrorAtIndex: ErrorAtIndex,
    ErrorAtProperty: ErrorAtProperty,
    JSONError: JSONError,
    renderForeignError: renderForeignError,
    unsafeReadTagged: unsafeReadTagged,
    readString: readString,
    readChar: readChar,
    readBoolean: readBoolean,
    readNumber: readNumber,
    readInt: readInt,
    readArray: readArray,
    readNull: readNull,
    readUndefined: readUndefined,
    readNullOrUndefined: readNullOrUndefined,
    fail: fail,
    eqForeignError: eqForeignError,
    ordForeignError: ordForeignError,
    showForeignError: showForeignError,
    toForeign: $foreign.toForeign,
    unsafeFromForeign: $foreign.unsafeFromForeign,
    typeOf: $foreign.typeOf,
    tagOf: $foreign.tagOf,
    isNull: $foreign.isNull,
    isUndefined: $foreign.isUndefined,
    isArray: $foreign.isArray
};

},{"../Control.Applicative":4,"../Control.Monad.Error.Class":41,"../Control.Monad.Except":43,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Function":125,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.Int":146,"../Data.List.NonEmpty":149,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Prelude":263,"./foreign":120}],122:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Global = require("../Global");
var Prelude = require("../Prelude");
var FormURLEncoded = function (x) {
    return x;
};
var toArray = function (v) {
    return v;
};
var showFormUrlEncoded = Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(Data_Maybe.showMaybe(Data_Show.showString)));
var semigroupFormUrlEncoded = Data_Semigroup.semigroupArray;
var ordFormUrlEncoded = Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(Data_Maybe.ordMaybe(Data_Ord.ordString)));
var newtypeFormUrlEncoded = new Data_Newtype.Newtype(function (n) {
    return n;
}, FormURLEncoded);
var monoidFormUrlEncoded = Data_Monoid.monoidArray;
var genericFormUrlEncoded = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.FormURLEncoded.FormURLEncoded" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(FormURLEncoded))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.FormURLEncoded.FormURLEncoded", [ {
        sigConstructor: "Data.FormURLEncoded.FormURLEncoded",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.FormURLEncoded.FormURLEncoded", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(v);
    } ]);
});
var fromArray = FormURLEncoded;
var eqFormUrlEncoded = Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Maybe.eqMaybe(Data_Eq.eqString)));
var encode = (function () {
    var encodePart = function (v) {
        if (v.value1 instanceof Data_Maybe.Nothing) {
            return Global["encodeURIComponent"](v.value0);
        };
        if (v.value1 instanceof Data_Maybe.Just) {
            return Global["encodeURIComponent"](v.value0) + ("=" + Global["encodeURIComponent"](v.value1.value0));
        };
        throw new Error("Failed pattern match at Data.FormURLEncoded line 43, column 5 - line 43, column 56: " + [ v.constructor.name ]);
    };
    return function ($21) {
        return Data_String.joinWith("&")(Data_Functor.map(Data_Functor.functorArray)(encodePart)(toArray($21)));
    };
})();
module.exports = {
    FormURLEncoded: FormURLEncoded,
    fromArray: fromArray,
    toArray: toArray,
    encode: encode,
    genericFormUrlEncoded: genericFormUrlEncoded,
    newtypeFormUrlEncoded: newtypeFormUrlEncoded,
    eqFormUrlEncoded: eqFormUrlEncoded,
    ordFormUrlEncoded: ordFormUrlEncoded,
    showFormUrlEncoded: showFormUrlEncoded,
    semigroupFormUrlEncoded: semigroupFormUrlEncoded,
    monoidFormUrlEncoded: monoidFormUrlEncoded
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Functor":130,"../Data.Generic":138,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Data.Tuple":212,"../Data.Unit":220,"../Global":229,"../Prelude":263}],123:[function(require,module,exports){
"use strict";

// module Data.Function.Uncurried

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],124:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var runFn1 = function (f) {
    return f;
};
var mkFn1 = function (f) {
    return f;
};
module.exports = {
    mkFn1: mkFn1,
    runFn1: runFn1,
    mkFn0: $foreign.mkFn0,
    mkFn2: $foreign.mkFn2,
    mkFn3: $foreign.mkFn3,
    mkFn4: $foreign.mkFn4,
    mkFn5: $foreign.mkFn5,
    mkFn6: $foreign.mkFn6,
    mkFn7: $foreign.mkFn7,
    mkFn8: $foreign.mkFn8,
    mkFn9: $foreign.mkFn9,
    mkFn10: $foreign.mkFn10,
    runFn0: $foreign.runFn0,
    runFn2: $foreign.runFn2,
    runFn3: $foreign.runFn3,
    runFn4: $foreign.runFn4,
    runFn5: $foreign.runFn5,
    runFn6: $foreign.runFn6,
    runFn7: $foreign.runFn7,
    runFn8: $foreign.runFn8,
    runFn9: $foreign.runFn9,
    runFn10: $foreign.runFn10
};

},{"../Data.Unit":220,"./foreign":123}],125:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Boolean = require("../Data.Boolean");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var $$const = function (a) {
    return function (v) {
        return a;
    };
};
var applyN = function (f) {
    var go = function ($copy_n) {
        return function ($copy_acc) {
            var $tco_var_n = $copy_n;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(n, acc) {
                if (n <= 0) {
                    $tco_done = true;
                    return acc;
                };
                if (Data_Boolean.otherwise) {
                    $tco_var_n = n - 1 | 0;
                    $copy_acc = f(acc);
                    return;
                };
                throw new Error("Failed pattern match at Data.Function line 94, column 3 - line 96, column 37: " + [ n.constructor.name, acc.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_n, $copy_acc);
            };
            return $tco_result;
        };
    };
    return go;
};
var applyFlipped = function (x) {
    return function (f) {
        return f(x);
    };
};
var apply = function (f) {
    return function (x) {
        return f(x);
    };
};
module.exports = {
    flip: flip,
    "const": $$const,
    apply: apply,
    applyFlipped: applyFlipped,
    applyN: applyN,
    on: on
};

},{"../Control.Category":11,"../Data.Boolean":90,"../Data.Ord":178,"../Data.Ring":181}],126:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var App = function (x) {
    return x;
};
var traversableApp = function (dictTraversable) {
    return dictTraversable;
};
var showApp = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(App " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupApp = function (dictApply) {
    return function (dictSemigroup) {
        return new Data_Semigroup.Semigroup(function (v) {
            return function (v1) {
                return Control_Apply.lift2(dictApply)(Data_Semigroup.append(dictSemigroup))(v)(v1);
            };
        });
    };
};
var plusApp = function (dictPlus) {
    return dictPlus;
};
var newtypeApp = new Data_Newtype.Newtype(function (n) {
    return n;
}, App);
var monoidApp = function (dictApplicative) {
    return function (dictMonoid) {
        return new Data_Monoid.Monoid(function () {
            return semigroupApp(dictApplicative.Apply0())(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(dictApplicative)(Data_Monoid.mempty(dictMonoid)));
    };
};
var monadZeroApp = function (dictMonadZero) {
    return dictMonadZero;
};
var monadPlusApp = function (dictMonadPlus) {
    return dictMonadPlus;
};
var monadApp = function (dictMonad) {
    return dictMonad;
};
var lazyApp = function (dictLazy) {
    return dictLazy;
};
var hoistLowerApp = Unsafe_Coerce.unsafeCoerce;
var hoistLiftApp = Unsafe_Coerce.unsafeCoerce;
var hoistApp = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorApp = function (dictFunctor) {
    return dictFunctor;
};
var foldableApp = function (dictFoldable) {
    return dictFoldable;
};
var extendApp = function (dictExtend) {
    return dictExtend;
};
var eq1App = function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
        return function (v) {
            return function (v1) {
                return Data_Eq.eq1(dictEq1)(dictEq)(v)(v1);
            };
        };
    });
};
var eqApp = function (dictEq1) {
    return function (dictEq) {
        return new Data_Eq.Eq(Data_Eq.eq1(eq1App(dictEq1))(dictEq));
    };
};
var ord1App = function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
        return eq1App(dictOrd1.Eq10());
    }, function (dictOrd) {
        return function (v) {
            return function (v1) {
                return Data_Ord.compare1(dictOrd1)(dictOrd)(v)(v1);
            };
        };
    });
};
var ordApp = function (dictOrd1) {
    return function (dictOrd) {
        return new Data_Ord.Ord(function () {
            return eqApp(dictOrd1.Eq10())(dictOrd.Eq0());
        }, Data_Ord.compare1(ord1App(dictOrd1))(dictOrd));
    };
};
var comonadApp = function (dictComonad) {
    return dictComonad;
};
var bindApp = function (dictBind) {
    return dictBind;
};
var applyApp = function (dictApply) {
    return dictApply;
};
var applicativeApp = function (dictApplicative) {
    return dictApplicative;
};
var alternativeApp = function (dictAlternative) {
    return dictAlternative;
};
var altApp = function (dictAlt) {
    return dictAlt;
};
module.exports = {
    App: App,
    hoistApp: hoistApp,
    hoistLiftApp: hoistLiftApp,
    hoistLowerApp: hoistLowerApp,
    newtypeApp: newtypeApp,
    eqApp: eqApp,
    eq1App: eq1App,
    ordApp: ordApp,
    ord1App: ord1App,
    showApp: showApp,
    semigroupApp: semigroupApp,
    monoidApp: monoidApp,
    functorApp: functorApp,
    applyApp: applyApp,
    applicativeApp: applicativeApp,
    bindApp: bindApp,
    monadApp: monadApp,
    altApp: altApp,
    plusApp: plusApp,
    alternativeApp: alternativeApp,
    monadZeroApp: monadZeroApp,
    monadPlusApp: monadPlusApp,
    lazyApp: lazyApp,
    foldableApp: foldableApp,
    traversableApp: traversableApp,
    extendApp: extendApp,
    comonadApp: comonadApp
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Lazy":15,"../Control.Monad":54,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Traversable":209,"../Prelude":263,"../Unsafe.Coerce":281}],127:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_App = require("../Data.Functor.App");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Compose = function (x) {
    return x;
};
var showCompose = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Compose " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var newtypeCompose = new Data_Newtype.Newtype(function (n) {
    return n;
}, Compose);
var functorCompose = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Data_Functor.Functor(function (f) {
            return function (v) {
                return Compose(Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v));
            };
        });
    };
};
var foldableCompose = function (dictFoldable) {
    return function (dictFoldable1) {
        return new Data_Foldable.Foldable(function (dictMonoid) {
            return function (f) {
                return function (v) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f))(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_Foldable.foldl(dictFoldable)(Data_Foldable.foldl(dictFoldable1)(f))(i)(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(Data_Foldable.foldr(dictFoldable1)(f)))(i)(v);
                };
            };
        });
    };
};
var traversableCompose = function (dictTraversable) {
    return function (dictTraversable1) {
        return new Data_Traversable.Traversable(function () {
            return foldableCompose(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
        }, function () {
            return functorCompose(dictTraversable.Functor0())(dictTraversable1.Functor0());
        }, function (dictApplicative) {
            return Data_Traversable.traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
        }, function (dictApplicative) {
            return function (f) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Compose)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f))(v));
                };
            };
        });
    };
};
var eq1Compose = function (dictEq1) {
    return function (dictEq11) {
        return new Data_Eq.Eq1(function (dictEq) {
            return function (v) {
                return function (v1) {
                    return Data_Eq.eq1(dictEq1)(Data_Functor_App.eqApp(dictEq11)(dictEq))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
                };
            };
        });
    };
};
var eqCompose = function (dictEq1) {
    return function (dictEq11) {
        return function (dictEq) {
            return new Data_Eq.Eq(Data_Eq.eq1(eq1Compose(dictEq1)(dictEq11))(dictEq));
        };
    };
};
var ord1Compose = function (dictOrd1) {
    return function (dictOrd11) {
        return new Data_Ord.Ord1(function () {
            return eq1Compose(dictOrd1.Eq10())(dictOrd11.Eq10());
        }, function (dictOrd) {
            return function (v) {
                return function (v1) {
                    return Data_Ord.compare1(dictOrd1)(Data_Functor_App.ordApp(dictOrd11)(dictOrd))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
                };
            };
        });
    };
};
var ordCompose = function (dictOrd1) {
    return function (dictOrd11) {
        return function (dictOrd) {
            return new Data_Ord.Ord(function () {
                return eqCompose(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
            }, Data_Ord.compare1(ord1Compose(dictOrd1)(dictOrd11))(dictOrd));
        };
    };
};
var bihoistCompose = function (dictFunctor) {
    return function (natF) {
        return function (natG) {
            return function (v) {
                return natF(Data_Functor.map(dictFunctor)(natG)(v));
            };
        };
    };
};
var applyCompose = function (dictApply) {
    return function (dictApply1) {
        return new Control_Apply.Apply(function () {
            return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
        }, function (v) {
            return function (v1) {
                return Compose(Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1));
            };
        });
    };
};
var applicativeCompose = function (dictApplicative) {
    return function (dictApplicative1) {
        return new Control_Applicative.Applicative(function () {
            return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
        }, function ($75) {
            return Compose(Control_Applicative.pure(dictApplicative)(Control_Applicative.pure(dictApplicative1)($75)));
        });
    };
};
var altCompose = function (dictAlt) {
    return function (dictFunctor) {
        return new Control_Alt.Alt(function () {
            return functorCompose(dictAlt.Functor0())(dictFunctor);
        }, function (v) {
            return function (v1) {
                return Compose(Control_Alt.alt(dictAlt)(v)(v1));
            };
        });
    };
};
var plusCompose = function (dictPlus) {
    return function (dictFunctor) {
        return new Control_Plus.Plus(function () {
            return altCompose(dictPlus.Alt0())(dictFunctor);
        }, Control_Plus.empty(dictPlus));
    };
};
var alternativeCompose = function (dictAlternative) {
    return function (dictApplicative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeCompose(dictAlternative.Applicative0())(dictApplicative);
        }, function () {
            return plusCompose(dictAlternative.Plus1())((dictApplicative.Apply0()).Functor0());
        });
    };
};
module.exports = {
    Compose: Compose,
    bihoistCompose: bihoistCompose,
    newtypeCompose: newtypeCompose,
    eq1Compose: eq1Compose,
    eqCompose: eqCompose,
    ord1Compose: ord1Compose,
    ordCompose: ordCompose,
    showCompose: showCompose,
    functorCompose: functorCompose,
    applyCompose: applyCompose,
    applicativeCompose: applicativeCompose,
    foldableCompose: foldableCompose,
    traversableCompose: traversableCompose,
    altCompose: altCompose,
    plusCompose: plusCompose,
    alternativeCompose: alternativeCompose
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Functor.App":126,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Traversable":209,"../Prelude":263}],128:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Functor = require("../Data.Functor");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(f);
        };
    };
};
var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
var invariantFn = new Invariant(imapF(Data_Functor.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    imap: imap,
    Invariant: Invariant,
    imapF: imapF,
    invariantFn: invariantFn,
    invariantArray: invariantArray
};

},{"../Data.Functor":130}],129:[function(require,module,exports){
"use strict";

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

},{}],130:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Unit = require("../Data.Unit");
var Functor = function (map) {
    this.map = map;
};
var map = function (dict) {
    return dict.map;
};
var mapFlipped = function (dictFunctor) {
    return function (fa) {
        return function (f) {
            return map(dictFunctor)(f)(fa);
        };
    };
};
var $$void = function (dictFunctor) {
    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};
var voidLeft = function (dictFunctor) {
    return function (f) {
        return function (x) {
            return map(dictFunctor)(Data_Function["const"](x))(f);
        };
    };
};
var voidRight = function (dictFunctor) {
    return function (x) {
        return map(dictFunctor)(Data_Function["const"](x));
    };
};
var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var functorArray = new Functor($foreign.arrayMap);
var flap = function (dictFunctor) {
    return function (ff) {
        return function (x) {
            return map(dictFunctor)(function (f) {
                return f(x);
            })(ff);
        };
    };
};
module.exports = {
    Functor: Functor,
    map: map,
    mapFlipped: mapFlipped,
    "void": $$void,
    voidRight: voidRight,
    voidLeft: voidLeft,
    flap: flap,
    functorFn: functorFn,
    functorArray: functorArray
};

},{"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Unit":220,"./foreign":129}],131:[function(require,module,exports){
"use strict";

exports.mapWithIndexArray = function (f) {
  return function (xs) {
    var l = xs.length;
    var result = Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(i)(xs[i]);
    }
    return result;
  };
};

},{}],132:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var FunctorWithIndex = function (Functor0, mapWithIndex) {
    this.Functor0 = Functor0;
    this.mapWithIndex = mapWithIndex;
};
var mapWithIndex = function (dict) {
    return dict.mapWithIndex;
};
var functorWithIndexMultiplicative = new FunctorWithIndex(function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative)(f(Data_Unit.unit));
});
var functorWithIndexMaybe = new FunctorWithIndex(function () {
    return Data_Maybe.functorMaybe;
}, function (f) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(f(Data_Unit.unit));
});
var functorWithIndexLast = new FunctorWithIndex(function () {
    return Data_Maybe_Last.functorLast;
}, function (f) {
    return Data_Functor.map(Data_Maybe_Last.functorLast)(f(Data_Unit.unit));
});
var functorWithIndexFirst = new FunctorWithIndex(function () {
    return Data_Maybe_First.functorFirst;
}, function (f) {
    return Data_Functor.map(Data_Maybe_First.functorFirst)(f(Data_Unit.unit));
});
var functorWithIndexDual = new FunctorWithIndex(function () {
    return Data_Monoid_Dual.functorDual;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Dual.functorDual)(f(Data_Unit.unit));
});
var functorWithIndexDisj = new FunctorWithIndex(function () {
    return Data_Monoid_Disj.functorDisj;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Disj.functorDisj)(f(Data_Unit.unit));
});
var functorWithIndexConj = new FunctorWithIndex(function () {
    return Data_Monoid_Conj.functorConj;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Conj.functorConj)(f(Data_Unit.unit));
});
var functorWithIndexArray = new FunctorWithIndex(function () {
    return Data_Functor.functorArray;
}, $foreign.mapWithIndexArray);
var functorWithIndexAdditive = new FunctorWithIndex(function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Additive.functorAdditive)(f(Data_Unit.unit));
});
module.exports = {
    FunctorWithIndex: FunctorWithIndex,
    mapWithIndex: mapWithIndex,
    functorWithIndexArray: functorWithIndexArray,
    functorWithIndexMaybe: functorWithIndexMaybe,
    functorWithIndexFirst: functorWithIndexFirst,
    functorWithIndexLast: functorWithIndexLast,
    functorWithIndexAdditive: functorWithIndexAdditive,
    functorWithIndexDual: functorWithIndexDual,
    functorWithIndexConj: functorWithIndexConj,
    functorWithIndexDisj: functorWithIndexDisj,
    functorWithIndexMultiplicative: functorWithIndexMultiplicative
};

},{"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Maybe.Last":155,"../Data.Monoid.Additive":163,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Multiplicative":168,"../Data.Unit":220,"../Prelude":263,"./foreign":131}],133:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Prelude = require("../Prelude");
var GenericEq = function (genericEq$prime) {
    this["genericEq'"] = genericEq$prime;
};
var genericEqNoConstructors = new GenericEq(function (v) {
    return function (v1) {
        return true;
    };
});
var genericEqNoArguments = new GenericEq(function (v) {
    return function (v1) {
        return true;
    };
});
var genericEqField = function (dictEq) {
    return new GenericEq(function (v) {
        return function (v1) {
            return Data_Eq.eq(dictEq)(v)(v1);
        };
    });
};
var genericEqArgument = function (dictEq) {
    return new GenericEq(function (v) {
        return function (v1) {
            return Data_Eq.eq(dictEq)(v)(v1);
        };
    });
};
var genericEq$prime = function (dict) {
    return dict["genericEq'"];
};
var genericEqConstructor = function (dictGenericEq) {
    return new GenericEq(function (v) {
        return function (v1) {
            return genericEq$prime(dictGenericEq)(v)(v1);
        };
    });
};
var genericEqProduct = function (dictGenericEq) {
    return function (dictGenericEq1) {
        return new GenericEq(function (v) {
            return function (v1) {
                return genericEq$prime(dictGenericEq)(v.value0)(v1.value0) && genericEq$prime(dictGenericEq1)(v.value1)(v1.value1);
            };
        });
    };
};
var genericEqRec = function (dictGenericEq) {
    return new GenericEq(function (v) {
        return function (v1) {
            return genericEq$prime(dictGenericEq)(v)(v1);
        };
    });
};
var genericEqSum = function (dictGenericEq) {
    return function (dictGenericEq1) {
        return new GenericEq(function (v) {
            return function (v1) {
                if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                    return genericEq$prime(dictGenericEq)(v.value0)(v1.value0);
                };
                if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                    return genericEq$prime(dictGenericEq1)(v.value0)(v1.value0);
                };
                return false;
            };
        });
    };
};
var genericEq = function (dictGeneric) {
    return function (dictGenericEq) {
        return function (x) {
            return function (y) {
                return genericEq$prime(dictGenericEq)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
            };
        };
    };
};
module.exports = {
    GenericEq: GenericEq,
    "genericEq'": genericEq$prime,
    genericEq: genericEq,
    genericEqNoConstructors: genericEqNoConstructors,
    genericEqNoArguments: genericEqNoArguments,
    genericEqSum: genericEqSum,
    genericEqProduct: genericEqProduct,
    genericEqConstructor: genericEqConstructor,
    genericEqArgument: genericEqArgument,
    genericEqRec: genericEqRec,
    genericEqField: genericEqField
};

},{"../Data.Eq":111,"../Data.Generic.Rep":136,"../Data.HeytingAlgebra":141,"../Prelude":263}],134:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Prelude = require("../Prelude");
var GenericOrd = function (genericCompare$prime) {
    this["genericCompare'"] = genericCompare$prime;
};
var genericOrdNoConstructors = new GenericOrd(function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var genericOrdNoArguments = new GenericOrd(function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var genericOrdField = function (dictOrd) {
    return new GenericOrd(function (v) {
        return function (v1) {
            return Data_Ord.compare(dictOrd)(v)(v1);
        };
    });
};
var genericOrdArgument = function (dictOrd) {
    return new GenericOrd(function (v) {
        return function (v1) {
            return Data_Ord.compare(dictOrd)(v)(v1);
        };
    });
};
var genericCompare$prime = function (dict) {
    return dict["genericCompare'"];
};
var genericOrdConstructor = function (dictGenericOrd) {
    return new GenericOrd(function (v) {
        return function (v1) {
            return genericCompare$prime(dictGenericOrd)(v)(v1);
        };
    });
};
var genericOrdProduct = function (dictGenericOrd) {
    return function (dictGenericOrd1) {
        return new GenericOrd(function (v) {
            return function (v1) {
                var v2 = genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                if (v2 instanceof Data_Ordering.EQ) {
                    return genericCompare$prime(dictGenericOrd1)(v.value1)(v1.value1);
                };
                return v2;
            };
        });
    };
};
var genericOrdRec = function (dictGenericOrd) {
    return new GenericOrd(function (v) {
        return function (v1) {
            return genericCompare$prime(dictGenericOrd)(v)(v1);
        };
    });
};
var genericOrdSum = function (dictGenericOrd) {
    return function (dictGenericOrd1) {
        return new GenericOrd(function (v) {
            return function (v1) {
                if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                    return genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                };
                if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                    return genericCompare$prime(dictGenericOrd1)(v.value0)(v1.value0);
                };
                if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inr) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inl) {
                    return Data_Ordering.GT.value;
                };
                throw new Error("Failed pattern match at Data.Generic.Rep.Ord line 19, column 1 - line 19, column 79: " + [ v.constructor.name, v1.constructor.name ]);
            };
        });
    };
};
var genericCompare = function (dictGeneric) {
    return function (dictGenericOrd) {
        return function (x) {
            return function (y) {
                return genericCompare$prime(dictGenericOrd)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
            };
        };
    };
};
module.exports = {
    GenericOrd: GenericOrd,
    "genericCompare'": genericCompare$prime,
    genericCompare: genericCompare,
    genericOrdNoConstructors: genericOrdNoConstructors,
    genericOrdNoArguments: genericOrdNoArguments,
    genericOrdSum: genericOrdSum,
    genericOrdProduct: genericOrdProduct,
    genericOrdConstructor: genericOrdConstructor,
    genericOrdArgument: genericOrdArgument,
    genericOrdRec: genericOrdRec,
    genericOrdField: genericOrdField
};

},{"../Data.Generic.Rep":136,"../Data.Ord":178,"../Data.Ordering":179,"../Prelude":263}],135:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Foldable = require("../Data.Foldable");
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Symbol = require("../Data.Symbol");
var Prelude = require("../Prelude");
var GenericShow = function (genericShow$prime) {
    this["genericShow'"] = genericShow$prime;
};
var GenericShowArgs = function (genericShowArgs) {
    this.genericShowArgs = genericShowArgs;
};
var GenericShowFields = function (genericShowFields) {
    this.genericShowFields = genericShowFields;
};
var genericShowFieldsNoArguments = new GenericShowFields(function (v) {
    return [  ];
});
var genericShowFieldsField = function (dictShow) {
    return function (dictIsSymbol) {
        return new GenericShowFields(function (v) {
            return [ Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value) + (": " + Data_Show.show(dictShow)(v)) ];
        });
    };
};
var genericShowFields = function (dict) {
    return dict.genericShowFields;
};
var genericShowFieldsProduct = function (dictGenericShowFields) {
    return function (dictGenericShowFields1) {
        return new GenericShowFields(function (v) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowFields(dictGenericShowFields)(v.value0))(genericShowFields(dictGenericShowFields1)(v.value1));
        });
    };
};
var genericShowArgsRec = function (dictGenericShowFields) {
    return new GenericShowArgs(function (v) {
        return [ "{ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(genericShowFields(dictGenericShowFields)(v)) + " }") ];
    });
};
var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
    return [  ];
});
var genericShowArgsArgument = function (dictShow) {
    return new GenericShowArgs(function (v) {
        return [ Data_Show.show(dictShow)(v) ];
    });
};
var genericShowArgs = function (dict) {
    return dict.genericShowArgs;
};
var genericShowArgsProduct = function (dictGenericShowArgs) {
    return function (dictGenericShowArgs1) {
        return new GenericShowArgs(function (v) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowArgs(dictGenericShowArgs)(v.value0))(genericShowArgs(dictGenericShowArgs1)(v.value1));
        });
    };
};
var genericShowConstructor = function (dictGenericShowArgs) {
    return function (dictIsSymbol) {
        return new GenericShow(function (v) {
            var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var v1 = genericShowArgs(dictGenericShowArgs)(v);
            if (v1.length === 0) {
                return ctor;
            };
            return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
        });
    };
};
var genericShow$prime = function (dict) {
    return dict["genericShow'"];
};
var genericShowNoConstructors = new GenericShow(function (a) {
    return genericShow$prime(genericShowNoConstructors)(a);
});
var genericShowSum = function (dictGenericShow) {
    return function (dictGenericShow1) {
        return new GenericShow(function (v) {
            if (v instanceof Data_Generic_Rep.Inl) {
                return genericShow$prime(dictGenericShow)(v.value0);
            };
            if (v instanceof Data_Generic_Rep.Inr) {
                return genericShow$prime(dictGenericShow1)(v.value0);
            };
            throw new Error("Failed pattern match at Data.Generic.Rep.Show line 31, column 1 - line 31, column 83: " + [ v.constructor.name ]);
        });
    };
};
var genericShow = function (dictGeneric) {
    return function (dictGenericShow) {
        return function (x) {
            return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
        };
    };
};
module.exports = {
    GenericShow: GenericShow,
    "genericShow'": genericShow$prime,
    genericShow: genericShow,
    GenericShowArgs: GenericShowArgs,
    genericShowArgs: genericShowArgs,
    GenericShowFields: GenericShowFields,
    genericShowFields: genericShowFields,
    genericShowNoConstructors: genericShowNoConstructors,
    genericShowArgsNoArguments: genericShowArgsNoArguments,
    genericShowSum: genericShowSum,
    genericShowArgsProduct: genericShowArgsProduct,
    genericShowFieldsProduct: genericShowFieldsProduct,
    genericShowConstructor: genericShowConstructor,
    genericShowArgsArgument: genericShowArgsArgument,
    genericShowArgsRec: genericShowArgsRec,
    genericShowFieldsField: genericShowFieldsField,
    genericShowFieldsNoArguments: genericShowFieldsNoArguments
};

},{"../Data.Foldable":116,"../Data.Generic.Rep":136,"../Data.Monoid":169,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Symbol":202,"../Prelude":263}],136:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Maybe = require("../Data.Maybe");
var Inl = (function () {
    function Inl(value0) {
        this.value0 = value0;
    };
    Inl.create = function (value0) {
        return new Inl(value0);
    };
    return Inl;
})();
var Inr = (function () {
    function Inr(value0) {
        this.value0 = value0;
    };
    Inr.create = function (value0) {
        return new Inr(value0);
    };
    return Inr;
})();
var Rec = function (x) {
    return x;
};
var Product = (function () {
    function Product(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Product.create = function (value0) {
        return function (value1) {
            return new Product(value0, value1);
        };
    };
    return Product;
})();
var NoArguments = (function () {
    function NoArguments() {

    };
    NoArguments.value = new NoArguments();
    return NoArguments;
})();
var Field = function (x) {
    return x;
};
var Constructor = function (x) {
    return x;
};
var Argument = function (x) {
    return x;
};
var Generic = function (from, to) {
    this.from = from;
    this.to = to;
};
var to = function (dict) {
    return dict.to;
};
var genericMaybe = new Generic(function (v) {
    if (v instanceof Data_Maybe.Nothing) {
        return new Inl(NoArguments.value);
    };
    if (v instanceof Data_Maybe.Just) {
        return new Inr(v.value0);
    };
    throw new Error("Failed pattern match at Data.Generic.Rep line 49, column 1 - line 51, column 63: " + [ v.constructor.name ]);
}, function (v) {
    if (v instanceof Inl) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Inr) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.Generic.Rep line 49, column 1 - line 51, column 63: " + [ v.constructor.name ]);
});
var from = function (dict) {
    return dict.from;
};
module.exports = {
    Generic: Generic,
    to: to,
    from: from,
    NoArguments: NoArguments,
    Inl: Inl,
    Inr: Inr,
    Product: Product,
    Constructor: Constructor,
    Argument: Argument,
    Rec: Rec,
    Field: Field,
    genericMaybe: genericMaybe
};

},{"../Data.Maybe":156}],137:[function(require,module,exports){
"use strict";

// module Data.Generic

exports.zipAll = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      for (var i = 0; i < l; i++) {
        if (!f(xs[i])(ys[i])) {
          return false;
        }
      }
      return true;
    };
  };
};

exports.zipCompare = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var o = f(xs[i])(ys[i]);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

},{}],138:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Prelude = require("../Prelude");
var Type_Proxy = require("../Type.Proxy");
var SProd = (function () {
    function SProd(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SProd.create = function (value0) {
        return function (value1) {
            return new SProd(value0, value1);
        };
    };
    return SProd;
})();
var SRecord = (function () {
    function SRecord(value0) {
        this.value0 = value0;
    };
    SRecord.create = function (value0) {
        return new SRecord(value0);
    };
    return SRecord;
})();
var SNumber = (function () {
    function SNumber(value0) {
        this.value0 = value0;
    };
    SNumber.create = function (value0) {
        return new SNumber(value0);
    };
    return SNumber;
})();
var SBoolean = (function () {
    function SBoolean(value0) {
        this.value0 = value0;
    };
    SBoolean.create = function (value0) {
        return new SBoolean(value0);
    };
    return SBoolean;
})();
var SInt = (function () {
    function SInt(value0) {
        this.value0 = value0;
    };
    SInt.create = function (value0) {
        return new SInt(value0);
    };
    return SInt;
})();
var SString = (function () {
    function SString(value0) {
        this.value0 = value0;
    };
    SString.create = function (value0) {
        return new SString(value0);
    };
    return SString;
})();
var SChar = (function () {
    function SChar(value0) {
        this.value0 = value0;
    };
    SChar.create = function (value0) {
        return new SChar(value0);
    };
    return SChar;
})();
var SArray = (function () {
    function SArray(value0) {
        this.value0 = value0;
    };
    SArray.create = function (value0) {
        return new SArray(value0);
    };
    return SArray;
})();
var SUnit = (function () {
    function SUnit() {

    };
    SUnit.value = new SUnit();
    return SUnit;
})();
var SigProd = (function () {
    function SigProd(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SigProd.create = function (value0) {
        return function (value1) {
            return new SigProd(value0, value1);
        };
    };
    return SigProd;
})();
var SigRecord = (function () {
    function SigRecord(value0) {
        this.value0 = value0;
    };
    SigRecord.create = function (value0) {
        return new SigRecord(value0);
    };
    return SigRecord;
})();
var SigNumber = (function () {
    function SigNumber() {

    };
    SigNumber.value = new SigNumber();
    return SigNumber;
})();
var SigBoolean = (function () {
    function SigBoolean() {

    };
    SigBoolean.value = new SigBoolean();
    return SigBoolean;
})();
var SigInt = (function () {
    function SigInt() {

    };
    SigInt.value = new SigInt();
    return SigInt;
})();
var SigString = (function () {
    function SigString() {

    };
    SigString.value = new SigString();
    return SigString;
})();
var SigChar = (function () {
    function SigChar() {

    };
    SigChar.value = new SigChar();
    return SigChar;
})();
var SigArray = (function () {
    function SigArray(value0) {
        this.value0 = value0;
    };
    SigArray.create = function (value0) {
        return new SigArray(value0);
    };
    return SigArray;
})();
var SigUnit = (function () {
    function SigUnit() {

    };
    SigUnit.value = new SigUnit();
    return SigUnit;
})();
var Generic = function (fromSpine, toSignature, toSpine) {
    this.fromSpine = fromSpine;
    this.toSignature = toSignature;
    this.toSpine = toSpine;
};
var toSpine = function (dict) {
    return dict.toSpine;
};
var toSignature = function (dict) {
    return dict.toSignature;
};
var showSuspended = function (dictShow) {
    return function (e) {
        return "\\_ -> " + Data_Show.show(dictShow)(e(Data_Unit.unit));
    };
};
var showArray = function (v) {
    return function (v1) {
        if (v1.length === 0) {
            return "[]";
        };
        return "[ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(v)(v1)) + " ]");
    };
};
var showGenericSpine = new Data_Show.Show(function (v) {
    if (v instanceof SUnit) {
        return "SUnit";
    };
    if (v instanceof SChar) {
        return "SChar " + Data_Show.show(Data_Show.showChar)(v.value0);
    };
    if (v instanceof SString) {
        return "SString " + Data_Show.show(Data_Show.showString)(v.value0);
    };
    if (v instanceof SBoolean) {
        return "SBoolean " + Data_Show.show(Data_Show.showBoolean)(v.value0);
    };
    if (v instanceof SNumber) {
        return "SNumber " + Data_Show.show(Data_Show.showNumber)(v.value0);
    };
    if (v instanceof SInt) {
        return "SInt " + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof SArray) {
        return "SArray " + showArray(showSuspended(showGenericSpine))(v.value0);
    };
    if (v instanceof SProd) {
        return "SProd " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + showArray(showSuspended(showGenericSpine))(v.value1)));
    };
    if (v instanceof SRecord) {
        var showElt = function (v1) {
            return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ "{ recLabel: ", Data_Show.show(Data_Show.showString)(v1.recLabel), ", recValue: ", showSuspended(showGenericSpine)(v1.recValue), " }" ]);
        };
        return "SRecord " + showArray(showElt)(v.value0);
    };
    throw new Error("Failed pattern match at Data.Generic line 270, column 1 - line 270, column 47: " + [ v.constructor.name ]);
});
var orderingToInt = function (v) {
    if (v instanceof Data_Ordering.EQ) {
        return 0;
    };
    if (v instanceof Data_Ordering.LT) {
        return 1;
    };
    if (v instanceof Data_Ordering.GT) {
        return -1 | 0;
    };
    throw new Error("Failed pattern match at Data.Generic line 538, column 17 - line 541, column 10: " + [ v.constructor.name ]);
};
var genericVoid = new Generic(function (v) {
    return Data_Maybe.Nothing.value;
}, function (v) {
    return new SigProd("Data.Void.Void", [  ]);
}, Data_Void.absurd);
var genericUnit = new Generic(function (v) {
    if (v instanceof SUnit) {
        return new Data_Maybe.Just(Data_Unit.unit);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigUnit.value;
}, function (v) {
    return SUnit.value;
});
var genericString = new Generic(function (v) {
    if (v instanceof SString) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigString.value;
}, SString.create);
var genericOrdering = new Generic(function (v) {
    if (v instanceof SProd && (v.value0 === "Data.Ordering.LT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v instanceof SProd && (v.value0 === "Data.Ordering.EQ" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v instanceof SProd && (v.value0 === "Data.Ordering.GT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return new SigProd("Data.Ordering.Ordering", [ {
        sigConstructor: "Data.Ordering.LT",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Ordering.EQ",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Ordering.GT",
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return new SProd("Data.Ordering.LT", [  ]);
    };
    if (v instanceof Data_Ordering.EQ) {
        return new SProd("Data.Ordering.EQ", [  ]);
    };
    if (v instanceof Data_Ordering.GT) {
        return new SProd("Data.Ordering.GT", [  ]);
    };
    throw new Error("Failed pattern match at Data.Generic line 218, column 13 - line 221, column 38: " + [ v.constructor.name ]);
});
var genericNumber = new Generic(function (v) {
    if (v instanceof SNumber) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigNumber.value;
}, SNumber.create);
var genericInt = new Generic(function (v) {
    if (v instanceof SInt) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigInt.value;
}, SInt.create);
var genericChar = new Generic(function (v) {
    if (v instanceof SChar) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigChar.value;
}, SChar.create);
var genericBool = new Generic(function (v) {
    if (v instanceof SBoolean) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigBoolean.value;
}, SBoolean.create);
var fromSpine = function (dict) {
    return dict.fromSpine;
};
var force = function (f) {
    return f(Data_Unit.unit);
};
var genericArray = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SArray) {
            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function ($310) {
                return fromSpine(dictGeneric)(force($310));
            })(v.value0);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var lowerProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigArray(function (v) {
            return toSignature(dictGeneric)(lowerProxy(x));
        });
    }, function ($311) {
        return SArray.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
            return function (v) {
                return toSpine(dictGeneric)(x);
            };
        })($311));
    });
};
var genericEither = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.Either.Left" && v.value1.length === 1)) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(fromSpine(dictGeneric)(force(v["value1"][0])));
            };
            if (v instanceof SProd && (v.value0 === "Data.Either.Right" && v.value1.length === 1)) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(fromSpine(dictGeneric1)(force(v["value1"][0])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var rproxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            var lproxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            return new SigProd("Data.Either.Either", [ {
                sigConstructor: "Data.Either.Left",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric)(lproxy(x));
                } ]
            }, {
                sigConstructor: "Data.Either.Right",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric1)(rproxy(x));
                } ]
            } ]);
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return new SProd("Data.Either.Left", [ function (v1) {
                    return toSpine(dictGeneric)(v.value0);
                } ]);
            };
            if (v instanceof Data_Either.Right) {
                return new SProd("Data.Either.Right", [ function (v1) {
                    return toSpine(dictGeneric1)(v.value0);
                } ]);
            };
            throw new Error("Failed pattern match at Data.Generic line 180, column 1 - line 180, column 73: " + [ v.constructor.name ]);
        });
    };
};
var genericIdentity = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.Identity.Identity" && v.value1.length === 1)) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Identity.Identity)(fromSpine(dictGeneric)(force(v["value1"][0])));
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var iproxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.Identity.Identity", [ {
            sigConstructor: "Data.Identity.Identity",
            sigValues: [ function (v) {
                return toSignature(dictGeneric)(iproxy(x));
            } ]
        } ]);
    }, function (v) {
        return new SProd("Data.Identity.Identity", [ function (v1) {
            return toSpine(dictGeneric)(v);
        } ]);
    });
};
var genericList = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.List.Types.Cons" && v.value1.length === 2)) {
            return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Types.Cons.create)(fromSpine(dictGeneric)(force(v["value1"][0]))))(fromSpine(genericList(dictGeneric))(force(v["value1"][1])));
        };
        if (v instanceof SProd && (v.value0 === "Data.List.Types.Nil" && v.value1.length === 0)) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_List_Types.Nil.value);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var headProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.List.Types.List", [ {
            sigConstructor: "Data.List.Types.Cons",
            sigValues: [ function (v) {
                return toSignature(dictGeneric)(headProxy(x));
            }, function (v) {
                return toSignature(genericList(dictGeneric))(x);
            } ]
        }, {
            sigConstructor: "Data.List.Types.Nil",
            sigValues: [  ]
        } ]);
    }, function (v) {
        if (v instanceof Data_List_Types.Cons) {
            return new SProd("Data.List.Types.Cons", [ function (v1) {
                return toSpine(dictGeneric)(v.value0);
            }, function (v1) {
                return toSpine(genericList(dictGeneric))(v.value1);
            } ]);
        };
        if (v instanceof Data_List_Types.Nil) {
            return new SProd("Data.List.Types.Nil", [  ]);
        };
        throw new Error("Failed pattern match at Data.Generic line 116, column 1 - line 116, column 58: " + [ v.constructor.name ]);
    });
};
var genericMaybe = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.Maybe.Just" && v.value1.length === 1)) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(dictGeneric)(force(v["value1"][0])));
        };
        if (v instanceof SProd && (v.value0 === "Data.Maybe.Nothing" && v.value1.length === 0)) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var mbProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.Maybe.Maybe", [ {
            sigConstructor: "Data.Maybe.Just",
            sigValues: [ function (v) {
                return toSignature(dictGeneric)(mbProxy(x));
            } ]
        }, {
            sigConstructor: "Data.Maybe.Nothing",
            sigValues: [  ]
        } ]);
    }, function (v) {
        if (v instanceof Data_Maybe.Just) {
            return new SProd("Data.Maybe.Just", [ function (v1) {
                return toSpine(dictGeneric)(v.value0);
            } ]);
        };
        if (v instanceof Data_Maybe.Nothing) {
            return new SProd("Data.Maybe.Nothing", [  ]);
        };
        throw new Error("Failed pattern match at Data.Generic line 160, column 1 - line 160, column 56: " + [ v.constructor.name ]);
    });
};
var genericNonEmpty = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.NonEmpty.NonEmpty" && v.value1.length === 2)) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_NonEmpty.NonEmpty.create)(fromSpine(dictGeneric1)(force(v["value1"][0]))))(fromSpine(dictGeneric)(force(v["value1"][1])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var tailProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            var headProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            return new SigProd("Data.NonEmpty.NonEmpty", [ {
                sigConstructor: "Data.NonEmpty.NonEmpty",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric1)(headProxy(x));
                }, function (v) {
                    return toSignature(dictGeneric)(tailProxy(x));
                } ]
            } ]);
        }, function (v) {
            return new SProd("Data.NonEmpty.NonEmpty", [ function (v1) {
                return toSpine(dictGeneric1)(v.value0);
            }, function (v1) {
                return toSpine(dictGeneric)(v.value1);
            } ]);
        });
    };
};
var genericNonEmptyList = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.List.Types.NonEmptyList" && v.value1.length === 1)) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Types.NonEmptyList)(fromSpine(genericNonEmpty(genericList(dictGeneric))(dictGeneric))(force(v["value1"][0])));
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var listProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.List.Types.NonEmptyList", [ {
            sigConstructor: "Data.List.Types.NonEmptyList",
            sigValues: [ function (v) {
                return toSignature(genericList(dictGeneric))(listProxy(x));
            } ]
        } ]);
    }, function (v) {
        return new SProd("Data.List.Types.NonEmptyList", [ function (v1) {
            return toSpine(genericNonEmpty(genericList(dictGeneric))(dictGeneric))(v);
        } ]);
    });
};
var genericShowPrec = function (v) {
    return function (v1) {
        if (v1 instanceof SProd) {
            if (Data_Array["null"](v1.value1)) {
                return v1.value0;
            };
            if (Data_Boolean.otherwise) {
                var showParen = function (v2) {
                    return function (x) {
                        if (!v2) {
                            return x;
                        };
                        if (v2) {
                            return "(" + (x + ")");
                        };
                        throw new Error("Failed pattern match at Data.Generic line 467, column 7 - line 467, column 28: " + [ v2.constructor.name, x.constructor.name ]);
                    };
                };
                return showParen(v > 10)(v1.value0 + (" " + Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                    return genericShowPrec(11)(force(x));
                })(v1.value1))));
            };
        };
        if (v1 instanceof SRecord) {
            var showLabelPart = function (x) {
                return x.recLabel + (": " + genericShowPrec(0)(force(x.recValue)));
            };
            return "{" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showLabelPart)(v1.value0)) + "}");
        };
        if (v1 instanceof SBoolean) {
            return Data_Show.show(Data_Show.showBoolean)(v1.value0);
        };
        if (v1 instanceof SInt) {
            return Data_Show.show(Data_Show.showInt)(v1.value0);
        };
        if (v1 instanceof SNumber) {
            return Data_Show.show(Data_Show.showNumber)(v1.value0);
        };
        if (v1 instanceof SString) {
            return Data_Show.show(Data_Show.showString)(v1.value0);
        };
        if (v1 instanceof SChar) {
            return Data_Show.show(Data_Show.showChar)(v1.value0);
        };
        if (v1 instanceof SArray) {
            return "[" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                return genericShowPrec(0)(force(x));
            })(v1.value0)) + "]");
        };
        if (v1 instanceof SUnit) {
            return "unit";
        };
        throw new Error("Failed pattern match at Data.Generic line 460, column 1 - line 460, column 49: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var gShow = function (dictGeneric) {
    return function ($312) {
        return genericShowPrec(0)(toSpine(dictGeneric)($312));
    };
};
var genericTuple = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.Tuple.Tuple" && v.value1.length === 2)) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromSpine(dictGeneric)(force(v["value1"][0]))))(fromSpine(dictGeneric1)(force(v["value1"][1])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var sndProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            var fstProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            return new SigProd("Data.Tuple.Tuple", [ {
                sigConstructor: "Data.Tuple.Tuple",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric)(fstProxy(x));
                }, function (v) {
                    return toSignature(dictGeneric1)(sndProxy(x));
                } ]
            } ]);
        }, function (v) {
            return new SProd("Data.Tuple.Tuple", [ function (v1) {
                return toSpine(dictGeneric)(v.value0);
            }, function (v1) {
                return toSpine(dictGeneric1)(v.value1);
            } ]);
        });
    };
};
var isValidSpine = function (v) {
    return function (v1) {
        if (v instanceof SigBoolean && v1 instanceof SBoolean) {
            return true;
        };
        if (v instanceof SigNumber && v1 instanceof SNumber) {
            return true;
        };
        if (v instanceof SigInt && v1 instanceof SInt) {
            return true;
        };
        if (v instanceof SigString && v1 instanceof SString) {
            return true;
        };
        if (v instanceof SigChar && v1 instanceof SChar) {
            return true;
        };
        if (v instanceof SigArray && v1 instanceof SArray) {
            return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($313) {
                return isValidSpine(force(v.value0))(force($313));
            })(v1.value0);
        };
        if (v instanceof SigProd && v1 instanceof SProd) {
            var v2 = Data_Foldable.find(Data_Foldable.foldableArray)(function (alt) {
                return alt.sigConstructor === v1.value0;
            })(v.value1);
            if (v2 instanceof Data_Maybe.Nothing) {
                return false;
            };
            if (v2 instanceof Data_Maybe.Just) {
                return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
                    return function (spine) {
                        return isValidSpine(force(sig))(force(spine));
                    };
                })(v2.value0.sigValues)(v1.value1));
            };
            throw new Error("Failed pattern match at Data.Generic line 438, column 3 - line 444, column 15: " + [ v2.constructor.name ]);
        };
        if (v instanceof SigRecord && v1 instanceof SRecord) {
            return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
                return function (val) {
                    return isValidSpine(force(sig.recValue))(force(val.recValue));
                };
            })(Data_Array.sortBy(function (a) {
                return function (b) {
                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
                };
            })(v.value0))(Data_Array.sortBy(function (a) {
                return function (b) {
                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
                };
            })(v1.value0)));
        };
        if (v instanceof SigUnit && v1 instanceof SUnit) {
            return true;
        };
        return false;
    };
};
var showSignature = function (sig) {
    var needsParen = function (s) {
        if (s instanceof SigProd) {
            return true;
        };
        if (s instanceof SigRecord) {
            return true;
        };
        if (s instanceof SigNumber) {
            return false;
        };
        if (s instanceof SigBoolean) {
            return false;
        };
        if (s instanceof SigInt) {
            return false;
        };
        if (s instanceof SigString) {
            return false;
        };
        if (s instanceof SigChar) {
            return false;
        };
        if (s instanceof SigArray) {
            return true;
        };
        if (s instanceof SigUnit) {
            return false;
        };
        throw new Error("Failed pattern match at Data.Generic line 403, column 18 - line 412, column 21: " + [ s.constructor.name ]);
    };
    var paren = function (s) {
        if (needsParen(s)) {
            return "(" + (showSignature(s) + ")");
        };
        if (Data_Boolean.otherwise) {
            return showSignature(s);
        };
        throw new Error("Failed pattern match at Data.Generic line 399, column 3 - line 401, column 34: " + [ s.constructor.name ]);
    };
    return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)((function () {
        if (sig instanceof SigProd) {
            return [ "SigProd ", Data_Show.show(Data_Show.showString)(sig.value0), " ", showArray(showDataConstructor)(sig.value1) ];
        };
        if (sig instanceof SigRecord) {
            return [ "SigRecord ", showArray(showLabel)(sig.value0) ];
        };
        if (sig instanceof SigNumber) {
            return [ "SigNumber" ];
        };
        if (sig instanceof SigBoolean) {
            return [ "SigBoolean" ];
        };
        if (sig instanceof SigInt) {
            return [ "SigInt" ];
        };
        if (sig instanceof SigString) {
            return [ "SigString" ];
        };
        if (sig instanceof SigChar) {
            return [ "SigChar" ];
        };
        if (sig instanceof SigArray) {
            return [ "SigArray ", paren(force(sig.value0)) ];
        };
        if (sig instanceof SigUnit) {
            return [ "SigUnit" ];
        };
        throw new Error("Failed pattern match at Data.Generic line 386, column 10 - line 396, column 27: " + [ sig.constructor.name ]);
    })());
};
var showLabel = function (l) {
    return "{ recLabel: " + (Data_Show.show(Data_Show.showString)(l.recLabel) + (", recValue: " + (showSignature(force(l.recValue)) + " }")));
};
var showDataConstructor = function (dc) {
    return "{ sigConstructor: " + (Data_Show.show(Data_Show.showString)(dc.sigConstructor) + (", sigValues: " + (showArray(function ($314) {
        return showSignature(force($314));
    })(dc.sigValues) + " }")));
};
var showGenericSignature = new Data_Show.Show(showSignature);
var eqThunk = function (dictEq) {
    return function (x) {
        return function (y) {
            return Data_Eq.eq(dictEq)(force(x))(force(y));
        };
    };
};
var eqRecordSigs = function (dictEq) {
    return function (arr1) {
        return function (arr2) {
            var labelCompare = function (r1) {
                return function (r2) {
                    return Data_Ord.compare(Data_Ord.ordString)(r1.recLabel)(r2.recLabel);
                };
            };
            var sorted1 = Data_Array.sortBy(labelCompare)(arr1);
            var sorted2 = Data_Array.sortBy(labelCompare)(arr2);
            var doCmp = function (x) {
                return function (y) {
                    return x.recLabel === y.recLabel && Data_Eq.eq(dictEq)(force(x.recValue))(force(y.recValue));
                };
            };
            return Data_Array.length(arr1) === Data_Array.length(arr2) && $foreign.zipAll(doCmp)(sorted1)(sorted2);
        };
    };
};
var eqGenericSpine = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof SProd && v1 instanceof SProd) {
            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value1)(v1.value1));
        };
        if (v instanceof SRecord && v1 instanceof SRecord) {
            return eqRecordSigs(eqGenericSpine)(v.value0)(v1.value0);
        };
        if (v instanceof SNumber && v1 instanceof SNumber) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SBoolean && v1 instanceof SBoolean) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SInt && v1 instanceof SInt) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SString && v1 instanceof SString) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SChar && v1 instanceof SChar) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SArray && v1 instanceof SArray) {
            return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value0)(v1.value0);
        };
        if (v instanceof SUnit && v1 instanceof SUnit) {
            return true;
        };
        return false;
    };
});
var gEq = function (dictGeneric) {
    return function (x) {
        return function (y) {
            return Data_Eq.eq(eqGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
        };
    };
};
var eqGenericSignature = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof SigProd && v1 instanceof SigProd) {
            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqDataConstructor)(v.value1)(v1.value1));
        };
        if (v instanceof SigRecord && v1 instanceof SigRecord) {
            return eqRecordSigs(eqGenericSignature)(v.value0)(v1.value0);
        };
        if (v instanceof SigNumber && v1 instanceof SigNumber) {
            return true;
        };
        if (v instanceof SigBoolean && v1 instanceof SigBoolean) {
            return true;
        };
        if (v instanceof SigInt && v1 instanceof SigInt) {
            return true;
        };
        if (v instanceof SigString && v1 instanceof SigString) {
            return true;
        };
        if (v instanceof SigChar && v1 instanceof SigChar) {
            return true;
        };
        if (v instanceof SigArray && v1 instanceof SigArray) {
            return eqThunk(eqGenericSignature)(v.value0)(v1.value0);
        };
        if (v instanceof SigUnit && v1 instanceof SigUnit) {
            return true;
        };
        return false;
    };
});
var eqDataConstructor = function (p1) {
    return function (p2) {
        return p1.sigConstructor === p2.sigConstructor && $foreign.zipAll(eqThunk(eqGenericSignature))(p1.sigValues)(p2.sigValues);
    };
};
var compareThunk = function (dictOrd) {
    return function (x) {
        return function (y) {
            return orderingToInt(Data_Ord.compare(dictOrd)(force(x))(force(y)));
        };
    };
};
var ordGenericSpine = new Data_Ord.Ord(function () {
    return eqGenericSpine;
}, function (v) {
    return function (v1) {
        if (v instanceof SProd && v1 instanceof SProd) {
            var v2 = Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
            if (v2 instanceof Data_Ordering.EQ) {
                return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value1)(v1.value1));
            };
            return v2;
        };
        if (v instanceof SProd) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SProd) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SRecord && v1 instanceof SRecord) {
            var go = function (x) {
                return function (y) {
                    var v2 = Data_Ord.compare(Data_Ord.ordString)(x.recLabel)(y.recLabel);
                    if (v2 instanceof Data_Ordering.EQ) {
                        return orderingToInt(Data_Ord.compare(ordGenericSpine)(force(x.recValue))(force(y.recValue)));
                    };
                    return orderingToInt(v2);
                };
            };
            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(go)(v.value0)(v1.value0));
        };
        if (v instanceof SRecord) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SRecord) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SInt && v1 instanceof SInt) {
            return Data_Ord.compare(Data_Ord.ordInt)(v.value0)(v1.value0);
        };
        if (v instanceof SInt) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SInt) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SBoolean && v1 instanceof SBoolean) {
            return Data_Ord.compare(Data_Ord.ordBoolean)(v.value0)(v1.value0);
        };
        if (v instanceof SBoolean) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SBoolean) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SNumber && v1 instanceof SNumber) {
            return Data_Ord.compare(Data_Ord.ordNumber)(v.value0)(v1.value0);
        };
        if (v instanceof SNumber) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SNumber) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SString && v1 instanceof SString) {
            return Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
        };
        if (v instanceof SString) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SString) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SChar && v1 instanceof SChar) {
            return Data_Ord.compare(Data_Ord.ordChar)(v.value0)(v1.value0);
        };
        if (v instanceof SChar) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SChar) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SArray && v1 instanceof SArray) {
            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value0)(v1.value0));
        };
        if (v instanceof SArray) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SArray) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SUnit && v1 instanceof SUnit) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Generic line 303, column 1 - line 303, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var gCompare = function (dictGeneric) {
    return function (x) {
        return function (y) {
            return Data_Ord.compare(ordGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
        };
    };
};
module.exports = {
    Generic: Generic,
    toSpine: toSpine,
    toSignature: toSignature,
    fromSpine: fromSpine,
    SProd: SProd,
    SRecord: SRecord,
    SNumber: SNumber,
    SBoolean: SBoolean,
    SInt: SInt,
    SString: SString,
    SChar: SChar,
    SArray: SArray,
    SUnit: SUnit,
    SigProd: SigProd,
    SigRecord: SigRecord,
    SigNumber: SigNumber,
    SigBoolean: SigBoolean,
    SigInt: SigInt,
    SigString: SigString,
    SigChar: SigChar,
    SigArray: SigArray,
    SigUnit: SigUnit,
    showDataConstructor: showDataConstructor,
    showSignature: showSignature,
    isValidSpine: isValidSpine,
    gShow: gShow,
    gEq: gEq,
    gCompare: gCompare,
    genericNumber: genericNumber,
    genericInt: genericInt,
    genericString: genericString,
    genericChar: genericChar,
    genericBool: genericBool,
    genericArray: genericArray,
    genericUnit: genericUnit,
    genericVoid: genericVoid,
    genericTuple: genericTuple,
    genericList: genericList,
    genericNonEmptyList: genericNonEmptyList,
    genericMaybe: genericMaybe,
    genericEither: genericEither,
    genericIdentity: genericIdentity,
    genericOrdering: genericOrdering,
    genericNonEmpty: genericNonEmpty,
    showGenericSpine: showGenericSpine,
    eqGenericSpine: eqGenericSpine,
    ordGenericSpine: ordGenericSpine,
    eqGenericSignature: eqGenericSignature,
    showGenericSignature: showGenericSignature
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Data.Traversable":209,"../Data.Tuple":212,"../Data.Unit":220,"../Data.Void":225,"../Prelude":263,"../Type.Proxy":279,"./foreign":137}],139:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var OPTIONS = (function () {
    function OPTIONS() {

    };
    OPTIONS.value = new OPTIONS();
    return OPTIONS;
})();
var GET = (function () {
    function GET() {

    };
    GET.value = new GET();
    return GET;
})();
var HEAD = (function () {
    function HEAD() {

    };
    HEAD.value = new HEAD();
    return HEAD;
})();
var POST = (function () {
    function POST() {

    };
    POST.value = new POST();
    return POST;
})();
var PUT = (function () {
    function PUT() {

    };
    PUT.value = new PUT();
    return PUT;
})();
var DELETE = (function () {
    function DELETE() {

    };
    DELETE.value = new DELETE();
    return DELETE;
})();
var TRACE = (function () {
    function TRACE() {

    };
    TRACE.value = new TRACE();
    return TRACE;
})();
var CONNECT = (function () {
    function CONNECT() {

    };
    CONNECT.value = new CONNECT();
    return CONNECT;
})();
var PROPFIND = (function () {
    function PROPFIND() {

    };
    PROPFIND.value = new PROPFIND();
    return PROPFIND;
})();
var PROPPATCH = (function () {
    function PROPPATCH() {

    };
    PROPPATCH.value = new PROPPATCH();
    return PROPPATCH;
})();
var MKCOL = (function () {
    function MKCOL() {

    };
    MKCOL.value = new MKCOL();
    return MKCOL;
})();
var COPY = (function () {
    function COPY() {

    };
    COPY.value = new COPY();
    return COPY;
})();
var MOVE = (function () {
    function MOVE() {

    };
    MOVE.value = new MOVE();
    return MOVE;
})();
var LOCK = (function () {
    function LOCK() {

    };
    LOCK.value = new LOCK();
    return LOCK;
})();
var UNLOCK = (function () {
    function UNLOCK() {

    };
    UNLOCK.value = new UNLOCK();
    return UNLOCK;
})();
var PATCH = (function () {
    function PATCH() {

    };
    PATCH.value = new PATCH();
    return PATCH;
})();
var CustomMethod = function (x) {
    return x;
};
var unCustomMethod = function (v) {
    return v;
};
var showMethod = new Data_Show.Show(function (v) {
    if (v instanceof OPTIONS) {
        return "OPTIONS";
    };
    if (v instanceof GET) {
        return "GET";
    };
    if (v instanceof HEAD) {
        return "HEAD";
    };
    if (v instanceof POST) {
        return "POST";
    };
    if (v instanceof PUT) {
        return "PUT";
    };
    if (v instanceof DELETE) {
        return "DELETE";
    };
    if (v instanceof TRACE) {
        return "TRACE";
    };
    if (v instanceof CONNECT) {
        return "CONNECT";
    };
    if (v instanceof PROPFIND) {
        return "PROPFIND";
    };
    if (v instanceof PROPPATCH) {
        return "PROPPATCH";
    };
    if (v instanceof MKCOL) {
        return "MKCOL";
    };
    if (v instanceof COPY) {
        return "COPY";
    };
    if (v instanceof MOVE) {
        return "MOVE";
    };
    if (v instanceof LOCK) {
        return "LOCK";
    };
    if (v instanceof UNLOCK) {
        return "UNLOCK";
    };
    if (v instanceof PATCH) {
        return "PATCH";
    };
    throw new Error("Failed pattern match at Data.HTTP.Method line 42, column 1 - line 42, column 35: " + [ v.constructor.name ]);
});
var showCustomMethod = new Data_Show.Show(function (v) {
    return "(CustomMethod " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);
var genericMethod = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.OPTIONS" && v.value1.length === 0)) {
        return new Data_Maybe.Just(OPTIONS.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.GET" && v.value1.length === 0)) {
        return new Data_Maybe.Just(GET.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.HEAD" && v.value1.length === 0)) {
        return new Data_Maybe.Just(HEAD.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.POST" && v.value1.length === 0)) {
        return new Data_Maybe.Just(POST.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.PUT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(PUT.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.DELETE" && v.value1.length === 0)) {
        return new Data_Maybe.Just(DELETE.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.TRACE" && v.value1.length === 0)) {
        return new Data_Maybe.Just(TRACE.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.CONNECT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(CONNECT.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.PROPFIND" && v.value1.length === 0)) {
        return new Data_Maybe.Just(PROPFIND.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.PROPPATCH" && v.value1.length === 0)) {
        return new Data_Maybe.Just(PROPPATCH.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.MKCOL" && v.value1.length === 0)) {
        return new Data_Maybe.Just(MKCOL.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.COPY" && v.value1.length === 0)) {
        return new Data_Maybe.Just(COPY.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.MOVE" && v.value1.length === 0)) {
        return new Data_Maybe.Just(MOVE.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.LOCK" && v.value1.length === 0)) {
        return new Data_Maybe.Just(LOCK.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.UNLOCK" && v.value1.length === 0)) {
        return new Data_Maybe.Just(UNLOCK.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.PATCH" && v.value1.length === 0)) {
        return new Data_Maybe.Just(PATCH.value);
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.HTTP.Method.Method", [ {
        sigConstructor: "Data.HTTP.Method.OPTIONS",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.GET",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.HEAD",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.POST",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.PUT",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.DELETE",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.TRACE",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.CONNECT",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.PROPFIND",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.PROPPATCH",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.MKCOL",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.COPY",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.MOVE",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.LOCK",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.UNLOCK",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.PATCH",
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof OPTIONS) {
        return new Data_Generic.SProd("Data.HTTP.Method.OPTIONS", [  ]);
    };
    if (v instanceof GET) {
        return new Data_Generic.SProd("Data.HTTP.Method.GET", [  ]);
    };
    if (v instanceof HEAD) {
        return new Data_Generic.SProd("Data.HTTP.Method.HEAD", [  ]);
    };
    if (v instanceof POST) {
        return new Data_Generic.SProd("Data.HTTP.Method.POST", [  ]);
    };
    if (v instanceof PUT) {
        return new Data_Generic.SProd("Data.HTTP.Method.PUT", [  ]);
    };
    if (v instanceof DELETE) {
        return new Data_Generic.SProd("Data.HTTP.Method.DELETE", [  ]);
    };
    if (v instanceof TRACE) {
        return new Data_Generic.SProd("Data.HTTP.Method.TRACE", [  ]);
    };
    if (v instanceof CONNECT) {
        return new Data_Generic.SProd("Data.HTTP.Method.CONNECT", [  ]);
    };
    if (v instanceof PROPFIND) {
        return new Data_Generic.SProd("Data.HTTP.Method.PROPFIND", [  ]);
    };
    if (v instanceof PROPPATCH) {
        return new Data_Generic.SProd("Data.HTTP.Method.PROPPATCH", [  ]);
    };
    if (v instanceof MKCOL) {
        return new Data_Generic.SProd("Data.HTTP.Method.MKCOL", [  ]);
    };
    if (v instanceof COPY) {
        return new Data_Generic.SProd("Data.HTTP.Method.COPY", [  ]);
    };
    if (v instanceof MOVE) {
        return new Data_Generic.SProd("Data.HTTP.Method.MOVE", [  ]);
    };
    if (v instanceof LOCK) {
        return new Data_Generic.SProd("Data.HTTP.Method.LOCK", [  ]);
    };
    if (v instanceof UNLOCK) {
        return new Data_Generic.SProd("Data.HTTP.Method.UNLOCK", [  ]);
    };
    if (v instanceof PATCH) {
        return new Data_Generic.SProd("Data.HTTP.Method.PATCH", [  ]);
    };
    throw new Error("Failed pattern match at Data.HTTP.Method line 40, column 8 - line 40, column 48: " + [ v.constructor.name ]);
});
var genericCustomMethod = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.CustomMethod" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(CustomMethod))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.HTTP.Method.CustomMethod", [ {
        sigConstructor: "Data.HTTP.Method.CustomMethod",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.HTTP.Method.CustomMethod", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var fromString = function (s) {
    var v = Data_String.toUpper(s);
    if (v === "OPTIONS") {
        return new Data_Either.Left(OPTIONS.value);
    };
    if (v === "GET") {
        return new Data_Either.Left(GET.value);
    };
    if (v === "HEAD") {
        return new Data_Either.Left(HEAD.value);
    };
    if (v === "POST") {
        return new Data_Either.Left(POST.value);
    };
    if (v === "PUT") {
        return new Data_Either.Left(PUT.value);
    };
    if (v === "DELETE") {
        return new Data_Either.Left(DELETE.value);
    };
    if (v === "TRACE") {
        return new Data_Either.Left(TRACE.value);
    };
    if (v === "CONNECT") {
        return new Data_Either.Left(CONNECT.value);
    };
    if (v === "PROPFIND") {
        return new Data_Either.Left(PROPFIND.value);
    };
    if (v === "PROPPATCH") {
        return new Data_Either.Left(PROPPATCH.value);
    };
    if (v === "MKCOL") {
        return new Data_Either.Left(MKCOL.value);
    };
    if (v === "COPY") {
        return new Data_Either.Left(COPY.value);
    };
    if (v === "MOVE") {
        return new Data_Either.Left(MOVE.value);
    };
    if (v === "LOCK") {
        return new Data_Either.Left(LOCK.value);
    };
    if (v === "UNLOCK") {
        return new Data_Either.Left(UNLOCK.value);
    };
    return new Data_Either.Right(v);
};
var eqMethod = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof OPTIONS && y instanceof OPTIONS) {
            return true;
        };
        if (x instanceof GET && y instanceof GET) {
            return true;
        };
        if (x instanceof HEAD && y instanceof HEAD) {
            return true;
        };
        if (x instanceof POST && y instanceof POST) {
            return true;
        };
        if (x instanceof PUT && y instanceof PUT) {
            return true;
        };
        if (x instanceof DELETE && y instanceof DELETE) {
            return true;
        };
        if (x instanceof TRACE && y instanceof TRACE) {
            return true;
        };
        if (x instanceof CONNECT && y instanceof CONNECT) {
            return true;
        };
        if (x instanceof PROPFIND && y instanceof PROPFIND) {
            return true;
        };
        if (x instanceof PROPPATCH && y instanceof PROPPATCH) {
            return true;
        };
        if (x instanceof MKCOL && y instanceof MKCOL) {
            return true;
        };
        if (x instanceof COPY && y instanceof COPY) {
            return true;
        };
        if (x instanceof MOVE && y instanceof MOVE) {
            return true;
        };
        if (x instanceof LOCK && y instanceof LOCK) {
            return true;
        };
        if (x instanceof UNLOCK && y instanceof UNLOCK) {
            return true;
        };
        if (x instanceof PATCH && y instanceof PATCH) {
            return true;
        };
        return false;
    };
});
var ordMethod = new Data_Ord.Ord(function () {
    return eqMethod;
}, function (x) {
    return function (y) {
        if (x instanceof OPTIONS && y instanceof OPTIONS) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof OPTIONS) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof OPTIONS) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof GET && y instanceof GET) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof GET) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof GET) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof HEAD && y instanceof HEAD) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof HEAD) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof HEAD) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof POST && y instanceof POST) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof POST) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof POST) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PUT && y instanceof PUT) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PUT) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PUT) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof DELETE && y instanceof DELETE) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof DELETE) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof DELETE) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TRACE && y instanceof TRACE) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TRACE) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TRACE) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof CONNECT && y instanceof CONNECT) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof CONNECT) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof CONNECT) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PROPFIND && y instanceof PROPFIND) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PROPFIND) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PROPFIND) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PROPPATCH && y instanceof PROPPATCH) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PROPPATCH) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PROPPATCH) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MKCOL && y instanceof MKCOL) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MKCOL) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MKCOL) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof COPY && y instanceof COPY) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof COPY) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof COPY) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MOVE && y instanceof MOVE) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MOVE) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MOVE) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LOCK && y instanceof LOCK) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LOCK) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LOCK) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof UNLOCK && y instanceof UNLOCK) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof UNLOCK) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof UNLOCK) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PATCH && y instanceof PATCH) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.HTTP.Method line 39, column 8 - line 39, column 40: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqCustomMethod = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordCustomMethod = new Data_Ord.Ord(function () {
    return eqCustomMethod;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
module.exports = {
    OPTIONS: OPTIONS,
    GET: GET,
    HEAD: HEAD,
    POST: POST,
    PUT: PUT,
    DELETE: DELETE,
    TRACE: TRACE,
    CONNECT: CONNECT,
    PROPFIND: PROPFIND,
    PROPPATCH: PROPPATCH,
    MKCOL: MKCOL,
    COPY: COPY,
    MOVE: MOVE,
    LOCK: LOCK,
    UNLOCK: UNLOCK,
    PATCH: PATCH,
    unCustomMethod: unCustomMethod,
    fromString: fromString,
    print: print,
    eqMethod: eqMethod,
    ordMethod: ordMethod,
    genericMethod: genericMethod,
    showMethod: showMethod,
    eqCustomMethod: eqCustomMethod,
    ordCustomMethod: ordCustomMethod,
    genericCustomMethod: genericCustomMethod,
    showCustomMethod: showCustomMethod
};

},{"../Control.Apply":6,"../Data.Either":108,"../Data.Eq":111,"../Data.Generic":138,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Data.Unit":220,"../Prelude":263}],140:[function(require,module,exports){
"use strict";

exports.boolConj = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolDisj = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

},{}],141:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
    this.conj = conj;
    this.disj = disj;
    this.ff = ff;
    this.implies = implies;
    this.not = not;
    this.tt = tt;
};
var tt = function (dict) {
    return dict.tt;
};
var not = function (dict) {
    return dict.not;
};
var implies = function (dict) {
    return dict.implies;
};
var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return Data_Unit.unit;
}, Data_Unit.unit);
var ff = function (dict) {
    return dict.ff;
};
var disj = function (dict) {
    return dict.disj;
};
var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
    return function (b) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
}, $foreign.boolNot, true);
var conj = function (dict) {
    return dict.conj;
};
var heytingAlgebraFunction = function (dictHeytingAlgebra) {
    return new HeytingAlgebra(function (f) {
        return function (g) {
            return function (a) {
                return conj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (g) {
            return function (a) {
                return disj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (v) {
        return ff(dictHeytingAlgebra);
    }, function (f) {
        return function (g) {
            return function (a) {
                return implies(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (a) {
            return not(dictHeytingAlgebra)(f(a));
        };
    }, function (v) {
        return tt(dictHeytingAlgebra);
    });
};
module.exports = {
    HeytingAlgebra: HeytingAlgebra,
    tt: tt,
    ff: ff,
    implies: implies,
    conj: conj,
    disj: disj,
    not: not,
    heytingAlgebraBoolean: heytingAlgebraBoolean,
    heytingAlgebraUnit: heytingAlgebraUnit,
    heytingAlgebraFunction: heytingAlgebraFunction
};

},{"../Data.Unit":220,"./foreign":140}],142:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Identity = function (x) {
    return x;
};
var showIdentity = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringIdentity = function (dictSemiring) {
    return dictSemiring;
};
var semigroupIdenity = function (dictSemigroup) {
    return dictSemigroup;
};
var ringIdentity = function (dictRing) {
    return dictRing;
};
var ordIdentity = function (dictOrd) {
    return dictOrd;
};
var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
    return n;
}, Identity);
var monoidIdentity = function (dictMonoid) {
    return dictMonoid;
};
var lazyIdentity = function (dictLazy) {
    return dictLazy;
};
var heytingAlgebraIdentity = function (dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorIdentity = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(f(v));
        };
    };
});
var fieldIdentity = function (dictField) {
    return dictField;
};
var extendIdentity = new Control_Extend.Extend(function () {
    return functorIdentity;
}, function (f) {
    return function (m) {
        return f(m);
    };
});
var euclideanRingIdentity = function (dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqIdentity = function (dictEq) {
    return dictEq;
};
var eq1Identity = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqIdentity(dictEq));
});
var ord1Identity = new Data_Ord.Ord1(function () {
    return eq1Identity;
}, function (dictOrd) {
    return Data_Ord.compare(ordIdentity(dictOrd));
});
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (v) {
    return v;
});
var commutativeRingIdentity = function (dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedIdentity = function (dictBounded) {
    return dictBounded;
};
var booleanAlgebraIdentity = function (dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyIdentity = new Control_Apply.Apply(function () {
    return functorIdentity;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindIdentity = new Control_Bind.Bind(function () {
    return applyIdentity;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeIdentity = new Control_Applicative.Applicative(function () {
    return applyIdentity;
}, Identity);
var monadIdentity = new Control_Monad.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
var altIdentity = new Control_Alt.Alt(function () {
    return functorIdentity;
}, function (x) {
    return function (v) {
        return x;
    };
});
module.exports = {
    Identity: Identity,
    newtypeIdentity: newtypeIdentity,
    eqIdentity: eqIdentity,
    ordIdentity: ordIdentity,
    boundedIdentity: boundedIdentity,
    heytingAlgebraIdentity: heytingAlgebraIdentity,
    booleanAlgebraIdentity: booleanAlgebraIdentity,
    semigroupIdenity: semigroupIdenity,
    monoidIdentity: monoidIdentity,
    semiringIdentity: semiringIdentity,
    euclideanRingIdentity: euclideanRingIdentity,
    ringIdentity: ringIdentity,
    commutativeRingIdentity: commutativeRingIdentity,
    fieldIdentity: fieldIdentity,
    lazyIdentity: lazyIdentity,
    showIdentity: showIdentity,
    eq1Identity: eq1Identity,
    ord1Identity: ord1Identity,
    functorIdentity: functorIdentity,
    invariantIdentity: invariantIdentity,
    altIdentity: altIdentity,
    applyIdentity: applyIdentity,
    applicativeIdentity: applicativeIdentity,
    bindIdentity: bindIdentity,
    monadIdentity: monadIdentity,
    extendIdentity: extendIdentity,
    comonadIdentity: comonadIdentity,
    foldableIdentity: foldableIdentity,
    traversableIdentity: traversableIdentity
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Lazy":15,"../Control.Monad":54,"../Data.BooleanAlgebra":91,"../Data.Bounded":93,"../Data.CommutativeRing":98,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Field":114,"../Data.Foldable":116,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.HeytingAlgebra":141,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Traversable":209,"../Prelude":263}],143:[function(require,module,exports){
"use strict";

// module Data.Int.Bits

exports.and = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.or = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xor = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],144:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    and: $foreign.and,
    or: $foreign.or,
    xor: $foreign.xor,
    shl: $foreign.shl,
    shr: $foreign.shr,
    zshr: $foreign.zshr,
    complement: $foreign.complement
};

},{"./foreign":143}],145:[function(require,module,exports){
"use strict";

// module Data.Int

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringAsImpl = function (just) {
  return function (nothing) {
    return function (radix) {
      var digits;
      if (radix < 11) {
        digits = "[0-" + (radix - 1).toString() + "]";
      } else if (radix === 11) {
        digits = "[0-9a]";
      } else {
        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
      }
      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

      return function (s) {
        /* jshint bitwise: false */
        if (pattern.test(s)) {
          var i = parseInt(s, radix);
          return (i | 0) === i ? just(i) : nothing;
        } else {
          return nothing;
        }
      };
    };
  };
};

exports.toStringAs = function (radix) {
  return function (i) {
    return i.toString(radix);
  };
};

exports.pow = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return Math.pow(x,y) | 0;
  };
};

},{}],146:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_DivisionRing = require("../Data.DivisionRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Global = require("../Global");
var $$Math = require("../Math");
var Prelude = require("../Prelude");
var Radix = function (x) {
    return x;
};
var Even = (function () {
    function Even() {

    };
    Even.value = new Even();
    return Even;
})();
var Odd = (function () {
    function Odd() {

    };
    Odd.value = new Odd();
    return Odd;
})();
var showParity = new Data_Show.Show(function (v) {
    if (v instanceof Even) {
        return "Even";
    };
    if (v instanceof Odd) {
        return "Odd";
    };
    throw new Error("Failed pattern match at Data.Int line 110, column 1 - line 110, column 35: " + [ v.constructor.name ]);
});
var radix = function (n) {
    if (n >= 2 && n <= 36) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Int line 193, column 1 - line 193, column 28: " + [ n.constructor.name ]);
};
var odd = function (x) {
    return (x & 1) !== 0;
};
var octal = 8;
var hexadecimal = 16;
var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromStringAs(10);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function (x) {
    if (x === Global.infinity) {
        return 0;
    };
    if (x === -Global.infinity) {
        return 0;
    };
    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
        return Data_Bounded.top(Data_Bounded.boundedInt);
    };
    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
        return Data_Bounded.bottom(Data_Bounded.boundedInt);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.fromMaybe(0)(fromNumber(x));
    };
    throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 64, column 29: " + [ x.constructor.name ]);
};
var round = function ($23) {
    return unsafeClamp($$Math.round($23));
};
var floor = function ($24) {
    return unsafeClamp($$Math.floor($24));
};
var even = function (x) {
    return (x & 1) === 0;
};
var parity = function (n) {
    var $14 = even(n);
    if ($14) {
        return Even.value;
    };
    return Odd.value;
};
var eqParity = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Even && y instanceof Even) {
            return true;
        };
        if (x instanceof Odd && y instanceof Odd) {
            return true;
        };
        return false;
    };
});
var ordParity = new Data_Ord.Ord(function () {
    return eqParity;
}, function (x) {
    return function (y) {
        if (x instanceof Even && y instanceof Even) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Even) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Even) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Odd && y instanceof Odd) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Int line 108, column 8 - line 108, column 40: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var semiringParity = new Data_Semiring.Semiring(function (x) {
    return function (y) {
        var $19 = Data_Eq.eq(eqParity)(x)(y);
        if ($19) {
            return Even.value;
        };
        return Odd.value;
    };
}, function (v) {
    return function (v1) {
        if (v instanceof Odd && v1 instanceof Odd) {
            return Odd.value;
        };
        return Even.value;
    };
}, Odd.value, Even.value);
var ringParity = new Data_Ring.Ring(function () {
    return semiringParity;
}, Data_Semiring.add(semiringParity));
var divisionRingParity = new Data_DivisionRing.DivisionRing(function () {
    return ringParity;
}, Control_Category.id(Control_Category.categoryFn));
var decimal = 10;
var commutativeRingParity = new Data_CommutativeRing.CommutativeRing(function () {
    return ringParity;
});
var euclideanRingParity = new Data_EuclideanRing.EuclideanRing(function () {
    return commutativeRingParity;
}, function (v) {
    if (v instanceof Even) {
        return 0;
    };
    if (v instanceof Odd) {
        return 1;
    };
    throw new Error("Failed pattern match at Data.Int line 130, column 1 - line 130, column 53: " + [ v.constructor.name ]);
}, function (x) {
    return function (v) {
        return x;
    };
}, function (v) {
    return function (v1) {
        return Even.value;
    };
});
var fieldParity = new Data_Field.Field(function () {
    return euclideanRingParity;
});
var ceil = function ($25) {
    return unsafeClamp($$Math.ceil($25));
};
var boundedParity = new Data_Bounded.Bounded(function () {
    return ordParity;
}, Even.value, Odd.value);
var binary = 2;
var base36 = 36;
module.exports = {
    fromNumber: fromNumber,
    ceil: ceil,
    floor: floor,
    round: round,
    fromString: fromString,
    radix: radix,
    binary: binary,
    octal: octal,
    decimal: decimal,
    hexadecimal: hexadecimal,
    base36: base36,
    fromStringAs: fromStringAs,
    Even: Even,
    Odd: Odd,
    parity: parity,
    even: even,
    odd: odd,
    eqParity: eqParity,
    ordParity: ordParity,
    showParity: showParity,
    boundedParity: boundedParity,
    semiringParity: semiringParity,
    ringParity: ringParity,
    commutativeRingParity: commutativeRingParity,
    euclideanRingParity: euclideanRingParity,
    divisionRingParity: divisionRingParity,
    fieldParity: fieldParity,
    toNumber: $foreign.toNumber,
    toStringAs: $foreign.toStringAs,
    pow: $foreign.pow
};

},{"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.CommutativeRing":98,"../Data.DivisionRing":107,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Field":114,"../Data.HeytingAlgebra":141,"../Data.Int.Bits":144,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Show":189,"../Global":229,"../Math":244,"../Prelude":263,"./foreign":145}],147:[function(require,module,exports){
/* global exports */
"use strict";

exports.isValid = function (date) {
  return !isNaN(date.getTime());
};

exports.toInstantImpl = function (just) {
  return function (nothing) {
    return function (date) {
      var t = date.getTime();
      return isNaN(t) ? nothing : just(t);
    };
  };
};

exports.jsdate = function (parts) {
  var t = Date.UTC(parts.year, parts.month, parts.day, parts.hour, parts.minute, parts.second, parts.millisecond);
  return new Date(t);
};

exports.jsdateLocal = function (parts) {
  return function () {
    return new Date(parts.year, parts.month, parts.day, parts.hour, parts.minute, parts.second, parts.millisecond);
  };
};

exports.dateMethod = function (method, date) {
  return date[method]();
};

exports.dateMethodEff = function (method, date) {
  return function () {
    return date[method]();
  };
};

exports.parse = function (dateString) {
  return function () {
    return new Date(dateString);
  };
};

},{}],148:[function(require,module,exports){

// | A module providing a type and operations for the native JavaScript `Date`
// | object.
// |
// | The `JSDate` type and associated functions are provided for interop
// | purposes with JavaScript, but for working with dates in PureScript it is
// | recommended that `DateTime` representation is used instead - `DateTime`
// | offers greater type safety, a more PureScript-friendly interface, and has
// | a `Generic` instance.
"use strict";
var $foreign = require("./foreign");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Date = require("../Data.Date");
var Data_Date_Component = require("../Data.Date.Component");
var Data_DateTime = require("../Data.DateTime");
var Data_DateTime_Instant = require("../Data.DateTime.Instant");
var Data_Enum = require("../Data.Enum");
var Data_Foreign = require("../Data.Foreign");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Ring = require("../Data.Ring");
var Data_Time = require("../Data.Time");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Prelude = require("../Prelude");

// | Returns the date as a string using the UTC timezone.
var toUTCString = function (dt) {
    return $foreign.dateMethod("toUTCString", dt);
};

// | Returns the time portion of a date value as a human-readable string.
var toTimeString = function (dt) {
    return $foreign.dateMethod("toTimeString", dt);
};

// | Returns a string representing for a date value.
var toString = function (dt) {
    return $foreign.dateMethod("toString", dt);
};

// | Attempts to construct an `Instant` for a `JSDate`. `Nothing` is returned
// | only when the date value is an invalid date.
var toInstant = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(function ($4) {
    return Data_DateTime_Instant.instant(Data_Time_Duration.Milliseconds($4));
})($foreign.toInstantImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value));

// | Converts a date value to an ISO 8601 Extended format date string.
var toISOString = function (dt) {
    return $foreign.dateMethodEff("toISOString", dt);
};

// | Attempts to construct a `DateTime` value for a `JSDate`. `Nothing` is
// | returned only when the date value is an invalid date.
var toDateTime = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime))(toInstant);

// | Returns the date portion of a date value as a human-readable string.
var toDateString = function (dt) {
    return $foreign.dateMethod("toDateString", dt);
};

// | Attempts to construct a `Date` value for a `JSDate`, ignoring any time
// | component of the `JSDate`. `Nothing` is returned only when the date value
// | is an invalid date.
var toDate = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.date))(toDateTime);

// | Attempts to read a `Foreign` value as a `JSDate`.
var readDate = Data_Foreign.unsafeReadTagged("Date");

// | Returns the seconds for a date, according to UTC.
var getUTCSeconds = function (dt) {
    return $foreign.dateMethod("getUTCSeconds", dt);
};

// | Returns the month for a date, according to UTC.
var getUTCMonth = function (dt) {
    return $foreign.dateMethod("getUTCMonth", dt);
};

// | Returns the minutes for a date, according to UTC.
var getUTCMinutes = function (dt) {
    return $foreign.dateMethod("getUTCMinutes", dt);
};

// | Returns the milliseconds for a date, according to UTC.
var getUTCMilliseconds = function (dt) {
    return $foreign.dateMethod("getUTCMilliseconds", dt);
};

// | Returns the hours for a date, according to UTC.
var getUTCHours = function (dt) {
    return $foreign.dateMethod("getUTCHours", dt);
};

// | Returns the year for a date, according to UTC.
var getUTCFullYear = function (dt) {
    return $foreign.dateMethod("getUTCFullYear", dt);
};

// | Returns the day of the week for a date, according to UTC.
var getUTCDay = function (dt) {
    return $foreign.dateMethod("getUTCDay", dt);
};

// | Returns the day of the month for a date, according to UTC.
var getUTCDate = function (dt) {
    return $foreign.dateMethod("getUTCDate", dt);
};

// | Returns the time-zone offset for a date, according to the current machine's
// | date/time locale.
var getTimezoneOffset = function (dt) {
    return $foreign.dateMethodEff("getTimezoneOffset", dt);
};

// | Returns the date as a number of milliseconds since 1970-01-01 00:00:00 UTC.
var getTime = function (dt) {
    return $foreign.dateMethod("getTime", dt);
};

// | Returns the seconds for a date, according to the current machine's
// | date/time locale.
var getSeconds = function (dt) {
    return $foreign.dateMethodEff("getSeconds", dt);
};

// | Returns the month for a date, according to the current machine's
// | date/time locale.
var getMonth = function (dt) {
    return $foreign.dateMethodEff("getMonth", dt);
};

// | Returns the minutes for a date, according to the current machine's
// | date/time locale.
var getMinutes = function (dt) {
    return $foreign.dateMethodEff("getMinutes", dt);
};

// | Returns the milliseconds for a date, according to the current machine's
// | date/time locale.
var getMilliseconds = function (dt) {
    return $foreign.dateMethodEff("getMilliseconds", dt);
};

// | Returns the hour for a date, according to the current machine's date/time
// | locale.
var getHours = function (dt) {
    return $foreign.dateMethodEff("getHours", dt);
};

// | Returns the year for a date, according to the current machine's date/time
// | locale.
var getFullYear = function (dt) {
    return $foreign.dateMethodEff("getFullYear", dt);
};

// | Returns the day of the week for a date, according to the current
// | machine's date/time locale.
var getDay = function (dt) {
    return $foreign.dateMethodEff("getDay", dt);
};

// | Returns the day of the month for a date, according to the current
// | machine's date/time locale.
var getDate = function (dt) {
    return $foreign.dateMethodEff("getDate", dt);
};

// | Converts a `DateTime` value into a native JavaScript date object. The
// | resulting date value is guaranteed to be valid.
var fromDateTime = function (v) {
    return $foreign.jsdate({
        year: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0))),
        month: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)) - 1 | 0),
        day: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0))),
        hour: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1))),
        minute: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1))),
        second: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1))),
        millisecond: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1)))
    });
};
module.exports = {
    readDate: readDate,
    fromDateTime: fromDateTime,
    toDateTime: toDateTime,
    toDate: toDate,
    toInstant: toInstant,
    getTime: getTime,
    getUTCDate: getUTCDate,
    getUTCDay: getUTCDay,
    getUTCFullYear: getUTCFullYear,
    getUTCHours: getUTCHours,
    getUTCMilliseconds: getUTCMilliseconds,
    getUTCMinutes: getUTCMinutes,
    getUTCMonth: getUTCMonth,
    getUTCSeconds: getUTCSeconds,
    getDate: getDate,
    getDay: getDay,
    getFullYear: getFullYear,
    getHours: getHours,
    getMilliseconds: getMilliseconds,
    getMinutes: getMinutes,
    getMonth: getMonth,
    getSeconds: getSeconds,
    getTimezoneOffset: getTimezoneOffset,
    toDateString: toDateString,
    toISOString: toISOString,
    toString: toString,
    toTimeString: toTimeString,
    toUTCString: toUTCString,
    isValid: $foreign.isValid,
    jsdate: $foreign.jsdate,
    jsdateLocal: $foreign.jsdateLocal,
    parse: $foreign.parse
};

},{"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Exception":28,"../Control.Semigroupoid":60,"../Data.Date":101,"../Data.Date.Component":99,"../Data.DateTime":105,"../Data.DateTime.Instant":103,"../Data.Enum":109,"../Data.Foreign":121,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.Int":146,"../Data.Maybe":156,"../Data.Ring":181,"../Data.Time":205,"../Data.Time.Component":203,"../Data.Time.Duration":204,"../Prelude":263,"./foreign":147}],149:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var zipWith = function (f) {
    return function (v) {
        return function (v1) {
            return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));
        };
    };
};
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList)(dictApplicative.Apply0())(zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var wrappedOperation2 = function (name) {
    return function (f) {
        return function (v) {
            return function (v1) {
                var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));
                if (v2 instanceof Data_List_Types.Cons) {
                    return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);
                };
                if (v2 instanceof Data_List_Types.Nil) {
                    return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
                };
                throw new Error("Failed pattern match at Data.List.NonEmpty line 101, column 3 - line 103, column 81: " + [ v2.constructor.name ]);
            };
        };
    };
};
var wrappedOperation = function (name) {
    return function (f) {
        return function (v) {
            var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));
            if (v1 instanceof Data_List_Types.Cons) {
                return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 88, column 3 - line 90, column 81: " + [ v1.constructor.name ]);
        };
    };
};
var updateAt = function (i) {
    return function (a) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($156) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($156));
                })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 187, column 1 - line 187, column 75: " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
        };
    };
};
var unzip = function (ts) {
    return new Data_Tuple.Tuple(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.fst)(ts), Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.snd)(ts));
};
var unsnoc = function (v) {
    var v1 = Data_List.unsnoc(v.value1);
    if (v1 instanceof Data_Maybe.Nothing) {
        return {
            init: Data_List_Types.Nil.value,
            last: v.value0
        };
    };
    if (v1 instanceof Data_Maybe.Just) {
        return {
            init: new Data_List_Types.Cons(v.value0, v1.value0.init),
            last: v1.value0.last
        };
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty line 149, column 35 - line 151, column 50: " + [ v1.constructor.name ]);
};
var unionBy = function ($157) {
    return wrappedOperation2("unionBy")(Data_List.unionBy($157));
};
var union = function (dictEq) {
    return wrappedOperation2("union")(Data_List.union(dictEq));
};
var uncons = function (v) {
    return {
        head: v.value0,
        tail: v.value1
    };
};
var toList = function (v) {
    return new Data_List_Types.Cons(v.value0, v.value1);
};
var toUnfoldable = function (dictUnfoldable) {
    return function ($158) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
                return new Data_Tuple.Tuple(rec.head, rec.tail);
            })(Data_List.uncons(xs));
        })(toList($158));
    };
};
var tail = function (v) {
    return v.value1;
};
var sortBy = function ($159) {
    return wrappedOperation("sortBy")(Data_List.sortBy($159));
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var snoc = function (v) {
    return function (y) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
    };
};
var singleton = function ($160) {
    return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($160));
};
var reverse = wrappedOperation("reverse")(Data_List.reverse);
var nubBy = function ($161) {
    return wrappedOperation("nubBy")(Data_List.nubBy($161));
};
var nub = function (dictEq) {
    return wrappedOperation("nub")(Data_List.nub(dictEq));
};
var modifyAt = function (i) {
    return function (f) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($162) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($162));
                })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 192, column 1 - line 192, column 82: " + [ i.constructor.name, f.constructor.name, v.constructor.name ]);
        };
    };
};
var mapWithIndex = function ($163) {
    return wrappedOperation("mapWithIndex")(Data_List.mapWithIndex($163));
};
var lift = function (f) {
    return function (v) {
        return f(new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var mapMaybe = function ($164) {
    return lift(Data_List.mapMaybe($164));
};
var partition = function ($165) {
    return lift(Data_List.partition($165));
};
var span = function ($166) {
    return lift(Data_List.span($166));
};
var take = function ($167) {
    return lift(Data_List.take($167));
};
var takeWhile = function ($168) {
    return lift(Data_List.takeWhile($168));
};
var length = function (v) {
    return 1 + Data_List.length(v.value1) | 0;
};
var last = function (v) {
    return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));
};
var intersectBy = function ($169) {
    return wrappedOperation2("intersectBy")(Data_List.intersectBy($169));
};
var intersect = function (dictEq) {
    return wrappedOperation2("intersect")(Data_List.intersect(dictEq));
};
var insertAt = function (i) {
    return function (a) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($170) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($170));
                })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 182, column 1 - line 182, column 75: " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
        };
    };
};
var init = function (v) {
    return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {
        return new Data_List_Types.Cons(v.value0, v1);
    })(Data_List.init(v.value1));
};
var index = function (v) {
    return function (i) {
        if (i === 0) {
            return new Data_Maybe.Just(v.value0);
        };
        if (Data_Boolean.otherwise) {
            return Data_List.index(v.value1)(i - 1 | 0);
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 156, column 1 - line 156, column 52: " + [ v.constructor.name, i.constructor.name ]);
    };
};
var head = function (v) {
    return v.value0;
};
var groupBy = function ($171) {
    return wrappedOperation("groupBy")(Data_List.groupBy($171));
};
var group$prime = function (dictOrd) {
    return wrappedOperation("group'")(Data_List["group'"](dictOrd));
};
var group = function (dictEq) {
    return wrappedOperation("group")(Data_List.group(dictEq));
};
var fromList = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty line 117, column 1 - line 117, column 57: " + [ v.constructor.name ]);
};
var fromFoldable = function (dictFoldable) {
    return function ($172) {
        return fromList(Data_List.fromFoldable(dictFoldable)($172));
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return function (v) {
                return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0))(function (a$prime) {
                    return Data_List.foldM(dictMonad)(f)(a$prime)(v.value1);
                });
            };
        };
    };
};
var findLastIndex = function (f) {
    return function (v) {
        var v1 = Data_List.findLastIndex(f)(v.value1);
        if (v1 instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v1.value0 + 1 | 0);
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            if (f(v.value0)) {
                return new Data_Maybe.Just(0);
            };
            if (Data_Boolean.otherwise) {
                return Data_Maybe.Nothing.value;
            };
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 176, column 3 - line 180, column 29: " + [ v1.constructor.name ]);
    };
};
var findIndex = function (f) {
    return function (v) {
        if (f(v.value0)) {
            return new Data_Maybe.Just(0);
        };
        if (Data_Boolean.otherwise) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                return v1 + 1 | 0;
            })(Data_List.findIndex(f)(v.value1));
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 169, column 1 - line 169, column 69: " + [ f.constructor.name, v.constructor.name ]);
    };
};
var filterM = function (dictMonad) {
    return function ($173) {
        return lift(Data_List.filterM(dictMonad)($173));
    };
};
var filter = function ($174) {
    return lift(Data_List.filter($174));
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function ($175) {
    return lift(Data_List.dropWhile($175));
};
var drop = function ($176) {
    return lift(Data_List.drop($176));
};
var cons = function (y) {
    return function (v) {
        return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindNonEmptyList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Types.bindNonEmptyList)(v)(Control_Category.id(Control_Category.categoryFn));
};
var catMaybes = lift(Data_List.catMaybes);
var appendFoldable = function (dictFoldable) {
    return function (v) {
        return function (ys) {
            return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value1)(Data_List.fromFoldable(dictFoldable)(ys)));
        };
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    fromList: fromList,
    toList: toList,
    singleton: singleton,
    length: length,
    cons: cons,
    snoc: snoc,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    appendFoldable: appendFoldable,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    take: take,
    takeWhile: takeWhile,
    drop: drop,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM
};

},{"../Control.Bind":10,"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.List":151,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Semigroup.Traversable":183,"../Data.Semiring":187,"../Data.Traversable":209,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Partial.Unsafe":253,"../Prelude":263}],150:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Prelude = require("../Prelude");
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var NonEmptyList = function (x) {
    return x;
};
var toList = function (v) {
    return new Cons(v.value0, v.value1);
};
var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
    return n;
}, NonEmptyList);
var nelCons = function (a) {
    return function (v) {
        return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));
    };
};
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return function ($158) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($158));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    var go = function ($copy_b) {
        return function ($copy_v) {
            var $tco_var_b = $copy_b;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(b, v) {
                if (v instanceof Nil) {
                    $tco_done = true;
                    return b;
                };
                if (v instanceof Cons) {
                    $tco_var_b = f(b)(v.value0);
                    $copy_v = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List.Types line 81, column 12 - line 83, column 30: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_b, $copy_v);
            };
            return $tco_result;
        };
    };
    return go;
}, function (f) {
    return function (b) {
        var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
        return function ($159) {
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($159));
        };
    };
});
var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableList;
}, function (dictMonoid) {
    return function (f) {
        return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
            return function (acc) {
                return function ($160) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)($160));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    return function (acc) {
        return function ($161) {
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v) {
                return function (a) {
                    return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
                };
            })(new Data_Tuple.Tuple(0, acc))($161));
        };
    };
}, function (f) {
    return function (b) {
        return function (xs) {
            var v = (function () {
                var rev = Data_Foldable.foldl(foldableList)(function (v1) {
                    return function (a) {
                        return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
                    };
                });
                return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
            })();
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
                return function (a) {
                    return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
                };
            })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
        };
    };
});
var functorList = new Data_Functor.Functor(function (f) {
    return Data_Foldable.foldr(foldableList)(function (x) {
        return function (acc) {
            return new Cons(f(x), acc);
        };
    })(Nil.value);
});
var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorList;
}, function (f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
        return function (x) {
            return function (acc) {
                return new Cons(f(i)(x), acc);
            };
        };
    })(Nil.value);
});
var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
    return function (ys) {
        return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
    };
});
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
    return function (as$prime) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
    };
});
var showList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Nil) {
            return "Nil";
        };
        return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
    });
};
var showNonEmptyList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
    });
};
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function (f) {
        return function ($162) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($163) {
                    return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f($163));
                };
            })(Control_Applicative.pure(dictApplicative)(Nil.value))($162));
        };
    };
});
var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexList;
}, function () {
    return functorWithIndexList;
}, function () {
    return traversableList;
}, function (dictApplicative) {
    return function (f) {
        var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
        return function ($164) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(rev)(Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
                return function (acc) {
                    return function ($165) {
                        return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f(i)($165));
                    };
                };
            })(Control_Applicative.pure(dictApplicative)(Nil.value))($164));
        };
    };
});
var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function ($copy_source) {
            return function ($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value0.value1;
                        $copy_memo = new Cons(v.value0.value0, memo);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List.Types line 105, column 22 - line 107, column 52: " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
                };
                return $tco_result;
            };
        };
        return go(b)(Nil.value);
    };
});
var foldable1NonEmptyList = new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableNonEmptyList;
}, function (dictSemigroup) {
    return function (v) {
        return Data_Foldable.foldl(foldableList)(Data_Semigroup.append(dictSemigroup))(v.value0)(v.value1);
    };
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($166) {
                    return Data_Semigroup.append(dictSemigroup)(acc)(f($166));
                };
            })(f(v.value0))(v.value1);
        };
    };
});
var extendNonEmptyList = new Control_Extend.Extend(function () {
    return functorNonEmptyList;
}, function (f) {
    return function (v) {
        var go = function (a) {
            return function (v1) {
                return {
                    val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),
                    acc: new Cons(a, v1.acc)
                };
            };
        };
        return new Data_NonEmpty.NonEmpty(f(v), (Data_Foldable.foldr(foldableList)(go)({
            val: Nil.value,
            acc: Nil.value
        })(v.value1)).val);
    };
});
var extendList = new Control_Extend.Extend(function () {
    return functorList;
}, function (f) {
    return function (v) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            var go = function (a$prime) {
                return function (v1) {
                    var acc$prime = new Cons(a$prime, v1.acc);
                    return {
                        val: new Cons(f(acc$prime), v1.val),
                        acc: acc$prime
                    };
                };
            };
            return new Cons(f(v), (Data_Foldable.foldr(foldableList)(go)({
                val: Nil.value,
                acc: Nil.value
            })(v.value1)).val);
        };
        throw new Error("Failed pattern match at Data.List.Types line 145, column 1 - line 145, column 35: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    return function ($copy_v2) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, v2) {
                            if (!v2) {
                                $tco_done = true;
                                return false;
                            };
                            if (v instanceof Nil && v1 instanceof Nil) {
                                $tco_done = true;
                                return v2;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                                return;
                            };
                            $tco_done = true;
                            return false;
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                        };
                        return $tco_result;
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    };
});
var eqList = function (dictEq) {
    return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};
var eqNonEmptyList = function (dictEq) {
    return Data_NonEmpty.eqNonEmpty(eq1List)(dictEq);
};
var ord1List = new Data_Ord.Ord1(function () {
    return eq1List;
}, function (dictOrd) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.EQ.value;
                        };
                        if (v instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.LT.value;
                        };
                        if (v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.GT.value;
                        };
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_var_v = v.value1;
                                $copy_v1 = v1.value1;
                                return;
                            };
                            $tco_done = true;
                            return v2;
                        };
                        throw new Error("Failed pattern match at Data.List.Types line 55, column 5 - line 55, column 20: " + [ v.constructor.name, v1.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v, $copy_v1);
                    };
                    return $tco_result;
                };
            };
            return go(xs)(ys);
        };
    };
});
var ordList = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqList(dictOrd.Eq0());
    }, Data_Ord.compare1(ord1List)(dictOrd));
};
var ordNonEmptyList = function (dictOrd) {
    return Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd);
};
var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
    return extendNonEmptyList;
}, function (v) {
    return v.value0;
});
var applyList = new Control_Apply.Apply(function () {
    return functorList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types line 120, column 1 - line 120, column 33: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
    return functorNonEmptyList;
}, function (v) {
    return function (v1) {
        return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
    };
});
var bindList = new Control_Bind.Bind(function () {
    return applyList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types line 127, column 1 - line 127, column 31: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
    return applyNonEmptyList;
}, function (v) {
    return function (f) {
        var v1 = f(v.value0);
        return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(Control_Bind.bind(bindList)(v.value1)(function ($167) {
            return toList(f($167));
        })));
    };
});
var applicativeList = new Control_Applicative.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Control_Monad.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var altNonEmptyList = new Control_Alt.Alt(function () {
    return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return applicativeList;
}, function () {
    return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
    return alternativeList;
}, function () {
    return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
    return applyNonEmptyList;
}, function ($168) {
    return NonEmptyList(Data_NonEmpty.singleton(plusList)($168));
});
var monadNonEmptyList = new Control_Monad.Monad(function () {
    return applicativeNonEmptyList;
}, function () {
    return bindNonEmptyList;
});
var traversable1NonEmptyList = new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1NonEmptyList;
}, function () {
    return traversableNonEmptyList;
}, function (dictApply) {
    return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApply) {
    return function (f) {
        return function (v) {
            return Data_Functor.mapFlipped(dictApply.Functor0())(Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($169) {
                    return Control_Apply.lift2(dictApply)(Data_Function.flip(nelCons))(acc)(f($169));
                };
            })(Data_Functor.map(dictApply.Functor0())(Control_Applicative.pure(applicativeNonEmptyList))(f(v.value0)))(v.value1))(function (v1) {
                return Data_Foldable.foldl(foldableList)(Data_Function.flip(nelCons))(Control_Applicative.pure(applicativeNonEmptyList)(v1.value0))(v1.value1);
            });
        };
    };
});
module.exports = {
    Nil: Nil,
    Cons: Cons,
    NonEmptyList: NonEmptyList,
    toList: toList,
    nelCons: nelCons,
    showList: showList,
    eqList: eqList,
    eq1List: eq1List,
    ordList: ordList,
    ord1List: ord1List,
    semigroupList: semigroupList,
    monoidList: monoidList,
    functorList: functorList,
    functorWithIndexList: functorWithIndexList,
    foldableList: foldableList,
    foldableWithIndexList: foldableWithIndexList,
    unfoldableList: unfoldableList,
    traversableList: traversableList,
    traversableWithIndexList: traversableWithIndexList,
    applyList: applyList,
    applicativeList: applicativeList,
    bindList: bindList,
    monadList: monadList,
    altList: altList,
    plusList: plusList,
    alternativeList: alternativeList,
    monadZeroList: monadZeroList,
    monadPlusList: monadPlusList,
    extendList: extendList,
    newtypeNonEmptyList: newtypeNonEmptyList,
    eqNonEmptyList: eqNonEmptyList,
    ordNonEmptyList: ordNonEmptyList,
    showNonEmptyList: showNonEmptyList,
    functorNonEmptyList: functorNonEmptyList,
    applyNonEmptyList: applyNonEmptyList,
    applicativeNonEmptyList: applicativeNonEmptyList,
    bindNonEmptyList: bindNonEmptyList,
    monadNonEmptyList: monadNonEmptyList,
    altNonEmptyList: altNonEmptyList,
    extendNonEmptyList: extendNonEmptyList,
    comonadNonEmptyList: comonadNonEmptyList,
    semigroupNonEmptyList: semigroupNonEmptyList,
    foldableNonEmptyList: foldableNonEmptyList,
    traversableNonEmptyList: traversableNonEmptyList,
    foldable1NonEmptyList: foldable1NonEmptyList,
    traversable1NonEmptyList: traversable1NonEmptyList
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Foldable":116,"../Data.FoldableWithIndex":117,"../Data.Function":125,"../Data.Functor":130,"../Data.FunctorWithIndex":132,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Semigroup.Traversable":183,"../Data.Semiring":187,"../Data.Show":189,"../Data.Traversable":209,"../Data.TraversableWithIndex":210,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Prelude":263}],151:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Pattern = function (x) {
    return x;
};
var updateAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(updateAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
    return function (v1) {
        return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
    };
})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));
var uncons = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just({
            head: v.value0,
            tail: v.value1
        });
    };
    throw new Error("Failed pattern match at Data.List line 259, column 1 - line 259, column 66: " + [ v.constructor.name ]);
};
var toUnfoldable = function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value1);
    };
    throw new Error("Failed pattern match at Data.List line 245, column 1 - line 245, column 43: " + [ v.constructor.name ]);
};
var stripPrefix = function (dictEq) {
    return function (v) {
        return function (s) {
            var go = function (prefix) {
                return function (input) {
                    if (prefix instanceof Data_List_Types.Cons && (input instanceof Data_List_Types.Cons && Data_Eq.eq(dictEq)(prefix.value0)(input.value0))) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
                            a: prefix.value1,
                            b: input.value1
                        }));
                    };
                    if (prefix instanceof Data_List_Types.Nil) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
                    };
                    return Data_Maybe.Nothing.value;
                };
            };
            return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
        };
    };
};
var span = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
            var v2 = span(v)(v1.value1);
            return {
                init: new Data_List_Types.Cons(v1.value0, v2.init),
                rest: v2.rest
            };
        };
        return {
            init: Data_List_Types.Nil.value,
            rest: v1
        };
    };
};
var snoc = function (xs) {
    return function (x) {
        return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
    };
};
var singleton = function (a) {
    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
};
var sortBy = function (cmp) {
    var merge = function (v) {
        return function (v1) {
            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
                    return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
                };
                if (Data_Boolean.otherwise) {
                    return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
                };
            };
            if (v instanceof Data_List_Types.Nil) {
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return v;
            };
            throw new Error("Failed pattern match at Data.List line 473, column 3 - line 473, column 38: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
    var mergePairs = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
        };
        return v;
    };
    var mergeAll = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return v.value0;
            };
            $copy_v = mergePairs(v);
            return;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    var sequences = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
            };
            if (Data_Boolean.otherwise) {
                return ascending(v.value1.value0)(function (v1) {
                    return new Data_List_Types.Cons(v.value0, v1);
                })(v.value1.value1);
            };
        };
        return singleton(v);
    };
    var descending = function ($copy_a) {
        return function ($copy_as) {
            return function ($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = new Data_List_Types.Cons(a, as);
                        $copy_v = v.value1;
                        return;
                    };
                    $tco_done = true;
                    return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                };
                return $tco_result;
            };
        };
    };
    var ascending = function ($copy_a) {
        return function ($copy_as) {
            return function ($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = function (ys) {
                            return as(new Data_List_Types.Cons(a, ys));
                        };
                        $copy_v = v.value1;
                        return;
                    };
                    $tco_done = true;
                    return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                };
                return $tco_result;
            };
        };
    };
    return function ($333) {
        return mergeAll(sequences($333));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var showPattern = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Pattern " + (Data_Show.show(Data_List_Types.showList(dictShow))(v) + ")");
    });
};
var reverse = (function () {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return acc;
                };
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List line 368, column 3 - line 368, column 19: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var take = (function () {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            return function ($copy_v1) {
                var $tco_var_acc = $copy_acc;
                var $tco_var_v = $copy_v;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(acc, v, v1) {
                    if (v < 1) {
                        $tco_done = true;
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Cons) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $tco_var_v = v - 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List line 520, column 3 - line 520, column 35: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
                };
                return $tco_result;
            };
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var takeWhile = function (p) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                };
                $tco_done = true;
                return reverse(acc);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var unsnoc = function (lst) {
    var go = function ($copy_v) {
        return function ($copy_acc) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, acc) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return new Data_Maybe.Just({
                        revInit: acc,
                        last: v.value0
                    });
                };
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_v = v.value1;
                    $copy_acc = new Data_List_Types.Cons(v.value0, acc);
                    return;
                };
                throw new Error("Failed pattern match at Data.List line 270, column 3 - line 270, column 23: " + [ v.constructor.name, acc.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_acc);
            };
            return $tco_result;
        };
    };
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
        return {
            init: reverse(h.revInit),
            last: h.last
        };
    })(go(lst)(Data_List_Types.Nil.value));
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    return function ($copy_acc) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, acc) {
                            if (v instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            };
                            if (v1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            };
                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                                return;
                            };
                            throw new Error("Failed pattern match at Data.List line 708, column 3 - line 708, column 21: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
                        };
                        return $tco_result;
                    };
                };
            };
            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var range = function (start) {
    return function (end) {
        if (start === end) {
            return singleton(start);
        };
        if (Data_Boolean.otherwise) {
            var go = function ($copy_s) {
                return function ($copy_e) {
                    return function ($copy_step) {
                        return function ($copy_rest) {
                            var $tco_var_s = $copy_s;
                            var $tco_var_e = $copy_e;
                            var $tco_var_step = $copy_step;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(s, e, step, rest) {
                                if (s === e) {
                                    $tco_done = true;
                                    return new Data_List_Types.Cons(s, rest);
                                };
                                if (Data_Boolean.otherwise) {
                                    $tco_var_s = s + step | 0;
                                    $tco_var_e = e;
                                    $tco_var_step = step;
                                    $copy_rest = new Data_List_Types.Cons(s, rest);
                                    return;
                                };
                                throw new Error("Failed pattern match at Data.List line 148, column 3 - line 149, column 65: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                            };
                            while (!$tco_done) {
                                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
                            };
                            return $tco_result;
                        };
                    };
                };
            };
            return go(end)(start)((function () {
                var $219 = start > end;
                if ($219) {
                    return 1;
                };
                return -1 | 0;
            })())(Data_List_Types.Nil.value);
        };
        throw new Error("Failed pattern match at Data.List line 144, column 1 - line 144, column 32: " + [ start.constructor.name, end.constructor.name ]);
    };
};
var partition = function (p) {
    return function (xs) {
        var select = function (x) {
            return function (v) {
                var $222 = p(x);
                if ($222) {
                    return {
                        no: v.no,
                        yes: new Data_List_Types.Cons(x, v.yes)
                    };
                };
                return {
                    no: new Data_List_Types.Cons(x, v.no),
                    yes: v.yes
                };
            };
        };
        return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
            no: Data_List_Types.Nil.value,
            yes: Data_List_Types.Nil.value
        })(xs);
    };
};
var $$null = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return true;
    };
    return false;
};
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexList);
var mapMaybe = function (f) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    var v1 = f(v.value0);
                    if (v1 instanceof Data_Maybe.Nothing) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    };
                    if (v1 instanceof Data_Maybe.Just) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $copy_v = v.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List line 419, column 5 - line 421, column 32: " + [ v1.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.List line 417, column 3 - line 417, column 27: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var manyRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (p) {
            var go = function (acc) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
                    return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
                        return new Data_List_Types.Cons(v1, acc);
                    })(function (v1) {
                        return reverse(acc);
                    })(v));
                });
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
        };
    };
};
var someRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
        };
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
        };
    };
};
var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
    return function (v) {
        return acc + 1 | 0;
    };
})(0);
var last = function ($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value0);
        };
        if (v instanceof Data_List_Types.Cons) {
            $copy_v = v.value1;
            return;
        };
        $tco_done = true;
        return Data_Maybe.Nothing.value;
    };
    while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
    };
    return $tco_result;
};
var insertBy = function (v) {
    return function (x) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return singleton(x);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                var v2 = v(x)(v1.value0);
                if (v2 instanceof Data_Ordering.GT) {
                    return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
                };
                return new Data_List_Types.Cons(x, v1);
            };
            throw new Error("Failed pattern match at Data.List line 216, column 1 - line 216, column 68: " + [ v.constructor.name, x.constructor.name, v1.constructor.name ]);
        };
    };
};
var insertAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(insertAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var init = function (lst) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return v.init;
    })(unsnoc(lst));
};
var index = function ($copy_v) {
    return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Data_List_Types.Cons && v1 === 0) {
                $tco_done = true;
                return new Data_Maybe.Just(v.value0);
            };
            if (v instanceof Data_List_Types.Cons) {
                $tco_var_v = v.value1;
                $copy_v1 = v1 - 1 | 0;
                return;
            };
            throw new Error("Failed pattern match at Data.List line 281, column 1 - line 281, column 44: " + [ v.constructor.name, v1.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
        };
        return $tco_result;
    };
};
var head = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.List line 230, column 1 - line 230, column 22: " + [ v.constructor.name ]);
};
var transpose = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
        return transpose(v.value1);
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
    };
    throw new Error("Failed pattern match at Data.List line 742, column 1 - line 742, column 54: " + [ v.constructor.name ]);
};
var groupBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            var v2 = span(v(v1.value0))(v1.value1);
            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
        };
        throw new Error("Failed pattern match at Data.List line 605, column 1 - line 605, column 80: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var group = function (dictEq) {
    return groupBy(Data_Eq.eq(dictEq));
};
var group$prime = function (dictOrd) {
    return function ($334) {
        return group(dictOrd.Eq0())(sort(dictOrd)($334));
    };
};
var fromFoldable = function (dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};
var foldM = function (dictMonad) {
    return function (v) {
        return function (a) {
            return function (v1) {
                if (v1 instanceof Data_List_Types.Nil) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(a);
                };
                if (v1 instanceof Data_List_Types.Cons) {
                    return Control_Bind.bind(dictMonad.Bind1())(v(a)(v1.value0))(function (a$prime) {
                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
                    });
                };
                throw new Error("Failed pattern match at Data.List line 753, column 1 - line 753, column 72: " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Data_List_Types.Cons) {
                    if (fn(v1.value0)) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v);
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_v = v + 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    };
                };
                if (v1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List line 301, column 3 - line 301, column 35: " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
            return (length(xs) - 1 | 0) - v | 0;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                return Control_Bind.bind(dictMonad.Bind1())(v(v1.value0))(function (v2) {
                    return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
                        return Control_Applicative.pure(dictMonad.Applicative0())((function () {
                            if (v2) {
                                return new Data_List_Types.Cons(v1.value0, v3);
                            };
                            return v3;
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List line 403, column 1 - line 403, column 75: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (p(v.value0)) {
                        $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                        $copy_v = v.value1;
                        return;
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    };
                };
                throw new Error("Failed pattern match at Data.List line 390, column 3 - line 390, column 27: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var intersectBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
            })(v1);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var nubBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(v1.value0, nubBy(v)(filter(function (y) {
                return !v(v1.value0)(y);
            })(v1.value1)));
        };
        throw new Error("Failed pattern match at Data.List line 634, column 1 - line 634, column 59: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var eqPattern = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(Data_List_Types.eqList(dictEq))(x)(y);
        };
    });
};
var ordPattern = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqPattern(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(x)(y);
        };
    });
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                $copy_v = v.value1;
                return;
            };
            $tco_done = true;
            return v;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return go;
};
var dropEnd = function (n) {
    return function (xs) {
        return take(length(xs) - n | 0)(xs);
    };
};
var drop = function ($copy_v) {
    return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v < 1) {
                $tco_done = true;
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_List_Types.Nil.value;
            };
            if (v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v - 1 | 0;
                $copy_v1 = v1.value1;
                return;
            };
            throw new Error("Failed pattern match at Data.List line 543, column 1 - line 543, column 42: " + [ v.constructor.name, v1.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
        };
        return $tco_result;
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start | 0)(drop(start)(xs));
        };
    };
};
var takeEnd = function (n) {
    return function (xs) {
        return drop(length(xs) - n | 0)(xs);
    };
};
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
                return v2.value1;
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
            };
            throw new Error("Failed pattern match at Data.List line 661, column 1 - line 661, column 67: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var deleteAt = function (v) {
    return function (v1) {
        if (v === 0 && v1 instanceof Data_List_Types.Cons) {
            return new Data_Maybe.Just(v1.value1);
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                return new Data_List_Types.Cons(v1.value0, v2);
            })(deleteAt(v - 1 | 0)(v1.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.id(Control_Category.categoryFn));
};
var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
var alterAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return Data_Maybe.Just.create((function () {
                    var v3 = v1(v2.value0);
                    if (v3 instanceof Data_Maybe.Nothing) {
                        return v2.value1;
                    };
                    if (v3 instanceof Data_Maybe.Just) {
                        return new Data_List_Types.Cons(v3.value0, v2.value1);
                    };
                    throw new Error("Failed pattern match at Data.List line 352, column 3 - line 354, column 23: " + [ v3.constructor.name ]);
                })());
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(alterAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function ($335) {
            return Data_Maybe.Just.create(f($335));
        });
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    singleton: singleton,
    range: range,
    some: some,
    someRec: someRec,
    many: many,
    manyRec: manyRec,
    "null": $$null,
    length: length,
    snoc: snoc,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    alterAt: alterAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    Pattern: Pattern,
    stripPrefix: stripPrefix,
    slice: slice,
    take: take,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    drop: drop,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    transpose: transpose,
    foldM: foldM,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Lazy":15,"../Control.Monad.Rec.Class":47,"../Control.Semigroupoid":60,"../Data.Bifunctor":88,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.FunctorWithIndex":132,"../Data.HeytingAlgebra":141,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Traversable":209,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Data.Unit":220,"../Prelude":263}],152:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_TypeNat = require("../Data.TypeNat");
var Extensions = require("../Extensions");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Type_Proxy = require("../Type.Proxy");
var Mat = function (x) {
    return x;
};
var toArray = function (v) {
    return v;
};
var getElem = function (dictSized) {
    return function (i) {
        return function (j) {
            return function (v) {
                return Data_Maybe.fromJust()(Data_Array.index(v)((i * Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value) | 0) + j | 0));
            };
        };
    };
};
var generate = function (dictSized) {
    return function (f) {
        var size = Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value);
        return Mat(Data_Array.concat(Data_Functor.map(Data_Functor.functorArray)(function (col) {
            return Data_Functor.map(Data_Functor.functorArray)(function (row) {
                return f(col)(row);
            })(Data_Array.range(0)(size - 1 | 0));
        })(Data_Array.range(0)(size - 1 | 0))));
    };
};
var identity$prime = function (dictSized) {
    return generate(dictSized)(function (i) {
        return function (j) {
            var $25 = i === j;
            if ($25) {
                return 1.0;
            };
            return 0.0;
        };
    });
};
var transpose = function (dictSized) {
    return function (m) {
        return generate(dictSized)(function (i) {
            return function (j) {
                return getElem(dictSized)(j)(i)(m);
            };
        });
    };
};
var functorMat = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Data_Functor.map(Data_Functor.functorArray)(f)(v);
    };
});
var scaleMatrix = function (dictEuclideanRing) {
    return function ($34) {
        return Data_Functor.map(functorMat)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())($34));
    };
};
var fromArray = function (dictSized) {
    return function (l) {
        var size = Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value);
        var v = size * size | 0;
        if (v === Data_Array.length(l)) {
            return l;
        };
        if (Data_Boolean.otherwise) {
            return Extensions.fail("Matrix>>fromArray: Wrong array length!");
        };
        throw new Error("Failed pattern match at Data.Matrix line 108, column 6 - line 112, column 1: " + [ v.constructor.name ]);
    };
};
var eqMat = function (dictEq) {
    return new Data_Eq.Eq(function (v) {
        return function (v1) {
            return Data_Eq.eq(Data_Eq.eqArray(dictEq))(v)(v1);
        };
    });
};
var columns = function (dictSized) {
    return function (v) {
        if (Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value) === 2) {
            return [ Data_Array.slice(0)(2)(v), Data_Array.slice(2)(4)(v) ];
        };
        if (Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value) === 3) {
            return [ Data_Array.slice(0)(3)(v), Data_Array.slice(3)(6)(v), Data_Array.slice(6)(9)(v) ];
        };
        if (Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value) === 4) {
            return [ Data_Array.slice(0)(4)(v), Data_Array.slice(4)(8)(v), Data_Array.slice(8)(12)(v), Data_Array.slice(12)(16)(v) ];
        };
        if (Data_Boolean.otherwise) {
            return Extensions.fail("Matrix>>columns: Proxy size not supprted!");
        };
        throw new Error("Failed pattern match at Data.Matrix line 50, column 1 - line 50, column 64: " + [ v.constructor.name ]);
    };
};
var showMat2 = function (dictShow) {
    return new Data_Show.Show(function (m) {
        return "Mat2x2 " + Data_Show.show(Data_Show.showArray(Data_Show.showArray(dictShow)))(columns(Data_TypeNat.s2)(m));
    });
};
var showMat3 = function (dictShow) {
    return new Data_Show.Show(function (m) {
        return "Mat3x3 " + Data_Show.show(Data_Show.showArray(Data_Show.showArray(dictShow)))(columns(Data_TypeNat.s3)(m));
    });
};
var showMat4 = function (dictShow) {
    return new Data_Show.Show(function (m) {
        return "Mat4x4 " + Data_Show.show(Data_Show.showArray(Data_Show.showArray(dictShow)))(columns(Data_TypeNat.s4)(m));
    });
};
var applyMat = new Control_Apply.Apply(function () {
    return functorMat;
}, function (v) {
    return function (v1) {
        return Data_Array.zipWith(function (f$prime) {
            return function (a$prime) {
                return f$prime(a$prime);
            };
        })(v)(v1);
    };
});
module.exports = {
    Mat: Mat,
    generate: generate,
    columns: columns,
    "identity'": identity$prime,
    getElem: getElem,
    scaleMatrix: scaleMatrix,
    fromArray: fromArray,
    toArray: toArray,
    transpose: transpose,
    showMat2: showMat2,
    showMat3: showMat3,
    showMat4: showMat4,
    eqMat: eqMat,
    functorMat: functorMat,
    applyMat: applyMat
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.TypeNat":213,"../Extensions":227,"../Partial.Unsafe":253,"../Prelude":263,"../Type.Proxy":279}],153:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Matrix = require("../Data.Matrix");
var Data_Maybe = require("../Data.Maybe");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_TypeNat = require("../Data.TypeNat");
var Data_Vector = require("../Data.Vector");
var Data_Vector3 = require("../Data.Vector3");
var Data_Vector4 = require("../Data.Vector4");
var Extensions = require("../Extensions");
var $$Math = require("../Math");
var Prelude = require("../Prelude");
var translate3 = function (x) {
    return function (y) {
        return function (z) {
            return function (v) {
                if (v.length === 16) {
                    return [ v[0], v[1], v[2], v[3], v[4], v[5], v[6], v[7], v[8], v[9], v[10], v[11], v[0] * x + v[4] * y + v[8] * z + v[12], v[1] * x + v[5] * y + v[9] * z + v[13], v[2] * x + v[6] * y + v[10] * z + v[14], v[3] * x + v[7] * y + v[11] * z + v[15] ];
                };
                return Extensions.fail("Matrix3>>translate3: Impossible!");
            };
        };
    };
};
var translate = function (v) {
    return function (v1) {
        if (v.length === 3) {
            return translate3(v[0])(v[1])(v[2])(v1);
        };
        return Extensions.fail("Matrix3>>translate: Impossible!");
    };
};
var transform = function (v) {
    return function (v1) {
        if (v.length === 16) {
            var t4 = [ v[3], v[7], v[11] ];
            var w = Data_Vector.dot(v1)(t4) + v[15];
            var t3 = [ v[2], v[6], v[10] ];
            var t2 = [ v[1], v[5], v[9] ];
            var t1 = [ v[0], v[4], v[8] ];
            return [ (Data_Vector.dot(v1)(t1) + v[12]) / w, (Data_Vector.dot(v1)(t2) + v[13]) / w, (Data_Vector.dot(v1)(t3) + v[14]) / w ];
        };
        return Extensions.fail("Matrix4>>transform: Impossible!");
    };
};
var scale3 = function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                if (v3.length === 16) {
                    return [ v3[0] * v, v3[1] * v, v3[2] * v, v3[3] * v, v3[4] * v1, v3[5] * v1, v3[6] * v1, v3[7] * v1, v3[8] * v2, v3[9] * v2, v3[10] * v2, v3[11] * v2, v3[12], v3[13], v3[14], v3[15] ];
                };
                return Extensions.fail("Matrix4>>scale3: Impossible!");
            };
        };
    };
};
var scale = function (v) {
    if (v.length === 3) {
        return scale3(v[0])(v[1])(v[2]);
    };
    return Extensions.fail("Matrix4>>scale: Impossible!");
};
var rotate = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1.length === 3 && v2.length === 16) {
                var s = $$Math.sin(v);
                var l = $$Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]);
                var im = 1.0 / l;
                var x = v1[0] * im;
                var xs = x * s;
                var y = v1[1] * im;
                var ys = y * s;
                var z = v1[2] * im;
                var zs = z * s;
                var c = $$Math.cos(v);
                var c1 = 1.0 - c;
                var xyc1 = x * y * c1;
                var t12 = xyc1 - zs;
                var t21 = xyc1 + zs;
                var xzc1 = x * z * c1;
                var t13 = xzc1 + ys;
                var t31 = xzc1 - ys;
                var yzc1 = y * z * c1;
                var t23 = yzc1 - xs;
                var t32 = yzc1 + xs;
                var t11 = x * x * c1 + c;
                var t22 = y * y * c1 + c;
                var t33 = z * z * c1 + c;
                return [ v2[0] * t11 + v2[4] * t21 + v2[8] * t31, v2[1] * t11 + v2[5] * t21 + v2[9] * t31, v2[2] * t11 + v2[6] * t21 + v2[10] * t31, v2[3] * t11 + v2[7] * t21 + v2[11] * t31, v2[0] * t12 + v2[4] * t22 + v2[8] * t32, v2[1] * t12 + v2[5] * t22 + v2[9] * t32, v2[2] * t12 + v2[6] * t22 + v2[10] * t32, v2[3] * t12 + v2[7] * t22 + v2[11] * t32, v2[0] * t13 + v2[4] * t23 + v2[8] * t33, v2[1] * t13 + v2[5] * t23 + v2[9] * t33, v2[2] * t13 + v2[6] * t23 + v2[10] * t33, v2[3] * t13 + v2[7] * t23 + v2[11] * t33, v2[12], v2[13], v2[14], v2[15] ];
            };
            return Extensions.fail("Matrix4>>rotate: Impossible!");
        };
    };
};
var project = function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                if (v.length === 3 && (v1.length === 16 && (v2.length === 16 && v3.length === 4))) {
                    var temp1 = [ v1[0] * v[0] + v1[4] * v[1] + v1[8] * v[2] + v1[12], v1[1] * v[0] + v1[5] * v[1] + v1[9] * v[2] + v1[13], v1[2] * v[0] + v1[6] * v[1] + v1[10] * v[2] + v1[14], v1[3] * v[0] + v1[7] * v[1] + v1[11] * v[2] + v1[15] ];
                    if (temp1.length === 4) {
                        var temp2 = [ v2[0] * temp1[0] + v2[4] * temp1[1] + v2[8] * temp1[2] + v2[12] * temp1[3], v2[1] * temp1[0] + v2[5] * temp1[1] + v2[9] * temp1[2] + v2[13] * temp1[3], v2[2] * temp1[0] + v2[6] * temp1[1] + v2[10] * temp1[2] + v2[14] * temp1[3], -temp1[2] ];
                        if (temp2.length === 4) {
                            var $138 = temp2[3] === 0.0;
                            if ($138) {
                                return Data_Maybe.Nothing.value;
                            };
                            var gt3$prime = 1.0 / temp2[3];
                            var gt2$prime = temp2[2] * gt3$prime;
                            var gt1$prime = temp2[1] * gt3$prime;
                            var gt0$prime = temp2[0] * gt3$prime;
                            return new Data_Maybe.Just([ (gt0$prime * 0.5 + 0.5) * v3[2] + v3[0], (gt1$prime * 0.5 + 0.5) * v3[3] + v3[1], (1.0 + gt2$prime) * 0.5 ]);
                        };
                        return Extensions.fail("Matrix4>>project: Impossible!");
                    };
                    return Extensions.fail("Matrix4>>project: Impossible!");
                };
                return Extensions.fail("Matrix4>>project: Impossible!");
            };
        };
    };
};
var mulMatVect = function (v) {
    return function (v1) {
        if (v.length === 16 && v1.length === 4) {
            return [ v[0] * v1[0] + v[4] * v1[1] + v[8] * v1[2] + v[12] * v1[3], v[1] * v1[0] + v[5] * v1[1] + v[9] * v1[2] + v[13] * v1[3], v[2] * v1[0] + v[6] * v1[1] + v[10] * v1[2] + v[14] * v1[3], v[3] * v1[0] + v[7] * v1[1] + v[11] * v1[2] + v[15] * v1[3] ];
        };
        return Extensions.fail("Matrix4>>mulMatVect: Impossible!");
    };
};
var mulM = function (v) {
    return function (v1) {
        if (v.length === 16 && v1.length === 16) {
            return [ v[0] * v1[0] + v[4] * v1[1] + v[8] * v1[2] + v[12] * v1[3], v[1] * v1[0] + v[5] * v1[1] + v[9] * v1[2] + v[13] * v1[3], v[2] * v1[0] + v[6] * v1[1] + v[10] * v1[2] + v[14] * v1[3], v[3] * v1[0] + v[7] * v1[1] + v[11] * v1[2] + v[15] * v1[3], v[0] * v1[4] + v[4] * v1[5] + v[8] * v1[6] + v[12] * v1[7], v[1] * v1[4] + v[5] * v1[5] + v[9] * v1[6] + v[13] * v1[7], v[2] * v1[4] + v[6] * v1[5] + v[10] * v1[6] + v[14] * v1[7], v[3] * v1[4] + v[7] * v1[5] + v[11] * v1[6] + v[15] * v1[7], v[0] * v1[8] + v[4] * v1[9] + v[8] * v1[10] + v[12] * v1[11], v[1] * v1[8] + v[5] * v1[9] + v[9] * v1[10] + v[13] * v1[11], v[2] * v1[8] + v[6] * v1[9] + v[10] * v1[10] + v[14] * v1[11], v[3] * v1[8] + v[7] * v1[9] + v[11] * v1[10] + v[15] * v1[11], v[0] * v1[12] + v[4] * v1[13] + v[8] * v1[14] + v[12] * v1[15], v[1] * v1[12] + v[5] * v1[13] + v[9] * v1[14] + v[13] * v1[15], v[2] * v1[12] + v[6] * v1[13] + v[10] * v1[14] + v[14] * v1[15], v[3] * v1[12] + v[7] * v1[13] + v[11] * v1[14] + v[15] * v1[15] ];
        };
        return Extensions.fail("Matrix4>>mulM: Impossible!");
    };
};
var mulAffine = function (v) {
    return function (v1) {
        if (v.length === 16 && v1.length === 16) {
            return [ v[0] * v1[0] + v[1] * v1[4] + v[2] * v1[8], v[4] * v1[0] + v[5] * v1[4] + v[6] * v1[8], v[8] * v1[0] + v[9] * v1[4] + v[10] * v1[8], 0.0, v[0] * v1[1] + v[1] * v1[5] + v[2] * v1[9], v[4] * v1[1] + v[5] * v1[5] + v[6] * v1[9], v[8] * v1[1] + v[9] * v1[5] + v[10] * v1[9], 0.0, v[0] * v1[2] + v[1] * v1[6] + v[2] * v1[10], v[4] * v1[2] + v[5] * v1[6] + v[6] * v1[10], v[8] * v1[2] + v[9] * v1[6] + v[10] * v1[10], 0.0, v[0] * v1[3] + v[1] * v1[7] + v[2] * v1[11] + v[3], v[4] * v1[3] + v[5] * v1[7] + v[6] * v1[11] + v[7], v[8] * v1[3] + v[9] * v1[7] + v[10] * v1[11] + v[11], 1.0 ];
        };
        return Extensions.fail("Matrix4>>mulAffine: Impossible!");
    };
};
var mat4 = Data_Matrix.fromArray(Data_TypeNat.s4);
var makeTranslate3 = function (x) {
    return function (y) {
        return function (z) {
            return [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, x, y, z, 1.0 ];
        };
    };
};
var makeTranslate = function (v) {
    if (v.length === 3) {
        return makeTranslate3(v[0])(v[1])(v[2]);
    };
    return Extensions.fail("Matrix4>>makeTranslate: Impossible!");
};
var makeScale3 = function (x) {
    return function (y) {
        return function (z) {
            return [ x, 0.0, 0.0, 0.0, 0.0, y, 0.0, 0.0, 0.0, 0.0, z, 0.0, 0.0, 0.0, 0.0, 1.0 ];
        };
    };
};
var makeScale = function (v) {
    if (v.length === 3) {
        return makeScale3(v[0])(v[1])(v[2]);
    };
    return Extensions.fail("Matrix4>>makeScale: Impossible!");
};
var makeRotate = function (angle) {
    return function (axis) {
        var v = Data_Vector.normalize(axis);
        if (v.length === 3) {
            var s = $$Math.sin(angle);
            var c = $$Math.cos(angle);
            var c1 = 1.0 - c;
            return [ v[0] * v[0] * c1 + c, v[1] * v[0] * c1 + v[2] * s, v[2] * v[0] * c1 - v[1] * s, 0.0, v[0] * v[1] * c1 - v[2] * s, v[1] * v[1] * c1 + c, v[1] * v[2] * c1 + v[0] * s, 0.0, v[0] * v[2] * c1 + v[1] * s, v[1] * v[2] * c1 - v[0] * s, v[2] * v[2] * c1 + c, 0.0, 0.0, 0.0, 0.0, 1.0 ];
        };
        return Extensions.fail("Matrix4>>makeRotate: Impossible!");
    };
};
var makeOrtho = function (left) {
    return function (right) {
        return function (bottom) {
            return function (top) {
                return function (znear) {
                    return function (zfar) {
                        var z = -2.0 / (zfar - znear);
                        var y = 2.0 / (top - bottom);
                        var x = 2.0 / (right - left);
                        var tZ = -(zfar + znear) / (zfar - znear);
                        var tY = -(top + bottom) / (top - bottom);
                        var tX = -(right + left) / (right - left);
                        return [ x, 0.0, 0.0, 0.0, 0.0, y, 0.0, 0.0, 0.0, 0.0, z, 0.0, tX, tY, tZ, 1.0 ];
                    };
                };
            };
        };
    };
};
var makeOrtho2D = function (left) {
    return function (right) {
        return function (bottom) {
            return function (top) {
                return makeOrtho(left)(right)(bottom)(top)(-1.0)(1.0);
            };
        };
    };
};
var makeLookAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v.length === 3) {
                var v3 = Data_Vector.direction(v)(v1);
                if (v3.length === 3) {
                    var v4 = Data_Vector.normalize(Data_Vector3.cross(Data_EuclideanRing.euclideanRingNumber)(v2)(v3));
                    if (v4.length === 3) {
                        var v5 = Data_Vector.normalize(Data_Vector3.cross(Data_EuclideanRing.euclideanRingNumber)(v3)(v4));
                        if (v5.length === 3) {
                            var m2 = [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -v[0], -v[1], -v[2], 1.0 ];
                            var m1 = [ v4[0], v5[0], v3[0], 0.0, v4[1], v5[1], v3[1], 0.0, v4[2], v5[2], v3[2], 0.0, 0.0, 0.0, 0.0, 1.0 ];
                            return mulM(m1)(m2);
                        };
                        return Extensions.fail("Matrix4>>makeRotate: Impossible!");
                    };
                    return Extensions.fail("Matrix4>>makeRotate: Impossible!");
                };
                return Extensions.fail("Matrix4>>makeRotate: Impossible!");
            };
            return Extensions.fail("Matrix4>>makeLookAt: Impossible!");
        };
    };
};
var makeFrustum = function (left) {
    return function (right) {
        return function (bottom) {
            return function (top) {
                return function (znear) {
                    return function (zfar) {
                        var z = (right + left) / (right - left);
                        var y = (2.0 * znear) / (top - bottom);
                        var x = (2.0 * znear) / (right - left);
                        var d = (-2.0 * zfar * znear) / (zfar - znear);
                        var c = -(zfar + znear) / (zfar - znear);
                        var b = (top + bottom) / (top - bottom);
                        return [ (2.0 * znear) / (right - left), 0.0, 0.0, 0.0, 0.0, (2.0 * znear) / (top - bottom), 0.0, 0.0, (right + left) / (right - left), (top + bottom) / (top - bottom), -(zfar + znear) / (zfar - znear), -1.0, 0.0, 0.0, (-2.0 * zfar * znear) / (zfar - znear), 0.0 ];
                    };
                };
            };
        };
    };
};
var makePerspective = function (fovy) {
    return function (aspect) {
        return function (znear) {
            return function (zfar) {
                var ymax = znear * $$Math.tan((fovy * $$Math.pi) / 360.0);
                var ymin = -ymax;
                var xmin = ymin * aspect;
                var xmax = ymax * aspect;
                return makeFrustum(xmin)(xmax)(ymin)(ymax)(znear)(zfar);
            };
        };
    };
};
var makeBasis = function (v) {
    return function (v1) {
        return function (v2) {
            if (v.length === 3 && (v1.length === 3 && v2.length === 3)) {
                return [ v[0], v[1], v[2], 0.0, v1[0], v1[1], v1[2], 0.0, v2[0], v2[1], v2[2], 0.0, 0.0, 0.0, 0.0, 1.0 ];
            };
            return Extensions.fail("Matrix4>>makeBasis: Impossible!");
        };
    };
};
var inverseOrthonormal = function (v) {
    if (v.length === 16) {
        var v2 = Data_Matrix.transpose(Data_TypeNat.s4)(v);
        if (v2.length === 16) {
            var t = [ v[12], v[13], v[14] ];
            var r14 = -Data_Vector.dot([ v2[2], v2[6], v2[10] ])(t);
            var r13 = -Data_Vector.dot([ v2[1], v2[5], v2[9] ])(t);
            var r12 = -Data_Vector.dot([ v2[0], v2[4], v2[8] ])(t);
            return [ v2[0], v2[1], v2[2], 0.0, v2[4], v2[5], v2[6], 0.0, v2[8], v2[9], v2[10], 0.0, r12, r13, r14, v2[15] ];
        };
        return Extensions.fail("Matrix4>>inverseOrthonormal: Impossible!");
    };
    return Extensions.fail("Matrix4>>inverseOrthonormal: Impossible!");
};
var inverse = function (v) {
    if (v.length === 16) {
        var b11 = v[10] * v[15] - v[11] * v[14];
        var b10 = v[9] * v[15] - v[11] * v[13];
        var b09 = v[9] * v[14] - v[10] * v[13];
        var b08 = v[8] * v[15] - v[11] * v[12];
        var b07 = v[8] * v[14] - v[10] * v[12];
        var b06 = v[8] * v[13] - v[9] * v[12];
        var b05 = v[2] * v[7] - v[3] * v[6];
        var b04 = v[1] * v[7] - v[3] * v[5];
        var b03 = v[1] * v[6] - v[2] * v[5];
        var b02 = v[0] * v[7] - v[3] * v[4];
        var b01 = v[0] * v[6] - v[2] * v[4];
        var b00 = v[0] * v[5] - v[1] * v[4];
        var d = (((b00 * b11 - b01 * b10) + b02 * b09 + b03 * b08) - b04 * b07) + b05 * b06;
        var $353 = d === 0.0;
        if ($353) {
            return Data_Maybe.Nothing.value;
        };
        var invDet = 1.0 / d;
        return Data_Maybe.Just.create([ ((v[5] * b11 - v[6] * b10) + v[7] * b09) * invDet, ((-v[1] * b11 + v[2] * b10) - v[3] * b09) * invDet, ((v[13] * b05 - v[14] * b04) + v[15] * b03) * invDet, ((-v[9] * b05 + v[10] * b04) - v[11] * b03) * invDet, ((-v[4] * b11 + v[6] * b08) - v[7] * b07) * invDet, ((v[0] * b11 - v[2] * b08) + v[3] * b07) * invDet, ((-v[12] * b05 + v[14] * b02) - v[15] * b01) * invDet, ((v[8] * b05 - v[10] * b02) + v[11] * b01) * invDet, ((v[4] * b10 - v[5] * b08) + v[7] * b06) * invDet, ((-v[0] * b10 + v[1] * b08) - v[3] * b06) * invDet, ((v[12] * b04 - v[13] * b02) + v[15] * b00) * invDet, ((-v[8] * b04 + v[9] * b02) - v[11] * b00) * invDet, ((-v[4] * b09 + v[5] * b07) - v[6] * b06) * invDet, ((v[0] * b09 - v[1] * b07) + v[2] * b06) * invDet, ((-v[12] * b03 + v[13] * b01) - v[14] * b00) * invDet, ((v[8] * b03 - v[9] * b01) + v[10] * b00) * invDet ]);
    };
    return Extensions.fail("Matrix4>>inverse: Impossible!");
};
var unProject = function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                if (v.length === 3 && v3.length === 4) {
                    var mvProjMatrix = mulM(v2)(v1);
                    var v4 = inverse(mvProjMatrix);
                    if (v4 instanceof Data_Maybe.Nothing) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (v4 instanceof Data_Maybe.Just) {
                        var inVect = [ ((v[0] - v3[0]) / v3[2]) * 2.0 - 1.0, ((v[1] - v3[1]) / v3[3]) * 2.0 - 1.0, 2.0 * v[2] - 1.0, 1.0 ];
                        var out = mulMatVect(v4.value0)(inVect);
                        if (out.length === 4) {
                            var $376 = out[3] === 0.0;
                            if ($376) {
                                return Data_Maybe.Nothing.value;
                            };
                            var out3$prime = 1.0 / out[3];
                            return new Data_Maybe.Just([ out[0] * out3$prime, out[1] * out3$prime, out[2] * out3$prime ]);
                        };
                        return Extensions.fail("Matrix4>>unProject: Impossible!");
                    };
                    throw new Error("Failed pattern match at Data.Matrix4 line 427, column 8 - line 441, column 1: " + [ v4.constructor.name ]);
                };
                return Extensions.fail("Matrix4>>unProject: Impossible!");
            };
        };
    };
};
var identity = [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ];
module.exports = {
    mat4: mat4,
    identity: identity,
    transform: transform,
    inverseOrthonormal: inverseOrthonormal,
    inverse: inverse,
    makeFrustum: makeFrustum,
    makePerspective: makePerspective,
    makeOrtho: makeOrtho,
    makeOrtho2D: makeOrtho2D,
    mulM: mulM,
    mulAffine: mulAffine,
    makeRotate: makeRotate,
    rotate: rotate,
    makeScale3: makeScale3,
    makeScale: makeScale,
    scale3: scale3,
    scale: scale,
    makeTranslate3: makeTranslate3,
    makeTranslate: makeTranslate,
    translate3: translate3,
    translate: translate,
    makeLookAt: makeLookAt,
    makeBasis: makeBasis,
    project: project,
    unProject: unProject,
    mulMatVect: mulMatVect
};

},{"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Matrix":152,"../Data.Maybe":156,"../Data.Ring":181,"../Data.Semiring":187,"../Data.TypeNat":213,"../Data.Vector":221,"../Data.Vector3":223,"../Data.Vector4":224,"../Extensions":227,"../Math":244,"../Prelude":263}],154:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var First = function (x) {
    return x;
};
var showFirst = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Just) {
            return v;
        };
        return v1;
    };
});
var ordFirst = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1First = Data_Maybe.ord1Maybe;
var newtypeFirst = new Data_Newtype.Newtype(function (n) {
    return n;
}, First);
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var monadFirst = Data_Maybe.monadMaybe;
var invariantFirst = Data_Maybe.invariantMaybe;
var functorFirst = Data_Maybe.functorMaybe;
var extendFirst = Data_Maybe.extendMaybe;
var eqFirst = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1First = Data_Maybe.eq1Maybe;
var boundedFirst = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindFirst = Data_Maybe.bindMaybe;
var applyFirst = Data_Maybe.applyMaybe;
var applicativeFirst = Data_Maybe.applicativeMaybe;
var altFirst = new Control_Alt.Alt(function () {
    return functorFirst;
}, Data_Semigroup.append(semigroupFirst));
var plusFirst = new Control_Plus.Plus(function () {
    return altFirst;
}, Data_Monoid.mempty(monoidFirst));
var alternativeFirst = new Control_Alternative.Alternative(function () {
    return applicativeFirst;
}, function () {
    return plusFirst;
});
var monadZeroFirst = new Control_MonadZero.MonadZero(function () {
    return alternativeFirst;
}, function () {
    return monadFirst;
});
module.exports = {
    First: First,
    newtypeFirst: newtypeFirst,
    eqFirst: eqFirst,
    eq1First: eq1First,
    ordFirst: ordFirst,
    ord1First: ord1First,
    boundedFirst: boundedFirst,
    functorFirst: functorFirst,
    invariantFirst: invariantFirst,
    applyFirst: applyFirst,
    applicativeFirst: applicativeFirst,
    bindFirst: bindFirst,
    monadFirst: monadFirst,
    extendFirst: extendFirst,
    showFirst: showFirst,
    semigroupFirst: semigroupFirst,
    monoidFirst: monoidFirst,
    altFirst: altFirst,
    plusFirst: plusFirst,
    alternativeFirst: alternativeFirst,
    monadZeroFirst: monadZeroFirst
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Extend":14,"../Control.Monad":54,"../Control.MonadZero":56,"../Control.Plus":59,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],155:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Last = function (x) {
    return x;
};
var showLast = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v1 instanceof Data_Maybe.Just) {
            return v1;
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return v;
        };
        throw new Error("Failed pattern match at Data.Maybe.Last line 53, column 1 - line 53, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordLast = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1Last = Data_Maybe.ord1Maybe;
var newtypeLast = new Data_Newtype.Newtype(function (n) {
    return n;
}, Last);
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var monadLast = Data_Maybe.monadMaybe;
var invariantLast = Data_Maybe.invariantMaybe;
var functorLast = Data_Maybe.functorMaybe;
var extendLast = Data_Maybe.extendMaybe;
var eqLast = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1Last = Data_Maybe.eq1Maybe;
var boundedLast = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindLast = Data_Maybe.bindMaybe;
var applyLast = Data_Maybe.applyMaybe;
var applicativeLast = Data_Maybe.applicativeMaybe;
var altLast = new Control_Alt.Alt(function () {
    return functorLast;
}, Data_Semigroup.append(semigroupLast));
var plusLast = new Control_Plus.Plus(function () {
    return altLast;
}, Data_Monoid.mempty(monoidLast));
var alternativeLast = new Control_Alternative.Alternative(function () {
    return applicativeLast;
}, function () {
    return plusLast;
});
var monadZeroLast = new Control_MonadZero.MonadZero(function () {
    return alternativeLast;
}, function () {
    return monadLast;
});
module.exports = {
    Last: Last,
    newtypeLast: newtypeLast,
    eqLast: eqLast,
    eq1Last: eq1Last,
    ordLast: ordLast,
    ord1Last: ord1Last,
    boundedLast: boundedLast,
    functorLast: functorLast,
    invariantLast: invariantLast,
    applyLast: applyLast,
    applicativeLast: applicativeLast,
    bindLast: bindLast,
    monadLast: monadLast,
    extendLast: extendLast,
    showLast: showLast,
    semigroupLast: semigroupLast,
    monoidLast: monoidLast,
    altLast: altLast,
    plusLast: plusLast,
    alternativeLast: alternativeLast,
    monadZeroLast: monadZeroLast
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Extend":14,"../Control.Monad":54,"../Control.MonadZero":56,"../Control.Plus":59,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],156:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Just) {
            return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
        };
        if (v instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at Data.Maybe line 207, column 1 - line 207, column 47: " + [ v.constructor.name ]);
    });
};
var semigroupMaybe = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            if (v instanceof Nothing) {
                return v1;
            };
            if (v1 instanceof Nothing) {
                return v;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Maybe line 176, column 1 - line 176, column 62: " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var optional = function (dictAlternative) {
    return function (a) {
        return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Just.create)(a))(Control_Applicative.pure(dictAlternative.Applicative0())(Nothing.value));
    };
};
var monoidMaybe = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(dictSemigroup);
    }, Nothing.value);
};
var maybe$prime = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v(Data_Unit.unit);
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 232, column 1 - line 232, column 62: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var maybe = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v;
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 219, column 1 - line 219, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Data_Function["const"](false));
var isJust = maybe(false)(Data_Function["const"](true));
var functorMaybe = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Just) {
            return new Just(v(v1.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Control_Category.id(Control_Category.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Control_Category.id(Control_Category.categoryFn));
};
var fromJust = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar35) {
                return $dollar35;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Just) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Maybe line 270, column 1 - line 270, column 46: " + [ v.constructor.name ]);
        })());
    };
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(v(v1));
    };
});
var eqMaybe = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return true;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqMaybe(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Nothing) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Nothing) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 196, column 8 - line 196, column 51: " + [ x.constructor.name, y.constructor.name ]);
        };
    });
};
var eq1Maybe = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqMaybe(dictEq));
});
var ord1Maybe = new Data_Ord.Ord1(function () {
    return eq1Maybe;
}, function (dictOrd) {
    return Data_Ord.compare(ordMaybe(dictOrd));
});
var boundedMaybe = function (dictBounded) {
    return new Data_Bounded.Bounded(function () {
        return ordMaybe(dictBounded.Ord0());
    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
};
var applyMaybe = new Control_Apply.Apply(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return Data_Functor.map(functorMaybe)(v.value0)(v1);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 68, column 1 - line 68, column 35: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindMaybe = new Control_Bind.Bind(function () {
    return applyMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return v1(v.value0);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 127, column 1 - line 127, column 33: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applicativeMaybe = new Control_Applicative.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Control_Monad.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Nothing) {
            return v1;
        };
        return v;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return applicativeMaybe;
}, function () {
    return plusMaybe;
});
var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing,
    Just: Just,
    maybe: maybe,
    "maybe'": maybe$prime,
    fromMaybe: fromMaybe,
    "fromMaybe'": fromMaybe$prime,
    isJust: isJust,
    isNothing: isNothing,
    fromJust: fromJust,
    optional: optional,
    functorMaybe: functorMaybe,
    applyMaybe: applyMaybe,
    applicativeMaybe: applicativeMaybe,
    altMaybe: altMaybe,
    plusMaybe: plusMaybe,
    alternativeMaybe: alternativeMaybe,
    bindMaybe: bindMaybe,
    monadMaybe: monadMaybe,
    monadZeroMaybe: monadZeroMaybe,
    extendMaybe: extendMaybe,
    invariantMaybe: invariantMaybe,
    semigroupMaybe: semigroupMaybe,
    monoidMaybe: monoidMaybe,
    eqMaybe: eqMaybe,
    eq1Maybe: eq1Maybe,
    ordMaybe: ordMaybe,
    ord1Maybe: ord1Maybe,
    boundedMaybe: boundedMaybe,
    showMaybe: showMaybe
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Extend":14,"../Control.Monad":54,"../Control.MonadZero":56,"../Control.Plus":59,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],157:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_MediaType = require("../Data.MediaType");
var textXML = "text/xml";
var textPlain = "text/plain";
var textHTML = "text/html";
var textCSV = "text/csv";
var multipartFormData = "multipart/form-data";
var imagePNG = "image/png";
var imageJPEG = "image/jpeg";
var imageGIF = "image/gif";
var applicationXML = "application/xml";
var applicationOctetStream = "application/octet-stream";
var applicationJavascript = "application/javascript";
var applicationJSON = "application/json";
var applicationFormURLEncoded = "application/x-www-form-urlencoded";
module.exports = {
    applicationFormURLEncoded: applicationFormURLEncoded,
    applicationJSON: applicationJSON,
    applicationJavascript: applicationJavascript,
    applicationOctetStream: applicationOctetStream,
    applicationXML: applicationXML,
    imageGIF: imageGIF,
    imageJPEG: imageJPEG,
    imagePNG: imagePNG,
    multipartFormData: multipartFormData,
    textCSV: textCSV,
    textHTML: textHTML,
    textPlain: textPlain,
    textXML: textXML
};

},{"../Data.MediaType":158}],158:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var MediaType = function (x) {
    return x;
};
var showMediaType = new Data_Show.Show(function (v) {
    return "(MediaType " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
    return n;
}, MediaType);
var genericMediaType = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.MediaType.MediaType" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(MediaType))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.MediaType.MediaType", [ {
        sigConstructor: "Data.MediaType.MediaType",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.MediaType.MediaType", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var eqMediaType = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordMediaType = new Data_Ord.Ord(function () {
    return eqMediaType;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
module.exports = {
    MediaType: MediaType,
    newtypeMediaType: newtypeMediaType,
    eqMediaType: eqMediaType,
    ordMediaType: ordMediaType,
    genericMediaType: genericMediaType,
    showMediaType: showMediaType
};

},{"../Control.Apply":6,"../Data.Eq":111,"../Data.Generic":138,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],159:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Char = require("../Data.Char");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Int = require("../Data.Int");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Midi = require("../Data.Midi");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser");
var Text_Parsing_StringParser_Combinators = require("../Text.Parsing.StringParser.Combinators");
var Text_Parsing_StringParser_String = require("../Text.Parsing.StringParser.String");
var sysExTerminator = 247;
var skip = Data_Functor["void"](Text_Parsing_StringParser.functorParser);
var rest = Text_Parsing_StringParser_Combinators.many(Text_Parsing_StringParser_String.anyChar);
var notTrackEnd = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Char.toCharCode)(Text_Parsing_StringParser_String.noneOf(Data_Foldable.foldableArray)([ Data_Char.fromCharCode(47) ]));
var notSysExEnd = Text_Parsing_StringParser_String.noneOf(Data_Foldable.foldableArray)([ Data_Char.fromCharCode(sysExTerminator) ]);
var normalise = (function () {
    var f = function ($54) {
        return Data_Char.fromCharCode(255 & Data_Char.toCharCode($54));
    };
    return function ($55) {
        return Data_String.fromCharArray(Data_Functor.map(Data_Functor.functorArray)(f)(Data_String.toCharArray($55)));
    };
})();
var makeTuple = function (a) {
    return function (b) {
        return new Data_Tuple.Tuple(a, b);
    };
};
var int8 = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Char.toCharCode)(Text_Parsing_StringParser_String.anyChar);
var runningStatus = function (parent) {
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.NoteOn) {
        return Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.NoteOn.create(parent.value0.value0))(int8))(int8))("note on running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.NoteOff) {
        return Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.NoteOff.create(parent.value0.value0))(int8))(int8))("note off running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.NoteAfterTouch) {
        return Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.NoteAfterTouch.create(parent.value0.value0))(int8))(int8))("note aftertouch running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.ControlChange) {
        return Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.ControlChange.create(parent.value0.value0))(int8))(int8))("control change running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.ProgramChange) {
        return Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.ProgramChange.create(parent.value0.value0))(int8))("program change running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.ChannelAfterTouch) {
        return Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.ChannelAfterTouch.create(parent.value0.value0))(int8))("channel aftertouch running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.PitchBend) {
        return Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.PitchBend.create(parent.value0.value0))(int8))("pitch bend running status");
    };
    if (parent instanceof Data_Maybe.Just) {
        return Text_Parsing_StringParser.fail("inappropriate parent for running status");
    };
    return Text_Parsing_StringParser.fail("no parent for running status");
};
var signedInt8 = Data_Functor.map(Text_Parsing_StringParser.functorParser)(function (i) {
    var $33 = i > 127;
    if ($33) {
        return i - 256 | 0;
    };
    return i;
})(int8);
var uint16 = (function () {
    var toInt16 = function (a) {
        return function (b) {
            return (a << 8) + b | 0;
        };
    };
    return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(toInt16)(int8))(int8);
})();
var uint24 = (function () {
    var toInt24 = function (a) {
        return function (b) {
            return function (c) {
                return ((a << 16) + (b << 8) | 0) + c | 0;
            };
        };
    };
    return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(toInt24)(int8))(int8))(int8);
})();
var uint32 = (function () {
    var toInt32 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return (((a << 24) + (b << 16) | 0) + (c << 8) | 0) + d | 0;
                };
            };
        };
    };
    return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(toInt32)(int8))(int8))(int8))(int8);
})();
var varIntHelper = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(int8)(function (n) {
    var $34 = n < 128;
    if ($34) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)([ n ]);
    };
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Array.cons(127 & n))(varIntHelper);
});
var varInt = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Foldable.foldl(Data_Foldable.foldableArray)(function (acc) {
    return function (n) {
        return (acc << 7) + n | 0;
    };
})(0))(varIntHelper);
var headerChunk = function (l) {
    return function (a) {
        return function (b) {
            return function (c) {
                var header = {
                    formatType: a,
                    trackCount: b,
                    ticksPerBeat: c
                };
                return new Data_Tuple.Tuple(l, new Data_Midi.Header(header));
            };
        };
    };
};
var count = Data_Unfoldable.replicateA(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.unfoldableList)(Data_List_Types.traversableList);
var unspecified = Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Unspecified.create)(notTrackEnd))(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(varInt)(function (l) {
    return count(l)(int8);
}));
var consumeOverspill = function (actual) {
    return function (expected) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(actual)(function (v) {
            return Data_Functor.map(Text_Parsing_StringParser.functorParser)(function (v1) {
                return v.value1;
            })(skip(count(v.value0 - expected | 0)(int8)));
        });
    };
};
var midiHeader = Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("MThd"))((function () {
    var h = Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(headerChunk)(uint32))(uint16))(uint16))(uint16);
    return Text_Parsing_StringParser_Combinators.withError(consumeOverspill(h)(6))("header");
})());
var channelBuilder3 = function (construct) {
    return function (cmd) {
        return function (x) {
            return function (y) {
                var channel = cmd & 15;
                return construct(channel)(x)(y);
            };
        };
    };
};
var channelBuilder2 = function (construct) {
    return function (cmd) {
        return function (x) {
            var channel = cmd & 15;
            return construct(channel)(x);
        };
    };
};
var catChars = function ($56) {
    return Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_Functor.map(Data_List_Types.functorList)(Data_String.singleton)($56));
};
var buildTimeSig = function (nn) {
    return function (dd) {
        return function (cc) {
            return function (bb) {
                var denom = Data_Int.pow(2)(dd);
                return new Data_Midi.TimeSignature(nn, denom, cc, bb);
            };
        };
    };
};
var buildSysEx = function (sysExType) {
    return function (bytes) {
        var flavour = (function () {
            if (sysExType === 240) {
                return Data_Midi.F0.value;
            };
            return Data_Midi.F7.value;
        })();
        return new Data_Midi.SysEx(flavour, Data_Functor.map(Data_List_Types.functorList)(Data_Char.toCharCode)(bytes));
    };
};
var buildStreamSysEx = function (sysExType) {
    return function (bytes) {
        return buildSysEx(sysExType)(Data_Semigroup.append(Data_List_Types.semigroupList)(bytes)(new Data_List_Types.Cons(Data_Char.fromCharCode(sysExTerminator), Data_List_Types.Nil.value)));
    };
};
var buildRecording = function (h) {
    return function (ts) {
        return new Data_Midi.Recording({
            header: h,
            tracks: ts
        });
    };
};
var buildProgramChange = function (cmd) {
    return function (num) {
        return channelBuilder2(Data_Midi.ProgramChange.create)(cmd)(num);
    };
};
var buildPitchBend = function (cmd) {
    return function (lsb) {
        return function (msb) {
            return channelBuilder2(Data_Midi.PitchBend.create)(cmd)(lsb + (msb << 7) | 0);
        };
    };
};
var buildNoteOff = function (cmd) {
    return function (note) {
        return function (velocity) {
            return channelBuilder3(Data_Midi.NoteOff.create)(cmd)(note)(velocity);
        };
    };
};
var buildNoteAfterTouch = function (cmd) {
    return function (note) {
        return function (pressure) {
            return channelBuilder3(Data_Midi.NoteAfterTouch.create)(cmd)(note)(pressure);
        };
    };
};
var buildNote = function (cmd) {
    return function (note) {
        return function (velocity) {
            var isOff = velocity === 0;
            var channel = cmd & 15;
            if (isOff) {
                return new Data_Midi.NoteOff(channel, note, velocity);
            };
            return new Data_Midi.NoteOn(channel, note, velocity);
        };
    };
};
var buildControlChange = function (cmd) {
    return function (num) {
        return function (value) {
            return channelBuilder3(Data_Midi.ControlChange.create)(cmd)(num)(value);
        };
    };
};
var buildChannelAfterTouch = function (cmd) {
    return function (num) {
        return channelBuilder2(Data_Midi.ChannelAfterTouch.create)(cmd)(num);
    };
};
var brange = function (l) {
    return function (r) {
        var f = function (a) {
            return Data_Char.toCharCode(a) >= l && Data_Char.toCharCode(a) <= r;
        };
        return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Char.toCharCode)(Text_Parsing_StringParser_String.satisfy(f));
    };
};
var channelAfterTouch = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildChannelAfterTouch)(brange(208)(223)))(int8))("channel after touch");
var controlChange = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildControlChange)(brange(176)(191)))(int8))(int8))("control change");
var noteAfterTouch = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildNoteAfterTouch)(brange(160)(175)))(int8))(int8))("note after touch");
var noteOff = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildNoteOff)(brange(128)(143)))(int8))(int8))("note off");
var noteOn = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildNote)(brange(144)(159)))(int8))(int8))("note on");
var pitchBend = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildPitchBend)(brange(224)(239)))(int8))(int8))("pitch bend");
var programChange = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildProgramChange)(brange(192)(207)))(int8))("program change");
var bchar = function (val) {
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Char.toCharCode)(Text_Parsing_StringParser_String["char"](Data_Char.fromCharCode(val)));
};
var bchoice = function (x) {
    return function (y) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(bchar(x))(bchar(y));
    };
};
var sysEx = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildSysEx)(bchoice(240)(247)))(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(varInt)(function (l) {
    return count(l)(Text_Parsing_StringParser_String.anyChar);
})))("system exclusive");
var channelPrefix = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.ChannelPrefix.create)(Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(32))(bchar(1)))(int8))("channel prefix"));
var keySignature = Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(89))(bchar(2)))(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.KeySignature.create)(signedInt8))(int8));
var parseMetaInts = function (target) {
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Functor.map(Data_List_Types.functorList)(Data_Char.toCharCode))(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(target))(varInt))(function (l) {
        return count(l)(Text_Parsing_StringParser_String.anyChar);
    }));
};
var sequencerSpecific = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.SequencerSpecific.create)(parseMetaInts(127)))("sequencer specific");
var parseMetaString = function (target) {
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(catChars)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(target))(varInt))(function (l) {
        return count(l)(Text_Parsing_StringParser_String.anyChar);
    }));
};
var copyright = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Copyright.create)(parseMetaString(2)))("copyright");
var cuePoint = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.CuePoint.create)(parseMetaString(7)))("cue point");
var instrumentName = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.InstrumentName.create)(parseMetaString(4)))("instrument name");
var lyrics = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Lyrics.create)(parseMetaString(5)))("lyrics");
var marker = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Marker.create)(parseMetaString(6)))("marker");
var text = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Text.create)(parseMetaString(1)))("text");
var trackName = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.TrackName.create)(parseMetaString(3)))("track name");
var sequenceNumber = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.SequenceNumber.create)(Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(0))(bchar(2)))(uint16))("sequence number"));
var smpteOffset = Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(84))(bchar(3)))(Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.SMPTEOffset.create)(int8))(int8))(int8))(int8))(int8))("SMTPE offset"));
var streamSysEx = Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildStreamSysEx)(bchar(240)))(Text_Parsing_StringParser_Combinators.many1Till(notSysExEnd)(Text_Parsing_StringParser_String["char"](Data_Char.fromCharCode(sysExTerminator))));
var tempoChange = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Tempo.create)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(81))(bchar(3)))(uint24)))("tempo change");
var timeSignature = Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(88))(bchar(4)))(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildTimeSig)(int8))(int8))(int8))(int8)))("time signature");
var metaEvent = Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(255))(Text_Parsing_StringParser_Combinators.choice(Data_Foldable.foldableArray)([ sequenceNumber, text, copyright, trackName, instrumentName, lyrics, marker, cuePoint, channelPrefix, tempoChange, smpteOffset, timeSignature, keySignature, sequencerSpecific, unspecified ])))("meta event");
var midiEvent = function (parent) {
    return Text_Parsing_StringParser_Combinators.withError(Text_Parsing_StringParser_Combinators.choice(Data_Foldable.foldableArray)([ metaEvent, sysEx, noteOn, noteOff, noteAfterTouch, controlChange, programChange, channelAfterTouch, pitchBend, runningStatus(parent) ]))("midi event");
};
var midiMessage = function (parent) {
    return Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Message.create)(varInt))(midiEvent(parent)))("midi message");
};
var parseMidiMessage = function (s) {
    var v = Text_Parsing_StringParser.runParser(midiMessage(Data_Maybe.Nothing.value))(s);
    if (v instanceof Data_Either.Right) {
        return new Data_Either.Right(v.value0);
    };
    if (v instanceof Data_Either.Left) {
        return Data_Either.Left.create(Data_Show.show(Text_Parsing_StringParser.showParseError)(v.value0));
    };
    throw new Error("Failed pattern match at Data.Midi.Parser line 655, column 3 - line 660, column 19: " + [ v.constructor.name ]);
};
var midiStreamEvent = Text_Parsing_StringParser_Combinators.withError(Text_Parsing_StringParser_Combinators.choice(Data_Foldable.foldableArray)([ metaEvent, streamSysEx, noteOn, noteOff, noteAfterTouch, controlChange, programChange, channelAfterTouch, pitchBend ]))("midi stream event");
var parseMidiEvent = function (s) {
    var v = Text_Parsing_StringParser.runParser(midiStreamEvent)(s);
    if (v instanceof Data_Either.Right) {
        return new Data_Either.Right(v.value0);
    };
    if (v instanceof Data_Either.Left) {
        return Data_Either.Left.create(Data_Show.show(Text_Parsing_StringParser.showParseError)(v.value0));
    };
    throw new Error("Failed pattern match at Data.Midi.Parser line 621, column 3 - line 627, column 20: " + [ v.constructor.name ]);
};
var trackEndMessage = Text_Parsing_StringParser["try"](Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(varInt)(bchar(255)))(bchar(47)))(bchar(0)))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit)))("track end"));
var endOfTrack = Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Data_List_Types.Nil.value)(trackEndMessage);
var moreMessages = function (lastMessage) {
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_Types.Cons.create(lastMessage))(midiMessages(new Data_Maybe.Just(lastMessage.value1)));
};
var midiMessages = function (parent) {
    return Control_Alt.alt(Text_Parsing_StringParser.altParser)(endOfTrack)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(midiMessage(parent))(moreMessages));
};
var midiTrack = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Track.create)(Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("MTrk"))(uint32))(midiMessages(Data_Maybe.Nothing.value)))("midi track"));
var midiTracks = function (v) {
    return Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildRecording(new Data_Midi.Header(v.value0)))(count(v.value0.trackCount)(midiTrack)))("midi tracks");
};
var midi = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(midiHeader)(midiTracks);
var parse = function (s) {
    var v = Text_Parsing_StringParser.runParser(midi)(s);
    if (v instanceof Data_Either.Right) {
        return new Data_Either.Right(v.value0);
    };
    if (v instanceof Data_Either.Left) {
        return Data_Either.Left.create(Data_Show.show(Text_Parsing_StringParser.showParseError)(v.value0));
    };
    throw new Error("Failed pattern match at Data.Midi.Parser line 632, column 3 - line 637, column 20: " + [ v.constructor.name ]);
};
module.exports = {
    normalise: normalise,
    parse: parse,
    parseMidiEvent: parseMidiEvent,
    parseMidiMessage: parseMidiMessage
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Char":97,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Int":146,"../Data.Int.Bits":144,"../Data.List":151,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Midi":162,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.String":201,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Data.Unit":220,"../Prelude":263,"../Text.Parsing.StringParser":274,"../Text.Parsing.StringParser.Combinators":272,"../Text.Parsing.StringParser.String":273}],160:[function(require,module,exports){
"use strict";

var wrapper = function() {

  var messageCallback;
  var connectionCallback;

  function onMIDISuccessListen (midiAccess) {

    // console.log('onMIDISuccessListen');

    var inputs = midiAccess.inputs.values();
    // loop over any register inputs and listen for data on each
    midiAccess.inputs.forEach( function( input, id, inputMap ) {
      input.onmidimessage = onMIDIMessage;
    });
  };

  function onMIDISuccessDetect (midiAccess) {

    // console.log('onMIDISuccessDetect');

    var inputs = midiAccess.inputs.values();
    // loop over any register inputs and listen for data on each
    midiAccess.inputs.forEach( function( input, id, inputMap ) {
      registerInput(input);
    });
    // listen for connect/disconnect message
    midiAccess.onstatechange = onStateChange;
  };

  // register an input device
  function registerInput (input) {
     /*
     console.log("Input port : [ type:'" + input.type + "' id: '" + input.id +
        "' manufacturer: '" + input.manufacturer + "' name: '" + input.name +
        "' version: '" + input.version + "']");
     */
     var midiConnection = { connected : true
                          , portType : input.type
                          , id : input.id
                          , manufacturer : input.manufacturer
                          , name : input.name
                          , version : input.version };

     connectionCallback(midiConnection)();
  };

  // input connect/disconnect signal
  function onStateChange (event) {
	  // showMIDIPorts(midi);
	  var port = event.port, state = port.state, name = port.name, type = port.type, id = port.id;
	  if (port.type == "input") {
      // console.log("State change:", state);
      if (state == "connected") {
        var midiConnection = {  connected : true
                              , portType : port.type
                              , id : port.id
                              , manufacturer : port.manufacturer
                              , name : port.name
                              , version : port.version };

        port.onmidimessage = onMIDIMessage;
        connectionCallback(midiConnection)();
      }
      else if  (state == "disconnected") {
        var midiDisconnection = {  connected : false
                                 , portType : port.type
                                 , id : port.id
                                 , manufacturer : port.manufacturer
                                 , name : port.name
                                 , version : port.version };

        connectionCallback(midiDisconnection)();
        }
    }
}

  function onMIDIMessage (event) {
    // sourceId = event.srcElement.id;
    // console.log("MIDI Message");
    var encodedEvent = { timeStamp : event.timeStamp
                       , encodedBinary : encodeAsString(event.data)};
    messageCallback(encodedEvent)();
  };

  function encodeAsString (data) {
    var dataLength = data.length;
    var encoded = "";
    for (var i = 0; i < dataLength; i++) {
      encoded += String.fromCharCode(data[i]);
    }
    return encoded;
  };

  return {

    webMidiConnect: function () {
      return (navigator.requestMIDIAccess);
    },

    listenImpl: function (midiMessageCallback) {

      messageCallback = midiMessageCallback;

      return function () {
        // console.log('MIDIConnect - listen');
        // request MIDI access and then connect
        if (navigator.requestMIDIAccess) {
          navigator.requestMIDIAccess({
            sysex: false // this defaults to 'false' anyway.
          }).then(onMIDISuccessListen)
        }
      }
    },

    detectInputDevicesImpl: function (connectCallback) {

      connectionCallback = connectCallback;

      return function () {
        console.log('MIDIConnect - detect');
        // request MIDI access and then connect
        if (navigator.requestMIDIAccess) {
          navigator.requestMIDIAccess({
            sysex: false // this defaults to 'false' anyway.
          }).then(onMIDISuccessDetect)
        }
      }
    }
  }
}();

exports.webMidiConnect = wrapper.webMidiConnect;
exports.listen = wrapper.listenImpl;
exports.detectInputDevices = wrapper.detectInputDevicesImpl;

},{}],161:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Midi = require("../Data.Midi");
var Data_Midi_Parser = require("../Data.Midi.Parser");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var Signal_Channel = require("../Signal.Channel");
var timedMidiEvent = function (rme) {
    var v = Data_Midi_Parser.parseMidiEvent(rme.encodedBinary);
    if (v instanceof Data_Either.Left) {
        return {
            timeStamp: rme.timeStamp,
            event: Data_Maybe.Nothing.value
        };
    };
    if (v instanceof Data_Either.Right) {
        return {
            timeStamp: rme.timeStamp,
            event: new Data_Maybe.Just(v.value0)
        };
    };
    throw new Error("Failed pattern match at Data.Midi.WebMidi line 55, column 3 - line 65, column 8: " + [ v.constructor.name ]);
};
var sendEvent = function (chan) {
    return function (rme) {
        return Signal_Channel.send(chan)(timedMidiEvent(rme));
    };
};
var sendDevice = function (chan) {
    return function (d) {
        return Signal_Channel.send(chan)(d);
    };
};
var initialEvent = {
    timeStamp: 0.0,
    event: Data_Maybe.Nothing.value
};
var initialEventSignal = Signal.constant(initialEvent);
var initialDevice = {
    connected: false,
    portType: "",
    id: "",
    manufacturer: "",
    name: "",
    version: ""
};
var initialDeviceSignal = Signal.constant(initialDevice);
var eventSignal = function (rme) {
    return Signal.foldp(Data_Function.flip(Data_Function["const"]))(rme)(initialEventSignal);
};
var eventChannel = Signal_Channel.channel(initialEvent);
var deviceSignal = function (d) {
    return Signal.foldp(Data_Function.flip(Data_Function["const"]))(d)(initialDeviceSignal);
};
var deviceChannel = Signal_Channel.channel(initialDevice);
var createEventChannel = function __do() {
    var v = eventChannel();
    var v1 = $foreign.listen(sendEvent(v))();
    return v;
};
var createDeviceChannel = function __do() {
    var v = deviceChannel();
    var v1 = $foreign.detectInputDevices(sendDevice(v))();
    return v;
};
module.exports = {
    createDeviceChannel: createDeviceChannel,
    createEventChannel: createEventChannel,
    webMidiConnect: $foreign.webMidiConnect,
    detectInputDevices: $foreign.detectInputDevices,
    listen: $foreign.listen
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Data.Either":108,"../Data.Function":125,"../Data.Maybe":156,"../Data.Midi":162,"../Data.Midi.Parser":159,"../Prelude":263,"../Signal":271,"../Signal.Channel":265,"./foreign":160}],162:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_Generic_Rep_Eq = require("../Data.Generic.Rep.Eq");
var Data_Generic_Rep_Ord = require("../Data.Generic.Rep.Ord");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Data_Symbol = require("../Data.Symbol");
var Prelude = require("../Prelude");
var F0 = (function () {
    function F0() {

    };
    F0.value = new F0();
    return F0;
})();
var F7 = (function () {
    function F7() {

    };
    F7.value = new F7();
    return F7;
})();
var Header = (function () {
    function Header(value0) {
        this.value0 = value0;
    };
    Header.create = function (value0) {
        return new Header(value0);
    };
    return Header;
})();
var SequenceNumber = (function () {
    function SequenceNumber(value0) {
        this.value0 = value0;
    };
    SequenceNumber.create = function (value0) {
        return new SequenceNumber(value0);
    };
    return SequenceNumber;
})();
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();
var Copyright = (function () {
    function Copyright(value0) {
        this.value0 = value0;
    };
    Copyright.create = function (value0) {
        return new Copyright(value0);
    };
    return Copyright;
})();
var TrackName = (function () {
    function TrackName(value0) {
        this.value0 = value0;
    };
    TrackName.create = function (value0) {
        return new TrackName(value0);
    };
    return TrackName;
})();
var InstrumentName = (function () {
    function InstrumentName(value0) {
        this.value0 = value0;
    };
    InstrumentName.create = function (value0) {
        return new InstrumentName(value0);
    };
    return InstrumentName;
})();
var Lyrics = (function () {
    function Lyrics(value0) {
        this.value0 = value0;
    };
    Lyrics.create = function (value0) {
        return new Lyrics(value0);
    };
    return Lyrics;
})();
var Marker = (function () {
    function Marker(value0) {
        this.value0 = value0;
    };
    Marker.create = function (value0) {
        return new Marker(value0);
    };
    return Marker;
})();
var CuePoint = (function () {
    function CuePoint(value0) {
        this.value0 = value0;
    };
    CuePoint.create = function (value0) {
        return new CuePoint(value0);
    };
    return CuePoint;
})();
var ChannelPrefix = (function () {
    function ChannelPrefix(value0) {
        this.value0 = value0;
    };
    ChannelPrefix.create = function (value0) {
        return new ChannelPrefix(value0);
    };
    return ChannelPrefix;
})();
var Tempo = (function () {
    function Tempo(value0) {
        this.value0 = value0;
    };
    Tempo.create = function (value0) {
        return new Tempo(value0);
    };
    return Tempo;
})();
var SMPTEOffset = (function () {
    function SMPTEOffset(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    };
    SMPTEOffset.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return new SMPTEOffset(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return SMPTEOffset;
})();
var TimeSignature = (function () {
    function TimeSignature(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    TimeSignature.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new TimeSignature(value0, value1, value2, value3);
                };
            };
        };
    };
    return TimeSignature;
})();
var KeySignature = (function () {
    function KeySignature(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    KeySignature.create = function (value0) {
        return function (value1) {
            return new KeySignature(value0, value1);
        };
    };
    return KeySignature;
})();
var SequencerSpecific = (function () {
    function SequencerSpecific(value0) {
        this.value0 = value0;
    };
    SequencerSpecific.create = function (value0) {
        return new SequencerSpecific(value0);
    };
    return SequencerSpecific;
})();
var SysEx = (function () {
    function SysEx(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SysEx.create = function (value0) {
        return function (value1) {
            return new SysEx(value0, value1);
        };
    };
    return SysEx;
})();
var Unspecified = (function () {
    function Unspecified(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Unspecified.create = function (value0) {
        return function (value1) {
            return new Unspecified(value0, value1);
        };
    };
    return Unspecified;
})();
var NoteOn = (function () {
    function NoteOn(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    NoteOn.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new NoteOn(value0, value1, value2);
            };
        };
    };
    return NoteOn;
})();
var NoteOff = (function () {
    function NoteOff(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    NoteOff.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new NoteOff(value0, value1, value2);
            };
        };
    };
    return NoteOff;
})();
var NoteAfterTouch = (function () {
    function NoteAfterTouch(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    NoteAfterTouch.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new NoteAfterTouch(value0, value1, value2);
            };
        };
    };
    return NoteAfterTouch;
})();
var ControlChange = (function () {
    function ControlChange(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    ControlChange.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new ControlChange(value0, value1, value2);
            };
        };
    };
    return ControlChange;
})();
var ProgramChange = (function () {
    function ProgramChange(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ProgramChange.create = function (value0) {
        return function (value1) {
            return new ProgramChange(value0, value1);
        };
    };
    return ProgramChange;
})();
var ChannelAfterTouch = (function () {
    function ChannelAfterTouch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ChannelAfterTouch.create = function (value0) {
        return function (value1) {
            return new ChannelAfterTouch(value0, value1);
        };
    };
    return ChannelAfterTouch;
})();
var PitchBend = (function () {
    function PitchBend(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    PitchBend.create = function (value0) {
        return function (value1) {
            return new PitchBend(value0, value1);
        };
    };
    return PitchBend;
})();
var Message = (function () {
    function Message(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Message.create = function (value0) {
        return function (value1) {
            return new Message(value0, value1);
        };
    };
    return Message;
})();
var Track = (function () {
    function Track(value0) {
        this.value0 = value0;
    };
    Track.create = function (value0) {
        return new Track(value0);
    };
    return Track;
})();
var Recording = (function () {
    function Recording(value0) {
        this.value0 = value0;
    };
    Recording.create = function (value0) {
        return new Recording(value0);
    };
    return Recording;
})();
var TimedEvent = function (x) {
    return x;
};
var genericTrack = new Data_Generic_Rep.Generic(function (x) {
    return x.value0;
}, function (x) {
    return new Track(x);
});
var genericTimedEvent = new Data_Generic_Rep.Generic(function (x) {
    return new Data_Generic_Rep.Product(x.event, x.timeStamp);
}, function (x) {
    return {
        event: x.value0,
        timeStamp: x.value1
    };
});
var genericSysExFlavour = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof F0) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof F7) {
        return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
    };
    throw new Error("Failed pattern match at Data.Midi line 51, column 8 - line 51, column 62: " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return F0.value;
    };
    if (x instanceof Data_Generic_Rep.Inr) {
        return F7.value;
    };
    throw new Error("Failed pattern match at Data.Midi line 51, column 8 - line 51, column 62: " + [ x.constructor.name ]);
});
var showSysExFlavour = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericSysExFlavour)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "F0";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "F7";
})))));
var genericRecording = new Data_Generic_Rep.Generic(function (x) {
    return new Data_Generic_Rep.Product(x.value0.header, x.value0.tracks);
}, function (x) {
    return new Recording({
        header: x.value0,
        tracks: x.value1
    });
});
var genericMessage = new Data_Generic_Rep.Generic(function (x) {
    return new Data_Generic_Rep.Product(x.value0, x.value1);
}, function (x) {
    return new Message(x.value0, x.value1);
});
var genericHeader = new Data_Generic_Rep.Generic(function (x) {
    return new Data_Generic_Rep.Product(x.value0.formatType, new Data_Generic_Rep.Product(x.value0.ticksPerBeat, x.value0.trackCount));
}, function (x) {
    return new Header({
        formatType: x.value0,
        ticksPerBeat: x.value1.value0,
        trackCount: x.value1.value1
    });
});
var showHeader = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericHeader)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsRec(Data_Generic_Rep_Show.genericShowFieldsProduct(Data_Generic_Rep_Show.genericShowFieldsField(Data_Show.showInt)(new Data_Symbol.IsSymbol(function () {
    return "formatType";
})))(Data_Generic_Rep_Show.genericShowFieldsProduct(Data_Generic_Rep_Show.genericShowFieldsField(Data_Show.showInt)(new Data_Symbol.IsSymbol(function () {
    return "ticksPerBeat";
})))(Data_Generic_Rep_Show.genericShowFieldsField(Data_Show.showInt)(new Data_Symbol.IsSymbol(function () {
    return "trackCount";
}))))))(new Data_Symbol.IsSymbol(function () {
    return "Header";
}))));
var genericEvent = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof SequenceNumber) {
        return new Data_Generic_Rep.Inl(x.value0);
    };
    if (x instanceof Text) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
    };
    if (x instanceof Copyright) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
    };
    if (x instanceof TrackName) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
    };
    if (x instanceof InstrumentName) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
    };
    if (x instanceof Lyrics) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))));
    };
    if (x instanceof Marker) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))));
    };
    if (x instanceof CuePoint) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))));
    };
    if (x instanceof ChannelPrefix) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))));
    };
    if (x instanceof Tempo) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))));
    };
    if (x instanceof SMPTEOffset) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, new Data_Generic_Rep.Product(x.value2, new Data_Generic_Rep.Product(x.value3, x.value4)))))))))))))));
    };
    if (x instanceof TimeSignature) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, new Data_Generic_Rep.Product(x.value2, x.value3)))))))))))))));
    };
    if (x instanceof KeySignature) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))))))))))));
    };
    if (x instanceof SequencerSpecific) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))))))));
    };
    if (x instanceof SysEx) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))))))))))))));
    };
    if (x instanceof Unspecified) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))))))))))))))));
    };
    if (x instanceof NoteOn) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2)))))))))))))))))));
    };
    if (x instanceof NoteOff) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2))))))))))))))))))));
    };
    if (x instanceof NoteAfterTouch) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2)))))))))))))))))))));
    };
    if (x instanceof ControlChange) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2))))))))))))))))))))));
    };
    if (x instanceof ProgramChange) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))))))))))))))))))));
    };
    if (x instanceof ChannelAfterTouch) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))))))))))))))))))))));
    };
    if (x instanceof PitchBend) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Product(x.value0, x.value1)))))))))))))))))))))));
    };
    throw new Error("Failed pattern match at Data.Midi line 91, column 8 - line 91, column 48: " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return new SequenceNumber(x.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return new Text(x.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return new Copyright(x.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
        return new TrackName(x.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
        return new InstrumentName(x.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
        return new Lyrics(x.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
        return new Marker(x.value0.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
        return new CuePoint(x.value0.value0.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
        return new ChannelPrefix(x.value0.value0.value0.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
        return new Tempo(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))) {
        return new SMPTEOffset(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))) {
        return new TimeSignature(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))) {
        return new KeySignature(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))) {
        return new SequencerSpecific(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))) {
        return new SysEx(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))) {
        return new Unspecified(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))) {
        return new NoteOn(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))) {
        return new NoteOff(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))) {
        return new NoteAfterTouch(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))))) {
        return new ControlChange(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))))) {
        return new ProgramChange(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))))))) {
        return new ChannelAfterTouch(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr))))))))))))))))))))) {
        return new PitchBend(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    throw new Error("Failed pattern match at Data.Midi line 91, column 8 - line 91, column 48: " + [ x.constructor.name ]);
});
var showEvent = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericEvent)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
    return "SequenceNumber";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "Text";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "Copyright";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "TrackName";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "InstrumentName";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "Lyrics";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "Marker";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "CuePoint";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
    return "ChannelPrefix";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
    return "Tempo";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))))))(new Data_Symbol.IsSymbol(function () {
    return "SMPTEOffset";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt)))))(new Data_Symbol.IsSymbol(function () {
    return "TimeSignature";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt)))(new Data_Symbol.IsSymbol(function () {
    return "KeySignature";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_List_Types.showList(Data_Show.showInt)))(new Data_Symbol.IsSymbol(function () {
    return "SequencerSpecific";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(showSysExFlavour))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_List_Types.showList(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "SysEx";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_List_Types.showList(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "Unspecified";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "NoteOn";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "NoteOff";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "NoteAfterTouch";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "ControlChange";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt)))(new Data_Symbol.IsSymbol(function () {
    return "ProgramChange";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt)))(new Data_Symbol.IsSymbol(function () {
    return "ChannelAfterTouch";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt)))(new Data_Symbol.IsSymbol(function () {
    return "PitchBend";
}))))))))))))))))))))))))));
var showMessage = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericMessage)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(showEvent)))(new Data_Symbol.IsSymbol(function () {
    return "Message";
}))));
var showTrack = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericTrack)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_List_Types.showList(showMessage)))(new Data_Symbol.IsSymbol(function () {
    return "Track";
}))));
var showRecording = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericRecording)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsRec(Data_Generic_Rep_Show.genericShowFieldsProduct(Data_Generic_Rep_Show.genericShowFieldsField(showHeader)(new Data_Symbol.IsSymbol(function () {
    return "header";
})))(Data_Generic_Rep_Show.genericShowFieldsField(Data_List_Types.showList(showTrack))(new Data_Symbol.IsSymbol(function () {
    return "tracks";
})))))(new Data_Symbol.IsSymbol(function () {
    return "Recording";
}))));
var showTimedEvent = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericTimedEvent)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsRec(Data_Generic_Rep_Show.genericShowFieldsProduct(Data_Generic_Rep_Show.genericShowFieldsField(Data_Maybe.showMaybe(showEvent))(new Data_Symbol.IsSymbol(function () {
    return "event";
})))(Data_Generic_Rep_Show.genericShowFieldsField(Data_Show.showNumber)(new Data_Symbol.IsSymbol(function () {
    return "timeStamp";
})))))(new Data_Symbol.IsSymbol(function () {
    return "TimedEvent";
}))));
var eqSysExFlavour = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericSysExFlavour)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))));
var ordSysExFlavour = new Data_Ord.Ord(function () {
    return eqSysExFlavour;
}, Data_Generic_Rep_Ord.genericCompare(genericSysExFlavour)(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))));
var eqHeader = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericHeader)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqRec(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqField(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqField(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqField(Data_Eq.eqInt)))))));
var ordHeader = new Data_Ord.Ord(function () {
    return eqHeader;
}, Data_Generic_Rep_Ord.genericCompare(genericHeader)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdRec(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdField(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdField(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdField(Data_Ord.ordInt)))))));
var eqEvent = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericEvent)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_List_Types.eqList(Data_Eq.eqInt))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(eqSysExFlavour))(Data_Generic_Rep_Eq.genericEqArgument(Data_List_Types.eqList(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_List_Types.eqList(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))))))))))))))))))))))));
var eqMessage = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericMessage)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(eqEvent)))));
var eqTrack = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericTrack)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_List_Types.eqList(eqMessage)))));
var eqRecording = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericRecording)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqRec(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqField(eqHeader))(Data_Generic_Rep_Eq.genericEqField(Data_List_Types.eqList(eqTrack)))))));
var ordEvent = new Data_Ord.Ord(function () {
    return eqEvent;
}, Data_Generic_Rep_Ord.genericCompare(genericEvent)(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_List_Types.ordList(Data_Ord.ordInt))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(ordSysExFlavour))(Data_Generic_Rep_Ord.genericOrdArgument(Data_List_Types.ordList(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_List_Types.ordList(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))))(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))))))))))))))))))))))));
var ordMessage = new Data_Ord.Ord(function () {
    return eqMessage;
}, Data_Generic_Rep_Ord.genericCompare(genericMessage)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(ordEvent)))));
var ordTrack = new Data_Ord.Ord(function () {
    return eqTrack;
}, Data_Generic_Rep_Ord.genericCompare(genericTrack)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_List_Types.ordList(ordMessage)))));
var ordRecording = new Data_Ord.Ord(function () {
    return eqRecording;
}, Data_Generic_Rep_Ord.genericCompare(genericRecording)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdRec(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdField(ordHeader))(Data_Generic_Rep_Ord.genericOrdField(Data_List_Types.ordList(ordTrack)))))));
module.exports = {
    Track: Track,
    Header: Header,
    SequenceNumber: SequenceNumber,
    Text: Text,
    Copyright: Copyright,
    TrackName: TrackName,
    InstrumentName: InstrumentName,
    Lyrics: Lyrics,
    Marker: Marker,
    CuePoint: CuePoint,
    ChannelPrefix: ChannelPrefix,
    Tempo: Tempo,
    SMPTEOffset: SMPTEOffset,
    TimeSignature: TimeSignature,
    KeySignature: KeySignature,
    SequencerSpecific: SequencerSpecific,
    SysEx: SysEx,
    Unspecified: Unspecified,
    NoteOn: NoteOn,
    NoteOff: NoteOff,
    NoteAfterTouch: NoteAfterTouch,
    ControlChange: ControlChange,
    ProgramChange: ProgramChange,
    ChannelAfterTouch: ChannelAfterTouch,
    PitchBend: PitchBend,
    TimedEvent: TimedEvent,
    Message: Message,
    Recording: Recording,
    F0: F0,
    F7: F7,
    genericSysExFlavour: genericSysExFlavour,
    showSysExFlavour: showSysExFlavour,
    eqSysExFlavour: eqSysExFlavour,
    ordSysExFlavour: ordSysExFlavour,
    genericEvent: genericEvent,
    showEvent: showEvent,
    eqEvent: eqEvent,
    ordEvent: ordEvent,
    genericTimedEvent: genericTimedEvent,
    showTimedEvent: showTimedEvent,
    genericMessage: genericMessage,
    showMessage: showMessage,
    eqMessage: eqMessage,
    ordMessage: ordMessage,
    genericTrack: genericTrack,
    showTrack: showTrack,
    eqTrack: eqTrack,
    ordTrack: ordTrack,
    genericHeader: genericHeader,
    showHeader: showHeader,
    eqHeader: eqHeader,
    ordHeader: ordHeader,
    genericRecording: genericRecording,
    showRecording: showRecording,
    eqRecording: eqRecording,
    ordRecording: ordRecording
};

},{"../Data.Eq":111,"../Data.Generic.Rep":136,"../Data.Generic.Rep.Eq":133,"../Data.Generic.Rep.Ord":134,"../Data.Generic.Rep.Show":135,"../Data.List":151,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Show":189,"../Data.Symbol":202,"../Prelude":263}],163:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Additive = function (x) {
    return x;
};
var showAdditive = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupAdditive = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.add(dictSemiring)(v)(v1);
        };
    });
};
var ordAdditive = function (dictOrd) {
    return dictOrd;
};
var newtypeAdditive = new Data_Newtype.Newtype(function (n) {
    return n;
}, Additive);
var monoidAdditive = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(dictSemiring);
    }, Data_Semiring.zero(dictSemiring));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorAdditive = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function (dictEq) {
    return dictEq;
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, Data_Newtype.unwrap(newtypeAdditive));
var boundedAdditive = function (dictBounded) {
    return dictBounded;
};
var applyAdditive = new Control_Apply.Apply(function () {
    return functorAdditive;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindAdditive = new Control_Bind.Bind(function () {
    return applyAdditive;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeAdditive = new Control_Applicative.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Control_Monad.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive,
    newtypeAdditive: newtypeAdditive,
    eqAdditive: eqAdditive,
    ordAdditive: ordAdditive,
    boundedAdditive: boundedAdditive,
    functorAdditive: functorAdditive,
    invariantAdditive: invariantAdditive,
    applyAdditive: applyAdditive,
    applicativeAdditive: applicativeAdditive,
    bindAdditive: bindAdditive,
    monadAdditive: monadAdditive,
    extendAdditive: extendAdditive,
    comonadAdditive: comonadAdditive,
    showAdditive: showAdditive,
    semigroupAdditive: semigroupAdditive,
    monoidAdditive: monoidAdditive
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Prelude":263}],164:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Conj = function (x) {
    return x;
};
var showConj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringConj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var semigroupConj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordConj = function (dictOrd) {
    return dictOrd;
};
var newtypeConj = new Data_Newtype.Newtype(function (n) {
    return n;
}, Conj);
var monoidConj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var invariantConj = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorConj = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function (dictEq) {
    return dictEq;
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, Data_Newtype.unwrap(newtypeConj));
var boundedConj = function (dictBounded) {
    return dictBounded;
};
var applyConj = new Control_Apply.Apply(function () {
    return functorConj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindConj = new Control_Bind.Bind(function () {
    return applyConj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeConj = new Control_Applicative.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Control_Monad.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj,
    newtypeConj: newtypeConj,
    eqConj: eqConj,
    ordConj: ordConj,
    boundedConj: boundedConj,
    functorConj: functorConj,
    invariantConj: invariantConj,
    applyConj: applyConj,
    applicativeConj: applicativeConj,
    bindConj: bindConj,
    monadConj: monadConj,
    extendConj: extendConj,
    comonadConj: comonadConj,
    showConj: showConj,
    semigroupConj: semigroupConj,
    monoidConj: monoidConj,
    semiringConj: semiringConj
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.HeytingAlgebra":141,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Prelude":263}],165:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Disj = function (x) {
    return x;
};
var showDisj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringDisj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var semigroupDisj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordDisj = function (dictOrd) {
    return dictOrd;
};
var newtypeDisj = new Data_Newtype.Newtype(function (n) {
    return n;
}, Disj);
var monoidDisj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var invariantDisj = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDisj = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function (dictEq) {
    return dictEq;
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, Data_Newtype.unwrap(newtypeDisj));
var boundedDisj = function (dictBounded) {
    return dictBounded;
};
var applyDisj = new Control_Apply.Apply(function () {
    return functorDisj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDisj = new Control_Bind.Bind(function () {
    return applyDisj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDisj = new Control_Applicative.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Control_Monad.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj,
    newtypeDisj: newtypeDisj,
    eqDisj: eqDisj,
    ordDisj: ordDisj,
    boundedDisj: boundedDisj,
    functorDisj: functorDisj,
    invariantDisj: invariantDisj,
    applyDisj: applyDisj,
    applicativeDisj: applicativeDisj,
    bindDisj: bindDisj,
    monadDisj: monadDisj,
    extendDisj: extendDisj,
    comonadDisj: comonadDisj,
    showDisj: showDisj,
    semigroupDisj: semigroupDisj,
    monoidDisj: monoidDisj,
    semiringDisj: semiringDisj
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.HeytingAlgebra":141,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Prelude":263}],166:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Dual = function (x) {
    return x;
};
var showDual = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupDual = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semigroup.append(dictSemigroup)(v1)(v);
        };
    });
};
var ordDual = function (dictOrd) {
    return dictOrd;
};
var newtypeDual = new Data_Newtype.Newtype(function (n) {
    return n;
}, Dual);
var monoidDual = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(dictMonoid.Semigroup0());
    }, Data_Monoid.mempty(dictMonoid));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDual = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function (dictEq) {
    return dictEq;
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, Data_Newtype.unwrap(newtypeDual));
var boundedDual = function (dictBounded) {
    return dictBounded;
};
var applyDual = new Control_Apply.Apply(function () {
    return functorDual;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDual = new Control_Bind.Bind(function () {
    return applyDual;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDual = new Control_Applicative.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Control_Monad.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual,
    newtypeDual: newtypeDual,
    eqDual: eqDual,
    ordDual: ordDual,
    boundedDual: boundedDual,
    functorDual: functorDual,
    invariantDual: invariantDual,
    applyDual: applyDual,
    applicativeDual: applicativeDual,
    bindDual: bindDual,
    monadDual: monadDual,
    extendDual: extendDual,
    comonadDual: comonadDual,
    showDual: showDual,
    semigroupDual: semigroupDual,
    monoidDual: monoidDual
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],167:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var Endo = function (x) {
    return x;
};
var semigroupEndo = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function ($11) {
            return v(v1($11));
        };
    };
});
var newtypeEndo = new Data_Newtype.Newtype(function (n) {
    return n;
}, Endo);
var monoidEndo = new Data_Monoid.Monoid(function () {
    return semigroupEndo;
}, Control_Category.id(Control_Category.categoryFn));
var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
    return function (ba) {
        return function (v) {
            return function ($12) {
                return ab(v(ba($12)));
            };
        };
    };
});
module.exports = {
    Endo: Endo,
    newtypeEndo: newtypeEndo,
    invariantEndo: invariantEndo,
    semigroupEndo: semigroupEndo,
    monoidEndo: monoidEndo
};

},{"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Functor.Invariant":128,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Prelude":263}],168:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupMultiplicative = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.mul(dictSemiring)(v)(v1);
        };
    });
};
var ordMultiplicative = function (dictOrd) {
    return dictOrd;
};
var newtypeMultiplicative = new Data_Newtype.Newtype(function (n) {
    return n;
}, Multiplicative);
var monoidMultiplicative = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(dictSemiring);
    }, Data_Semiring.one(dictSemiring));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorMultiplicative = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function (dictEq) {
    return dictEq;
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, Data_Newtype.unwrap(newtypeMultiplicative));
var boundedMultiplicative = function (dictBounded) {
    return dictBounded;
};
var applyMultiplicative = new Control_Apply.Apply(function () {
    return functorMultiplicative;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindMultiplicative = new Control_Bind.Bind(function () {
    return applyMultiplicative;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Control_Monad.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative,
    newtypeMultiplicative: newtypeMultiplicative,
    eqMultiplicative: eqMultiplicative,
    ordMultiplicative: ordMultiplicative,
    boundedMultiplicative: boundedMultiplicative,
    functorMultiplicative: functorMultiplicative,
    invariantMultiplicative: invariantMultiplicative,
    applyMultiplicative: applyMultiplicative,
    applicativeMultiplicative: applicativeMultiplicative,
    bindMultiplicative: bindMultiplicative,
    monadMultiplicative: monadMultiplicative,
    extendMultiplicative: extendMultiplicative,
    comonadMultiplicative: comonadMultiplicative,
    showMultiplicative: showMultiplicative,
    semigroupMultiplicative: semigroupMultiplicative,
    monoidMultiplicative: monoidMultiplicative
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Prelude":263}],169:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Monoid = function (Semigroup0, mempty) {
    this.Semigroup0 = Semigroup0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Data_Semigroup.semigroupUnit;
}, Data_Unit.unit);
var monoidString = new Monoid(function () {
    return Data_Semigroup.semigroupString;
}, "");
var monoidOrdering = new Monoid(function () {
    return Data_Ordering.semigroupOrdering;
}, Data_Ordering.EQ.value);
var monoidArray = new Monoid(function () {
    return Data_Semigroup.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (dictMonoid) {
    return new Monoid(function () {
        return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
    }, Data_Function["const"](mempty(dictMonoid)));
};
var power = function (dictMonoid) {
    return function (x) {
        var go = function (p) {
            if (p <= 0) {
                return mempty(dictMonoid);
            };
            if (p === 1) {
                return x;
            };
            if (p % 2 === 0) {
                var x$prime = go(p / 2 | 0);
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
            };
            if (Data_Boolean.otherwise) {
                var x$prime = go(p / 2 | 0);
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
            };
            throw new Error("Failed pattern match at Data.Monoid line 52, column 3 - line 52, column 17: " + [ p.constructor.name ]);
        };
        return go;
    };
};
var guard = function (dictMonoid) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return mempty(dictMonoid);
            };
            throw new Error("Failed pattern match at Data.Monoid line 60, column 1 - line 60, column 49: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
module.exports = {
    Monoid: Monoid,
    mempty: mempty,
    power: power,
    guard: guard,
    monoidUnit: monoidUnit,
    monoidOrdering: monoidOrdering,
    monoidFn: monoidFn,
    monoidString: monoidString,
    monoidArray: monoidArray
};

},{"../Data.Boolean":90,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Unit":220,"../Prelude":263}],170:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67}],171:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Prelude = require("../Prelude");
var Newtype = function (unwrap, wrap) {
    this.unwrap = unwrap;
    this.wrap = wrap;
};
var wrap = function (dict) {
    return dict.wrap;
};
var unwrap = function (dict) {
    return dict.unwrap;
};
var underF2 = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($50) {
                            return function ($51) {
                                return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(wrap(dictNewtype)))($50)($51));
                            };
                        };
                    };
                };
            };
        };
    };
};
var underF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($52) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($52)));
                        };
                    };
                };
            };
        };
    };
};
var under2 = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($53) {
                    return function ($54) {
                        return unwrap(dictNewtype1)(Data_Function.on(f)(wrap(dictNewtype))($53)($54));
                    };
                };
            };
        };
    };
};
var under = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($55) {
                    return unwrap(dictNewtype1)(f(wrap(dictNewtype)($55)));
                };
            };
        };
    };
};
var un = function (dictNewtype) {
    return function (v) {
        return unwrap(dictNewtype);
    };
};
var traverse = function (dictFunctor) {
    return function (dictNewtype) {
        return function (v) {
            return function (f) {
                return function ($56) {
                    return Data_Functor.map(dictFunctor)(wrap(dictNewtype))(f(unwrap(dictNewtype)($56)));
                };
            };
        };
    };
};
var overF2 = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($57) {
                            return function ($58) {
                                return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(unwrap(dictNewtype)))($57)($58));
                            };
                        };
                    };
                };
            };
        };
    };
};
var overF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($59) {
                            return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($59)));
                        };
                    };
                };
            };
        };
    };
};
var over2 = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($60) {
                    return function ($61) {
                        return wrap(dictNewtype1)(Data_Function.on(f)(unwrap(dictNewtype))($60)($61));
                    };
                };
            };
        };
    };
};
var over = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($62) {
                    return wrap(dictNewtype1)(f(unwrap(dictNewtype)($62)));
                };
            };
        };
    };
};
var op = function (dictNewtype) {
    return un(dictNewtype);
};
var collect = function (dictFunctor) {
    return function (dictNewtype) {
        return function (v) {
            return function (f) {
                return function ($63) {
                    return wrap(dictNewtype)(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($63)));
                };
            };
        };
    };
};
var alaF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($64) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                        };
                    };
                };
            };
        };
    };
};
var ala = function (dictFunctor) {
    return function (dictNewtype) {
        return function (dictNewtype1) {
            return function (v) {
                return function (f) {
                    return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
                };
            };
        };
    };
};
module.exports = {
    unwrap: unwrap,
    wrap: wrap,
    Newtype: Newtype,
    un: un,
    op: op,
    ala: ala,
    alaF: alaF,
    over: over,
    overF: overF,
    under: under,
    underF: underF,
    over2: over2,
    overF2: overF2,
    under2: under2,
    underF2: underF2,
    traverse: traverse,
    collect: collect
};

},{"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Functor":130,"../Prelude":263}],172:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unfoldable1 = require("../Data.Unfoldable1");
var Prelude = require("../Prelude");
var NonEmpty = (function () {
    function NonEmpty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    NonEmpty.create = function (value0) {
        return function (value1) {
            return new NonEmpty(value0, value1);
        };
    };
    return NonEmpty;
})();
var unfoldable1NonEmpty = function (dictUnfoldable) {
    return new Data_Unfoldable1.Unfoldable1(function (f) {
        return function (b) {
            return Data_Tuple.uncurry(NonEmpty.create)(Data_Functor.map(Data_Tuple.functorTuple)(Data_Unfoldable.unfoldr(dictUnfoldable)(Data_Functor.map(Data_Maybe.functorMaybe)(f)))(f(b)));
        };
    });
};
var tail = function (v) {
    return v.value1;
};
var singleton = function (dictPlus) {
    return function (a) {
        return new NonEmpty(a, Control_Plus.empty(dictPlus));
    };
};
var showNonEmpty = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var oneOf = function (dictAlternative) {
    return function (v) {
        return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
    };
};
var head = function (v) {
    return v.value0;
};
var functorNonEmpty = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return new NonEmpty(f(v.value0), Data_Functor.map(dictFunctor)(f)(v.value1));
        };
    });
};
var functorWithIndex = function (dictFunctorWithIndex) {
    return new Data_FunctorWithIndex.FunctorWithIndex(function () {
        return functorNonEmpty(dictFunctorWithIndex.Functor0());
    }, function (f) {
        return function (v) {
            return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($140) {
                return f(Data_Maybe.Just.create($140));
            })(v.value1));
        };
    });
};
var fromNonEmpty = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var foldl1 = function (dictFoldable) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
        };
    };
};
var foldableNonEmpty = function (dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
        return function (f) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
            };
        };
    });
};
var foldableWithIndexNonEmpty = function (dictFoldableWithIndex) {
    return new Data_FoldableWithIndex.FoldableWithIndex(function () {
        return foldableNonEmpty(dictFoldableWithIndex.Foldable0());
    }, function (dictMonoid) {
        return function (f) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(Data_Maybe.Nothing.value)(v.value0))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($141) {
                    return f(Data_Maybe.Just.create($141));
                })(v.value1));
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($142) {
                    return f(Data_Maybe.Just.create($142));
                })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return f(Data_Maybe.Nothing.value)(v.value0)(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function ($143) {
                    return f(Data_Maybe.Just.create($143));
                })(b)(v.value1));
            };
        };
    });
};
var traversableNonEmpty = function (dictTraversable) {
    return new Data_Traversable.Traversable(function () {
        return foldableNonEmpty(dictTraversable.Foldable1());
    }, function () {
        return functorNonEmpty(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
        };
    }, function (dictApplicative) {
        return function (f) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
            };
        };
    });
};
var traversableWithIndexNonEmpty = function (dictTraversableWithIndex) {
    return new Data_TraversableWithIndex.TraversableWithIndex(function () {
        return foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());
    }, function () {
        return functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
    }, function () {
        return traversableNonEmpty(dictTraversableWithIndex.Traversable2());
    }, function (dictApplicative) {
        return function (f) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($144) {
                    return f(Data_Maybe.Just.create($144));
                })(v.value1));
            };
        };
    });
};
var foldable1NonEmpty = function (dictFoldable) {
    return new Data_Semigroup_Foldable.Foldable1(function () {
        return foldableNonEmpty(dictFoldable);
    }, function (dictSemigroup) {
        return foldMap1(dictSemigroup)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    }, function (dictSemigroup) {
        return function (f) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(function (s) {
                    return function (a1) {
                        return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
                    };
                })(f(v.value0))(v.value1);
            };
        };
    });
};
var foldMap1 = function (dictSemigroup) {
    return function (dictFoldable) {
        return Data_Semigroup_Foldable.foldMap1(foldable1NonEmpty(dictFoldable))(dictSemigroup);
    };
};
var fold1 = function (dictSemigroup) {
    return function (dictFoldable) {
        return Data_Semigroup_Foldable.fold1(foldable1NonEmpty(dictFoldable))(dictSemigroup);
    };
};
var eq1NonEmpty = function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
        return function (v) {
            return function (v1) {
                return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq1(dictEq1)(dictEq)(v.value1)(v1.value1);
            };
        };
    });
};
var eqNonEmpty = function (dictEq1) {
    return function (dictEq) {
        return new Data_Eq.Eq(Data_Eq.eq1(eq1NonEmpty(dictEq1))(dictEq));
    };
};
var ord1NonEmpty = function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
        return eq1NonEmpty(dictOrd1.Eq10());
    }, function (dictOrd) {
        return function (v) {
            return function (v1) {
                var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                if (v2 instanceof Data_Ordering.EQ) {
                    return Data_Ord.compare1(dictOrd1)(dictOrd)(v.value1)(v1.value1);
                };
                return v2;
            };
        };
    });
};
var ordNonEmpty = function (dictOrd1) {
    return function (dictOrd) {
        return new Data_Ord.Ord(function () {
            return eqNonEmpty(dictOrd1.Eq10())(dictOrd.Eq0());
        }, Data_Ord.compare1(ord1NonEmpty(dictOrd1))(dictOrd));
    };
};
module.exports = {
    NonEmpty: NonEmpty,
    singleton: singleton,
    foldl1: foldl1,
    foldMap1: foldMap1,
    fold1: fold1,
    fromNonEmpty: fromNonEmpty,
    oneOf: oneOf,
    head: head,
    tail: tail,
    showNonEmpty: showNonEmpty,
    eqNonEmpty: eqNonEmpty,
    eq1NonEmpty: eq1NonEmpty,
    ordNonEmpty: ordNonEmpty,
    ord1NonEmpty: ord1NonEmpty,
    functorNonEmpty: functorNonEmpty,
    functorWithIndex: functorWithIndex,
    foldableNonEmpty: foldableNonEmpty,
    foldableWithIndexNonEmpty: foldableWithIndexNonEmpty,
    traversableNonEmpty: traversableNonEmpty,
    traversableWithIndexNonEmpty: traversableWithIndexNonEmpty,
    foldable1NonEmpty: foldable1NonEmpty,
    unfoldable1NonEmpty: unfoldable1NonEmpty
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Foldable":116,"../Data.FoldableWithIndex":117,"../Data.Function":125,"../Data.Functor":130,"../Data.FunctorWithIndex":132,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Show":189,"../Data.Traversable":209,"../Data.TraversableWithIndex":210,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Data.Unfoldable1":218,"../Prelude":263}],173:[function(require,module,exports){
"use strict";

exports["null"] = null;

exports.nullable = function (a, r, f) {
  return a == null ? r : f(a);
};

exports.notNull = function (x) {
  return x;
};

},{}],174:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
var toMaybe = function (n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};
var showNullable = function (dictShow) {
    return new Data_Show.Show(function ($5) {
        return Data_Maybe.maybe("null")(Data_Show.show(dictShow))(toMaybe($5));
    });
};
var eqNullable = function (dictEq) {
    return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
};
var ordNullable = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqNullable(dictOrd.Eq0());
    }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
};
var eq1Nullable = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqNullable(dictEq));
});
var ord1Nullable = new Data_Ord.Ord1(function () {
    return eq1Nullable;
}, function (dictOrd) {
    return Data_Ord.compare(ordNullable(dictOrd));
});
module.exports = {
    toMaybe: toMaybe,
    toNullable: toNullable,
    showNullable: showNullable,
    eqNullable: eqNullable,
    eq1Nullable: eq1Nullable,
    ordNullable: ordNullable,
    ord1Nullable: ord1Nullable
};

},{"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Show":189,"../Prelude":263,"./foreign":173}],175:[function(require,module,exports){
"use strict";

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x === y ? eq : gt;
        };
      };
    };
  };
};

},{}],176:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Ordering = require("../Data.Ordering");
var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
    unsafeCompare: unsafeCompare
};

},{"../Data.Ordering":179,"./foreign":175}],177:[function(require,module,exports){
"use strict";

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

},{}],178:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Eq = require("../Data.Eq");
var Data_Ord_Unsafe = require("../Data.Ord.Unsafe");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Ord = function (Eq0, compare) {
    this.Eq0 = Eq0;
    this.compare = compare;
};
var Ord1 = function (Eq10, compare1) {
    this.Eq10 = Eq10;
    this.compare1 = compare1;
};
var ordVoid = new Ord(function () {
    return Data_Eq.eqVoid;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordUnit = new Ord(function () {
    return Data_Eq.eqUnit;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordString = new Ord(function () {
    return Data_Eq.eqString;
}, Data_Ord_Unsafe.unsafeCompare);
var ordOrdering = new Ord(function () {
    return Data_Ordering.eqOrdering;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        throw new Error("Failed pattern match at Data.Ord line 67, column 1 - line 67, column 37: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordNumber = new Ord(function () {
    return Data_Eq.eqNumber;
}, Data_Ord_Unsafe.unsafeCompare);
var ordInt = new Ord(function () {
    return Data_Eq.eqInt;
}, Data_Ord_Unsafe.unsafeCompare);
var ordChar = new Ord(function () {
    return Data_Eq.eqChar;
}, Data_Ord_Unsafe.unsafeCompare);
var ordBoolean = new Ord(function () {
    return Data_Eq.eqBoolean;
}, Data_Ord_Unsafe.unsafeCompare);
var compare1 = function (dict) {
    return dict.compare1;
};
var compare = function (dict) {
    return dict.compare;
};
var comparing = function (dictOrd) {
    return function (f) {
        return function (x) {
            return function (y) {
                return compare(dictOrd)(f(x))(f(y));
            };
        };
    };
};
var greaterThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return true;
            };
            return false;
        };
    };
};
var greaterThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return false;
            };
            return true;
        };
    };
};
var signum = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $33 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($33) {
                return Data_Semiring.one(dictRing.Semiring0());
            };
            return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
        };
    };
};
var lessThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return true;
            };
            return false;
        };
    };
};
var lessThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return false;
            };
            return true;
        };
    };
};
var max = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return y;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return x;
            };
            throw new Error("Failed pattern match at Data.Ord line 122, column 3 - line 125, column 12: " + [ v.constructor.name ]);
        };
    };
};
var min = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return x;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return y;
            };
            throw new Error("Failed pattern match at Data.Ord line 113, column 3 - line 116, column 12: " + [ v.constructor.name ]);
        };
    };
};
var ordArray = function (dictOrd) {
    return new Ord(function () {
        return Data_Eq.eqArray(dictOrd.Eq0());
    }, (function () {
        var toDelta = function (x) {
            return function (y) {
                var v = compare(dictOrd)(x)(y);
                if (v instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if (v instanceof Data_Ordering.LT) {
                    return 1;
                };
                if (v instanceof Data_Ordering.GT) {
                    return -1 | 0;
                };
                throw new Error("Failed pattern match at Data.Ord line 60, column 7 - line 65, column 1: " + [ v.constructor.name ]);
            };
        };
        return function (xs) {
            return function (ys) {
                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
            };
        };
    })());
};
var ord1Array = new Ord1(function () {
    return Data_Eq.eq1Array;
}, function (dictOrd) {
    return compare(ordArray(dictOrd));
});
var clamp = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
            };
        };
    };
};
var between = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                if (lessThan(dictOrd)(x)(low)) {
                    return false;
                };
                if (greaterThan(dictOrd)(x)(hi)) {
                    return false;
                };
                return true;
            };
        };
    };
};
var abs = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $42 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($42) {
                return x;
            };
            return Data_Ring.negate(dictRing)(x);
        };
    };
};
module.exports = {
    Ord: Ord,
    compare: compare,
    Ord1: Ord1,
    compare1: compare1,
    lessThan: lessThan,
    lessThanOrEq: lessThanOrEq,
    greaterThan: greaterThan,
    greaterThanOrEq: greaterThanOrEq,
    comparing: comparing,
    min: min,
    max: max,
    clamp: clamp,
    between: between,
    abs: abs,
    signum: signum,
    ordBoolean: ordBoolean,
    ordInt: ordInt,
    ordNumber: ordNumber,
    ordString: ordString,
    ordChar: ordChar,
    ordUnit: ordUnit,
    ordVoid: ordVoid,
    ordArray: ordArray,
    ordOrdering: ordOrdering,
    ord1Array: ord1Array
};

},{"../Data.Eq":111,"../Data.Ord.Unsafe":176,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Unit":220,"../Data.Void":225,"./foreign":177}],179:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var showOrdering = new Data_Show.Show(function (v) {
    if (v instanceof LT) {
        return "LT";
    };
    if (v instanceof GT) {
        return "GT";
    };
    if (v instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Data.Ordering line 26, column 1 - line 26, column 39: " + [ v.constructor.name ]);
});
var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        if (v instanceof EQ) {
            return v1;
        };
        throw new Error("Failed pattern match at Data.Ordering line 21, column 1 - line 21, column 49: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invert = function (v) {
    if (v instanceof GT) {
        return LT.value;
    };
    if (v instanceof EQ) {
        return EQ.value;
    };
    if (v instanceof LT) {
        return GT.value;
    };
    throw new Error("Failed pattern match at Data.Ordering line 33, column 1 - line 33, column 31: " + [ v.constructor.name ]);
};
var eqOrdering = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return true;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return true;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return true;
        };
        return false;
    };
});
module.exports = {
    LT: LT,
    GT: GT,
    EQ: EQ,
    invert: invert,
    eqOrdering: eqOrdering,
    semigroupOrdering: semigroupOrdering,
    showOrdering: showOrdering
};

},{"../Data.Eq":111,"../Data.Semigroup":185,"../Data.Show":189}],180:[function(require,module,exports){
"use strict";

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

},{}],181:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Ring = function (Semiring0, sub) {
    this.Semiring0 = Semiring0;
    this.sub = sub;
};
var sub = function (dict) {
    return dict.sub;
};
var ringUnit = new Ring(function () {
    return Data_Semiring.semiringUnit;
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var ringNumber = new Ring(function () {
    return Data_Semiring.semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return Data_Semiring.semiringInt;
}, $foreign.intSub);
var ringFn = function (dictRing) {
    return new Ring(function () {
        return Data_Semiring.semiringFn(dictRing.Semiring0());
    }, function (f) {
        return function (g) {
            return function (x) {
                return sub(dictRing)(f(x))(g(x));
            };
        };
    });
};
var negate = function (dictRing) {
    return function (a) {
        return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
    };
};
module.exports = {
    Ring: Ring,
    sub: sub,
    negate: negate,
    ringInt: ringInt,
    ringNumber: ringNumber,
    ringUnit: ringUnit,
    ringFn: ringFn
};

},{"../Data.Semiring":187,"../Data.Unit":220,"./foreign":180}],182:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Act = function (x) {
    return x;
};
var Foldable1 = function (Foldable0, fold1, foldMap1) {
    this.Foldable0 = Foldable0;
    this.fold1 = fold1;
    this.foldMap1 = foldMap1;
};
var semigroupAct = function (dictApply) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Control_Apply.applySecond(dictApply)(v)(v1);
        };
    });
};
var getAct = function (v) {
    return v;
};
var foldMap1 = function (dict) {
    return dict.foldMap1;
};
var traverse1_ = function (dictFoldable1) {
    return function (dictApply) {
        return function (f) {
            return function (t) {
                return Data_Functor.voidRight(dictApply.Functor0())(Data_Unit.unit)(getAct(foldMap1(dictFoldable1)(semigroupAct(dictApply))(function ($28) {
                    return Act(f($28));
                })(t)));
            };
        };
    };
};
var for1_ = function (dictFoldable1) {
    return function (dictApply) {
        return Data_Function.flip(traverse1_(dictFoldable1)(dictApply));
    };
};
var sequence1_ = function (dictFoldable1) {
    return function (dictApply) {
        return traverse1_(dictFoldable1)(dictApply)(Control_Category.id(Control_Category.categoryFn));
    };
};
var fold1Default = function (dictFoldable1) {
    return function (dictSemigroup) {
        return foldMap1(dictFoldable1)(dictSemigroup)(Control_Category.id(Control_Category.categoryFn));
    };
};
var foldableDual = new Foldable1(function () {
    return Data_Foldable.foldableDual;
}, function (dictSemigroup) {
    return fold1Default(foldableDual)(dictSemigroup);
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
});
var foldableMultiplicative = new Foldable1(function () {
    return Data_Foldable.foldableMultiplicative;
}, function (dictSemigroup) {
    return fold1Default(foldableMultiplicative)(dictSemigroup);
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
});
var fold1 = function (dict) {
    return dict.fold1;
};
var foldMap1Default = function (dictFoldable1) {
    return function (dictFunctor) {
        return function (dictSemigroup) {
            return function (f) {
                return function ($29) {
                    return fold1(dictFoldable1)(dictSemigroup)(Data_Functor.map(dictFunctor)(f)($29));
                };
            };
        };
    };
};
module.exports = {
    Foldable1: Foldable1,
    foldMap1: foldMap1,
    fold1: fold1,
    traverse1_: traverse1_,
    for1_: for1_,
    sequence1_: sequence1_,
    foldMap1Default: foldMap1Default,
    fold1Default: fold1Default,
    foldableDual: foldableDual,
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Apply":6,"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Monoid.Dual":166,"../Data.Monoid.Multiplicative":168,"../Data.Semigroup":185,"../Data.Unit":220,"../Prelude":263}],183:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Functor = require("../Data.Functor");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Traversable1 = function (Foldable10, Traversable1, sequence1, traverse1) {
    this.Foldable10 = Foldable10;
    this.Traversable1 = Traversable1;
    this.sequence1 = sequence1;
    this.traverse1 = traverse1;
};
var traverse1 = function (dict) {
    return dict.traverse1;
};
var sequence1Default = function (dictTraversable1) {
    return function (dictApply) {
        return traverse1(dictTraversable1)(dictApply)(Control_Category.id(Control_Category.categoryFn));
    };
};
var sequence1 = function (dict) {
    return dict.sequence1;
};
var traverse1Default = function (dictTraversable1) {
    return function (dictApply) {
        return function (f) {
            return function (ta) {
                return sequence1(dictTraversable1)(dictApply)(Data_Functor.map((dictTraversable1.Traversable1()).Functor0())(f)(ta));
            };
        };
    };
};
module.exports = {
    sequence1: sequence1,
    traverse1: traverse1,
    Traversable1: Traversable1,
    traverse1Default: traverse1Default,
    sequence1Default: sequence1Default
};

},{"../Control.Category":11,"../Data.Functor":130,"../Data.Semigroup.Foldable":182,"../Data.Traversable":209,"../Prelude":263}],184:[function(require,module,exports){
"use strict";

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    if (xs.length === 0) return ys;
    if (ys.length === 0) return xs;
    return xs.concat(ys);
  };
};

},{}],185:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Semigroup = function (append) {
    this.append = append;
};
var semigroupVoid = new Semigroup(function (v) {
    return Data_Void.absurd;
});
var semigroupUnit = new Semigroup(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupArray = new Semigroup($foreign.concatArray);
var append = function (dict) {
    return dict.append;
};
var semigroupFn = function (dictSemigroup) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return append(dictSemigroup)(f(x))(g(x));
            };
        };
    });
};
module.exports = {
    Semigroup: Semigroup,
    append: append,
    semigroupString: semigroupString,
    semigroupUnit: semigroupUnit,
    semigroupVoid: semigroupVoid,
    semigroupFn: semigroupFn,
    semigroupArray: semigroupArray
};

},{"../Data.Unit":220,"../Data.Void":225,"./foreign":184}],186:[function(require,module,exports){
"use strict";

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

},{}],187:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var zero = function (dict) {
    return dict.zero;
};
var semiringUnit = new Semiring(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, Data_Unit.unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var one = function (dict) {
    return dict.one;
};
var mul = function (dict) {
    return dict.mul;
};
var add = function (dict) {
    return dict.add;
};
var semiringFn = function (dictSemiring) {
    return new Semiring(function (f) {
        return function (g) {
            return function (x) {
                return add(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (f) {
        return function (g) {
            return function (x) {
                return mul(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (v) {
        return one(dictSemiring);
    }, function (v) {
        return zero(dictSemiring);
    });
};
module.exports = {
    Semiring: Semiring,
    add: add,
    zero: zero,
    mul: mul,
    one: one,
    semiringInt: semiringInt,
    semiringNumber: semiringNumber,
    semiringFn: semiringFn,
    semiringUnit: semiringUnit
};

},{"../Data.Unit":220,"./foreign":186}],188:[function(require,module,exports){
"use strict";

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  var str = n.toString();
  return isNaN(str + ".0") ? str : str + ".0";
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);
  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07": return "'\\a'";
      case "\b": return "'\\b'";
      case "\f": return "'\\f'";
      case "\n": return "'\\n'";
      case "\r": return "'\\r'";
      case "\t": return "'\\t'";
      case "\v": return "'\\v'";
    }
    return "'\\" + code.toString(10) + "'";
  }
  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(
    /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
    function (c, i) {
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;
        case "\x07": return "\\a";
        case "\b": return "\\b";
        case "\f": return "\\f";
        case "\n": return "\\n";
        case "\r": return "\\r";
        case "\t": return "\\t";
        case "\v": return "\\v";
      }
      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }
  ) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],189:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Show = function (show) {
    this.show = show;
};
var showString = new Show($foreign.showStringImpl);
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
    if (v) {
        return "true";
    };
    if (!v) {
        return "false";
    };
    throw new Error("Failed pattern match at Data.Show line 12, column 1 - line 12, column 37: " + [ v.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
};
module.exports = {
    Show: Show,
    show: show,
    showBoolean: showBoolean,
    showInt: showInt,
    showNumber: showNumber,
    showChar: showChar,
    showString: showString,
    showArray: showArray
};

},{"./foreign":188}],190:[function(require,module,exports){
"use strict";

exports["new"] = function () {
  return {};
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (m) {
      return function (k) {
        return function () {
          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (m) {
  return function (k) {
    return function (v) {
      return function () {
        m[k] = v;
        return m;
      };
    };
  };
};

exports["delete"] = function (m) {
  return function (k) {
    return function () {
      delete m[k];
      return m;
    };
  };
};

},{}],191:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Data_Maybe = require("../Data.Maybe");
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    peek: peek,
    "new": $foreign["new"],
    poke: $foreign.poke,
    "delete": $foreign["delete"]
};

},{"../Control.Monad.Eff":40,"../Control.Monad.ST":49,"../Data.Maybe":156,"./foreign":190}],192:[function(require,module,exports){
"use strict";

exports._copyEff = function (m) {
  return function () {
    var r = {};
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r[k] = m[k];
      }
    }
    return r;
  };
};

exports.empty = {};

exports.runST = function (f) {
  return f;
};

exports._fmapStrMap = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(m0[k]);
    }
  }
  return m;
};

exports._mapWithKey = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(k)(m0[k]);
    }
  }
  return m;
};

exports._foldM = function (bind) {
  return function (f) {
    return function (mz) {
      return function (m) {
        var acc = mz;
        function g(k) {
          return function (z) {
            return f(z)(k)(m[k]);
          };
        }
        for (var k in m) {
          if (hasOwnProperty.call(m, k)) {
            acc = bind(acc)(g(k));
          }
        }
        return acc;
      };
    };
  };
};

exports._foldSCStrMap = function (m, z, f, fromMaybe) {
  var acc = z;
  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      var maybeR = f(acc)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return acc;
      else acc = r;
    }
  }
  return acc;
};

exports.all = function (f) {
  return function (m) {
    for (var k in m) {
      if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
    }
    return true;
  };
};

exports.size = function (m) {
  var s = 0;
  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      ++s;
    }
  }
  return s;
};

exports._lookup = function (no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
};

exports._unsafeDeleteStrMap = function (m, k) {
  delete m[k];
  return m;
};

exports._lookupST = function (no, yes, k, m) {
  return function () {
    return k in m ? yes(m[k]) : no;
  };
};

function toArrayWithKey(f) {
  return function (m) {
    var r = [];
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r.push(f(k)(m[k]));
      }
    }
    return r;
  };
}

exports.toArrayWithKey = toArrayWithKey;

exports.keys = Object.keys || toArrayWithKey(function (k) {
  return function () { return k; };
});

},{}],193:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_StrMap_ST = require("../Data.StrMap.ST");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Prelude = require("../Prelude");
var values = $foreign.toArrayWithKey(function (v) {
    return function (v1) {
        return v1;
    };
});
var toUnfoldable = function (dictUnfoldable) {
    return function ($46) {
        return Data_Array.toUnfoldable(dictUnfoldable)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($46));
    };
};
var toAscUnfoldable = function (dictUnfoldable) {
    return function ($47) {
        return Data_Array.toUnfoldable(dictUnfoldable)(Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($47)));
    };
};
var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
var toArray = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
var thawST = $foreign._copyEff;
var showStrMap = function (dictShow) {
    return new Data_Show.Show(function (m) {
        return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toArray(m)) + ")");
    });
};
var pureST = function (f) {
    return Control_Monad_Eff.runPure($foreign.runST(f));
};
var singleton = function (k) {
    return function (v) {
        return pureST(function __do() {
            var v1 = Data_StrMap_ST["new"]();
            return Data_StrMap_ST.poke(v1)(k)(v)();
        });
    };
};
var mutate = function (f) {
    return function (m) {
        return pureST(function __do() {
            var v = thawST(m)();
            var v1 = f(v)();
            return v;
        });
    };
};
var member = Data_Function_Uncurried.runFn4($foreign._lookup)(false)(Data_Function["const"](true));
var mapWithKey = function (f) {
    return function (m) {
        return $foreign._mapWithKey(m, f);
    };
};
var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var isSubmap = function (dictEq) {
    return function (m1) {
        return function (m2) {
            var f = function (k) {
                return function (v) {
                    return $foreign._lookup(false, Data_Eq.eq(dictEq)(v), k, m2);
                };
            };
            return $foreign.all(f)(m1);
        };
    };
};
var isEmpty = $foreign.all(function (v) {
    return function (v1) {
        return false;
    };
});
var insert = function (k) {
    return function (v) {
        return mutate(function (s) {
            return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(s)(k)(v));
        });
    };
};
var functorStrMap = new Data_Functor.Functor(function (f) {
    return function (m) {
        return $foreign._fmapStrMap(m, f);
    };
});
var functorWithIndexStrMap = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorStrMap;
}, mapWithKey);
var fromFoldableWith = function (dictFoldable) {
    return function (f) {
        return function (l) {
            return pureST(function __do() {
                var v = Data_StrMap_ST["new"]();
                Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
                    return Control_Bind.bind(Control_Monad_Eff.bindEff)($foreign._lookupST(v1.value1, f(v1.value1), v1.value0, v))(Data_StrMap_ST.poke(v)(v1.value0));
                })();
                return v;
            });
        };
    };
};
var fromFoldable = function (dictFoldable) {
    return function (l) {
        return pureST(function __do() {
            var v = Data_StrMap_ST["new"]();
            Control_Monad_Eff.foreachE(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(v)(v1.value0)(v1.value1));
            })();
            return v;
        });
    };
};
var freezeST = $foreign._copyEff;
var foldMaybe = function (f) {
    return function (z) {
        return function (m) {
            return $foreign._foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (z) {
            return $foreign._foldM(Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
        };
    };
};
var semigroupStrMap = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (m1) {
        return function (m2) {
            return mutate(function (s1) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(foldM(Control_Monad_Eff.monadEff)(function (s2) {
                    return function (k) {
                        return function (v2) {
                            return Data_StrMap_ST.poke(s2)(k)($foreign._lookup(v2, function (v1) {
                                return Data_Semigroup.append(dictSemigroup)(v1)(v2);
                            }, k, m2));
                        };
                    };
                })(s1)(m1));
            })(m2);
        };
    });
};
var monoidStrMap = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupStrMap(dictSemigroup);
    }, $foreign.empty);
};
var union = function (m) {
    return mutate(function (s) {
        return Data_Functor["void"](Control_Monad_Eff.functorEff)(foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m));
    });
};
var unions = function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);
};
var fold = $foreign._foldM(Data_Function.applyFlipped);
var foldMap = function (dictMonoid) {
    return function (f) {
        return fold(function (acc) {
            return function (k) {
                return function (v) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
};
var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return foldMap(dictMonoid)(Data_Function["const"](f));
    };
}, function (f) {
    return fold(function (z) {
        return function (v) {
            return f(z);
        };
    });
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var foldableWithIndexStrMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableStrMap;
}, function (dictMonoid) {
    return foldMap(dictMonoid);
}, function (f) {
    return fold(Data_Function.flip(f));
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
        };
    };
});
var traversableWithIndexStrMap = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexStrMap;
}, function () {
    return functorWithIndexStrMap;
}, function () {
    return traversableStrMap;
}, function (dictApplicative) {
    return function (f) {
        return function (ms) {
            return fold(function (acc) {
                return function (k) {
                    return function (v) {
                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                    };
                };
            })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
        };
    };
});
var traversableStrMap = new Data_Traversable.Traversable(function () {
    return foldableStrMap;
}, function () {
    return functorStrMap;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function ($48) {
        return Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexStrMap)(dictApplicative)(Data_Function["const"]($48));
    };
});
var filterWithKey = function (predicate) {
    return function (m) {
        var go = (function () {
            var step = function (acc) {
                return function (k) {
                    return function (v) {
                        var $42 = predicate(k)(v);
                        if ($42) {
                            return Data_StrMap_ST.poke(acc)(k)(v);
                        };
                        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(acc);
                    };
                };
            };
            return function __do() {
                var v = Data_StrMap_ST["new"]();
                return foldM(Control_Monad_Eff.monadEff)(step)(v)(m)();
            };
        })();
        return pureST(go);
    };
};
var filterKeys = function (predicate) {
    return filterWithKey(function ($49) {
        return Data_Function["const"](predicate($49));
    });
};
var filter = function (predicate) {
    return filterWithKey(Data_Function["const"](predicate));
};
var eqStrMap = function (dictEq) {
    return new Data_Eq.Eq(function (m1) {
        return function (m2) {
            return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
        };
    });
};
var ordStrMap = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqStrMap(dictOrd.Eq0());
    }, function (m1) {
        return function (m2) {
            return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(dictOrd)))(toAscArray(m1))(toAscArray(m2));
        };
    });
};
var eq1StrMap = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqStrMap(dictEq));
});
var $$delete = function (k) {
    return mutate(function (s) {
        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST["delete"](s)(k));
    });
};
var pop = function (k) {
    return function (m) {
        return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(lookup(k)(m))(function (a) {
            return new Data_Tuple.Tuple(a, $$delete(k)(m));
        });
    };
};
var alter = function (f) {
    return function (k) {
        return function (m) {
            var v = f(lookup(k)(m));
            if (v instanceof Data_Maybe.Nothing) {
                return $$delete(k)(m);
            };
            if (v instanceof Data_Maybe.Just) {
                return insert(k)(v.value0)(m);
            };
            throw new Error("Failed pattern match at Data.StrMap line 213, column 15 - line 215, column 25: " + [ v.constructor.name ]);
        };
    };
};
var update = function (f) {
    return function (k) {
        return function (m) {
            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
        };
    };
};
module.exports = {
    isEmpty: isEmpty,
    singleton: singleton,
    insert: insert,
    lookup: lookup,
    toUnfoldable: toUnfoldable,
    toAscUnfoldable: toAscUnfoldable,
    fromFoldable: fromFoldable,
    fromFoldableWith: fromFoldableWith,
    "delete": $$delete,
    pop: pop,
    member: member,
    alter: alter,
    update: update,
    mapWithKey: mapWithKey,
    filterWithKey: filterWithKey,
    filterKeys: filterKeys,
    filter: filter,
    values: values,
    union: union,
    unions: unions,
    isSubmap: isSubmap,
    fold: fold,
    foldMap: foldMap,
    foldM: foldM,
    foldMaybe: foldMaybe,
    thawST: thawST,
    freezeST: freezeST,
    pureST: pureST,
    functorStrMap: functorStrMap,
    functorWithIndexStrMap: functorWithIndexStrMap,
    foldableStrMap: foldableStrMap,
    foldableWithIndexStrMap: foldableWithIndexStrMap,
    traversableStrMap: traversableStrMap,
    traversableWithIndexStrMap: traversableWithIndexStrMap,
    eqStrMap: eqStrMap,
    eq1StrMap: eq1StrMap,
    ordStrMap: ordStrMap,
    showStrMap: showStrMap,
    semigroupStrMap: semigroupStrMap,
    monoidStrMap: monoidStrMap,
    empty: $foreign.empty,
    size: $foreign.size,
    keys: $foreign.keys,
    all: $foreign.all,
    runST: $foreign.runST,
    toArrayWithKey: $foreign.toArrayWithKey
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Monad.Eff":40,"../Control.Monad.ST":49,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Eq":111,"../Data.Foldable":116,"../Data.FoldableWithIndex":117,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.FunctorWithIndex":132,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.StrMap.ST":191,"../Data.Traversable":209,"../Data.TraversableWithIndex":210,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Prelude":263,"./foreign":192}],194:[function(require,module,exports){

// | Non-empty strings.
// |
// | Please note that the examples in this documentation use a notation like
// | `NonEmptyString "..."` for demonstration purposes, `NonEmptyString` cannot
// | be created directly like that, as we can't prove the string is non-empty to
// | the compiler at compile-time.
"use strict";
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_String_Unsafe = require("../Data.String.Unsafe");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");

// | A string that is known not to be empty.
var NonEmptyString = function (x) {
    return x;
};

// | A newtype used in cases to specify a non-empty replacement for a pattern.
var NonEmptyReplacement = function (x) {
    return x;
};

// | Returns the argument converted to uppercase.
// |
// | ```purescript
// | toUpper (NonEmptyString "Hello") == NonEmptyString "HELLO"
// | ```
var toUpper = function (v) {
    return Data_String.toUpper(v);
};

// | Converts a `NonEmptyString` back into a standard `String`.
var toString = function (v) {
    return v;
};

// | Returns the argument converted to lowercase.
// |
// | ```purescript
// | toLower (NonEmptyString "hElLo") == NonEmptyString "hello"
// | ```
var toLower = function (v) {
    return Data_String.toLower(v);
};

// | Converts the `NonEmptyString` into an array of characters.
// |
// | ```purescript
// | toCharArray (NonEmptyString "Hello☺\n") == ['H','e','l','l','o','☺','\n']
// | ```
var toCharArray = function (v) {
    return Data_String.toCharArray(v);
};

// | Converts the `NonEmptyString` to a character, if the length of the string
// | is exactly `1`.
// |
// | ```purescript
// | toChar "H" == Just 'H'
// | toChar "Hi" == Nothing
// | ```
var toChar = function (v) {
    return Data_String.toChar(v);
};

// | Returns the last `n` characters of the string. Returns `Nothing` if `n` is
// | less than 1.
// |
// | ```purescript
// | take 5 (NonEmptyString "Hello World") == Just (NonEmptyString "World")
// | take 0 (NonEmptyString "Hello World") == Nothing
// | ```
var takeRight = function (i) {
    return function (v) {
        if (i < 1) {
            return Data_Maybe.Nothing.value;
        };
        if (Data_Boolean.otherwise) {
            return new Data_Maybe.Just(Data_String.takeRight(i)(v));
        };
        throw new Error("Failed pattern match at Data.String.NonEmpty line 367, column 1 - line 367, column 59: " + [ i.constructor.name, v.constructor.name ]);
    };
};

// | Returns the first `n` characters of the string. Returns `Nothing` if `n` is
// | less than 1.
// |
// | ```purescript
// | take 5 (NonEmptyString "Hello World") == Just (NonEmptyString "Hello")
// | take 0 (NonEmptyString "Hello World") == Nothing
// | ```
var take = function (i) {
    return function (v) {
        if (i < 1) {
            return Data_Maybe.Nothing.value;
        };
        if (Data_Boolean.otherwise) {
            return new Data_Maybe.Just(Data_String.take(i)(v));
        };
        throw new Error("Failed pattern match at Data.String.NonEmpty line 355, column 1 - line 355, column 54: " + [ i.constructor.name, v.constructor.name ]);
    };
};

// | Creates a `NonEmptyString` from a string by appending a character.
// |
// | ```purescript
// | snoc 'c' "ab" = NonEmptyString "abc"
// | snoc 'a' "" = NonEmptyString "a"
// | ```
var snoc = function (c) {
    return function (s) {
        return s + Data_String.singleton(c);
    };
};

// | Creates a `NonEmptyString` from a character.
var singleton = function ($74) {
    return NonEmptyString(Data_String.singleton($74));
};
var showNonEmptyString = new Data_Show.Show(function (v) {
    return "(NonEmptyString.unsafeFromString " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var showNonEmptyReplacement = new Data_Show.Show(function (v) {
    return "(NonEmptyReplacement " + (Data_Show.show(showNonEmptyString)(v) + ")");
});
var semigroupNonEmptyString = Data_Semigroup.semigroupString;
var semigroupNonEmptyReplacement = semigroupNonEmptyString;

// | Replaces all occurences of the pattern with the replacement string.
// |
// | ```purescript
// | replaceAll (Pattern "<=") (NonEmptyReplacement "≤") (NonEmptyString "a <= b <= c") == NonEmptyString "a ≤ b ≤ c"
// | ```
var replaceAll = function (pat) {
    return function (v) {
        return function (v1) {
            return Data_String.replaceAll(pat)(v)(v1);
        };
    };
};

// | Replaces the first occurence of the pattern with the replacement string.
// |
// | ```purescript
// | replace (Pattern "<=") (NonEmptyReplacement "≤") (NonEmptyString "a <= b <= c") == NonEmptyString "a ≤ b <= c"
// | ```
var replace = function (pat) {
    return function (v) {
        return function (v1) {
            return Data_String.replace(pat)(v)(v1);
        };
    };
};

// | Prepends a string to this non-empty string. Since one of the strings is
// | non-empty we know the result will be too.
// |
// | ```purescript
// | prependString "be" (NonEmptyString "fore") == NonEmptyString "before"
// | prependString "" (NonEmptyString "fore") == NonEmptyString "fore"
// | ```
var prependString = function (s1) {
    return function (v) {
        return s1 + v;
    };
};
var ordNonEmptyString = Data_Ord.ordString;
var ordNonEmptyReplacement = ordNonEmptyString;

// | Compare two strings in a locale-aware fashion. This is in contrast to
// | the `Ord` instance on `String` which treats strings as arrays of code
// | units:
// |
// | ```purescript
// | NonEmptyString "ä" `localeCompare` NonEmptyString "b" == LT
// | NonEmptyString "ä" `compare` NonEmptyString "b" == GT
// | ```
var localeCompare = function (v) {
    return function (v1) {
        return Data_String.localeCompare(v)(v1);
    };
};
var liftS = function (f) {
    return function (v) {
        return f(v);
    };
};

// | Returns the number of characters the string is composed of.
// |
// | ```purescript
// | length (NonEmptyString "Hello World") == 11
// | ```
var length = function (v) {
    return Data_String.length(v);
};

// | Returns the index of the last occurrence of the pattern in the
// | given string, starting at the specified index
// | and searching backwards towards the beginning of the string.
// | Returns `Nothing` if there is no match.
// |
// | ```purescript
// | lastIndexOf' (Pattern "a") 1 (NonEmptyString "ababa") == Just 0
// | lastIndexOf' (Pattern "a") 3 (NonEmptyString "ababa") == Just 2
// | lastIndexOf' (Pattern "a") 4 (NonEmptyString "ababa") == Just 4
// | ```
var lastIndexOf$prime = function (pat) {
    return function ($75) {
        return liftS(Data_String["lastIndexOf'"](pat)($75));
    };
};

// | Returns the index of the last occurrence of the pattern in the
// | given string. Returns `Nothing` if there is no match.
// |
// | ```purescript
// | lastIndexOf (Pattern "c") (NonEmptyString "abcdc") == Just 4
// | lastIndexOf (Pattern "c") (NonEmptyString "aaa") == Nothing
// | ```
var lastIndexOf = function ($76) {
    return liftS(Data_String.lastIndexOf($76));
};

// | Joins possibly empty strings in a non-empty container together as a new
// | non-empty string, inserting a non-empty string as a separator between them.
// | The result is guaranteed to be non-empty.
// |
// | ```purescript
// | -- array syntax is used for demonstration here, it would need to be a real `Foldable1`
// | joinWith1 (NonEmptyString ", ") ["apple", "banana"] == NonEmptyString "apple, banana"
// | joinWith1 (NonEmptyString "/") ["a", "b", "", "c", ""] == NonEmptyString "a/b//c/"
// | ```
var joinWith1 = function (dictFoldable1) {
    return function (v) {
        return function ($77) {
            return NonEmptyString(Data_Foldable.intercalate(dictFoldable1.Foldable0())(Data_Monoid.monoidString)(v)($77));
        };
    };
};

// | Joins the strings in a container together as a new string, inserting the
// | first argument as separator between them. The result is not guaranteed to
// | be non-empty.
// |
// | ```purescript
// | joinWith ", " [NonEmptyString "apple", NonEmptyString "banana"] == "apple, banana"
// | joinWith ", " [] == ""
// | ```
var joinWith = function (dictFoldable) {
    return function (splice) {
        return function ($78) {
            return Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)(splice)($78);
        };
    };
};

// | Joins non-empty strings in a non-empty container together as a new
// | non-empty string, inserting a possibly empty string as separator between
// | them. The result is guaranteed to be non-empty.
// |
// | ```purescript
// | -- array syntax is used for demonstration here, it would need to be a real `Foldable1`
// | join1With ", " [NonEmptyString "apple", NonEmptyString "banana"] == NonEmptyString "apple, banana"
// | join1With "" [NonEmptyString "apple", NonEmptyString "banana"] == NonEmptyString "applebanana"
// | ```
var join1With = function (dictFoldable1) {
    return function (splice) {
        return function ($79) {
            return NonEmptyString(joinWith(dictFoldable1.Foldable0())(splice)($79));
        };
    };
};

// | Returns the index of the first occurrence of the pattern in the
// | given string, starting at the specified index. Returns `Nothing` if there is
// | no match.
// |
// | ```purescript
// | indexOf' (Pattern "a") 2 (NonEmptyString "ababa") == Just 2
// | indexOf' (Pattern "a") 3 (NonEmptyString "ababa") == Just 4
// | ```
var indexOf$prime = function (pat) {
    return function ($80) {
        return liftS(Data_String["indexOf'"](pat)($80));
    };
};

// | Returns the index of the first occurrence of the pattern in the
// | given string. Returns `Nothing` if there is no match.
// |
// | ```purescript
// | indexOf (Pattern "c") (NonEmptyString "abcdc") == Just 2
// | indexOf (Pattern "c") (NonEmptyString "aaa") == Nothing
// | ```
var indexOf = function ($81) {
    return liftS(Data_String.indexOf($81));
};

// | Creates a `NonEmptyString` from a `String`, returning `Nothing` if the
// | input is empty.
// |
// | ```purescript
// | fromString "" = Nothing
// | fromString "hello" = Just (NonEmptyString "hello")
// | ```
var fromString = function (v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just(v);
};

// | Returns the substrings of a split at the given index, if the index is
// | within bounds.
// |
// | ```purescript
// | splitAt 2 (NonEmptyString "Hello World") == Just { before: Just (NonEmptyString "He"), after: Just (NonEmptyString "llo World") }
// | splitAt 10 (NonEmptyString "Hi") == Nothing
// | ```
var splitAt = function (i) {
    return function (v) {
        var v1 = Data_String.splitAt(i)(v);
        if (v1 instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just({
                before: fromString(v1.value0.before),
                after: fromString(v1.value0.after)
            });
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        throw new Error("Failed pattern match at Data.String.NonEmpty line 416, column 32 - line 420, column 12: " + [ v1.constructor.name ]);
    };
};

// | If the string starts with the given prefix, return the portion of the
// | string left after removing it. If the prefix does not match or there is no
// | remainder, the result will be `Nothing`.
// |
// | ```purescript
// | stripPrefix (Pattern "http:") (NonEmptyString "http://purescript.org") == Just (NonEmptyString "//purescript.org")
// | stripPrefix (Pattern "http:") (NonEmptyString "https://purescript.org") == Nothing
// | stripPrefix (Pattern "Hello!") (NonEmptyString "Hello!") == Nothing
// | ```
var stripPrefix = function (pat) {
    return Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(fromString)(liftS(Data_String.stripPrefix(pat)));
};

// | If the string ends with the given suffix, return the portion of the
// | string left after removing it. If the suffix does not match or there is no
// | remainder, the result will be `Nothing`.
// |
// | ```purescript
// | stripSuffix (Pattern ".exe") (NonEmptyString "purs.exe") == Just (NonEmptyString "purs")
// | stripSuffix (Pattern ".exe") (NonEmptyString "purs") == Nothing
// | stripSuffix (Pattern "Hello!") (NonEmptyString "Hello!") == Nothing
// | ```
var stripSuffix = function (pat) {
    return Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(fromString)(liftS(Data_String.stripSuffix(pat)));
};

// | Returns the longest prefix of characters that satisfy the predicate.
// | `Nothing` is returned if there is no matching prefix.
// |
// | ```purescript
// | takeWhile (_ /= ':') (NonEmptyString "http://purescript.org") == Just (NonEmptyString "http")
// | takeWhile (_ == 'a') (NonEmptyString "xyz") == Nothing
// | ```
var takeWhile = function (f) {
    return function ($82) {
        return fromString(liftS(Data_String.takeWhile(f))($82));
    };
};

// | Removes whitespace from the beginning and end of a string, including
// | [whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)
// | and [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).
// | If the string is entirely made up of whitespace the result will be Nothing.
// |
// | ```purescript
// | trim (NonEmptyString "   Hello  \n World\n\t    ") == Just (NonEmptyString "Hello  \n World")
// | trim (NonEmptyString "   \n") == Nothing
// | ```
var trim = function (v) {
    return fromString(Data_String.trim(v));
};

// | Returns the first character and the rest of the string.
// |
// | ```purescript
// | uncons "a" == { head: 'a', tail: Nothing }
// | uncons "Hello World" == { head: 'H', tail: Just (NonEmptyString "ello World") }
// | ```
var uncons = function (v) {
    return {
        head: Data_String_Unsafe.charAt(0)(v),
        tail: fromString(Data_String.drop(1)(v))
    };
};

// | A partial version of `fromString`.
var unsafeFromString = function (dictPartial) {
    return function ($83) {
        return Data_Maybe.fromJust(dictPartial)(fromString($83));
    };
};

// | Creates a `NonEmptyString` from a `Foldable1` container carrying
// | characters.
var fromFoldable1 = function (dictFoldable1) {
    return function ($84) {
        return Data_Semigroup_Foldable.fold1(dictFoldable1)(semigroupNonEmptyString)($84);
    };
};

// | Creates a `NonEmptyString` from a character array `String`, returning
// | `Nothing` if the input is empty.
// |
// | ```purescript
// | fromCharArray [] = Nothing
// | fromCharArray ['a', 'b', 'c'] = Just (NonEmptyString "abc")
// | ```
var fromCharArray = function (v) {
    if (v.length === 0) {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just(Data_String.fromCharArray(v));
};
var eqNonEmptyString = Data_Eq.eqString;
var eqNonEmptyReplacement = eqNonEmptyString;

// | Returns the suffix remaining after `takeWhile`.
// |
// | ```purescript
// | dropWhile (_ /= '.') (NonEmptyString "Test.purs") == Just (NonEmptyString ".purs")
// | ```
var dropWhile = function (f) {
    return function ($85) {
        return fromString(liftS(Data_String.dropWhile(f))($85));
    };
};

// | Returns the string without the last `n` characters. Returns `Nothing` if
// | more characters are dropped than the string is long.
// |
// | ```purescript
// | dropRight 6 (NonEmptyString "Hello World") == Just (NonEmptyString "Hello")
// | dropRight 20 (NonEmptyString "Hello World") == Nothing
// | ```
var dropRight = function (i) {
    return function (v) {
        if (i >= Data_String.length(v)) {
            return Data_Maybe.Nothing.value;
        };
        if (Data_Boolean.otherwise) {
            return new Data_Maybe.Just(Data_String.dropRight(i)(v));
        };
        throw new Error("Failed pattern match at Data.String.NonEmpty line 391, column 1 - line 391, column 59: " + [ i.constructor.name, v.constructor.name ]);
    };
};

// | Returns the string without the first `n` characters. Returns `Nothing` if
// | more characters are dropped than the string is long.
// |
// | ```purescript
// | drop 6 (NonEmptyString "Hello World") == Just (NonEmptyString "World")
// | drop 20 (NonEmptyString "Hello World") == Nothing
// | ```
var drop = function (i) {
    return function (v) {
        if (i >= Data_String.length(v)) {
            return Data_Maybe.Nothing.value;
        };
        if (Data_Boolean.otherwise) {
            return new Data_Maybe.Just(Data_String.drop(i)(v));
        };
        throw new Error("Failed pattern match at Data.String.NonEmpty line 379, column 1 - line 379, column 54: " + [ i.constructor.name, v.constructor.name ]);
    };
};

// | Returns the number of contiguous characters at the beginning of the string
// | for which the predicate holds.
// |
// | ```purescript
// | count (_ /= 'o') (NonEmptyString "Hello World") == 4
// | ```
var count = function ($86) {
    return liftS(Data_String.count($86));
};

// | Checks whether the pattern appears in the given string.
// |
// | ```purescript
// | contains (Pattern "needle") (NonEmptyString "haystack with needle") == true
// | contains (Pattern "needle") (NonEmptyString "haystack") == false
// | ```
var contains = function ($87) {
    return liftS(Data_String.contains($87));
};

// | Creates a `NonEmptyString` from a string by prepending a character.
// |
// | ```purescript
// | cons 'a' "bc" = NonEmptyString "abc"
// | cons 'a' "" = NonEmptyString "a"
// | ```
var cons = function (c) {
    return function (s) {
        return Data_String.singleton(c) + s;
    };
};

// | Returns the numeric Unicode value of the character at the given index,
// | if the index is within bounds.
// |
// | ```purescript
// | charCodeAt 2 (NonEmptyString "5 €") == Just 0x20AC
// | charCodeAt 10 (NonEmptyString "5 €") == Nothing
// | ```
var charCodeAt = function ($88) {
    return liftS(Data_String.charCodeAt($88));
};

// | Returns the character at the given index, if the index is within bounds.
// |
// | ```purescript
// | charAt 2 (NonEmptyString "Hello") == Just 'l'
// | charAt 10 (NonEmptyString "Hello") == Nothing
// | ```
var charAt = function ($89) {
    return liftS(Data_String.charAt($89));
};

// | Appends a string to this non-empty string. Since one of the strings is
// | non-empty we know the result will be too.
// |
// | ```purescript
// | appendString (NonEmptyString "Hello") " world" == NonEmptyString "Hello world"
// | appendString (NonEmptyString "Hello") "" == NonEmptyString "Hello"
// | ```
var appendString = function (v) {
    return function (s2) {
        return v + s2;
    };
};
module.exports = {
    NonEmptyReplacement: NonEmptyReplacement,
    fromString: fromString,
    unsafeFromString: unsafeFromString,
    fromCharArray: fromCharArray,
    singleton: singleton,
    cons: cons,
    snoc: snoc,
    fromFoldable1: fromFoldable1,
    toString: toString,
    toCharArray: toCharArray,
    charAt: charAt,
    charCodeAt: charCodeAt,
    toChar: toChar,
    appendString: appendString,
    prependString: prependString,
    contains: contains,
    indexOf: indexOf,
    "indexOf'": indexOf$prime,
    lastIndexOf: lastIndexOf,
    "lastIndexOf'": lastIndexOf$prime,
    uncons: uncons,
    length: length,
    localeCompare: localeCompare,
    replace: replace,
    replaceAll: replaceAll,
    take: take,
    takeRight: takeRight,
    takeWhile: takeWhile,
    drop: drop,
    dropRight: dropRight,
    dropWhile: dropWhile,
    stripPrefix: stripPrefix,
    stripSuffix: stripSuffix,
    count: count,
    splitAt: splitAt,
    toLower: toLower,
    toUpper: toUpper,
    trim: trim,
    joinWith: joinWith,
    join1With: join1With,
    joinWith1: joinWith1,
    eqNonEmptyString: eqNonEmptyString,
    ordNonEmptyString: ordNonEmptyString,
    semigroupNonEmptyString: semigroupNonEmptyString,
    showNonEmptyString: showNonEmptyString,
    eqNonEmptyReplacement: eqNonEmptyReplacement,
    ordNonEmptyReplacement: ordNonEmptyReplacement,
    semigroupNonEmptyReplacement: semigroupNonEmptyReplacement,
    showNonEmptyReplacement: showNonEmptyReplacement
};

},{"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Show":189,"../Data.String":201,"../Data.String.Unsafe":199,"../Prelude":263,"../Unsafe.Coerce":281}],195:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Prelude = require("../Prelude");
var RegexFlags = (function () {
    function RegexFlags(value0) {
        this.value0 = value0;
    };
    RegexFlags.create = function (value0) {
        return new RegexFlags(value0);
    };
    return RegexFlags;
})();
var unicode = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: false,
    sticky: false,
    unicode: true
});
var sticky = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: false,
    sticky: true,
    unicode: false
});
var showRegexFlags = new Data_Show.Show(function (v) {
    var usedFlags = Data_Semigroup.append(Data_Semigroup.semigroupArray)([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.global))("global"))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.ignoreCase))("ignoreCase"))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.multiline))("multiline"))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.sticky))("sticky"))(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.unicode))("unicode"))))));
    var $6 = Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(usedFlags)([  ]);
    if ($6) {
        return "noFlags";
    };
    return "(" + (Data_String.joinWith(" <> ")(usedFlags) + ")");
});
var semigroupRegexFlags = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return new RegexFlags({
            global: v.value0.global || v1.value0.global,
            ignoreCase: v.value0.ignoreCase || v1.value0.ignoreCase,
            multiline: v.value0.multiline || v1.value0.multiline,
            sticky: v.value0.sticky || v1.value0.sticky,
            unicode: v.value0.unicode || v1.value0.unicode
        });
    };
});
var noFlags = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: false,
    sticky: false,
    unicode: false
});
var multiline = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: true,
    sticky: false,
    unicode: false
});
var monoidRegexFlags = new Data_Monoid.Monoid(function () {
    return semigroupRegexFlags;
}, noFlags);
var ignoreCase = new RegexFlags({
    global: false,
    ignoreCase: true,
    multiline: false,
    sticky: false,
    unicode: false
});
var global = new RegexFlags({
    global: true,
    ignoreCase: false,
    multiline: false,
    sticky: false,
    unicode: false
});
var eqRegexFlags = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v.value0.global === v1.value0.global && (v.value0.ignoreCase === v1.value0.ignoreCase && (v.value0.multiline === v1.value0.multiline && (v.value0.sticky === v1.value0.sticky && v.value0.unicode === v1.value0.unicode)));
    };
});
module.exports = {
    RegexFlags: RegexFlags,
    noFlags: noFlags,
    global: global,
    ignoreCase: ignoreCase,
    multiline: multiline,
    sticky: sticky,
    unicode: unicode,
    semigroupRegexFlags: semigroupRegexFlags,
    monoidRegexFlags: monoidRegexFlags,
    eqRegexFlags: eqRegexFlags,
    showRegexFlags: showRegexFlags
};

},{"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Data.Eq":111,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Monoid":169,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Prelude":263}],196:[function(require,module,exports){
"use strict";

exports["showRegex'"] = function (r) {
  return "" + r;
};

exports["regex'"] = function (left) {
  return function (right) {
    return function (s1) {
      return function (s2) {
        try {
          return right(new RegExp(s1, s2));
        } catch (e) {
          return left(e.message);
        }
      };
    };
  };
};

exports.source = function (r) {
  return r.source;
};

exports["flags'"] = function (r) {
  return {
    multiline: r.multiline,
    ignoreCase: r.ignoreCase,
    global: r.global,
    sticky: !!r.sticky,
    unicode: !!r.unicode
  };
};

exports.test = function (r) {
  return function (s) {
    var lastIndex = r.lastIndex;
    var result = r.test(s);
    r.lastIndex = lastIndex;
    return result;
  };
};

exports._match = function (just) {
  return function (nothing) {
    return function (r) {
      return function (s) {
        var m = s.match(r);
        if (m == null) {
          return nothing;
        } else {
          for (var i = 0; i < m.length; i++) {
            m[i] = m[i] == null ? nothing : just(m[i]);
          }
          return just(m);
        }
      };
    };
  };
};

exports.replace = function (r) {
  return function (s1) {
    return function (s2) {
      return s2.replace(r, s1);
    };
  };
};

exports["replace'"] = function (r) {
  return function (f) {
    return function (s2) {
      return s2.replace(r, function (match) {
        return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
      });
    };
  };
};

exports._search = function (just) {
  return function (nothing) {
    return function (r) {
      return function (s) {
        var result = s.search(r);
        return result === -1 ? nothing : just(result);
      };
    };
  };
};

exports.split = function (r) {
  return function (s) {
    return s.split(r);
  };
};

},{}],197:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_String_Regex_Flags = require("../Data.String.Regex.Flags");
var Prelude = require("../Prelude");
var showRegex = new Data_Show.Show($foreign["showRegex'"]);
var search = $foreign._search(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var renderFlags = function (v) {
    return (function () {
        if (v.value0.global) {
            return "g";
        };
        return "";
    })() + ((function () {
        if (v.value0.ignoreCase) {
            return "i";
        };
        return "";
    })() + ((function () {
        if (v.value0.multiline) {
            return "m";
        };
        return "";
    })() + ((function () {
        if (v.value0.sticky) {
            return "y";
        };
        return "";
    })() + (function () {
        if (v.value0.unicode) {
            return "u";
        };
        return "";
    })())));
};
var regex = function (s) {
    return function (f) {
        return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
    };
};
var parseFlags = function (s) {
    return new Data_String_Regex_Flags.RegexFlags({
        global: Data_String.contains("g")(s),
        ignoreCase: Data_String.contains("i")(s),
        multiline: Data_String.contains("m")(s),
        sticky: Data_String.contains("y")(s),
        unicode: Data_String.contains("u")(s)
    });
};
var match = $foreign._match(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var flags = function ($8) {
    return Data_String_Regex_Flags.RegexFlags.create($foreign["flags'"]($8));
};
module.exports = {
    regex: regex,
    flags: flags,
    renderFlags: renderFlags,
    parseFlags: parseFlags,
    match: match,
    search: search,
    showRegex: showRegex,
    source: $foreign.source,
    test: $foreign.test,
    replace: $foreign.replace,
    "replace'": $foreign["replace'"],
    split: $foreign.split
};

},{"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Function":125,"../Data.Maybe":156,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Data.String.Regex.Flags":195,"../Prelude":263,"./foreign":196}],198:[function(require,module,exports){
"use strict";

exports.charCodeAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charCodeAt(i);
    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
  };
};

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],199:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    "char": $foreign["char"],
    charAt: $foreign.charAt,
    charCodeAt: $foreign.charCodeAt
};

},{"./foreign":198}],200:[function(require,module,exports){
"use strict";

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports.singleton = function (c) {
  return c;
};

exports._charCodeAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.fromCharArray = function (a) {
  return a.join("");
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.replaceAll = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substring(n);
  };
};

exports.count = function (p) {
  return function (s) {
    var i = 0;
    while (i < s.length && p(s.charAt(i))) i++;
    return i;
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports._splitAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ?
               just({ before: s.substring(0, i), after: s.substring(i) }) :
               nothing;
      };
    };
  };
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],201:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String_Unsafe = require("../Data.String.Unsafe");
var Prelude = require("../Prelude");
var Replacement = function (x) {
    return x;
};
var Pattern = function (x) {
    return x;
};
var uncons = function (v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(v),
        tail: $foreign.drop(1)(v)
    });
};
var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function (p) {
    return function (s) {
        return $foreign.take($foreign.count(p)(s))(s);
    };
};
var takeRight = function (i) {
    return function (s) {
        return $foreign.drop($foreign.length(s) - i | 0)(s);
    };
};
var splitAt = $foreign._splitAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showReplacement = new Data_Show.Show(function (v) {
    return "(Replacement " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var showPattern = new Data_Show.Show(function (v) {
    return "(Pattern " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var $$null = function (s) {
    return s === "";
};
var newtypeReplacement = new Data_Newtype.Newtype(function (n) {
    return n;
}, Replacement);
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var localeCompare = $foreign._localeCompare(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function (v) {
    return function (str) {
        var v1 = lastIndexOf(v)(str);
        if (v1 instanceof Data_Maybe.Just && v1.value0 === ($foreign.length(str) - $foreign.length(v) | 0)) {
            return Data_Maybe.Just.create($foreign.take(v1.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function (v) {
    return function (str) {
        var v1 = indexOf(v)(str);
        if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var eqReplacement = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordReplacement = new Data_Ord.Ord(function () {
    return eqReplacement;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var eqPattern = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordPattern = new Data_Ord.Ord(function () {
    return eqPattern;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var dropWhile = function (p) {
    return function (s) {
        return $foreign.drop($foreign.count(p)(s))(s);
    };
};
var dropRight = function (i) {
    return function (s) {
        return $foreign.take($foreign.length(s) - i | 0)(s);
    };
};
var contains = function (pat) {
    return function ($48) {
        return Data_Maybe.isJust(indexOf(pat)($48));
    };
};
var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    Pattern: Pattern,
    Replacement: Replacement,
    charAt: charAt,
    charCodeAt: charCodeAt,
    toChar: toChar,
    contains: contains,
    indexOf: indexOf,
    "indexOf'": indexOf$prime,
    lastIndexOf: lastIndexOf,
    "lastIndexOf'": lastIndexOf$prime,
    "null": $$null,
    uncons: uncons,
    localeCompare: localeCompare,
    takeRight: takeRight,
    takeWhile: takeWhile,
    dropRight: dropRight,
    dropWhile: dropWhile,
    stripPrefix: stripPrefix,
    stripSuffix: stripSuffix,
    splitAt: splitAt,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern,
    eqReplacement: eqReplacement,
    ordReplacement: ordReplacement,
    newtypeReplacement: newtypeReplacement,
    showReplacement: showReplacement,
    fromCharArray: $foreign.fromCharArray,
    length: $foreign.length,
    singleton: $foreign.singleton,
    replace: $foreign.replace,
    replaceAll: $foreign.replaceAll,
    take: $foreign.take,
    drop: $foreign.drop,
    count: $foreign.count,
    split: $foreign.split,
    toCharArray: $foreign.toCharArray,
    toLower: $foreign.toLower,
    toUpper: $foreign.toUpper,
    trim: $foreign.trim,
    joinWith: $foreign.joinWith
};

},{"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Function":125,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.String.Unsafe":199,"../Prelude":263,"./foreign":200}],202:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var SProxy = (function () {
    function SProxy() {

    };
    SProxy.value = new SProxy();
    return SProxy;
})();
var IsSymbol = function (reflectSymbol) {
    this.reflectSymbol = reflectSymbol;
};
var reifySymbol = function (s) {
    return function (f) {
        return (function (dictIsSymbol) {
            return f(dictIsSymbol);
        })({
            reflectSymbol: function (v) {
                return s;
            }
        })(SProxy.value);
    };
};
var reflectSymbol = function (dict) {
    return dict.reflectSymbol;
};
var isSymbolTypeConcat = function (dictIsSymbol) {
    return function (dictIsSymbol1) {
        return new IsSymbol(function (v) {
            return reflectSymbol(dictIsSymbol)(SProxy.value) + reflectSymbol(dictIsSymbol1)(SProxy.value);
        });
    };
};
module.exports = {
    IsSymbol: IsSymbol,
    reflectSymbol: reflectSymbol,
    reifySymbol: reifySymbol,
    SProxy: SProxy,
    isSymbolTypeConcat: isSymbolTypeConcat
};

},{"../Data.Semigroup":185,"../Prelude":263,"../Unsafe.Coerce":281}],203:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Second = function (x) {
    return x;
};
var Minute = function (x) {
    return x;
};
var Millisecond = function (x) {
    return x;
};
var Hour = function (x) {
    return x;
};
var showSecond = new Data_Show.Show(function (v) {
    return "(Second " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showMinute = new Data_Show.Show(function (v) {
    return "(Minute " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showMillisecond = new Data_Show.Show(function (v) {
    return "(Millisecond " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showHour = new Data_Show.Show(function (v) {
    return "(Hour " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var ordSecond = Data_Ord.ordInt;
var ordMinute = Data_Ord.ordInt;
var ordMillisecond = Data_Ord.ordInt;
var ordHour = Data_Ord.ordInt;
var genericSecond = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Second" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Second))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Second", [ {
        sigConstructor: "Data.Time.Component.Second",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Second", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericMinute = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Minute" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Minute))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Minute", [ {
        sigConstructor: "Data.Time.Component.Minute",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Minute", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericMillisecond = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Millisecond" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Millisecond))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Millisecond", [ {
        sigConstructor: "Data.Time.Component.Millisecond",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Millisecond", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericHour = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Hour" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Hour))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Hour", [ {
        sigConstructor: "Data.Time.Component.Hour",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Hour", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var eqSecond = Data_Eq.eqInt;
var eqMinute = Data_Eq.eqInt;
var eqMillisecond = Data_Eq.eqInt;
var eqHour = Data_Eq.eqInt;
var boundedSecond = new Data_Bounded.Bounded(function () {
    return ordSecond;
}, 0, 59);
var boundedMinute = new Data_Bounded.Bounded(function () {
    return ordMinute;
}, 0, 59);
var boundedMillisecond = new Data_Bounded.Bounded(function () {
    return ordMillisecond;
}, 0, 999);
var boundedHour = new Data_Bounded.Bounded(function () {
    return ordHour;
}, 0, 23);
var boundedEnumSecond = new Data_Enum.BoundedEnum(function () {
    return boundedSecond;
}, function () {
    return enumSecond;
}, 60, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 59) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 94, column 1 - line 94, column 49: " + [ n.constructor.name ]);
});
var enumSecond = new Data_Enum.Enum(function () {
    return ordSecond;
}, function ($64) {
    return Data_Enum.toEnum(boundedEnumSecond)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumSecond)($64)));
}, function ($65) {
    return Data_Enum.toEnum(boundedEnumSecond)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumSecond)($65)));
});
var boundedEnumMinute = new Data_Enum.BoundedEnum(function () {
    return boundedMinute;
}, function () {
    return enumMinute;
}, 60, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 59) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 64, column 1 - line 64, column 49: " + [ n.constructor.name ]);
});
var enumMinute = new Data_Enum.Enum(function () {
    return ordMinute;
}, function ($66) {
    return Data_Enum.toEnum(boundedEnumMinute)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMinute)($66)));
}, function ($67) {
    return Data_Enum.toEnum(boundedEnumMinute)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMinute)($67)));
});
var boundedEnumMillisecond = new Data_Enum.BoundedEnum(function () {
    return boundedMillisecond;
}, function () {
    return enumMillisecond;
}, 1000, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 999) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 125, column 1 - line 125, column 59: " + [ n.constructor.name ]);
});
var enumMillisecond = new Data_Enum.Enum(function () {
    return ordMillisecond;
}, function ($68) {
    return Data_Enum.toEnum(boundedEnumMillisecond)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMillisecond)($68)));
}, function ($69) {
    return Data_Enum.toEnum(boundedEnumMillisecond)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMillisecond)($69)));
});
var boundedEnumHour = new Data_Enum.BoundedEnum(function () {
    return boundedHour;
}, function () {
    return enumHour;
}, 24, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 23) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 34, column 1 - line 34, column 45: " + [ n.constructor.name ]);
});
var enumHour = new Data_Enum.Enum(function () {
    return ordHour;
}, function ($70) {
    return Data_Enum.toEnum(boundedEnumHour)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumHour)($70)));
}, function ($71) {
    return Data_Enum.toEnum(boundedEnumHour)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumHour)($71)));
});
module.exports = {
    eqHour: eqHour,
    ordHour: ordHour,
    genericHour: genericHour,
    boundedHour: boundedHour,
    enumHour: enumHour,
    boundedEnumHour: boundedEnumHour,
    showHour: showHour,
    eqMinute: eqMinute,
    ordMinute: ordMinute,
    genericMinute: genericMinute,
    boundedMinute: boundedMinute,
    enumMinute: enumMinute,
    boundedEnumMinute: boundedEnumMinute,
    showMinute: showMinute,
    eqSecond: eqSecond,
    ordSecond: ordSecond,
    genericSecond: genericSecond,
    boundedSecond: boundedSecond,
    enumSecond: enumSecond,
    boundedEnumSecond: boundedEnumSecond,
    showSecond: showSecond,
    eqMillisecond: eqMillisecond,
    ordMillisecond: ordMillisecond,
    genericMillisecond: genericMillisecond,
    boundedMillisecond: boundedMillisecond,
    enumMillisecond: enumMillisecond,
    boundedEnumMillisecond: boundedEnumMillisecond,
    showMillisecond: showMillisecond
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.Enum":109,"../Data.Eq":111,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],204:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Seconds = function (x) {
    return x;
};
var Minutes = function (x) {
    return x;
};
var Milliseconds = function (x) {
    return x;
};
var Hours = function (x) {
    return x;
};
var Days = function (x) {
    return x;
};
var Duration = function (fromDuration, toDuration) {
    this.fromDuration = fromDuration;
    this.toDuration = toDuration;
};
var toDuration = function (dict) {
    return dict.toDuration;
};
var showSeconds = new Data_Show.Show(function (v) {
    return "(Seconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMinutes = new Data_Show.Show(function (v) {
    return "(Minutes " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMilliseconds = new Data_Show.Show(function (v) {
    return "(Milliseconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showHours = new Data_Show.Show(function (v) {
    return "(Hours " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showDays = new Data_Show.Show(function (v) {
    return "(Days " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var semiringSeconds = Data_Semiring.semiringNumber;
var semiringMinutes = Data_Semiring.semiringNumber;
var semiringMilliseconds = Data_Semiring.semiringNumber;
var semiringHours = Data_Semiring.semiringNumber;
var semiringDays = Data_Semiring.semiringNumber;
var ringSeconds = Data_Ring.ringNumber;
var ringMinutes = Data_Ring.ringNumber;
var ringMilliseconds = Data_Ring.ringNumber;
var ringHours = Data_Ring.ringNumber;
var ringDays = Data_Ring.ringNumber;
var ordSeconds = Data_Ord.ordNumber;
var ordMinutes = Data_Ord.ordNumber;
var ordMilliseconds = Data_Ord.ordNumber;
var ordHours = Data_Ord.ordNumber;
var ordDays = Data_Ord.ordNumber;
var newtypeSeconds = new Data_Newtype.Newtype(function (n) {
    return n;
}, Seconds);
var newtypeMinutes = new Data_Newtype.Newtype(function (n) {
    return n;
}, Minutes);
var newtypeMilliseconds = new Data_Newtype.Newtype(function (n) {
    return n;
}, Milliseconds);
var newtypeHours = new Data_Newtype.Newtype(function (n) {
    return n;
}, Hours);
var newtypeDays = new Data_Newtype.Newtype(function (n) {
    return n;
}, Days);
var genericSeconds = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Seconds" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Seconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Seconds", [ {
        sigConstructor: "Data.Time.Duration.Seconds",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Seconds", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericMinutes = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Minutes" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Minutes))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Minutes", [ {
        sigConstructor: "Data.Time.Duration.Minutes",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Minutes", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericMilliseconds = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Milliseconds" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Milliseconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Milliseconds", [ {
        sigConstructor: "Data.Time.Duration.Milliseconds",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Milliseconds", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericHours = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Hours" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Hours))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Hours", [ {
        sigConstructor: "Data.Time.Duration.Hours",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Hours", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericDays = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Days" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Days))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Days", [ {
        sigConstructor: "Data.Time.Duration.Days",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Days", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var fromDuration = function (dict) {
    return dict.fromDuration;
};
var eqSeconds = Data_Eq.eqNumber;
var eqMinutes = Data_Eq.eqNumber;
var eqMilliseconds = Data_Eq.eqNumber;
var eqHours = Data_Eq.eqNumber;
var eqDays = Data_Eq.eqNumber;
var durationSeconds = new Duration(Data_Newtype.over(newtypeSeconds)(newtypeMilliseconds)(Seconds)(function (v) {
    return v * 1000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeSeconds)(Milliseconds)(function (v) {
    return v / 1000.0;
}));
var durationMinutes = new Duration(Data_Newtype.over(newtypeMinutes)(newtypeMilliseconds)(Minutes)(function (v) {
    return v * 60000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeMinutes)(Milliseconds)(function (v) {
    return v / 60000.0;
}));
var durationMilliseconds = new Duration(Control_Category.id(Control_Category.categoryFn), Control_Category.id(Control_Category.categoryFn));
var durationHours = new Duration(Data_Newtype.over(newtypeHours)(newtypeMilliseconds)(Hours)(function (v) {
    return v * 3600000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeHours)(Milliseconds)(function (v) {
    return v / 3600000.0;
}));
var durationDays = new Duration(Data_Newtype.over(newtypeDays)(newtypeMilliseconds)(Days)(function (v) {
    return v * 8.64e7;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeDays)(Milliseconds)(function (v) {
    return v / 8.64e7;
}));
var convertDuration = function (dictDuration) {
    return function (dictDuration1) {
        return function ($80) {
            return toDuration(dictDuration1)(fromDuration(dictDuration)($80));
        };
    };
};
module.exports = {
    fromDuration: fromDuration,
    toDuration: toDuration,
    Milliseconds: Milliseconds,
    Seconds: Seconds,
    Minutes: Minutes,
    Hours: Hours,
    Days: Days,
    Duration: Duration,
    convertDuration: convertDuration,
    newtypeMilliseconds: newtypeMilliseconds,
    genericMilliseconds: genericMilliseconds,
    eqMilliseconds: eqMilliseconds,
    ordMilliseconds: ordMilliseconds,
    semiringMilliseconds: semiringMilliseconds,
    ringMilliseconds: ringMilliseconds,
    showMilliseconds: showMilliseconds,
    newtypeSeconds: newtypeSeconds,
    genericSeconds: genericSeconds,
    eqSeconds: eqSeconds,
    ordSeconds: ordSeconds,
    semiringSeconds: semiringSeconds,
    ringSeconds: ringSeconds,
    showSeconds: showSeconds,
    newtypeMinutes: newtypeMinutes,
    genericMinutes: genericMinutes,
    eqMinutes: eqMinutes,
    ordMinutes: ordMinutes,
    semiringMinutes: semiringMinutes,
    ringMinutes: ringMinutes,
    showMinutes: showMinutes,
    newtypeHours: newtypeHours,
    genericHours: genericHours,
    eqHours: eqHours,
    ordHours: ordHours,
    semiringHours: semiringHours,
    ringHours: ringHours,
    showHours: showHours,
    newtypeDays: newtypeDays,
    genericDays: genericDays,
    eqDays: eqDays,
    ordDays: ordDays,
    semiringDays: semiringDays,
    ringDays: ringDays,
    showDays: showDays,
    durationMilliseconds: durationMilliseconds,
    durationSeconds: durationSeconds,
    durationMinutes: durationMinutes,
    durationHours: durationHours,
    durationDays: durationDays
};

},{"../Control.Apply":6,"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Generic":138,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],205:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var $$Math = require("../Math");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Time = (function () {
    function Time(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Time.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Time(value0, value1, value2, value3);
                };
            };
        };
    };
    return Time;
})();
var showTime = new Data_Show.Show(function (v) {
    return "(Time " + (Data_Show.show(Data_Time_Component.showHour)(v.value0) + (" " + (Data_Show.show(Data_Time_Component.showMinute)(v.value1) + (" " + (Data_Show.show(Data_Time_Component.showSecond)(v.value2) + (" " + (Data_Show.show(Data_Time_Component.showMillisecond)(v.value3) + ")")))))));
});
var setSecond = function (s) {
    return function (v) {
        return new Time(v.value0, v.value1, s, v.value3);
    };
};
var setMinute = function (m) {
    return function (v) {
        return new Time(v.value0, m, v.value2, v.value3);
    };
};
var setMillisecond = function (ms) {
    return function (v) {
        return new Time(v.value0, v.value1, v.value2, ms);
    };
};
var setHour = function (h) {
    return function (v) {
        return new Time(h, v.value1, v.value2, v.value3);
    };
};
var second = function (v) {
    return v.value2;
};
var minute = function (v) {
    return v.value1;
};
var millisecond = function (v) {
    return v.value3;
};
var millisToTime = function (v) {
    var hours = $$Math.floor(v / 3600000.0);
    var minutes = $$Math.floor((v - hours * 3600000.0) / 60000.0);
    var seconds = $$Math.floor((v - (hours * 3600000.0 + minutes * 60000.0)) / 1000.0);
    var milliseconds = v - (hours * 3600000.0 + minutes * 60000.0 + seconds * 1000.0);
    return Data_Maybe.fromJust()(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(Data_Int.floor(hours))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(Data_Int.floor(minutes))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(Data_Int.floor(seconds))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Int.floor(milliseconds))));
};
var hour = function (v) {
    return v.value0;
};
var timeToMillis = function (t) {
    return Data_Time_Duration.Milliseconds(3600000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(hour(t))) + 60000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(minute(t))) + 1000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(second(t))) + Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(millisecond(t))));
};
var genericTime = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Time" && v.value1.length === 4)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Time.create))(Data_Generic.fromSpine(Data_Time_Component.genericHour)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericMinute)(v["value1"][1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericSecond)(v["value1"][2](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericMillisecond)(v["value1"][3](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Time", [ {
        sigConstructor: "Data.Time.Time",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericHour)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericMinute)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericSecond)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericMillisecond)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Time", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericHour)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericMinute)(v.value1);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericSecond)(v.value2);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericMillisecond)(v.value3);
    } ]);
});
var eqTime = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Time_Component.eqHour)(x.value0)(y.value0) && Data_Eq.eq(Data_Time_Component.eqMinute)(x.value1)(y.value1) && Data_Eq.eq(Data_Time_Component.eqSecond)(x.value2)(y.value2) && Data_Eq.eq(Data_Time_Component.eqMillisecond)(x.value3)(y.value3);
    };
});
var ordTime = new Data_Ord.Ord(function () {
    return eqTime;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Time_Component.ordHour)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v1 = Data_Ord.compare(Data_Time_Component.ordMinute)(x.value1)(y.value1);
        if (v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v2 = Data_Ord.compare(Data_Time_Component.ordSecond)(x.value2)(y.value2);
        if (v2 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v2 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Time_Component.ordMillisecond)(x.value3)(y.value3);
    };
});
var diff = function (dictDuration) {
    return function (t1) {
        return function (t2) {
            return Data_Time_Duration.toDuration(dictDuration)(Data_Ring.sub(Data_Time_Duration.ringMilliseconds)(timeToMillis(t1))(timeToMillis(t2)));
        };
    };
};
var boundedTime = new Data_Bounded.Bounded(function () {
    return ordTime;
}, new Time(Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond)), new Time(Data_Bounded.top(Data_Time_Component.boundedHour), Data_Bounded.top(Data_Time_Component.boundedMinute), Data_Bounded.top(Data_Time_Component.boundedSecond), Data_Bounded.top(Data_Time_Component.boundedMillisecond)));
var maxTime = timeToMillis(Data_Bounded.top(boundedTime));
var adjust = function (dictDuration) {
    return function (d) {
        return function (t) {
            var tLength = timeToMillis(t);
            var d$prime = Data_Time_Duration.fromDuration(dictDuration)(d);
            var wholeDays = Data_Time_Duration.Days($$Math.floor(Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(d$prime) / 8.64e7));
            var msAdjust = Data_Ring.sub(Data_Time_Duration.ringMilliseconds)(d$prime)(Data_Time_Duration.fromDuration(Data_Time_Duration.durationDays)(wholeDays));
            var msAdjusted = Data_Semiring.add(Data_Time_Duration.semiringMilliseconds)(tLength)(msAdjust);
            var wrap = (function () {
                var $134 = Data_Ord.greaterThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(maxTime);
                if ($134) {
                    return 1.0;
                };
                var $135 = Data_Ord.lessThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(Data_Ring.negate(Data_Time_Duration.ringMilliseconds)(maxTime));
                if ($135) {
                    return -1.0;
                };
                return 0.0;
            })();
            return new Data_Tuple.Tuple(Data_Semiring.add(Data_Time_Duration.semiringDays)(wholeDays)(wrap), millisToTime(Data_Ring.sub(Data_Time_Duration.ringMilliseconds)(msAdjusted)(8.64e7 * wrap)));
        };
    };
};
module.exports = {
    Time: Time,
    hour: hour,
    setHour: setHour,
    minute: minute,
    setMinute: setMinute,
    second: second,
    setSecond: setSecond,
    millisecond: millisecond,
    setMillisecond: setMillisecond,
    adjust: adjust,
    diff: diff,
    eqTime: eqTime,
    ordTime: ordTime,
    genericTime: genericTime,
    boundedTime: boundedTime,
    showTime: showTime
};

},{"../Control.Apply":6,"../Data.Bounded":93,"../Data.Enum":109,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Functor":130,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Int":146,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Time.Component":203,"../Data.Time.Duration":204,"../Data.Tuple":212,"../Data.Unit":220,"../Math":244,"../Partial.Unsafe":253,"../Prelude":263}],206:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Prelude = require("../Prelude");
var StateR = function (x) {
    return x;
};
var StateL = function (x) {
    return x;
};
var stateR = function (v) {
    return v;
};
var stateL = function (v) {
    return v;
};
var functorStateR = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var v = stateR(k)(s);
            return {
                accum: v.accum,
                value: f(v.value)
            };
        };
    };
});
var functorStateL = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var v = stateL(k)(s);
            return {
                accum: v.accum,
                value: f(v.value)
            };
        };
    };
});
var applyStateR = new Control_Apply.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var v = stateR(x)(s);
            var v1 = stateR(f)(v.accum);
            return {
                accum: v1.accum,
                value: v1.value(v.value)
            };
        };
    };
});
var applyStateL = new Control_Apply.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var v = stateL(f)(s);
            var v1 = stateL(x)(v.accum);
            return {
                accum: v1.accum,
                value: v.value(v1.value)
            };
        };
    };
});
var applicativeStateR = new Control_Applicative.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s,
            value: a
        };
    };
});
var applicativeStateL = new Control_Applicative.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s,
            value: a
        };
    };
});
module.exports = {
    StateL: StateL,
    stateL: stateL,
    StateR: StateR,
    stateR: stateR,
    functorStateL: functorStateL,
    applyStateL: applyStateL,
    applicativeStateL: applicativeStateL,
    functorStateR: functorStateR,
    applyStateR: applyStateR,
    applicativeStateR: applicativeStateR
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Data.Functor":130,"../Data.Traversable.Accum":207,"../Prelude":263}],207:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67}],208:[function(require,module,exports){
"use strict";

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont(fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList(x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray(list) {
    var arr = [];
    var xs = list;
    while (xs !== emptyList) {
      arr.push(xs.head);
      xs = xs.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function (x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function (acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],209:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal");
var Prelude = require("../Prelude");
var Traversable = function (Foldable1, Functor0, sequence, traverse) {
    this.Foldable1 = Foldable1;
    this.Functor0 = Functor0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
            };
            if (v1 instanceof Data_Maybe.Just) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(f(v));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(f(v));
        };
    };
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(f(v));
        };
    };
});
var sequenceDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
    };
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Data_Functor.functorArray;
}, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
});
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traverseDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (ta) {
                return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable.Functor0())(f)(ta));
            };
        };
    };
};
var mapAccumR = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateR(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var mapAccumL = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateL(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var $$for = function (dictApplicative) {
    return function (dictTraversable) {
        return function (x) {
            return function (f) {
                return traverse(dictTraversable)(dictApplicative)(f)(x);
            };
        };
    };
};
module.exports = {
    Traversable: Traversable,
    traverse: traverse,
    sequence: sequence,
    traverseDefault: traverseDefault,
    sequenceDefault: sequenceDefault,
    "for": $$for,
    scanl: scanl,
    scanr: scanr,
    mapAccumL: mapAccumL,
    mapAccumR: mapAccumR,
    traversableArray: traversableArray,
    traversableMaybe: traversableMaybe,
    traversableFirst: traversableFirst,
    traversableLast: traversableLast,
    traversableAdditive: traversableAdditive,
    traversableDual: traversableDual,
    traversableConj: traversableConj,
    traversableDisj: traversableDisj,
    traversableMultiplicative: traversableMultiplicative
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Data.Foldable":116,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Maybe.Last":155,"../Data.Monoid.Additive":163,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Multiplicative":168,"../Data.Traversable.Accum":207,"../Data.Traversable.Accum.Internal":206,"../Prelude":263,"./foreign":208}],210:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Traversable = require("../Data.Traversable");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
    this.FoldableWithIndex1 = FoldableWithIndex1;
    this.FunctorWithIndex0 = FunctorWithIndex0;
    this.Traversable2 = Traversable2;
    this.traverseWithIndex = traverseWithIndex;
};
var traverseWithIndexDefault = function (dictTraversableWithIndex) {
    return function (dictApplicative) {
        return function (f) {
            return function ($17) {
                return Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative)(Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f)($17));
            };
        };
    };
};
var traverseWithIndex = function (dict) {
    return dict.traverseWithIndex;
};
var traversableWithIndexMultiplicative = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexMultiplicative;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexMultiplicative;
}, function () {
    return Data_Traversable.traversableMultiplicative;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMultiplicative)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexMaybe = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexMaybe;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexMaybe;
}, function () {
    return Data_Traversable.traversableMaybe;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexLast = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexLast;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexLast;
}, function () {
    return Data_Traversable.traversableLast;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableLast)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexFirst = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexFirst;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexFirst;
}, function () {
    return Data_Traversable.traversableFirst;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableFirst)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexDual = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexDual;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexDual;
}, function () {
    return Data_Traversable.traversableDual;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDual)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexDisj = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexDisj;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexDisj;
}, function () {
    return Data_Traversable.traversableDisj;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDisj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexConj = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexConj;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexConj;
}, function () {
    return Data_Traversable.traversableConj;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableConj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexArray = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexArray;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexArray;
}, function () {
    return Data_Traversable.traversableArray;
}, function (dictApplicative) {
    return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
});
var traversableWithIndexAdditive = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexAdditive;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexAdditive;
}, function () {
    return Data_Traversable.traversableAdditive;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableAdditive)(dictApplicative)(f(Data_Unit.unit));
    };
});
var mapAccumRWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateR(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateR)(function (i) {
                    return function (a) {
                        return function (s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanrWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumRWithIndex(dictTraversableWithIndex)(function (i) {
                    return function (b) {
                        return function (a) {
                            var b$prime = f(i)(a)(b);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var mapAccumLWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateL(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateL)(function (i) {
                    return function (a) {
                        return function (s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanlWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumLWithIndex(dictTraversableWithIndex)(function (i) {
                    return function (b) {
                        return function (a) {
                            var b$prime = f(i)(b)(a);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var forWithIndex = function (dictApplicative) {
    return function (dictTraversableWithIndex) {
        return Data_Function.flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
    };
};
module.exports = {
    TraversableWithIndex: TraversableWithIndex,
    traverseWithIndex: traverseWithIndex,
    traverseWithIndexDefault: traverseWithIndexDefault,
    forWithIndex: forWithIndex,
    scanlWithIndex: scanlWithIndex,
    mapAccumLWithIndex: mapAccumLWithIndex,
    scanrWithIndex: scanrWithIndex,
    mapAccumRWithIndex: mapAccumRWithIndex,
    traversableWithIndexArray: traversableWithIndexArray,
    traversableWithIndexMaybe: traversableWithIndexMaybe,
    traversableWithIndexFirst: traversableWithIndexFirst,
    traversableWithIndexLast: traversableWithIndexLast,
    traversableWithIndexAdditive: traversableWithIndexAdditive,
    traversableWithIndexDual: traversableWithIndexDual,
    traversableWithIndexConj: traversableWithIndexConj,
    traversableWithIndexDisj: traversableWithIndexDisj,
    traversableWithIndexMultiplicative: traversableWithIndexMultiplicative
};

},{"../Control.Semigroupoid":60,"../Data.FoldableWithIndex":117,"../Data.Function":125,"../Data.FunctorWithIndex":132,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Maybe.Last":155,"../Data.Monoid.Additive":163,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Multiplicative":168,"../Data.Traversable":209,"../Data.Traversable.Accum":207,"../Data.Traversable.Accum.Internal":206,"../Data.Unit":220,"../Prelude":263}],211:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var uncurry9 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry8 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry7 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry6 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry5 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0);
    };
};
var uncurry4 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0);
    };
};
var uncurry3 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0);
    };
};
var uncurry2 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0);
    };
};
var uncurry10 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry1 = function (f) {
    return function (v) {
        return f(v.value0);
    };
};
var tuple9 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, Data_Unit.unit)))))))));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple8 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, Data_Unit.unit))))))));
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple7 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, Data_Unit.unit)))))));
                        };
                    };
                };
            };
        };
    };
};
var tuple6 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, Data_Unit.unit))))));
                    };
                };
            };
        };
    };
};
var tuple5 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, Data_Unit.unit)))));
                };
            };
        };
    };
};
var tuple4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, Data_Unit.unit))));
            };
        };
    };
};
var tuple3 = function (a) {
    return function (b) {
        return function (c) {
            return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, Data_Unit.unit)));
        };
    };
};
var tuple2 = function (a) {
    return function (b) {
        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, Data_Unit.unit));
    };
};
var tuple10 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (j) {
                                        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, new Data_Tuple.Tuple(j, Data_Unit.unit))))))))));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple1 = function (a) {
    return new Data_Tuple.Tuple(a, Data_Unit.unit);
};
var over9 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1.value1)))))))));
    };
};
var over8 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1))))))));
    };
};
var over7 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1)))))));
    };
};
var over6 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1))))));
    };
};
var over5 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1)))));
    };
};
var over4 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value0), v.value1.value1.value1.value1))));
    };
};
var over3 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value0), v.value1.value1.value1)));
    };
};
var over2 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(o(v.value1.value0), v.value1.value1));
    };
};
var over10 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value1))))))))));
    };
};
var over1 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(o(v.value0), v.value1);
    };
};
var get9 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get8 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get7 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value0;
};
var get6 = function (v) {
    return v.value1.value1.value1.value1.value1.value0;
};
var get5 = function (v) {
    return v.value1.value1.value1.value1.value0;
};
var get4 = function (v) {
    return v.value1.value1.value1.value0;
};
var get3 = function (v) {
    return v.value1.value1.value0;
};
var get2 = function (v) {
    return v.value1.value0;
};
var get10 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get1 = function (v) {
    return v.value0;
};
var curry9 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return function (i) {
                                            return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, z))))))))));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry8 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, z)))))))));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry7 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, z))))))));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry6 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, z)))))));
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry5 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, z))))));
                        };
                    };
                };
            };
        };
    };
};
var curry4 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, z)))));
                    };
                };
            };
        };
    };
};
var curry3 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, z))));
                };
            };
        };
    };
};
var curry2 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, z)));
            };
        };
    };
};
var curry10 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return function (i) {
                                            return function (j) {
                                                return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, new Data_Tuple.Tuple(j, z)))))))))));
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry1 = function (z) {
    return function (f) {
        return function (a) {
            return f(new Data_Tuple.Tuple(a, z));
        };
    };
};
module.exports = {
    tuple1: tuple1,
    tuple2: tuple2,
    tuple3: tuple3,
    tuple4: tuple4,
    tuple5: tuple5,
    tuple6: tuple6,
    tuple7: tuple7,
    tuple8: tuple8,
    tuple9: tuple9,
    tuple10: tuple10,
    get1: get1,
    get2: get2,
    get3: get3,
    get4: get4,
    get5: get5,
    get6: get6,
    get7: get7,
    get8: get8,
    get9: get9,
    get10: get10,
    over1: over1,
    over2: over2,
    over3: over3,
    over4: over4,
    over5: over5,
    over6: over6,
    over7: over7,
    over8: over8,
    over9: over9,
    over10: over10,
    uncurry1: uncurry1,
    uncurry2: uncurry2,
    uncurry3: uncurry3,
    uncurry4: uncurry4,
    uncurry5: uncurry5,
    uncurry6: uncurry6,
    uncurry7: uncurry7,
    uncurry8: uncurry8,
    uncurry9: uncurry9,
    uncurry10: uncurry10,
    curry1: curry1,
    curry2: curry2,
    curry3: curry3,
    curry4: curry4,
    curry5: curry5,
    curry6: curry6,
    curry7: curry7,
    curry8: curry8,
    curry9: curry9,
    curry10: curry10
};

},{"../Data.Tuple":212,"../Data.Unit":220,"../Prelude":263}],212:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Distributive = require("../Data.Distributive");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Type_Equality = require("../Type.Equality");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function (v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function (v) {
    return v.value1;
};
var showTuple = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var semiringTuple = function (dictSemiring) {
    return function (dictSemiring1) {
        return new Data_Semiring.Semiring(function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
    };
};
var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
        return new Tuple(v1.value0, v.value1);
    };
});
var semigroupTuple = function (dictSemigroup) {
    return function (dictSemigroup1) {
        return new Data_Semigroup.Semigroup(function (v) {
            return function (v1) {
                return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
            };
        });
    };
};
var ringTuple = function (dictRing) {
    return function (dictRing1) {
        return new Data_Ring.Ring(function () {
            return semiringTuple(dictRing.Semiring0())(dictRing1.Semiring0());
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
            };
        });
    };
};
var monoidTuple = function (dictMonoid) {
    return function (dictMonoid1) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
    };
};
var lookup = function (dictFoldable) {
    return function (dictEq) {
        return function (a) {
            return function ($264) {
                return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                    var $146 = Data_Eq.eq(dictEq)(a)(v.value0);
                    if ($146) {
                        return new Data_Maybe.Just(v.value1);
                    };
                    return Data_Maybe.Nothing.value;
                })($264));
            };
        };
    };
};
var heytingAlgebraTuple = function (dictHeytingAlgebra) {
    return function (dictHeytingAlgebra1) {
        return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
        }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
    };
};
var functorTuple = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (v) {
    return v.value0;
};
var lazyTuple = function (dictLazy) {
    return function (dictLazy1) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
                return fst(f(Data_Unit.unit));
            }), Control_Lazy.defer(dictLazy1)(function (v) {
                return snd(f(Data_Unit.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v));
    };
});
var eqTuple = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordTuple = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var eq1Tuple = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqTuple(dictEq)(dictEq1));
    });
};
var ord1Tuple = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Tuple(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordTuple(dictOrd)(dictOrd1));
    });
};
var distributiveTuple = function (dictTypeEquals) {
    return new Data_Distributive.Distributive(function () {
        return functorTuple;
    }, function (dictFunctor) {
        return Data_Distributive.collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
    }, function (dictFunctor) {
        return function ($265) {
            return Tuple.create(Type_Equality.from(dictTypeEquals)(Data_Unit.unit))(Data_Functor.map(dictFunctor)(snd)($265));
        };
    });
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var commutativeRingTuple = function (dictCommutativeRing) {
    return function (dictCommutativeRing1) {
        return new Data_CommutativeRing.CommutativeRing(function () {
            return ringTuple(dictCommutativeRing.Ring0())(dictCommutativeRing1.Ring0());
        });
    };
};
var boundedTuple = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordTuple(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
    };
};
var booleanAlgebraTuple = function (dictBooleanAlgebra) {
    return function (dictBooleanAlgebra1) {
        return new Data_BooleanAlgebra.BooleanAlgebra(function () {
            return heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0())(dictBooleanAlgebra1.HeytingAlgebra0());
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Tuple(f(v.value0), g(v.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(g(v.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return g(f(z)(v.value0))(v.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return f(v.value0)(g(v.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(f(v.value0)))(g(v.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (v) {
    return function (v1) {
        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (dictSemigroup) {
    return new Control_Apply.Apply(function () {
        return functorTuple;
    }, function (v) {
        return function (v1) {
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
        };
    });
};
var bindTuple = function (dictSemigroup) {
    return new Control_Bind.Bind(function () {
        return applyTuple(dictSemigroup);
    }, function (v) {
        return function (f) {
            var v1 = f(v.value1);
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
        };
    });
};
var applicativeTuple = function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
        return applyTuple(dictMonoid.Semigroup0());
    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};
var monadTuple = function (dictMonoid) {
    return new Control_Monad.Monad(function () {
        return applicativeTuple(dictMonoid);
    }, function () {
        return bindTuple(dictMonoid.Semigroup0());
    });
};
module.exports = {
    Tuple: Tuple,
    fst: fst,
    snd: snd,
    curry: curry,
    uncurry: uncurry,
    swap: swap,
    lookup: lookup,
    showTuple: showTuple,
    eqTuple: eqTuple,
    eq1Tuple: eq1Tuple,
    ordTuple: ordTuple,
    ord1Tuple: ord1Tuple,
    boundedTuple: boundedTuple,
    semigroupoidTuple: semigroupoidTuple,
    semigroupTuple: semigroupTuple,
    monoidTuple: monoidTuple,
    semiringTuple: semiringTuple,
    ringTuple: ringTuple,
    commutativeRingTuple: commutativeRingTuple,
    heytingAlgebraTuple: heytingAlgebraTuple,
    booleanAlgebraTuple: booleanAlgebraTuple,
    functorTuple: functorTuple,
    invariantTuple: invariantTuple,
    bifunctorTuple: bifunctorTuple,
    applyTuple: applyTuple,
    biapplyTuple: biapplyTuple,
    applicativeTuple: applicativeTuple,
    biapplicativeTuple: biapplicativeTuple,
    bindTuple: bindTuple,
    monadTuple: monadTuple,
    extendTuple: extendTuple,
    comonadTuple: comonadTuple,
    lazyTuple: lazyTuple,
    foldableTuple: foldableTuple,
    bifoldableTuple: bifoldableTuple,
    traversableTuple: traversableTuple,
    bitraversableTuple: bitraversableTuple,
    distributiveTuple: distributiveTuple
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Biapplicative":7,"../Control.Biapply":8,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Lazy":15,"../Control.Monad":54,"../Control.Semigroupoid":60,"../Data.Bifoldable":82,"../Data.Bifunctor":88,"../Data.Bitraversable":89,"../Data.BooleanAlgebra":91,"../Data.Bounded":93,"../Data.CommutativeRing":98,"../Data.Distributive":106,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Traversable":209,"../Data.Unit":220,"../Prelude":263,"../Type.Equality":278}],213:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Type_Proxy = require("../Type.Proxy");
var Sized = function (sized) {
    this.sized = sized;
};
var sz = new Sized(function (v) {
    return 0;
});
var sized = function (dict) {
    return dict.sized;
};
var s4 = new Sized(function (v) {
    return 4;
});
var s3 = new Sized(function (v) {
    return 3;
});
var s2 = new Sized(function (v) {
    return 2;
});
var s1 = new Sized(function (v) {
    return 1;
});
module.exports = {
    sized: sized,
    Sized: Sized,
    sz: sz,
    s1: s1,
    s2: s2,
    s3: s3,
    s4: s4
};

},{"../Type.Proxy":279}],214:[function(require,module,exports){
/* global exports */

// module Data.TypedArray


    "use strict";

    // conversion from and to typed arrays
    exports.asInt8Array = function(array)
        {var res = new Int8Array(array);
         return res;};

    exports.asUint8Array = function (array)
        {var res = new Uint8Array(array);
         return res;};

    exports.asUint8ClampedArray = function (array)
        {var res = new Uint8ClampedArray(array);
         return res;};

    exports.asInt16Array = function (array)
        {var res = new Int16Array (array);
         return res;};

    exports.asUint16Array = function (array)
        {var res = new Uint16Array (array);
         return res;};

    exports.asInt32Array = function (array)
        {var res = new Int32Array (array);
         return res;};

    exports.asUint32Array = function (array)
        {var res = new Uint32Array (array);
         return res;};

    exports.asFloat32Array = function (array)
        {var res = new Float32Array (array);
         return res;};

    exports.asFloat64Array = function (array)
        {var res = new Float64Array (array);
         return res;};

//----------------

    exports.newInt8Array = function(length)
        {var res = new Int8Array(length);
         return res;};

    exports.newUint8Array = function (length)
        {var res = new Uint8Array(length);
         return res;};

    exports.newUint8ClampedArray = function (length)
        {var res = new Uint8ClampedArray(length);
         return res;};

    exports.newInt16Array = function (length)
        {var res = new Int16Array (length);
         return res;};

    exports.newUint16Array = function (length)
        {var res = new Uint16Array (length);
         return res;};

    exports.newInt32Array = function (length)
        {var res = new Int32Array (length);
         return res;};

    exports.newUint32Array = function (length)
        {var res = new Uint32Array (length);
         return res;};

    exports.newFloat32Array = function (length)
        {var res = new Float32Array (length);
         return res;};

    exports.newFloat64Array = function (length)
        {var res = new Float64Array (length);
         return res;};

//----------------------------


    exports.dwAsInt8Array = function(v) {
      return new Int8Array(v.buffer, v.byteOffset, v.byteLength);
    }

    exports.dwAsInt16Array = function(v) {
      return new Int16Array(v.buffer, v.byteOffset, v.byteLength >>> 1);
    }

    exports.dwAsInt32Array = function(v) {
      return new Int32Array(v.buffer, v.byteOffset, v.byteLength >>> 2);
    }

    exports.dwAsUint8Array = function(v) {
      return new Uint8Array(v.buffer, v.byteOffset, v.byteLength);
    }

    exports.dwAsUint16Array = function(v) {
      return new Uint16Array(v.buffer, v.byteOffset, v.byteLength >>> 1);
    }

    exports.dwAsUint32Array = function(v) {
      return new Uint32Array(v.buffer, v.byteOffset, v.byteLength >>> 2);
    }

    exports.dwAsUint8ClampedArray = function(v) {
      return new Uint8ClampedArray(v.buffer, v.byteOffset, v.byteLength);
    }

    exports.dwAsFloat32Array = function(v) {
      return new Float32Array(v.buffer, v.byteOffset, v.byteLength >>> 2);
    }

    exports.dwAsFloat64Array = function(v) {
      return new Float64Array(v.buffer, v.byteOffset, v.byteLength >>> 3);
    }


    exports.asArray = function (arrayBuffer)
        {var res = Array.prototype.slice.call(arrayBuffer);
         return res;};

    exports.length = function (arrayBuffer)
        {return arrayBuffer.length;};

    exports.byteLength = function (arrayBuffer)
        {return arrayBuffer.byteLength;};

    exports.insertAt = function (index) {
        return function (a) {
          return function (l) {
            var l1 = l.slice();
            l1.splice(index, 0, a);
            return l1;
          };
        };
    };

    exports.unsafeIndex = function (xs) {
        return function(n) {
          return xs[n];
        };
    };

},{}],215:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var index = function (xs) {
    return function (n) {
        var $0 = n < 0 || n >= $foreign.length(xs);
        if ($0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just($foreign.unsafeIndex(xs)(n));
    };
};
module.exports = {
    index: index,
    asInt8Array: $foreign.asInt8Array,
    asUint8Array: $foreign.asUint8Array,
    asUint8ClampedArray: $foreign.asUint8ClampedArray,
    asInt16Array: $foreign.asInt16Array,
    asUint16Array: $foreign.asUint16Array,
    asInt32Array: $foreign.asInt32Array,
    asUint32Array: $foreign.asUint32Array,
    asFloat32Array: $foreign.asFloat32Array,
    asFloat64Array: $foreign.asFloat64Array,
    dwAsInt8Array: $foreign.dwAsInt8Array,
    dwAsInt16Array: $foreign.dwAsInt16Array,
    dwAsInt32Array: $foreign.dwAsInt32Array,
    dwAsUint8Array: $foreign.dwAsUint8Array,
    dwAsUint16Array: $foreign.dwAsUint16Array,
    dwAsUint32Array: $foreign.dwAsUint32Array,
    dwAsUint8ClampedArray: $foreign.dwAsUint8ClampedArray,
    dwAsFloat32Array: $foreign.dwAsFloat32Array,
    dwAsFloat64Array: $foreign.dwAsFloat64Array,
    newInt8Array: $foreign.newInt8Array,
    newUint8Array: $foreign.newUint8Array,
    newUint8ClampedArray: $foreign.newUint8ClampedArray,
    newInt16Array: $foreign.newInt16Array,
    newUint16Array: $foreign.newUint16Array,
    newInt32Array: $foreign.newInt32Array,
    newUint32Array: $foreign.newUint32Array,
    newFloat32Array: $foreign.newFloat32Array,
    newFloat64Array: $foreign.newFloat64Array,
    asArray: $foreign.asArray,
    length: $foreign.length,
    byteLength: $foreign.byteLength,
    insertAt: $foreign.insertAt,
    unsafeIndex: $foreign.unsafeIndex
};

},{"../Data.ArrayBuffer.Types":81,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Prelude":263,"./foreign":214}],216:[function(require,module,exports){
"use strict";

exports.unfoldrArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;
            while (true) { // eslint-disable-line no-constant-condition
              var maybe = f(value);
              if (isNothing(maybe)) return result;
              var tuple = fromJust(maybe);
              result.push(fst(tuple));
              value = snd(tuple);
            }
          };
        };
      };
    };
  };
};

},{}],217:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
var replicate = function (dictUnfoldable) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                var $9 = i <= 0;
                if ($9) {
                    return Data_Maybe.Nothing.value;
                };
                return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
            };
            return unfoldr(dictUnfoldable)(step)(n);
        };
    };
};
var replicateA = function (dictApplicative) {
    return function (dictUnfoldable) {
        return function (dictTraversable) {
            return function (n) {
                return function (m) {
                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
                };
            };
        };
    };
};
var singleton = function (dictUnfoldable) {
    return replicate(dictUnfoldable)(1);
};
var range = function (dictUnfoldable) {
    return function (start) {
        return function (end) {
            return unfoldr(dictUnfoldable)(function (i) {
                var $10 = i <= end;
                if ($10) {
                    return new Data_Maybe.Just(Data_Tuple.Tuple.create(i)(i + 1 | 0));
                };
                return Data_Maybe.Nothing.value;
            })(start);
        };
    };
};
var none = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
};
var fromMaybe = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function (b) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
    });
};
module.exports = {
    Unfoldable: Unfoldable,
    unfoldr: unfoldr,
    replicate: replicate,
    replicateA: replicateA,
    none: none,
    singleton: singleton,
    range: range,
    fromMaybe: fromMaybe,
    unfoldableArray: unfoldableArray
};

},{"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Traversable":209,"../Data.Tuple":212,"../Data.Unit":220,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":216}],218:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Semiring = require("../Data.Semiring");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Unfoldable1 = function (unfoldr1) {
    this.unfoldr1 = unfoldr1;
};
var unfoldr1 = function (dict) {
    return dict.unfoldr1;
};
var replicate1 = function (dictUnfoldable1) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                if (i <= 0) {
                    return new Data_Tuple.Tuple(v, Data_Maybe.Nothing.value);
                };
                if (Data_Boolean.otherwise) {
                    return new Data_Tuple.Tuple(v, new Data_Maybe.Just(i - 1 | 0));
                };
                throw new Error("Failed pattern match at Data.Unfoldable1 line 33, column 5 - line 33, column 39: " + [ i.constructor.name ]);
            };
            return unfoldr1(dictUnfoldable1)(step)(n - 1 | 0);
        };
    };
};
var replicate1A = function (dictApply) {
    return function (dictUnfoldable1) {
        return function (dictTraversable1) {
            return function (n) {
                return function (m) {
                    return Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply)(replicate1(dictUnfoldable1)(n)(m));
                };
            };
        };
    };
};
var singleton = function (dictUnfoldable1) {
    return replicate1(dictUnfoldable1)(1);
};
var range = function (dictUnfoldable1) {
    return function (start) {
        return function (end) {
            var go = function (delta) {
                return function (i) {
                    var i$prime = i + delta | 0;
                    return new Data_Tuple.Tuple(i, (function () {
                        var $7 = i === end;
                        if ($7) {
                            return Data_Maybe.Nothing.value;
                        };
                        return new Data_Maybe.Just(i$prime);
                    })());
                };
            };
            var delta = (function () {
                var $8 = end >= start;
                if ($8) {
                    return 1;
                };
                return -1 | 0;
            })();
            return unfoldr1(dictUnfoldable1)(go(delta))(start);
        };
    };
};
module.exports = {
    Unfoldable1: Unfoldable1,
    unfoldr1: unfoldr1,
    replicate1: replicate1,
    replicate1A: replicate1A,
    singleton: singleton,
    range: range
};

},{"../Data.Boolean":90,"../Data.Eq":111,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup.Traversable":183,"../Data.Semiring":187,"../Data.Tuple":212,"../Prelude":263}],219:[function(require,module,exports){
"use strict";

exports.unit = {};

},{}],220:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Show = require("../Data.Show");
var showUnit = new Data_Show.Show(function (v) {
    return "unit";
});
module.exports = {
    showUnit: showUnit,
    unit: $foreign.unit
};

},{"../Data.Show":189,"./foreign":219}],221:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_TypeNat = require("../Data.TypeNat");
var Extensions = require("../Extensions");
var $$Math = require("../Math");
var Prelude = require("../Prelude");
var Type_Proxy = require("../Type.Proxy");
var Vec = function (x) {
    return x;
};
var toArray = function (v) {
    return v;
};
var showVec = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "Vec " + Data_Show.show(Data_Show.showArray(dictShow))(v);
    });
};
var functorVec = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Data_Functor.map(Data_Functor.functorArray)(f)(v);
    };
});
var scale = function (dictEuclideanRing) {
    return function (s) {
        return function (v) {
            return Data_Functor.map(functorVec)(function (e) {
                return Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(e)(s);
            })(v);
        };
    };
};
var vNegate = function (dictEuclideanRing) {
    return function (v) {
        return Data_Functor.map(functorVec)(Data_Ring.negate((dictEuclideanRing.CommutativeRing0()).Ring0()))(v);
    };
};
var fromArray = function (dictSized) {
    return function (l) {
        var v = Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value);
        if (v === Data_Array.length(l)) {
            return l;
        };
        if (Data_Boolean.otherwise) {
            return Extensions.fail("Vector>>fromArray: wrong array length!");
        };
        throw new Error("Failed pattern match at Data.Vector line 34, column 6 - line 38, column 1: " + [ v.constructor.name ]);
    };
};
var foldableVector = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (xs) {
            return Data_Foldable.foldr(foldableVector)(function (x) {
                return function (acc) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                };
            })(Data_Monoid.mempty(dictMonoid))(xs);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(v);
        };
    };
});
var vlengthSquared = function (v) {
    return Data_Foldable.foldl(foldableVector)(Data_Semiring.add(Data_Semiring.semiringNumber))(0.0)(Data_Functor.map(functorVec)(function (e) {
        return e * e;
    })(v));
};
var vlength = function ($37) {
    return $$Math.sqrt(vlengthSquared($37));
};
var normalize = function (v) {
    var im = 1.0 / vlength(v);
    return Data_Functor.map(functorVec)(function (e) {
        return e * im;
    })(v);
};
var fill = function (dictEuclideanRing) {
    return function (dictSized) {
        return function (a) {
            return Extensions.replicate(Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value))(a);
        };
    };
};
var eqVec = function (dictEq) {
    return new Data_Eq.Eq(function (v) {
        return function (v1) {
            return Data_Eq.eq(Data_Eq.eqArray(dictEq))(v)(v1);
        };
    });
};
var applyVec = new Control_Apply.Apply(function () {
    return functorVec;
}, function (v) {
    return function (v1) {
        return Data_Array.zipWith(function (f$prime) {
            return function (a$prime) {
                return f$prime(a$prime);
            };
        })(v)(v1);
    };
});
var vAdd = function (dictEuclideanRing) {
    return Control_Apply.lift2(applyVec)(Data_Semiring.add(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
};
var vMul = function (dictEuclideanRing) {
    return Control_Apply.lift2(applyVec)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
};
var dot = function (v1) {
    return function (v2) {
        return Data_Foldable.foldl(foldableVector)(Data_Semiring.add(Data_Semiring.semiringNumber))(0.0)(vMul(Data_EuclideanRing.euclideanRingNumber)(v1)(v2));
    };
};
var semiringVector = function (dictSized) {
    return new Data_Semiring.Semiring(vAdd(Data_EuclideanRing.euclideanRingNumber), vMul(Data_EuclideanRing.euclideanRingNumber), fill(Data_EuclideanRing.euclideanRingNumber)(dictSized)(1.0), fill(Data_EuclideanRing.euclideanRingNumber)(dictSized)(0.0));
};
var vSub = function (dictEuclideanRing) {
    return Control_Apply.lift2(applyVec)(Data_Ring.sub((dictEuclideanRing.CommutativeRing0()).Ring0()));
};
var direction = function (v1) {
    return function (v2) {
        return normalize(vSub(Data_EuclideanRing.euclideanRingNumber)(v1)(v2));
    };
};
var distanceSquared = function (v1) {
    return function (v2) {
        return Data_Foldable.foldl(foldableVector)(Data_Semiring.add(Data_Semiring.semiringNumber))(0.0)(Data_Functor.map(functorVec)(function (e) {
            return e * e;
        })(vSub(Data_EuclideanRing.euclideanRingNumber)(v1)(v2)));
    };
};
var distance = function (v1) {
    return function (v2) {
        return $$Math.sqrt(distanceSquared(v1)(v2));
    };
};
module.exports = {
    Vec: Vec,
    fill: fill,
    fromArray: fromArray,
    toArray: toArray,
    vAdd: vAdd,
    vSub: vSub,
    vMul: vMul,
    vNegate: vNegate,
    direction: direction,
    vlengthSquared: vlengthSquared,
    vlength: vlength,
    normalize: normalize,
    distanceSquared: distanceSquared,
    distance: distance,
    scale: scale,
    dot: dot,
    eqVec: eqVec,
    showVec: showVec,
    functorVec: functorVec,
    applyVec: applyVec,
    foldableVector: foldableVector,
    semiringVector: semiringVector
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Boolean":90,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Foldable":116,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.TypeNat":213,"../Extensions":227,"../Math":244,"../Prelude":263,"../Type.Proxy":279}],222:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_TypeNat = require("../Data.TypeNat");
var Data_Vector = require("../Data.Vector");
var Extensions = require("../Extensions");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var vec2$prime = function (array) {
    if (Data_Array.length(array) === 2) {
        return array;
    };
    if (Data_Boolean.otherwise) {
        return Extensions.fail("Vector2>>vec2': wrong array length!");
    };
    throw new Error("Failed pattern match at Data.Vector2 line 29, column 1 - line 29, column 37: " + [ array.constructor.name ]);
};
var vec2 = function (x) {
    return function (y) {
        return [ x, y ];
    };
};
var set2Y = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(1)(n)(v));
    };
};
var set2X = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(0)(n)(v));
    };
};
var j2 = [ 0.0, 1.0 ];
var i2 = [ 1.0, 0.0 ];
var get2Y = function (v) {
    return v[1];
};
var get2X = function (v) {
    return v[0];
};
module.exports = {
    vec2: vec2,
    "vec2'": vec2$prime,
    i2: i2,
    j2: j2,
    get2X: get2X,
    get2Y: get2Y,
    set2X: set2X,
    set2Y: set2Y
};

},{"../Data.Array":80,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Function":125,"../Data.Maybe":156,"../Data.TypeNat":213,"../Data.Vector":221,"../Extensions":227,"../Partial.Unsafe":253,"../Prelude":263}],223:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_TypeNat = require("../Data.TypeNat");
var Data_Vector = require("../Data.Vector");
var Extensions = require("../Extensions");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var vec3$prime = function (array) {
    if (Data_Array.length(array) === 3) {
        return array;
    };
    if (Data_Boolean.otherwise) {
        return Extensions.fail("Vector3>>vec3': wrong array length!");
    };
    throw new Error("Failed pattern match at Data.Vector3 line 30, column 1 - line 30, column 37: " + [ array.constructor.name ]);
};
var vec3 = function (x) {
    return function (y) {
        return function (z) {
            return [ x, y, z ];
        };
    };
};
var set3Z = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(2)(n)(v));
    };
};
var set3Y = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(1)(n)(v));
    };
};
var set3X = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(0)(n)(v));
    };
};
var k3 = [ 0.0, 0.0, 1.0 ];
var j3 = [ 0.0, 1.0, 0.0 ];
var i3 = [ 1.0, 0.0, 0.0 ];
var get3Z = function (v) {
    return v[2];
};
var get3Y = function (v) {
    return v[1];
};
var get3X = function (v) {
    return v[0];
};
var cross = function (dictEuclideanRing) {
    return function (v) {
        return function (v1) {
            if (v.length === 3 && v1.length === 3) {
                return [ Data_Ring.sub((dictEuclideanRing.CommutativeRing0()).Ring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[1])(v1[2]))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[2])(v1[1])), Data_Ring.sub((dictEuclideanRing.CommutativeRing0()).Ring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[2])(v1[0]))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[0])(v1[2])), Data_Ring.sub((dictEuclideanRing.CommutativeRing0()).Ring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[0])(v1[1]))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[1])(v1[0])) ];
            };
            return Extensions.fail("Vector3>>cross: impossible!");
        };
    };
};
module.exports = {
    vec3: vec3,
    "vec3'": vec3$prime,
    i3: i3,
    j3: j3,
    k3: k3,
    get3X: get3X,
    get3Y: get3Y,
    get3Z: get3Z,
    set3X: set3X,
    set3Y: set3Y,
    set3Z: set3Z,
    cross: cross
};

},{"../Data.Array":80,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Function":125,"../Data.Maybe":156,"../Data.Ring":181,"../Data.Semiring":187,"../Data.TypeNat":213,"../Data.Vector":221,"../Extensions":227,"../Partial.Unsafe":253,"../Prelude":263}],224:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_TypeNat = require("../Data.TypeNat");
var Data_Vector = require("../Data.Vector");
var Extensions = require("../Extensions");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var vec4$prime = function (array) {
    if (Data_Array.length(array) === 4) {
        return array;
    };
    if (Data_Boolean.otherwise) {
        return Extensions.fail("Vector4>>vec4': wrong array length!");
    };
    throw new Error("Failed pattern match at Data.Vector4 line 29, column 1 - line 29, column 37: " + [ array.constructor.name ]);
};
var vec4 = function (x) {
    return function (y) {
        return function (z) {
            return function (u) {
                return [ x, y, z, u ];
            };
        };
    };
};
var set4Z = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(2)(n)(v));
    };
};
var set4Y = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(1)(n)(v));
    };
};
var set4X = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(0)(n)(v));
    };
};
var set4U = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(3)(n)(v));
    };
};
var l4 = [ 0.0, 0.0, 0.0, 1.0 ];
var k4 = [ 0.0, 0.0, 1.0, 0.0 ];
var j4 = [ 0.0, 1.0, 0.0, 0.0 ];
var i4 = [ 1.0, 0.0, 0.0, 0.0 ];
var get4Z = function (v) {
    return v[2];
};
var get4Y = function (v) {
    return v[1];
};
var get4X = function (v) {
    return v[0];
};
var get4U = function (v) {
    return v[3];
};
module.exports = {
    vec4: vec4,
    "vec4'": vec4$prime,
    i4: i4,
    j4: j4,
    k4: k4,
    l4: l4,
    get4X: get4X,
    get4Y: get4Y,
    get4Z: get4Z,
    get4U: get4U,
    set4X: set4X,
    set4Y: set4Y,
    set4Z: set4Z,
    set4U: set4U
};

},{"../Data.Array":80,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Function":125,"../Data.Maybe":156,"../Data.TypeNat":213,"../Data.Vector":221,"../Extensions":227,"../Partial.Unsafe":253,"../Prelude":263}],225:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Show = require("../Data.Show");
var Void = function (x) {
    return x;
};
var absurd = function (a) {
    var spin = function ($copy_v) {
        var $tco_result;
        function $tco_loop(v) {
            $copy_v = v;
            return;
        };
        while (!false) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return spin(a);
};
var showVoid = new Data_Show.Show(absurd);
module.exports = {
    absurd: absurd,
    showVoid: showVoid
};

},{"../Data.Show":189}],226:[function(require,module,exports){
/* global exports */

// module Extensions


    "use strict";

    exports.fail = function(s) {
      throw new Error(s);
    }

    exports.undef = function() {
        throw new Error("Encountered undefined");
    }

    exports.unsafeCoerce = function(x) {
         return x;
    }

    exports.mapE = function(f) {
      return function(arr) {
        return function() {
          var res = new Array(arr.length);
          for (var i = 0; i < arr.length; i++) {
            res[i] = f(arr[i])();
          }
          return res;
        };
      };
   }

   exports.mapE_ = function(f) {
     return function(arr) {
       return function() {
         for (var i = 0; i < arr.length; i++) {
           f(arr[i])();
         }
       };
     };
  }

   exports.mapEBreak = function(f) {
       return function(b) {
       return function(arr) {
       return function() {
         var res = new Array(arr.length);
         for (var i = 0; i < arr.length; i++) {
           res[i] = f(arr[i])();
           var shouldBreak = b(i)();
           if (shouldBreak) {
               res = res.slice(0,i);
                break;
            };
        };
         return res;
       };
     };
   };
 };

  exports.mapEBreak_ = function(f) {
      return function(b) {
      return function(arr) {
      return function() {
        for (var i = 0; i < arr.length; i++) {
          f(arr[i])();
          var shouldBreak = b(i)();
          if (shouldBreak) {
               break;
           };
        };
      };
    };
  };
}

exports.replicate = function (n) {
  return function (v) {
    if (n < 1) return [];
    var r = new Array(n);
    for (var i = 0; i < n; i++) r[i] = v;
    return r;
  };
};

exports.timeout = function(millis) {
    return function(action) {
        return function() {
            setTimeout(action, millis);
        };
    };
}

exports.alert = function(msg) {
    return function() {
        window.alert(msg);
        return {};
    };
}

exports.logAny = function(level) {
    return function(text) {
        return function(k) {
            var logLevelString = level.constructor.name;
            console.log(logLevelString, ": ", text);
            if (log4js == null) {
                console.log(logLevelString, ": ", text);
            } else {
                if (logLevelString == "trace"){
                    log4js.trace(text);
                } else if (logLevelString == "debug"){
                    log4js.debug(text);
                } else if (logLevelString == "info"){
                    log4js.info(text);
                } else if (logLevelString == "warn"){
                    log4js.warn(text);
                } else if (logLevelString == "error"){
                    log4js.error(text);
                } else if (logLevelString == "fatal"){
                    log4js.fatal(text);
              }
          }
          return k({});
      }
    }
};

exports.parseDate = function (dateString) {
    return new Date(dateString);
};

exports.toISOString = function (date) {
    return date.toISOString();
};

exports.stringify = function(x) {
    return JSON.stringify(x);
};

},{}],227:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_CForeign = require("../Data.CForeign");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_JSDate = require("../Data.JSDate");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Unit = require("../Data.Unit");
var $$Math = require("../Math");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Trace = (function () {
    function Trace() {

    };
    Trace.value = new Trace();
    return Trace;
})();
var Debug = (function () {
    function Debug() {

    };
    Debug.value = new Debug();
    return Debug;
})();
var Info = (function () {
    function Info() {

    };
    Info.value = new Info();
    return Info;
})();
var Warn = (function () {
    function Warn() {

    };
    Warn.value = new Warn();
    return Warn;
})();
var $$Error = (function () {
    function $$Error() {

    };
    $$Error.value = new $$Error();
    return $$Error;
})();
var Fatal = (function () {
    function Fatal() {

    };
    Fatal.value = new Fatal();
    return Fatal;
})();
var signum = function (n) {
    if (n > 0) {
        return 1;
    };
    if (n < 0) {
        return -1 | 0;
    };
    if (Data_Boolean.otherwise) {
        return 0;
    };
    throw new Error("Failed pattern match at Extensions line 43, column 1 - line 43, column 21: " + [ n.constructor.name ]);
};
var replicateM = function (dictMonad) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Control_Applicative.pure(dictMonad.Applicative0())([  ]);
            };
            if (Data_Boolean.otherwise) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictMonad.Applicative0())($foreign.replicate(n)(m));
            };
            throw new Error("Failed pattern match at Extensions line 53, column 1 - line 53, column 63: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var modInt = function (n) {
    return function (d) {
        var r = n % d;
        var $11 = signum(r) === (-signum(d) | 0);
        if ($11) {
            return r + d | 0;
        };
        return r;
    };
};
var modFloat = function (n) {
    return function (d) {
        return n - $$Math.floor(n / d) * d;
    };
};
var mapM = function (dictMonad) {
    return function (f) {
        return function (array) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictMonad.Applicative0())(Data_Functor.map(Data_Functor.functorArray)(f)(array));
        };
    };
};
var logA$prime = function (logLevel) {
    return function (str) {
        return $foreign.logAny(logLevel)(str)(function (v) {
            return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
        });
    };
};
var logA = function (str) {
    return $foreign.logAny(Trace.value)(str)(function (v) {
        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
    });
};
var log$prime = $foreign.logAny;
var log = $foreign.logAny(Trace.value);
var listReplicate = function (n) {
    return function (value) {
        var go = function ($copy_n$prime) {
            return function ($copy_rest) {
                var $tco_var_n$prime = $copy_n$prime;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(n$prime, rest) {
                    if (n$prime <= 0) {
                        $tco_done = true;
                        return rest;
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_n$prime = n$prime - 1 | 0;
                        $copy_rest = new Data_List_Types.Cons(value, rest);
                        return;
                    };
                    throw new Error("Failed pattern match at Extensions line 62, column 3 - line 63, column 57: " + [ n$prime.constructor.name, rest.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_n$prime, $copy_rest);
                };
                return $tco_result;
            };
        };
        return go(n)(Data_List_Types.Nil.value);
    };
};
var hRange = function (a) {
    return function (b) {
        var $14 = a > b;
        if ($14) {
            return [  ];
        };
        return Data_Array.range(a)(b);
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return function (array) {
                var go = function (res) {
                    return function (i) {
                        if (i >= Data_Array.length(array)) {
                            return Control_Applicative.pure(dictMonad.Applicative0())(res);
                        };
                        if (Data_Boolean.otherwise) {
                            return Control_Bind.bind(dictMonad.Bind1())(f(res)(array[i]))(function (v) {
                                return go(v)(i + 1 | 0);
                            });
                        };
                        throw new Error("Failed pattern match at Extensions line 85, column 3 - line 89, column 24: " + [ res.constructor.name, i.constructor.name ]);
                    };
                };
                return go(a)(0);
            };
        };
    };
};
var bindConst = function (dictBind) {
    return function (x) {
        return function (y) {
            return Control_Bind.bind(dictBind)(x)(Data_Function["const"](y));
        };
    };
};
module.exports = {
    bindConst: bindConst,
    hRange: hRange,
    modInt: modInt,
    signum: signum,
    modFloat: modFloat,
    replicateM: replicateM,
    listReplicate: listReplicate,
    foldM: foldM,
    mapM: mapM,
    Trace: Trace,
    Debug: Debug,
    Info: Info,
    Warn: Warn,
    "Error": $$Error,
    Fatal: Fatal,
    logA: logA,
    log: log,
    "logA'": logA$prime,
    "log'": log$prime,
    parseDate: $foreign.parseDate,
    toISOString: $foreign.toISOString,
    timeout: $foreign.timeout,
    fail: $foreign.fail,
    undef: $foreign.undef,
    unsafeCoerce: $foreign.unsafeCoerce,
    mapE: $foreign.mapE,
    mapE_: $foreign.mapE_,
    mapEBreak: $foreign.mapEBreak,
    mapEBreak_: $foreign.mapEBreak_,
    replicate: $foreign.replicate,
    alert: $foreign.alert,
    logAny: $foreign.logAny,
    stringify: $foreign.stringify
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Data.Array":80,"../Data.Boolean":90,"../Data.CForeign":95,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Functor":130,"../Data.JSDate":148,"../Data.List":151,"../Data.List.Types":150,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Traversable":209,"../Data.Unit":220,"../Math":244,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":226}],228:[function(require,module,exports){
/* globals exports */
"use strict";

// module Global

exports.nan = NaN;

exports.isNaN = isNaN;

exports.infinity = Infinity;

exports.isFinite = isFinite;

exports.readInt = function (radix) {
  return function (n) {
    return parseInt(n, radix);
  };
};

exports.readFloat = parseFloat;

exports.decodeURI = decodeURI;
exports.encodeURI = encodeURI;
exports.decodeURIComponent = decodeURIComponent;
exports.encodeURIComponent = encodeURIComponent;

},{}],229:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    nan: $foreign.nan,
    "isNaN": $foreign["isNaN"],
    infinity: $foreign.infinity,
    "isFinite": $foreign["isFinite"],
    readInt: $foreign.readInt,
    readFloat: $foreign.readFloat,
    "decodeURI": $foreign["decodeURI"],
    "encodeURI": $foreign["encodeURI"],
    "decodeURIComponent": $foreign["decodeURIComponent"],
    "encodeURIComponent": $foreign["encodeURIComponent"]
};

},{"./foreign":228}],230:[function(require,module,exports){
/* global exports */
"use strict";

exports.canvasElementToImageSource = function(e) {
    return e;
};

exports.tryLoadImageImpl = function (src) {
  return function(e) {
        return function(f) {
            return function () {
                var img = new Image();
                img.src = src;
                img.addEventListener("load", function() {
                    f(img)();
                }, false);
                img.addEventListener("error", function(error) {
                    e();
                }, false);

                return {};
            }
        }
    };
};

exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
    return function() {
        var el = document.getElementById(id);
        if (el && el instanceof HTMLCanvasElement) {
            return Just(el);
        } else {
            return Nothing;
        }
    };
};

exports.getContext2D = function(c) {
    return function() {
        return c.getContext('2d');
    };
};

exports.getCanvasWidth = function(canvas) {
    return function() {
        return canvas.width;
    };
};

exports.getCanvasHeight = function(canvas) {
    return function() {
        return canvas.height;
    };
};

exports.setCanvasWidth = function(width) {
    return function(canvas) {
        return function() {
            canvas.width = width;
            return canvas;
        };
    };
};

exports.setCanvasHeight = function(height) {
    return function(canvas) {
        return function() {
            canvas.height = height;
            return canvas;
        };
    };
};

exports.canvasToDataURL = function(canvas) {
    return function() {
        return canvas.toDataURL();
    };
};

exports.setLineWidth = function(width) {
    return function(ctx) {
        return function() {
            ctx.lineWidth = width;
            return ctx;
        };
    };
};

exports.setFillStyle = function(style) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = style;
            return ctx;
        };
    };
};

exports.setStrokeStyle = function(style) {
    return function(ctx) {
        return function() {
            ctx.strokeStyle = style;
            return ctx;
        };
    };
};

exports.setShadowColor = function(color) {
    return function(ctx) {
        return function() {
            ctx.shadowColor = color;
            return ctx;
        };
    };
};

exports.setShadowBlur = function(blur) {
    return function(ctx) {
        return function() {
            ctx.shadowBlur = blur;
            return ctx;
        };
    };
};

exports.setShadowOffsetX = function(offsetX) {
    return function(ctx) {
        return function() {
            ctx.shadowOffsetX = offsetX;
            return ctx;
        };
    };
};

exports.setShadowOffsetY = function(offsetY) {
    return function(ctx) {
        return function() {
            ctx.shadowOffsetY = offsetY;
            return ctx;
        };
    };
};

exports.setMiterLimit = function(limit) {
    return function(ctx) {
        return function() {
            ctx.miterLimit = limit;
            return ctx;
        };
    };
};

exports.setLineCapImpl = function(cap) {
    return function(ctx) {
        return function() {
            ctx.lineCap = cap;
            return ctx;
        };
    };
};

exports.setLineJoinImpl = function(join) {
    return function(ctx) {
        return function() {
            ctx.lineJoin = join;
            return ctx;
        };
    };
};

exports.setGlobalCompositeOperationImpl = function(ctx) {
    return function(op) {
        return function() {
            ctx.globalCompositeOperation = op;
            return ctx;
        };
    };
};

exports.setGlobalAlpha = function(ctx) {
    return function(alpha) {
        return function() {
            ctx.globalAlpha = alpha;
            return ctx;
        };
    };
};

exports.beginPath = function(ctx) {
    return function() {
        ctx.beginPath();
        return ctx;
    };
};

exports.stroke = function(ctx) {
    return function() {
        ctx.stroke();
        return ctx;
    };
};

exports.fill = function(ctx) {
    return function() {
        ctx.fill();
        return ctx;
    };
};

exports.clip = function(ctx) {
    return function() {
        ctx.clip();
        return ctx;
    };
};

exports.lineTo = function(ctx) {
    return function(x) {
        return function(y) {
            return function() {
                ctx.lineTo(x, y);
                return ctx;
            };
        };
    };
};

exports.moveTo = function(ctx) {
    return function(x) {
        return function(y) {
            return function() {
                ctx.moveTo(x, y);
                return ctx;
            };
        };
    };
};

exports.closePath = function(ctx) {
    return function() {
        ctx.closePath();
        return ctx;
    };
};

exports.arc = function(ctx) {
    return function(a) {
        return function() {
            ctx.arc(a.x, a.y, a.r, a.start, a.end);
            return ctx;
        };
    };
};

exports.rect = function(ctx) {
    return function(r) {
        return function() {
            ctx.rect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.fillRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.fillRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.strokeRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.strokeRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.scale = function(t) {
    return function(ctx) {
        return function() {
            ctx.scale(t.scaleX, t.scaleY);
            return ctx;
        };
    };
};

exports.rotate = function(angle) {
    return function(ctx) {
        return function() {
            ctx.rotate(angle);
            return ctx;
        };
    };
};

exports.translate = function(t) {
    return function(ctx) {
        return function() {
            ctx.translate(t.translateX, t.translateY);
            return ctx;
        };
    };
};

exports.transform = function(t) {
    return function(ctx) {
        return function() {
            ctx.transform(t.m11, t.m12, t.m21, t.m22, t.m31, t.m32);
            return ctx;
        };
    };
};

exports.setTransform = function(t) {
    return function(ctx) {
        return function() {
            ctx.setTransform(t.m11, t.m12, t.m21, t.m22, t.m31, t.m32);
            return ctx;
        };
    };
};

exports.clearRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.clearRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.textAlignImpl = function(ctx) {
    return function() {
        return ctx.textAlign;
    }
};

exports.setTextAlignImpl = function(ctx) {
    return function(textAlign) {
        return function() {
            ctx.textAlign = textAlign;
            return ctx;
        }
    }
};

exports.font = function(ctx) {
    return function() {
        return ctx.font;
    };
};

exports.setFont = function(fontspec) {
    return function(ctx) {
        return function() {
            ctx.font = fontspec;
            return ctx;
        };
    };
};

exports.fillText = function(ctx) {
    return function(text) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.fillText(text, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.strokeText = function(ctx) {
    return function(text) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.strokeText(text, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.measureText = function(ctx) {
    return function(text) {
        return function() {
            return ctx.measureText(text);
        };
    };
};

exports.save = function(ctx) {
    return function() {
        ctx.save();
        return ctx;
    };
};

exports.restore = function(ctx) {
    return function() {
        ctx.restore();
        return ctx;
    };
};

exports.imageDataWidth = function(image) {
    return image.width;
};

exports.imageDataHeight = function(image) {
    return image.height;
};

exports.imageDataBuffer = function(image) {
    return image.data;
};

exports.getImageData = function(ctx) {
    return function(x) {
        return function(y) {
            return function(w) {
                return function(h) {
                    return function() {
                        return ctx.getImageData(x, y, w, h);
                    };
                };
            };
        };
    };
};

exports.putImageDataFull = function(ctx) {
    return function(image_data) {
        return function(x) {
            return function(y) {
                return function(dx) {
                    return function(dy) {
                        return function(dw) {
                            return function(dh) {
                                return function() {
                                    ctx.putImageData(image_data, x, y, dx, dy, dw, dh);
                                    return ctx;
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

exports.putImageData = function(ctx) {
    return function(image_data) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.putImageData(image_data, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.createImageData = function(ctx) {
    return function(sw) {
        return function(sh) {
            return function() {
                return ctx.createImageData(sw, sh);
            };
        };
    };
};

exports.createImageDataCopy = function(ctx) {
    return function(image_data) {
        return function() {
            return ctx.createImageData(image_data);
        };
    };
};

exports.drawImage = function(ctx) {
    return function(image_source) {
        return function(dx) {
            return function(dy) {
                return function() {
                    ctx.drawImage(image_source, dx, dy);
                    return ctx;
                };
            };
        };
    };
};

exports.drawImageScale = function(ctx) {
    return function(image_source) {
        return function(dx) {
            return function(dy) {
                return function(dWidth) {
                    return function(dHeight) {
                        return function() {
                            ctx.drawImage(image_source, dx, dy, dWidth, dHeight);
                            return ctx;
                        };
                    };
                };
            };
        };
    };
};

exports.drawImageFull = function(ctx) {
    return function(image_source) {
        return function(sx) {
            return function(sy) {
                return function(sWidth) {
                    return function(sHeight) {
                        return function(dx) {
                            return function(dy) {
                                return function(dWidth) {
                                    return function(dHeight) {
                                        return function() {
                                            ctx.drawImage(image_source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);
                                            return ctx;
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

exports.createPatternImpl = function(img) {
    return function(repeat) {
        return function(ctx) {
            return function() {
                return ctx.createPattern(img, repeat);
            };
        };
    };
};

exports.setPatternFillStyle = function(pattern) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = pattern;
            return ctx;
        };
    };
};

exports.createLinearGradient = function(linearGradient) {
    return function(ctx) {
        return function() {
            return ctx.createLinearGradient(linearGradient.x0, linearGradient.y0, linearGradient.x1, linearGradient.y1);
        };
    };
};

exports.createRadialGradient = function(radialGradient) {
    return function(ctx) {
        return function() {
            return ctx.createRadialGradient(radialGradient.x0, radialGradient.y0, radialGradient.r0, radialGradient.x1, radialGradient.y1, radialGradient.r1);
        };
    };
};

exports.addColorStop = function(stop) {
    return function(color) {
        return function(gradient) {
            return function() {
                gradient.addColorStop(stop, color);
                return gradient;
            };
        };
    };
};

exports.setGradientFillStyle = function(gradient) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = gradient;
            return ctx;
        };
    };
};

exports.quadraticCurveTo = function(qCurve) {
    return function(ctx) {
        return function() {
            ctx.quadraticCurveTo(qCurve.cpx, qCurve.cpy, qCurve.x, qCurve.y);
            return ctx;
        };
    };
};

exports.bezierCurveTo = function(bCurve) {
    return function(ctx) {
        return function() {
            ctx.bezierCurveTo(bCurve.cp1x, bCurve.cp1y, bCurve.cp2x, bCurve.cp2y, bCurve.x, bCurve.y);
            return ctx;
        };
    };
};

},{}],231:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Exception_Unsafe = require("../Control.Monad.Eff.Exception.Unsafe");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var AlignLeft = (function () {
    function AlignLeft() {

    };
    AlignLeft.value = new AlignLeft();
    return AlignLeft;
})();
var AlignRight = (function () {
    function AlignRight() {

    };
    AlignRight.value = new AlignRight();
    return AlignRight;
})();
var AlignCenter = (function () {
    function AlignCenter() {

    };
    AlignCenter.value = new AlignCenter();
    return AlignCenter;
})();
var AlignStart = (function () {
    function AlignStart() {

    };
    AlignStart.value = new AlignStart();
    return AlignStart;
})();
var AlignEnd = (function () {
    function AlignEnd() {

    };
    AlignEnd.value = new AlignEnd();
    return AlignEnd;
})();
var Repeat = (function () {
    function Repeat() {

    };
    Repeat.value = new Repeat();
    return Repeat;
})();
var RepeatX = (function () {
    function RepeatX() {

    };
    RepeatX.value = new RepeatX();
    return RepeatX;
})();
var RepeatY = (function () {
    function RepeatY() {

    };
    RepeatY.value = new RepeatY();
    return RepeatY;
})();
var NoRepeat = (function () {
    function NoRepeat() {

    };
    NoRepeat.value = new NoRepeat();
    return NoRepeat;
})();
var BevelJoin = (function () {
    function BevelJoin() {

    };
    BevelJoin.value = new BevelJoin();
    return BevelJoin;
})();
var RoundJoin = (function () {
    function RoundJoin() {

    };
    RoundJoin.value = new RoundJoin();
    return RoundJoin;
})();
var MiterJoin = (function () {
    function MiterJoin() {

    };
    MiterJoin.value = new MiterJoin();
    return MiterJoin;
})();
var Round = (function () {
    function Round() {

    };
    Round.value = new Round();
    return Round;
})();
var Square = (function () {
    function Square() {

    };
    Square.value = new Square();
    return Square;
})();
var Butt = (function () {
    function Butt() {

    };
    Butt.value = new Butt();
    return Butt;
})();
var SourceOver = (function () {
    function SourceOver() {

    };
    SourceOver.value = new SourceOver();
    return SourceOver;
})();
var SourceIn = (function () {
    function SourceIn() {

    };
    SourceIn.value = new SourceIn();
    return SourceIn;
})();
var SourceOut = (function () {
    function SourceOut() {

    };
    SourceOut.value = new SourceOut();
    return SourceOut;
})();
var SourceAtop = (function () {
    function SourceAtop() {

    };
    SourceAtop.value = new SourceAtop();
    return SourceAtop;
})();
var DestinationOver = (function () {
    function DestinationOver() {

    };
    DestinationOver.value = new DestinationOver();
    return DestinationOver;
})();
var DestinationIn = (function () {
    function DestinationIn() {

    };
    DestinationIn.value = new DestinationIn();
    return DestinationIn;
})();
var DestinationOut = (function () {
    function DestinationOut() {

    };
    DestinationOut.value = new DestinationOut();
    return DestinationOut;
})();
var DestinationAtop = (function () {
    function DestinationAtop() {

    };
    DestinationAtop.value = new DestinationAtop();
    return DestinationAtop;
})();
var Lighter = (function () {
    function Lighter() {

    };
    Lighter.value = new Lighter();
    return Lighter;
})();
var Copy = (function () {
    function Copy() {

    };
    Copy.value = new Copy();
    return Copy;
})();
var Xor = (function () {
    function Xor() {

    };
    Xor.value = new Xor();
    return Xor;
})();
var Multiply = (function () {
    function Multiply() {

    };
    Multiply.value = new Multiply();
    return Multiply;
})();
var Screen = (function () {
    function Screen() {

    };
    Screen.value = new Screen();
    return Screen;
})();
var Overlay = (function () {
    function Overlay() {

    };
    Overlay.value = new Overlay();
    return Overlay;
})();
var Darken = (function () {
    function Darken() {

    };
    Darken.value = new Darken();
    return Darken;
})();
var Lighten = (function () {
    function Lighten() {

    };
    Lighten.value = new Lighten();
    return Lighten;
})();
var ColorDodge = (function () {
    function ColorDodge() {

    };
    ColorDodge.value = new ColorDodge();
    return ColorDodge;
})();
var ColorBurn = (function () {
    function ColorBurn() {

    };
    ColorBurn.value = new ColorBurn();
    return ColorBurn;
})();
var HardLight = (function () {
    function HardLight() {

    };
    HardLight.value = new HardLight();
    return HardLight;
})();
var SoftLight = (function () {
    function SoftLight() {

    };
    SoftLight.value = new SoftLight();
    return SoftLight;
})();
var Difference = (function () {
    function Difference() {

    };
    Difference.value = new Difference();
    return Difference;
})();
var Exclusion = (function () {
    function Exclusion() {

    };
    Exclusion.value = new Exclusion();
    return Exclusion;
})();
var Hue = (function () {
    function Hue() {

    };
    Hue.value = new Hue();
    return Hue;
})();
var Saturation = (function () {
    function Saturation() {

    };
    Saturation.value = new Saturation();
    return Saturation;
})();
var Color = (function () {
    function Color() {

    };
    Color.value = new Color();
    return Color;
})();
var Luminosity = (function () {
    function Luminosity() {

    };
    Luminosity.value = new Luminosity();
    return Luminosity;
})();
var withContext = function (ctx) {
    return function (action) {
        return function __do() {
            var v = $foreign.save(ctx)();
            var v1 = action();
            var v2 = $foreign.restore(ctx)();
            return v1;
        };
    };
};
var tryLoadImage = function (path) {
    return function (k) {
        return $foreign.tryLoadImageImpl(path)(k(Data_Maybe.Nothing.value))(function ($38) {
            return k(Data_Maybe.Just.create($38));
        });
    };
};
var textAlign = function (ctx) {
    var unsafeParseTextAlign = function (v) {
        if (v === "left") {
            return AlignLeft.value;
        };
        if (v === "right") {
            return AlignRight.value;
        };
        if (v === "center") {
            return AlignCenter.value;
        };
        if (v === "start") {
            return AlignStart.value;
        };
        if (v === "end") {
            return AlignEnd.value;
        };
        return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("invalid TextAlign: " + v);
    };
    return Data_Functor.map(Control_Monad_Eff.functorEff)(unsafeParseTextAlign)($foreign.textAlignImpl(ctx));
};
var strokePath = function (ctx) {
    return function (path) {
        return function __do() {
            var v = $foreign.beginPath(ctx)();
            var v1 = path();
            var v2 = $foreign.stroke(ctx)();
            return v1;
        };
    };
};
var showTextAlign = new Data_Show.Show(function (v) {
    if (v instanceof AlignLeft) {
        return "AlignLeft";
    };
    if (v instanceof AlignRight) {
        return "AlignRight";
    };
    if (v instanceof AlignCenter) {
        return "AlignCenter";
    };
    if (v instanceof AlignStart) {
        return "AlignStart";
    };
    if (v instanceof AlignEnd) {
        return "AlignEnd";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 490, column 1 - line 490, column 41: " + [ v.constructor.name ]);
});
var showPatternRepeat = new Data_Show.Show(function (v) {
    if (v instanceof Repeat) {
        return "Repeat";
    };
    if (v instanceof RepeatX) {
        return "RepeatX";
    };
    if (v instanceof RepeatY) {
        return "RepeatY";
    };
    if (v instanceof NoRepeat) {
        return "NoRepeat";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 600, column 1 - line 600, column 49: " + [ v.constructor.name ]);
});
var showComposite = new Data_Show.Show(function (v) {
    if (v instanceof SourceOver) {
        return "SourceOver";
    };
    if (v instanceof SourceIn) {
        return "SourceIn";
    };
    if (v instanceof SourceOut) {
        return "SourceOut";
    };
    if (v instanceof SourceAtop) {
        return "SourceAtop";
    };
    if (v instanceof DestinationOver) {
        return "DestinationOver";
    };
    if (v instanceof DestinationIn) {
        return "DestinationIn";
    };
    if (v instanceof DestinationOut) {
        return "DestinationOut";
    };
    if (v instanceof DestinationAtop) {
        return "DestinationAtop";
    };
    if (v instanceof Lighter) {
        return "Lighter";
    };
    if (v instanceof Copy) {
        return "Copy";
    };
    if (v instanceof Xor) {
        return "Xor";
    };
    if (v instanceof Multiply) {
        return "Multiply";
    };
    if (v instanceof Screen) {
        return "Screen";
    };
    if (v instanceof Overlay) {
        return "Overlay";
    };
    if (v instanceof Darken) {
        return "Darken";
    };
    if (v instanceof Lighten) {
        return "Lighten";
    };
    if (v instanceof ColorDodge) {
        return "ColorDodge";
    };
    if (v instanceof ColorBurn) {
        return "ColorBurn";
    };
    if (v instanceof HardLight) {
        return "HardLight";
    };
    if (v instanceof SoftLight) {
        return "SoftLight";
    };
    if (v instanceof Difference) {
        return "Difference";
    };
    if (v instanceof Exclusion) {
        return "Exclusion";
    };
    if (v instanceof Hue) {
        return "Hue";
    };
    if (v instanceof Saturation) {
        return "Saturation";
    };
    if (v instanceof Color) {
        return "Color";
    };
    if (v instanceof Luminosity) {
        return "Luminosity";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 285, column 1 - line 285, column 41: " + [ v.constructor.name ]);
});
var setTextAlign = function (ctx) {
    return function (textalign) {
        var toString = function (v) {
            if (v instanceof AlignLeft) {
                return "left";
            };
            if (v instanceof AlignRight) {
                return "right";
            };
            if (v instanceof AlignCenter) {
                return "center";
            };
            if (v instanceof AlignStart) {
                return "start";
            };
            if (v instanceof AlignEnd) {
                return "end";
            };
            throw new Error("Failed pattern match at Graphics.Canvas line 519, column 5 - line 520, column 5: " + [ v.constructor.name ]);
        };
        return $foreign.setTextAlignImpl(ctx)(toString(textalign));
    };
};
var setLineJoin = function (v) {
    if (v instanceof BevelJoin) {
        return $foreign.setLineJoinImpl("bevel");
    };
    if (v instanceof RoundJoin) {
        return $foreign.setLineJoinImpl("round");
    };
    if (v instanceof MiterJoin) {
        return $foreign.setLineJoinImpl("miter");
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 248, column 1 - line 248, column 91: " + [ v.constructor.name ]);
};
var setLineCap = function (v) {
    if (v instanceof Round) {
        return $foreign.setLineCapImpl("round");
    };
    if (v instanceof Square) {
        return $foreign.setLineCapImpl("square");
    };
    if (v instanceof Butt) {
        return $foreign.setLineCapImpl("butt");
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 235, column 1 - line 235, column 89: " + [ v.constructor.name ]);
};
var setGlobalCompositeOperation = function (ctx) {
    return function (composite) {
        var toString = function (v) {
            if (v instanceof SourceOver) {
                return "source-over";
            };
            if (v instanceof SourceIn) {
                return "source-in";
            };
            if (v instanceof SourceOut) {
                return "source-out";
            };
            if (v instanceof SourceAtop) {
                return "source-atop";
            };
            if (v instanceof DestinationOver) {
                return "destination-over";
            };
            if (v instanceof DestinationIn) {
                return "destination-in";
            };
            if (v instanceof DestinationOut) {
                return "destination-out";
            };
            if (v instanceof DestinationAtop) {
                return "destination-atop";
            };
            if (v instanceof Lighter) {
                return "lighter";
            };
            if (v instanceof Copy) {
                return "copy";
            };
            if (v instanceof Xor) {
                return "xor";
            };
            if (v instanceof Multiply) {
                return "multiply";
            };
            if (v instanceof Screen) {
                return "screen";
            };
            if (v instanceof Overlay) {
                return "overlay";
            };
            if (v instanceof Darken) {
                return "darken";
            };
            if (v instanceof Lighten) {
                return "lighten";
            };
            if (v instanceof ColorDodge) {
                return "color-dodge";
            };
            if (v instanceof ColorBurn) {
                return "color-burn";
            };
            if (v instanceof HardLight) {
                return "hard-light";
            };
            if (v instanceof SoftLight) {
                return "soft-light";
            };
            if (v instanceof Difference) {
                return "difference";
            };
            if (v instanceof Exclusion) {
                return "exclusion";
            };
            if (v instanceof Hue) {
                return "hue";
            };
            if (v instanceof Saturation) {
                return "saturation";
            };
            if (v instanceof Color) {
                return "color";
            };
            if (v instanceof Luminosity) {
                return "luminosity";
            };
            throw new Error("Failed pattern match at Graphics.Canvas line 319, column 5 - line 320, column 5: " + [ v.constructor.name ]);
        };
        return $foreign.setGlobalCompositeOperationImpl(ctx)(toString(composite));
    };
};
var setCanvasDimensions = function (d) {
    return function (ce) {
        return Control_Bind.bind(Control_Monad_Eff.bindEff)($foreign.setCanvasHeight(d.height)(ce))($foreign.setCanvasWidth(d.width));
    };
};
var getCanvasElementById = function (elId) {
    return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
};
var getCanvasDimensions = function (ce) {
    return function __do() {
        var v = $foreign.getCanvasWidth(ce)();
        var v1 = $foreign.getCanvasHeight(ce)();
        return {
            width: v,
            height: v1
        };
    };
};
var fillPath = function (ctx) {
    return function (path) {
        return function __do() {
            var v = $foreign.beginPath(ctx)();
            var v1 = path();
            var v2 = $foreign.fill(ctx)();
            return v1;
        };
    };
};
var eqLineCap = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Round && y instanceof Round) {
            return true;
        };
        if (x instanceof Square && y instanceof Square) {
            return true;
        };
        if (x instanceof Butt && y instanceof Butt) {
            return true;
        };
        return false;
    };
});
var createPattern = function (img) {
    return function (repeat) {
        var toString = function (v) {
            if (v instanceof Repeat) {
                return "repeat";
            };
            if (v instanceof RepeatX) {
                return "repeat-x";
            };
            if (v instanceof RepeatY) {
                return "repeat-y";
            };
            if (v instanceof NoRepeat) {
                return "no-repeat";
            };
            throw new Error("Failed pattern match at Graphics.Canvas line 612, column 5 - line 613, column 5: " + [ v.constructor.name ]);
        };
        return $foreign.createPatternImpl(img)(toString(repeat));
    };
};
module.exports = {
    SourceOver: SourceOver,
    SourceIn: SourceIn,
    SourceOut: SourceOut,
    SourceAtop: SourceAtop,
    DestinationOver: DestinationOver,
    DestinationIn: DestinationIn,
    DestinationOut: DestinationOut,
    DestinationAtop: DestinationAtop,
    Lighter: Lighter,
    Copy: Copy,
    Xor: Xor,
    Multiply: Multiply,
    Screen: Screen,
    Overlay: Overlay,
    Darken: Darken,
    Lighten: Lighten,
    ColorDodge: ColorDodge,
    ColorBurn: ColorBurn,
    HardLight: HardLight,
    SoftLight: SoftLight,
    Difference: Difference,
    Exclusion: Exclusion,
    Hue: Hue,
    Saturation: Saturation,
    Color: Color,
    Luminosity: Luminosity,
    Round: Round,
    Square: Square,
    Butt: Butt,
    BevelJoin: BevelJoin,
    RoundJoin: RoundJoin,
    MiterJoin: MiterJoin,
    AlignLeft: AlignLeft,
    AlignRight: AlignRight,
    AlignCenter: AlignCenter,
    AlignStart: AlignStart,
    AlignEnd: AlignEnd,
    Repeat: Repeat,
    RepeatX: RepeatX,
    RepeatY: RepeatY,
    NoRepeat: NoRepeat,
    getCanvasElementById: getCanvasElementById,
    getCanvasDimensions: getCanvasDimensions,
    setCanvasDimensions: setCanvasDimensions,
    setLineCap: setLineCap,
    setLineJoin: setLineJoin,
    setGlobalCompositeOperation: setGlobalCompositeOperation,
    strokePath: strokePath,
    fillPath: fillPath,
    textAlign: textAlign,
    setTextAlign: setTextAlign,
    withContext: withContext,
    tryLoadImage: tryLoadImage,
    createPattern: createPattern,
    eqLineCap: eqLineCap,
    showComposite: showComposite,
    showTextAlign: showTextAlign,
    showPatternRepeat: showPatternRepeat,
    getContext2D: $foreign.getContext2D,
    getCanvasWidth: $foreign.getCanvasWidth,
    setCanvasWidth: $foreign.setCanvasWidth,
    getCanvasHeight: $foreign.getCanvasHeight,
    setCanvasHeight: $foreign.setCanvasHeight,
    canvasToDataURL: $foreign.canvasToDataURL,
    setLineWidth: $foreign.setLineWidth,
    setFillStyle: $foreign.setFillStyle,
    setStrokeStyle: $foreign.setStrokeStyle,
    setShadowBlur: $foreign.setShadowBlur,
    setShadowOffsetX: $foreign.setShadowOffsetX,
    setShadowOffsetY: $foreign.setShadowOffsetY,
    setShadowColor: $foreign.setShadowColor,
    setMiterLimit: $foreign.setMiterLimit,
    setGlobalAlpha: $foreign.setGlobalAlpha,
    beginPath: $foreign.beginPath,
    stroke: $foreign.stroke,
    fill: $foreign.fill,
    clip: $foreign.clip,
    lineTo: $foreign.lineTo,
    moveTo: $foreign.moveTo,
    closePath: $foreign.closePath,
    arc: $foreign.arc,
    rect: $foreign.rect,
    fillRect: $foreign.fillRect,
    strokeRect: $foreign.strokeRect,
    clearRect: $foreign.clearRect,
    scale: $foreign.scale,
    rotate: $foreign.rotate,
    translate: $foreign.translate,
    transform: $foreign.transform,
    setTransform: $foreign.setTransform,
    font: $foreign.font,
    setFont: $foreign.setFont,
    fillText: $foreign.fillText,
    strokeText: $foreign.strokeText,
    measureText: $foreign.measureText,
    save: $foreign.save,
    restore: $foreign.restore,
    getImageData: $foreign.getImageData,
    putImageData: $foreign.putImageData,
    putImageDataFull: $foreign.putImageDataFull,
    createImageData: $foreign.createImageData,
    createImageDataCopy: $foreign.createImageDataCopy,
    imageDataWidth: $foreign.imageDataWidth,
    imageDataHeight: $foreign.imageDataHeight,
    imageDataBuffer: $foreign.imageDataBuffer,
    canvasElementToImageSource: $foreign.canvasElementToImageSource,
    drawImage: $foreign.drawImage,
    drawImageScale: $foreign.drawImageScale,
    drawImageFull: $foreign.drawImageFull,
    setPatternFillStyle: $foreign.setPatternFillStyle,
    createLinearGradient: $foreign.createLinearGradient,
    createRadialGradient: $foreign.createRadialGradient,
    addColorStop: $foreign.addColorStop,
    setGradientFillStyle: $foreign.setGradientFillStyle,
    quadraticCurveTo: $foreign.quadraticCurveTo,
    bezierCurveTo: $foreign.bezierCurveTo
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Exception.Unsafe":26,"../Control.Semigroupoid":60,"../Data.ArrayBuffer.Types":81,"../Data.Eq":111,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263,"./foreign":230}],232:[function(require,module,exports){
/* global exports */

// module Graphics.WebGL

    "use strict";

    exports.shaderBindings_ = function (program) {
          return function() {
            var bindings = {};
            var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);
            for (var i = 0; i < numUniforms; i += 1) {
                var uniform = gl.getActiveUniform(program, i);
                var uniformLocation = gl.getUniformLocation(program, uniform.name);
                var newUniform = {};
                newUniform.uLocation=uniformLocation;
                newUniform.uName=uniform.name;
                newUniform.uType=uniform.type;
                bindings[uniform.name]=newUniform;
              }
            var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);
            for (var i2 = 0; i2 < numAttributes; i2 += 1) {
                var attribute = gl.getActiveAttrib(program, i2);
                var attribLocation = gl.getAttribLocation(program, attribute.name);
                gl.enableVertexAttribArray(attribLocation);
                var newAttr = {};
                newAttr.aLocation=attribLocation;
                newAttr.aName=attribute.name;
                newAttr.aItemType=attribute.type;
                switch (attribute.type) {
                  case gl.FLOAT_VEC2:
                    newAttr.aItemSize=2;
                    break;
                  case gl.FLOAT_VEC3:
                    newAttr.aItemSize=3;
                    break;
                  case gl.FLOAT_VEC4:
                    newAttr.aItemSize=4;
                    break;
                  default:
                    LOG("Unsupported attribute type: " + attribute.type);
                    newAttr.aItemSize=1;
                    break;
                }
                bindings[attribute.name]=newAttr;
            }
            return bindings;
        };};


    exports.initGL_ = function (canvasId) {
            return function(attr) {
                return function() {
                  var canvas = document.getElementById(canvasId);
                  try {
                    gl = canvas.getContext("webgl", attr) || canvas.getContext("experimental-webgl", attr);
                  }
                  catch(e) {return false;}
                  if (!gl)
                  {
                    gl = null;
                    return false;
                  }
                  return true;
          };
      };
  };

        exports.getCanvasWidth_ = function(canvasId) {
          return function() {
            var canvas = document.getElementById(canvasId);
            return canvas.width;
            };
        };

        exports.getCanvasHeight_ = function(canvasId) {
          return function() {
            var canvas = document.getElementById(canvasId);
            return canvas.height;
            };
        };

        exports.requestAnimationFrame_ = function(x){
            if (typeof rAF === 'undefined') {
               var rAF = (function(){
                  return  window.requestAnimationFrame       ||
                          window.webkitRequestAnimationFrame ||
                          window.mozRequestAnimationFrame    ||
                          function( callback ){
                            window.setTimeout(callback, 1000 / 60);
                          };
                      })();
            }
            return function(){
              return rAF(x);
            };
        };

      exports.bufferData__ = function(target) {
          return function(data) {
              return function(usage) {
                  return function()
                    {gl.bufferData(target,data,usage);};
                };
            };
        };

      exports.bufferSubData__ = function(target) {
          return function(offset) {
              return function(data) {
                  return function()
                    {gl.bufferSubData(target,offset,data);};
                };
            };
        };

},{}],233:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_WebGL = require("../Control.Monad.Eff.WebGL");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Array_Partial = require("../Data.Array.Partial");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_TypedArray = require("../Data.TypedArray");
var Data_Unit = require("../Data.Unit");
var Extensions = require("../Extensions");
var Graphics_WebGLRaw = require("../Graphics.WebGLRaw");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var WebGLProg = function (x) {
    return x;
};
var Uniform = function (x) {
    return x;
};
var Shaders = (function () {
    function Shaders(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Shaders.create = function (value0) {
        return function (value1) {
            return new Shaders(value0, value1);
        };
    };
    return Shaders;
})();
var FragmentShader = (function () {
    function FragmentShader() {

    };
    FragmentShader.value = new FragmentShader();
    return FragmentShader;
})();
var VertexShader = (function () {
    function VertexShader() {

    };
    VertexShader.value = new VertexShader();
    return VertexShader;
})();
var POINTS = (function () {
    function POINTS() {

    };
    POINTS.value = new POINTS();
    return POINTS;
})();
var LINES = (function () {
    function LINES() {

    };
    LINES.value = new LINES();
    return LINES;
})();
var LINE_STRIP = (function () {
    function LINE_STRIP() {

    };
    LINE_STRIP.value = new LINE_STRIP();
    return LINE_STRIP;
})();
var LINE_LOOP = (function () {
    function LINE_LOOP() {

    };
    LINE_LOOP.value = new LINE_LOOP();
    return LINE_LOOP;
})();
var TRIANGLES = (function () {
    function TRIANGLES() {

    };
    TRIANGLES.value = new TRIANGLES();
    return TRIANGLES;
})();
var TRIANGLE_STRIP = (function () {
    function TRIANGLE_STRIP() {

    };
    TRIANGLE_STRIP.value = new TRIANGLE_STRIP();
    return TRIANGLE_STRIP;
})();
var TRIANGLE_FAN = (function () {
    function TRIANGLE_FAN() {

    };
    TRIANGLE_FAN.value = new TRIANGLE_FAN();
    return TRIANGLE_FAN;
})();
var DEPTH_BUFFER_BIT = (function () {
    function DEPTH_BUFFER_BIT() {

    };
    DEPTH_BUFFER_BIT.value = new DEPTH_BUFFER_BIT();
    return DEPTH_BUFFER_BIT;
})();
var STENCIL_BUFFER_BIT = (function () {
    function STENCIL_BUFFER_BIT() {

    };
    STENCIL_BUFFER_BIT.value = new STENCIL_BUFFER_BIT();
    return STENCIL_BUFFER_BIT;
})();
var COLOR_BUFFER_BIT = (function () {
    function COLOR_BUFFER_BIT() {

    };
    COLOR_BUFFER_BIT.value = new COLOR_BUFFER_BIT();
    return COLOR_BUFFER_BIT;
})();
var NEVER = (function () {
    function NEVER() {

    };
    NEVER.value = new NEVER();
    return NEVER;
})();
var ALWAYS = (function () {
    function ALWAYS() {

    };
    ALWAYS.value = new ALWAYS();
    return ALWAYS;
})();
var LESS = (function () {
    function LESS() {

    };
    LESS.value = new LESS();
    return LESS;
})();
var EQUAL = (function () {
    function EQUAL() {

    };
    EQUAL.value = new EQUAL();
    return EQUAL;
})();
var LEQUAL = (function () {
    function LEQUAL() {

    };
    LEQUAL.value = new LEQUAL();
    return LEQUAL;
})();
var GREATER = (function () {
    function GREATER() {

    };
    GREATER.value = new GREATER();
    return GREATER;
})();
var GEQUAL = (function () {
    function GEQUAL() {

    };
    GEQUAL.value = new GEQUAL();
    return GEQUAL;
})();
var NOTEQUAL = (function () {
    function NOTEQUAL() {

    };
    NOTEQUAL.value = new NOTEQUAL();
    return NOTEQUAL;
})();
var BLEND = (function () {
    function BLEND() {

    };
    BLEND.value = new BLEND();
    return BLEND;
})();
var DEPTH_TEST = (function () {
    function DEPTH_TEST() {

    };
    DEPTH_TEST.value = new DEPTH_TEST();
    return DEPTH_TEST;
})();
var CULL_FACE = (function () {
    function CULL_FACE() {

    };
    CULL_FACE.value = new CULL_FACE();
    return CULL_FACE;
})();
var POLYGON_OFFSET_FILL = (function () {
    function POLYGON_OFFSET_FILL() {

    };
    POLYGON_OFFSET_FILL.value = new POLYGON_OFFSET_FILL();
    return POLYGON_OFFSET_FILL;
})();
var SCISSOR_TEST = (function () {
    function SCISSOR_TEST() {

    };
    SCISSOR_TEST.value = new SCISSOR_TEST();
    return SCISSOR_TEST;
})();
var ARRAY_BUFFER = (function () {
    function ARRAY_BUFFER() {

    };
    ARRAY_BUFFER.value = new ARRAY_BUFFER();
    return ARRAY_BUFFER;
})();
var ELEMENT_ARRAY_BUFFER = (function () {
    function ELEMENT_ARRAY_BUFFER() {

    };
    ELEMENT_ARRAY_BUFFER.value = new ELEMENT_ARRAY_BUFFER();
    return ELEMENT_ARRAY_BUFFER;
})();
var ZERO = (function () {
    function ZERO() {

    };
    ZERO.value = new ZERO();
    return ZERO;
})();
var ONE = (function () {
    function ONE() {

    };
    ONE.value = new ONE();
    return ONE;
})();
var SRC_COLOR = (function () {
    function SRC_COLOR() {

    };
    SRC_COLOR.value = new SRC_COLOR();
    return SRC_COLOR;
})();
var ONE_MINUS_SRC_COLOR = (function () {
    function ONE_MINUS_SRC_COLOR() {

    };
    ONE_MINUS_SRC_COLOR.value = new ONE_MINUS_SRC_COLOR();
    return ONE_MINUS_SRC_COLOR;
})();
var DST_COLOR = (function () {
    function DST_COLOR() {

    };
    DST_COLOR.value = new DST_COLOR();
    return DST_COLOR;
})();
var ONE_MINUS_DST_COLOR = (function () {
    function ONE_MINUS_DST_COLOR() {

    };
    ONE_MINUS_DST_COLOR.value = new ONE_MINUS_DST_COLOR();
    return ONE_MINUS_DST_COLOR;
})();
var SRC_ALPHA = (function () {
    function SRC_ALPHA() {

    };
    SRC_ALPHA.value = new SRC_ALPHA();
    return SRC_ALPHA;
})();
var ONE_MINUS_SRC_ALPHA = (function () {
    function ONE_MINUS_SRC_ALPHA() {

    };
    ONE_MINUS_SRC_ALPHA.value = new ONE_MINUS_SRC_ALPHA();
    return ONE_MINUS_SRC_ALPHA;
})();
var DST_ALPHA = (function () {
    function DST_ALPHA() {

    };
    DST_ALPHA.value = new DST_ALPHA();
    return DST_ALPHA;
})();
var ONE_MINUS_DST_ALPHA = (function () {
    function ONE_MINUS_DST_ALPHA() {

    };
    ONE_MINUS_DST_ALPHA.value = new ONE_MINUS_DST_ALPHA();
    return ONE_MINUS_DST_ALPHA;
})();
var SRC_ALPHA_SATURATE = (function () {
    function SRC_ALPHA_SATURATE() {

    };
    SRC_ALPHA_SATURATE.value = new SRC_ALPHA_SATURATE();
    return SRC_ALPHA_SATURATE;
})();
var BLEND_DST_RGB = (function () {
    function BLEND_DST_RGB() {

    };
    BLEND_DST_RGB.value = new BLEND_DST_RGB();
    return BLEND_DST_RGB;
})();
var BLEND_SRC_RGB = (function () {
    function BLEND_SRC_RGB() {

    };
    BLEND_SRC_RGB.value = new BLEND_SRC_RGB();
    return BLEND_SRC_RGB;
})();
var BLEND_DST_ALPHA = (function () {
    function BLEND_DST_ALPHA() {

    };
    BLEND_DST_ALPHA.value = new BLEND_DST_ALPHA();
    return BLEND_DST_ALPHA;
})();
var BLEND_SRC_ALPHA = (function () {
    function BLEND_SRC_ALPHA() {

    };
    BLEND_SRC_ALPHA.value = new BLEND_SRC_ALPHA();
    return BLEND_SRC_ALPHA;
})();
var CONSTANT_COLOR = (function () {
    function CONSTANT_COLOR() {

    };
    CONSTANT_COLOR.value = new CONSTANT_COLOR();
    return CONSTANT_COLOR;
})();
var ONE_MINUS_CONSTANT_COLOR = (function () {
    function ONE_MINUS_CONSTANT_COLOR() {

    };
    ONE_MINUS_CONSTANT_COLOR.value = new ONE_MINUS_CONSTANT_COLOR();
    return ONE_MINUS_CONSTANT_COLOR;
})();
var CONSTANT_ALPHA = (function () {
    function CONSTANT_ALPHA() {

    };
    CONSTANT_ALPHA.value = new CONSTANT_ALPHA();
    return CONSTANT_ALPHA;
})();
var ONE_MINUS_CONSTANT_ALPHA = (function () {
    function ONE_MINUS_CONSTANT_ALPHA() {

    };
    ONE_MINUS_CONSTANT_ALPHA.value = new ONE_MINUS_CONSTANT_ALPHA();
    return ONE_MINUS_CONSTANT_ALPHA;
})();
var BLEND_COLOR = (function () {
    function BLEND_COLOR() {

    };
    BLEND_COLOR.value = new BLEND_COLOR();
    return BLEND_COLOR;
})();
var FUNC_ADD = (function () {
    function FUNC_ADD() {

    };
    FUNC_ADD.value = new FUNC_ADD();
    return FUNC_ADD;
})();
var BLEND_EQUATION = (function () {
    function BLEND_EQUATION() {

    };
    BLEND_EQUATION.value = new BLEND_EQUATION();
    return BLEND_EQUATION;
})();
var BLEND_EQUATION_RGB = (function () {
    function BLEND_EQUATION_RGB() {

    };
    BLEND_EQUATION_RGB.value = new BLEND_EQUATION_RGB();
    return BLEND_EQUATION_RGB;
})();
var BLEND_EQUATION_ALPHA = (function () {
    function BLEND_EQUATION_ALPHA() {

    };
    BLEND_EQUATION_ALPHA.value = new BLEND_EQUATION_ALPHA();
    return BLEND_EQUATION_ALPHA;
})();
var FUNC_SUBTRACT = (function () {
    function FUNC_SUBTRACT() {

    };
    FUNC_SUBTRACT.value = new FUNC_SUBTRACT();
    return FUNC_SUBTRACT;
})();
var FUNC_REVERSE_SUBTRACT = (function () {
    function FUNC_REVERSE_SUBTRACT() {

    };
    FUNC_REVERSE_SUBTRACT.value = new FUNC_REVERSE_SUBTRACT();
    return FUNC_REVERSE_SUBTRACT;
})();
var Attribute = function (x) {
    return x;
};
var viewport = Graphics_WebGLRaw.viewport_;
var vertexPointer = function (v) {
    return Graphics_WebGLRaw.vertexAttribPointer_(v.aLocation)(v.aItemSize)(Graphics_WebGLRaw._FLOAT)(false)(0)(0);
};
var setUniformBoolean = function (v) {
    return function (value) {
        if (v.uType === Graphics_WebGLRaw._BOOL) {
            var toNumber = function (v1) {
                if (v1) {
                    return 1;
                };
                if (!v1) {
                    return 0;
                };
                throw new Error("Failed pattern match at Graphics.WebGL line 322, column 7 - line 323, column 7: " + [ v1.constructor.name ]);
            };
            return Graphics_WebGLRaw.uniform1i_(v.uLocation)(toNumber(value));
        };
        if (Data_Boolean.otherwise) {
            return Extensions.fail("WebGL>>setUniformBoolean: Called for not boolean uniform!");
        };
        throw new Error("Failed pattern match at Graphics.WebGL line 318, column 1 - line 318, column 81: " + [ v.constructor.name, value.constructor.name ]);
    };
};
var runWebGLAttr = function (canvasId) {
    return function (attr) {
        return function (failure) {
            return function (success) {
                var makeContext = {
                    canvasName: canvasId
                };
                return function __do() {
                    var v = $foreign.initGL_(canvasId)(attr)();
                    if (v) {
                        return Control_Monad_Eff_WebGL.runWebGl_(success(makeContext))();
                    };
                    return failure("Unable to initialize WebGL. Your browser may not support it.")();
                };
            };
        };
    };
};
var requestAnimationFrame = $foreign.requestAnimationFrame_;
var modeToConst = function (v) {
    if (v instanceof POINTS) {
        return Graphics_WebGLRaw._POINTS;
    };
    if (v instanceof LINES) {
        return Graphics_WebGLRaw._LINES;
    };
    if (v instanceof LINE_STRIP) {
        return Graphics_WebGLRaw._LINE_STRIP;
    };
    if (v instanceof LINE_LOOP) {
        return Graphics_WebGLRaw._LINE_LOOP;
    };
    if (v instanceof TRIANGLES) {
        return Graphics_WebGLRaw._TRIANGLES;
    };
    if (v instanceof TRIANGLE_STRIP) {
        return Graphics_WebGLRaw._TRIANGLE_STRIP;
    };
    if (v instanceof TRIANGLE_FAN) {
        return Graphics_WebGLRaw._TRIANGLE_FAN;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 518, column 1 - line 518, column 27: " + [ v.constructor.name ]);
};
var maskToConst = function (v) {
    if (v instanceof DEPTH_BUFFER_BIT) {
        return Graphics_WebGLRaw._DEPTH_BUFFER_BIT;
    };
    if (v instanceof STENCIL_BUFFER_BIT) {
        return Graphics_WebGLRaw._STENCIL_BUFFER_BIT;
    };
    if (v instanceof COLOR_BUFFER_BIT) {
        return Graphics_WebGLRaw._COLOR_BUFFER_BIT;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 497, column 1 - line 497, column 27: " + [ v.constructor.name ]);
};
var makeShader = function (shaderType) {
    return function (shaderSrc) {
        var shaderTypeConst = (function () {
            if (shaderType instanceof FragmentShader) {
                return Graphics_WebGLRaw._FRAGMENT_SHADER;
            };
            if (shaderType instanceof VertexShader) {
                return Graphics_WebGLRaw._VERTEX_SHADER;
            };
            throw new Error("Failed pattern match at Graphics.WebGL line 441, column 25 - line 443, column 57: " + [ shaderType.constructor.name ]);
        })();
        return function __do() {
            var v = Graphics_WebGLRaw.createShader_(shaderTypeConst)();
            Graphics_WebGLRaw.shaderSource_(v)(shaderSrc)();
            Graphics_WebGLRaw.compileShader_(v)();
            var v1 = Graphics_WebGLRaw.getShaderParameter_(v)(Graphics_WebGLRaw._COMPILE_STATUS)();
            if (v1) {
                return new Data_Either.Left(v);
            };
            var v2 = Graphics_WebGLRaw.getShaderInfoLog_(v)();
            return new Data_Either.Right(v2);
        };
    };
};
var makeBufferFloat$prime = function (vertices) {
    return function (flag) {
        return function __do() {
            var v = Graphics_WebGLRaw.createBuffer_();
            Graphics_WebGLRaw.bindBuffer_(Graphics_WebGLRaw._ARRAY_BUFFER)(v)();
            var typedArray = Data_TypedArray.asFloat32Array(vertices);
            $foreign.bufferData__(Graphics_WebGLRaw._ARRAY_BUFFER)(typedArray)(flag)();
            return {
                webGLBuffer: v,
                bufferType: Graphics_WebGLRaw._ARRAY_BUFFER,
                bufferSize: Data_Array.length(vertices)
            };
        };
    };
};
var makeBufferFloatDyn = function (vertices) {
    return makeBufferFloat$prime(vertices)(Graphics_WebGLRaw._DYNAMIC_DRAW);
};
var makeBufferFloat = function (vertices) {
    return makeBufferFloat$prime(vertices)(Graphics_WebGLRaw._STATIC_DRAW);
};
var isContextLost = Graphics_WebGLRaw.isContextLost_;
var initShaders = function (fragmentShader) {
    return function (vertexShader) {
        return function __do() {
            var v = Graphics_WebGLRaw.createProgram_();
            Graphics_WebGLRaw.attachShader_(v)(vertexShader)();
            Graphics_WebGLRaw.attachShader_(v)(fragmentShader)();
            Graphics_WebGLRaw.linkProgram_(v)();
            var v1 = Graphics_WebGLRaw.getProgramParameter_(v)(Graphics_WebGLRaw._LINK_STATUS)();
            if (v1) {
                Graphics_WebGLRaw.useProgram_(v)();
                return new Data_Maybe.Just(v);
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var withShaders = function (v) {
    return function (failure) {
        return function (success) {
            return function __do() {
                var v1 = makeShader(FragmentShader.value)(v.value0)();
                if (v1 instanceof Data_Either.Right) {
                    return failure("Can't compile fragment shader: " + v1.value0)();
                };
                if (v1 instanceof Data_Either.Left) {
                    var v2 = makeShader(VertexShader.value)(v.value1)();
                    if (v2 instanceof Data_Either.Right) {
                        return failure("Can't compile vertex shader: " + v2.value0)();
                    };
                    if (v2 instanceof Data_Either.Left) {
                        var v3 = initShaders(v1.value0)(v2.value0)();
                        if (v3 instanceof Data_Maybe.Nothing) {
                            return failure("Can't init shaders")();
                        };
                        if (v3 instanceof Data_Maybe.Just) {
                            var v4 = $foreign.shaderBindings_(v3.value0)();
                            return success((function () {
                                var $65 = {};
                                for (var $66 in v4) {
                                    if ({}.hasOwnProperty.call(v4, $66)) {
                                        $65[$66] = v4[$66];
                                    };
                                };
                                $65.webGLProgram = v3.value0;
                                return $65;
                            })())();
                        };
                        throw new Error("Failed pattern match at Graphics.WebGL line 218, column 13 - line 224, column 69: " + [ v3.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Graphics.WebGL line 214, column 7 - line 224, column 69: " + [ v2.constructor.name ]);
                };
                throw new Error("Failed pattern match at Graphics.WebGL line 210, column 3 - line 224, column 69: " + [ v1.constructor.name ]);
            };
        };
    };
};
var getCanvasWidth = function (context) {
    return $foreign.getCanvasWidth_(context.canvasName);
};
var getCanvasHeight = function (context) {
    return $foreign.getCanvasHeight_(context.canvasName);
};
var funcToConst = function (v) {
    if (v instanceof NEVER) {
        return Graphics_WebGLRaw._NEVER;
    };
    if (v instanceof ALWAYS) {
        return Graphics_WebGLRaw._ALWAYS;
    };
    if (v instanceof LESS) {
        return Graphics_WebGLRaw._LESS;
    };
    if (v instanceof EQUAL) {
        return Graphics_WebGLRaw._EQUAL;
    };
    if (v instanceof LEQUAL) {
        return Graphics_WebGLRaw._LEQUAL;
    };
    if (v instanceof GREATER) {
        return Graphics_WebGLRaw._GREATER;
    };
    if (v instanceof GEQUAL) {
        return Graphics_WebGLRaw._GEQUAL;
    };
    if (v instanceof NOTEQUAL) {
        return Graphics_WebGLRaw._NOTEQUAL;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 377, column 1 - line 377, column 27: " + [ v.constructor.name ]);
};
var fillBuffer = function (buffer) {
    return function (offset) {
        return function (vertices) {
            return function __do() {
                Graphics_WebGLRaw.bindBuffer_(buffer.bufferType)(buffer.webGLBuffer)();
                var typedArray = Data_TypedArray.asFloat32Array(vertices);
                $foreign.bufferSubData__(buffer.bufferType)(offset)(typedArray)();
                return Data_Unit.unit;
            };
        };
    };
};
var enableVertexAttribArray = function (v) {
    return Graphics_WebGLRaw.enableVertexAttribArray_(v.aLocation);
};
var drawElements = function (mode) {
    return function (count) {
        return Graphics_WebGLRaw.drawElements_(modeToConst(mode))(count)(Graphics_WebGLRaw._UNSIGNED_SHORT)(0);
    };
};
var disableVertexAttribArray = function (v) {
    return Graphics_WebGLRaw.disableVertexAttribArray_(v.aLocation);
};
var depthFunc = function ($93) {
    return Graphics_WebGLRaw.depthFunc_(funcToConst($93));
};
var defContextAttributes = {
    alpha: true,
    depth: true,
    stencil: false,
    antialias: true,
    premultipliedAlpha: true,
    preserveDrawingBuffer: false,
    preferLowPowerToHighPerformance: false,
    failIfMajorPerformanceCaveat: false
};
var runWebGL = function (canvasId) {
    return function (failure) {
        return function (success) {
            var makeContext = {
                canvasName: canvasId
            };
            return function __do() {
                var v = $foreign.initGL_(canvasId)(defContextAttributes)();
                if (v) {
                    return Control_Monad_Eff_WebGL.runWebGl_(success(makeContext))();
                };
                return failure("Unable to initialize WebGL. Your browser may not support it.")();
            };
        };
    };
};
var colorMask = Graphics_WebGLRaw.colorMask_;
var clearStencil = Graphics_WebGLRaw.clearStencil_;
var clearDepth = Graphics_WebGLRaw.clearDepth_;
var clearColor = Graphics_WebGLRaw.clearColor_;
var clear = function (masks) {
    return Graphics_WebGLRaw.clear_(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Int_Bits.or)(0)(Data_Functor.map(Data_Functor.functorArray)(maskToConst)(masks)));
};
var capacityToConst = function (v) {
    if (v instanceof BLEND) {
        return Graphics_WebGLRaw._BLEND;
    };
    if (v instanceof DEPTH_TEST) {
        return Graphics_WebGLRaw._DEPTH_TEST;
    };
    if (v instanceof CULL_FACE) {
        return Graphics_WebGLRaw._CULL_FACE;
    };
    if (v instanceof POLYGON_OFFSET_FILL) {
        return Graphics_WebGLRaw._POLYGON_OFFSET_FILL;
    };
    if (v instanceof SCISSOR_TEST) {
        return Graphics_WebGLRaw._SCISSOR_TEST;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 482, column 1 - line 482, column 35: " + [ v.constructor.name ]);
};
var disable = function ($94) {
    return Graphics_WebGLRaw.disable_(capacityToConst($94));
};
var enable = function ($95) {
    return Graphics_WebGLRaw.enable_(capacityToConst($95));
};
var isEnabled = function ($96) {
    return Graphics_WebGLRaw.isEnabled_(capacityToConst($96));
};
var bufferTargetToConst = function (v) {
    if (v instanceof ARRAY_BUFFER) {
        return Graphics_WebGLRaw._ARRAY_BUFFER;
    };
    if (v instanceof ELEMENT_ARRAY_BUFFER) {
        return Graphics_WebGLRaw._ELEMENT_ARRAY_BUFFER;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 531, column 1 - line 531, column 43: " + [ v.constructor.name ]);
};
var makeBuffer$prime = function (dictEuclideanRing) {
    return function (bufferTarget) {
        return function (conversion) {
            return function (vertices) {
                return function (flag) {
                    var targetConst = bufferTargetToConst(bufferTarget);
                    return function __do() {
                        var v = Graphics_WebGLRaw.createBuffer_();
                        Graphics_WebGLRaw.bindBuffer_(targetConst)(v)();
                        var typedArray = conversion(vertices);
                        $foreign.bufferData__(targetConst)(typedArray)(flag)();
                        return {
                            webGLBuffer: v,
                            bufferType: targetConst,
                            bufferSize: Data_Array.length(vertices)
                        };
                    };
                };
            };
        };
    };
};
var makeBuffer = function (dictEuclideanRing) {
    return function (bufferTarget) {
        return function (conversion) {
            return function (vertices) {
                return makeBuffer$prime(dictEuclideanRing)(bufferTarget)(conversion)(vertices)(Graphics_WebGLRaw._STATIC_DRAW);
            };
        };
    };
};
var makeBufferDyn = function (dictEuclideanRing) {
    return function (bufferTarget) {
        return function (conversion) {
            return function (vertices) {
                return makeBuffer$prime(dictEuclideanRing)(bufferTarget)(conversion)(vertices)(Graphics_WebGLRaw._DYNAMIC_DRAW);
            };
        };
    };
};
var makeBufferPrim = function (bufferTarget) {
    return function (typedArray) {
        var targetConst = bufferTargetToConst(bufferTarget);
        return function __do() {
            var v = Graphics_WebGLRaw.createBuffer_();
            Graphics_WebGLRaw.bindBuffer_(targetConst)(v)();
            $foreign.bufferData__(targetConst)(typedArray)(Graphics_WebGLRaw._STATIC_DRAW)();
            return {
                webGLBuffer: v,
                bufferType: targetConst,
                bufferSize: Data_TypedArray.length(typedArray)
            };
        };
    };
};
var makeBufferPrimDyn = function (bufferTarget) {
    return function (typedArray) {
        var targetConst = bufferTargetToConst(bufferTarget);
        return function __do() {
            var v = Graphics_WebGLRaw.createBuffer_();
            Graphics_WebGLRaw.bindBuffer_(targetConst)(v)();
            $foreign.bufferData__(targetConst)(typedArray)(Graphics_WebGLRaw._DYNAMIC_DRAW)();
            return {
                webGLBuffer: v,
                bufferType: targetConst,
                bufferSize: Data_TypedArray.length(typedArray)
            };
        };
    };
};
var blendingFactorToConst = function (v) {
    if (v instanceof ZERO) {
        return Graphics_WebGLRaw._ZERO;
    };
    if (v instanceof ONE) {
        return Graphics_WebGLRaw._ONE;
    };
    if (v instanceof SRC_COLOR) {
        return Graphics_WebGLRaw._SRC_COLOR;
    };
    if (v instanceof ONE_MINUS_SRC_COLOR) {
        return Graphics_WebGLRaw._ONE_MINUS_SRC_COLOR;
    };
    if (v instanceof DST_COLOR) {
        return Graphics_WebGLRaw._DST_COLOR;
    };
    if (v instanceof ONE_MINUS_DST_COLOR) {
        return Graphics_WebGLRaw._ONE_MINUS_DST_COLOR;
    };
    if (v instanceof SRC_ALPHA) {
        return Graphics_WebGLRaw._SRC_ALPHA;
    };
    if (v instanceof ONE_MINUS_SRC_ALPHA) {
        return Graphics_WebGLRaw._ONE_MINUS_SRC_ALPHA;
    };
    if (v instanceof DST_ALPHA) {
        return Graphics_WebGLRaw._DST_ALPHA;
    };
    if (v instanceof ONE_MINUS_DST_ALPHA) {
        return Graphics_WebGLRaw._ONE_MINUS_DST_ALPHA;
    };
    if (v instanceof CONSTANT_COLOR) {
        return Graphics_WebGLRaw._CONSTANT_COLOR;
    };
    if (v instanceof ONE_MINUS_CONSTANT_COLOR) {
        return Graphics_WebGLRaw._ONE_MINUS_CONSTANT_COLOR;
    };
    if (v instanceof CONSTANT_ALPHA) {
        return Graphics_WebGLRaw._CONSTANT_ALPHA;
    };
    if (v instanceof ONE_MINUS_CONSTANT_ALPHA) {
        return Graphics_WebGLRaw._ONE_MINUS_CONSTANT_ALPHA;
    };
    if (v instanceof SRC_ALPHA_SATURATE) {
        return Graphics_WebGLRaw._SRC_ALPHA_SATURATE;
    };
    if (v instanceof BLEND_COLOR) {
        return Graphics_WebGLRaw._BLEND_COLOR;
    };
    if (v instanceof BLEND_DST_RGB) {
        return Graphics_WebGLRaw._BLEND_DST_RGB;
    };
    if (v instanceof BLEND_SRC_RGB) {
        return Graphics_WebGLRaw._BLEND_SRC_RGB;
    };
    if (v instanceof BLEND_DST_ALPHA) {
        return Graphics_WebGLRaw._BLEND_DST_ALPHA;
    };
    if (v instanceof BLEND_SRC_ALPHA) {
        return Graphics_WebGLRaw._BLEND_SRC_ALPHA;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 559, column 1 - line 559, column 47: " + [ v.constructor.name ]);
};
var blendFuncSeparate = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                var d$prime = blendingFactorToConst(d);
                var c$prime = blendingFactorToConst(c);
                var b$prime = blendingFactorToConst(b);
                var a$prime = blendingFactorToConst(a);
                return Graphics_WebGLRaw.blendFuncSeparate_(a$prime)(b$prime)(c$prime)(d$prime);
            };
        };
    };
};
var blendFunc = function (a) {
    return function (b) {
        return Graphics_WebGLRaw.blendFunc_(blendingFactorToConst(a))(blendingFactorToConst(b));
    };
};
var blendEquationToConst = function (v) {
    if (v instanceof FUNC_ADD) {
        return Graphics_WebGLRaw._FUNC_ADD;
    };
    if (v instanceof BLEND_EQUATION) {
        return Graphics_WebGLRaw._BLEND_EQUATION;
    };
    if (v instanceof BLEND_EQUATION_RGB) {
        return Graphics_WebGLRaw._BLEND_EQUATION_RGB;
    };
    if (v instanceof BLEND_EQUATION_ALPHA) {
        return Graphics_WebGLRaw._BLEND_EQUATION_ALPHA;
    };
    if (v instanceof FUNC_SUBTRACT) {
        return Graphics_WebGLRaw._FUNC_SUBTRACT;
    };
    if (v instanceof FUNC_REVERSE_SUBTRACT) {
        return Graphics_WebGLRaw._FUNC_REVERSE_SUBTRACT;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 590, column 1 - line 590, column 45: " + [ v.constructor.name ]);
};
var blendEquationSeparate = function (a) {
    return function (b) {
        return Graphics_WebGLRaw.blendEquationSeparate_(blendEquationToConst(a))(blendEquationToConst(b));
    };
};
var blendEquation = function ($97) {
    return Graphics_WebGLRaw.blendEquation_(blendEquationToConst($97));
};
var blendColor = Graphics_WebGLRaw.blendColor_;
var bindBufAndSetVertexAttr = function (buffer) {
    return function (attr) {
        return function __do() {
            Graphics_WebGLRaw.bindBuffer_(buffer.bufferType)(buffer.webGLBuffer)();
            return vertexPointer(attr)();
        };
    };
};
var drawArr = function (mode) {
    return function (buffer) {
        return function (v) {
            return function __do() {
                bindBufAndSetVertexAttr(buffer)(v)();
                return Graphics_WebGLRaw.drawArrays_(modeToConst(mode))(0)(buffer.bufferSize / v.aItemSize | 0)();
            };
        };
    };
};
var bindBuf = function (buffer) {
    return Graphics_WebGLRaw.bindBuffer_(buffer.bufferType)(buffer.webGLBuffer);
};
var bindAttribLocation = function (v) {
    return function (i) {
        return function (s) {
            return Graphics_WebGLRaw.bindAttribLocation_(v)(i)(s);
        };
    };
};
var asArrayBuffer = Data_TypedArray.asFloat32Array;
var setUniformFloats = function (v) {
    return function (value) {
        if (v.uType === Graphics_WebGLRaw._FLOAT) {
            return Graphics_WebGLRaw.uniform1f_(v.uLocation)(Data_Array_Partial.head()(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_MAT4) {
            return Graphics_WebGLRaw.uniformMatrix4fv_(v.uLocation)(false)(asArrayBuffer(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_MAT3) {
            return Graphics_WebGLRaw.uniformMatrix3fv_(v.uLocation)(false)(asArrayBuffer(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_MAT2) {
            return Graphics_WebGLRaw.uniformMatrix2fv_(v.uLocation)(false)(asArrayBuffer(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_VEC4) {
            return Graphics_WebGLRaw.uniform4fv_(v.uLocation)(asArrayBuffer(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_VEC3) {
            return Graphics_WebGLRaw.uniform3fv_(v.uLocation)(asArrayBuffer(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_VEC2) {
            return Graphics_WebGLRaw.uniform2fv_(v.uLocation)(asArrayBuffer(value));
        };
        if (Data_Boolean.otherwise) {
            return Extensions.fail("WebGL>>setUniformFloats: Called for non float uniform!");
        };
        throw new Error("Failed pattern match at Graphics.WebGL line 307, column 1 - line 307, column 85: " + [ v.constructor.name, value.constructor.name ]);
    };
};
module.exports = {
    defContextAttributes: defContextAttributes,
    runWebGL: runWebGL,
    runWebGLAttr: runWebGLAttr,
    Uniform: Uniform,
    Attribute: Attribute,
    Shaders: Shaders,
    withShaders: withShaders,
    ARRAY_BUFFER: ARRAY_BUFFER,
    ELEMENT_ARRAY_BUFFER: ELEMENT_ARRAY_BUFFER,
    makeBuffer: makeBuffer,
    makeBufferDyn: makeBufferDyn,
    makeBufferFloat: makeBufferFloat,
    makeBufferFloatDyn: makeBufferFloatDyn,
    makeBufferPrim: makeBufferPrim,
    makeBufferPrimDyn: makeBufferPrimDyn,
    fillBuffer: fillBuffer,
    setUniformFloats: setUniformFloats,
    setUniformBoolean: setUniformBoolean,
    bindBufAndSetVertexAttr: bindBufAndSetVertexAttr,
    bindBuf: bindBuf,
    bindAttribLocation: bindAttribLocation,
    vertexPointer: vertexPointer,
    enableVertexAttribArray: enableVertexAttribArray,
    disableVertexAttribArray: disableVertexAttribArray,
    drawArr: drawArr,
    drawElements: drawElements,
    depthFunc: depthFunc,
    NEVER: NEVER,
    ALWAYS: ALWAYS,
    LESS: LESS,
    EQUAL: EQUAL,
    LEQUAL: LEQUAL,
    GREATER: GREATER,
    GEQUAL: GEQUAL,
    NOTEQUAL: NOTEQUAL,
    DEPTH_BUFFER_BIT: DEPTH_BUFFER_BIT,
    STENCIL_BUFFER_BIT: STENCIL_BUFFER_BIT,
    COLOR_BUFFER_BIT: COLOR_BUFFER_BIT,
    POINTS: POINTS,
    LINES: LINES,
    LINE_STRIP: LINE_STRIP,
    LINE_LOOP: LINE_LOOP,
    TRIANGLES: TRIANGLES,
    TRIANGLE_STRIP: TRIANGLE_STRIP,
    TRIANGLE_FAN: TRIANGLE_FAN,
    blendColor: blendColor,
    blendFunc: blendFunc,
    blendFuncSeparate: blendFuncSeparate,
    blendEquation: blendEquation,
    blendEquationSeparate: blendEquationSeparate,
    FUNC_ADD: FUNC_ADD,
    BLEND_EQUATION: BLEND_EQUATION,
    BLEND_EQUATION_RGB: BLEND_EQUATION_RGB,
    BLEND_EQUATION_ALPHA: BLEND_EQUATION_ALPHA,
    FUNC_SUBTRACT: FUNC_SUBTRACT,
    FUNC_REVERSE_SUBTRACT: FUNC_REVERSE_SUBTRACT,
    ZERO: ZERO,
    ONE: ONE,
    SRC_COLOR: SRC_COLOR,
    ONE_MINUS_SRC_COLOR: ONE_MINUS_SRC_COLOR,
    DST_COLOR: DST_COLOR,
    ONE_MINUS_DST_COLOR: ONE_MINUS_DST_COLOR,
    SRC_ALPHA: SRC_ALPHA,
    ONE_MINUS_SRC_ALPHA: ONE_MINUS_SRC_ALPHA,
    DST_ALPHA: DST_ALPHA,
    ONE_MINUS_DST_ALPHA: ONE_MINUS_DST_ALPHA,
    SRC_ALPHA_SATURATE: SRC_ALPHA_SATURATE,
    BLEND_DST_RGB: BLEND_DST_RGB,
    BLEND_SRC_RGB: BLEND_SRC_RGB,
    BLEND_DST_ALPHA: BLEND_DST_ALPHA,
    BLEND_SRC_ALPHA: BLEND_SRC_ALPHA,
    CONSTANT_COLOR: CONSTANT_COLOR,
    ONE_MINUS_CONSTANT_COLOR: ONE_MINUS_CONSTANT_COLOR,
    CONSTANT_ALPHA: CONSTANT_ALPHA,
    ONE_MINUS_CONSTANT_ALPHA: ONE_MINUS_CONSTANT_ALPHA,
    BLEND_COLOR: BLEND_COLOR,
    viewport: viewport,
    getCanvasWidth: getCanvasWidth,
    getCanvasHeight: getCanvasHeight,
    disable: disable,
    enable: enable,
    isEnabled: isEnabled,
    BLEND: BLEND,
    DEPTH_TEST: DEPTH_TEST,
    CULL_FACE: CULL_FACE,
    POLYGON_OFFSET_FILL: POLYGON_OFFSET_FILL,
    SCISSOR_TEST: SCISSOR_TEST,
    clear: clear,
    clearColor: clearColor,
    clearDepth: clearDepth,
    clearStencil: clearStencil,
    colorMask: colorMask,
    isContextLost: isContextLost,
    requestAnimationFrame: requestAnimationFrame
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.WebGL":38,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Array.Partial":75,"../Data.ArrayBuffer.Types":81,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Int.Bits":144,"../Data.Maybe":156,"../Data.Semigroup":185,"../Data.TypedArray":215,"../Data.Unit":220,"../Extensions":227,"../Graphics.WebGLRaw":238,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":232}],234:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Eff_WebGL = require("../Control.Monad.Eff.WebGL");
var Graphics_WebGL = require("../Graphics.WebGL");
var Graphics_WebGLFramebuffer = require("../Graphics.WebGLFramebuffer");
var Graphics_WebGLTexture = require("../Graphics.WebGLTexture");
module.exports = {};

},{"../Control.Monad.Eff.WebGL":38,"../Graphics.WebGL":233,"../Graphics.WebGLFramebuffer":236,"../Graphics.WebGLTexture":240}],235:[function(require,module,exports){
/* global exports */

// module Graphics.WebGLFramebuffer

"use strict";

exports.unbindRenderbuffer_ = function(target)
    {return function()
     {gl.bindRenderbuffer(target,null);};};

exports.unbindFramebuffer_ = function(target)
{return function()
 {gl.bindFramebuffer(target,null);};};

    exports.readPixels__ = function (x)
    {return function(y)
     {return function(width)
      {return function(height)
       {return function(format)
        {return function(type)
         {return function(pixels)
          {return function()
           {gl.readPixels(x,y,width,height,format,type,pixels);}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;

},{}],236:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_WebGL = require("../Control.Monad.Eff.WebGL");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_TypedArray = require("../Data.TypedArray");
var Graphics_WebGLRaw = require("../Graphics.WebGLRaw");
var Graphics_WebGLTexture = require("../Graphics.WebGLTexture");
var Prelude = require("../Prelude");
var WebGLRendBuf = function (x) {
    return x;
};
var WebGLBuf = function (x) {
    return x;
};
var RGBA4 = (function () {
    function RGBA4() {

    };
    RGBA4.value = new RGBA4();
    return RGBA4;
})();
var RGB565 = (function () {
    function RGB565() {

    };
    RGB565.value = new RGB565();
    return RGB565;
})();
var RGB5_A1 = (function () {
    function RGB5_A1() {

    };
    RGB5_A1.value = new RGB5_A1();
    return RGB5_A1;
})();
var DEPTH_COMPONENT16 = (function () {
    function DEPTH_COMPONENT16() {

    };
    DEPTH_COMPONENT16.value = new DEPTH_COMPONENT16();
    return DEPTH_COMPONENT16;
})();
var FRAMEBUFFER_COMPLETE = (function () {
    function FRAMEBUFFER_COMPLETE() {

    };
    FRAMEBUFFER_COMPLETE.value = new FRAMEBUFFER_COMPLETE();
    return FRAMEBUFFER_COMPLETE;
})();
var FRAMEBUFFER_INCOMPLETE_ATTACHMENT = (function () {
    function FRAMEBUFFER_INCOMPLETE_ATTACHMENT() {

    };
    FRAMEBUFFER_INCOMPLETE_ATTACHMENT.value = new FRAMEBUFFER_INCOMPLETE_ATTACHMENT();
    return FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
})();
var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = (function () {
    function FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT() {

    };
    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT.value = new FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT();
    return FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
})();
var FRAMEBUFFER_INCOMPLETE_DIMENSIONS = (function () {
    function FRAMEBUFFER_INCOMPLETE_DIMENSIONS() {

    };
    FRAMEBUFFER_INCOMPLETE_DIMENSIONS.value = new FRAMEBUFFER_INCOMPLETE_DIMENSIONS();
    return FRAMEBUFFER_INCOMPLETE_DIMENSIONS;
})();
var FRAMEBUFFER_UNSUPPORTED = (function () {
    function FRAMEBUFFER_UNSUPPORTED() {

    };
    FRAMEBUFFER_UNSUPPORTED.value = new FRAMEBUFFER_UNSUPPORTED();
    return FRAMEBUFFER_UNSUPPORTED;
})();
var COLOR_ATTACHMENT0 = (function () {
    function COLOR_ATTACHMENT0() {

    };
    COLOR_ATTACHMENT0.value = new COLOR_ATTACHMENT0();
    return COLOR_ATTACHMENT0;
})();
var DEPTH_ATTACHMENT = (function () {
    function DEPTH_ATTACHMENT() {

    };
    DEPTH_ATTACHMENT.value = new DEPTH_ATTACHMENT();
    return DEPTH_ATTACHMENT;
})();
var STENCIL_ATTACHMENT = (function () {
    function STENCIL_ATTACHMENT() {

    };
    STENCIL_ATTACHMENT.value = new STENCIL_ATTACHMENT();
    return STENCIL_ATTACHMENT;
})();
var DEPTH_STENCIL_ATTACHMENT = (function () {
    function DEPTH_STENCIL_ATTACHMENT() {

    };
    DEPTH_STENCIL_ATTACHMENT.value = new DEPTH_STENCIL_ATTACHMENT();
    return DEPTH_STENCIL_ATTACHMENT;
})();
var unbindRenderbuffer = $foreign.unbindRenderbuffer_(Graphics_WebGLRaw._RENDERBUFFER);
var unbindFramebuffer = $foreign.unbindFramebuffer_(Graphics_WebGLRaw._FRAMEBUFFER);
var renderbufferFormatToConst = function (v) {
    if (v instanceof RGBA4) {
        return Graphics_WebGLRaw._RGBA4;
    };
    if (v instanceof RGB565) {
        return Graphics_WebGLRaw._RGB565;
    };
    if (v instanceof RGB5_A1) {
        return Graphics_WebGLRaw._RGB5_A1;
    };
    if (v instanceof DEPTH_COMPONENT16) {
        return Graphics_WebGLRaw._DEPTH_COMPONENT16;
    };
    throw new Error("Failed pattern match at Graphics.WebGLFramebuffer line 52, column 1 - line 52, column 58: " + [ v.constructor.name ]);
};
var renderbufferStorage = function (renderbufferFormat) {
    return function (width) {
        return function (height) {
            return Graphics_WebGLRaw.renderbufferStorage_(Graphics_WebGLRaw._RENDERBUFFER)(renderbufferFormatToConst(renderbufferFormat))(width)(height);
        };
    };
};
var readPixels = function (x) {
    return function (y) {
        return function (width) {
            return function (height) {
                return function (uint8Array) {
                    var copiedArray = Data_TypedArray.asUint8Array(Data_TypedArray.asArray(uint8Array));
                    return function __do() {
                        $foreign.readPixels__(x)(y)(width)(height)(Graphics_WebGLRaw._RGBA)(Graphics_WebGLRaw._UNSIGNED_BYTE)(copiedArray)();
                        return copiedArray;
                    };
                };
            };
        };
    };
};
var createRenderbuffer = function __do() {
    var v = Graphics_WebGLRaw.createRenderbuffer_();
    return v;
};
var createFramebuffer = function __do() {
    var v = Graphics_WebGLRaw.createFramebuffer_();
    return v;
};
var checkFramebufferStatus = Graphics_WebGLRaw.checkFramebufferStatus_;
var bindRenderbuffer = function (v) {
    return Graphics_WebGLRaw.bindRenderbuffer_(Graphics_WebGLRaw._RENDERBUFFER)(v);
};
var bindFramebuffer = function (v) {
    return Graphics_WebGLRaw.bindFramebuffer_(Graphics_WebGLRaw._FRAMEBUFFER)(v);
};
var attachementPointToConst = function (v) {
    if (v instanceof COLOR_ATTACHMENT0) {
        return Graphics_WebGLRaw._COLOR_ATTACHMENT0;
    };
    if (v instanceof DEPTH_ATTACHMENT) {
        return Graphics_WebGLRaw._DEPTH_ATTACHMENT;
    };
    if (v instanceof STENCIL_ATTACHMENT) {
        return Graphics_WebGLRaw._STENCIL_ATTACHMENT;
    };
    if (v instanceof DEPTH_STENCIL_ATTACHMENT) {
        return Graphics_WebGLRaw._DEPTH_STENCIL_ATTACHMENT;
    };
    throw new Error("Failed pattern match at Graphics.WebGLFramebuffer line 60, column 1 - line 60, column 54: " + [ v.constructor.name ]);
};
var framebufferRenderbuffer = function (attachementPoint) {
    return function (v) {
        return Graphics_WebGLRaw.framebufferRenderbuffer_(Graphics_WebGLRaw._FRAMEBUFFER)(attachementPointToConst(attachementPoint))(Graphics_WebGLRaw._RENDERBUFFER)(v);
    };
};
var framebufferTexture2D = function (attachementPoint) {
    return function (targetType) {
        return function (v) {
            return Graphics_WebGLRaw.framebufferTexture2D_(Graphics_WebGLRaw._FRAMEBUFFER)(attachementPointToConst(attachementPoint))(Graphics_WebGLTexture.targetTypeToConst(targetType))(v)(0);
        };
    };
};
var _FRAMEBUFFER_UNSUPPORTED = 36061;
var _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
var _FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
var _FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
var _FRAMEBUFFER_COMPLETE = 36053;
var frameBufferCodeToConst = function (v) {
    if (v instanceof FRAMEBUFFER_COMPLETE) {
        return _FRAMEBUFFER_COMPLETE;
    };
    if (v instanceof FRAMEBUFFER_INCOMPLETE_ATTACHMENT) {
        return _FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
    };
    if (v instanceof FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT) {
        return _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
    };
    if (v instanceof FRAMEBUFFER_INCOMPLETE_DIMENSIONS) {
        return _FRAMEBUFFER_INCOMPLETE_DIMENSIONS;
    };
    if (v instanceof FRAMEBUFFER_UNSUPPORTED) {
        return _FRAMEBUFFER_UNSUPPORTED;
    };
    throw new Error("Failed pattern match at Graphics.WebGLFramebuffer line 69, column 1 - line 69, column 52: " + [ v.constructor.name ]);
};
module.exports = {
    WebGLBuf: WebGLBuf,
    createFramebuffer: createFramebuffer,
    checkFramebufferStatus: checkFramebufferStatus,
    bindFramebuffer: bindFramebuffer,
    unbindFramebuffer: unbindFramebuffer,
    WebGLRendBuf: WebGLRendBuf,
    createRenderbuffer: createRenderbuffer,
    bindRenderbuffer: bindRenderbuffer,
    unbindRenderbuffer: unbindRenderbuffer,
    RGBA4: RGBA4,
    RGB565: RGB565,
    RGB5_A1: RGB5_A1,
    DEPTH_COMPONENT16: DEPTH_COMPONENT16,
    renderbufferStorage: renderbufferStorage,
    COLOR_ATTACHMENT0: COLOR_ATTACHMENT0,
    DEPTH_ATTACHMENT: DEPTH_ATTACHMENT,
    STENCIL_ATTACHMENT: STENCIL_ATTACHMENT,
    DEPTH_STENCIL_ATTACHMENT: DEPTH_STENCIL_ATTACHMENT,
    framebufferRenderbuffer: framebufferRenderbuffer,
    framebufferTexture2D: framebufferTexture2D,
    FRAMEBUFFER_COMPLETE: FRAMEBUFFER_COMPLETE,
    FRAMEBUFFER_INCOMPLETE_ATTACHMENT: FRAMEBUFFER_INCOMPLETE_ATTACHMENT,
    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,
    FRAMEBUFFER_INCOMPLETE_DIMENSIONS: FRAMEBUFFER_INCOMPLETE_DIMENSIONS,
    FRAMEBUFFER_UNSUPPORTED: FRAMEBUFFER_UNSUPPORTED,
    frameBufferCodeToConst: frameBufferCodeToConst,
    readPixels: readPixels
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.WebGL":38,"../Data.ArrayBuffer.Types":81,"../Data.TypedArray":215,"../Graphics.WebGLRaw":238,"../Graphics.WebGLTexture":240,"../Prelude":263,"./foreign":235}],237:[function(require,module,exports){
// Auto generated: don't change manually, use purescript-webgl-generator to modify!!
/* global exports */

// module Graphics.WebGLRaw

  "use strict";

    exports.getContextAttributes_ = function ()
    {var res = gl.getContextAttributes();
     if (res === undefined){
       throw "Undefined in  getContextAttributes"};
     return res;}
    ;
    exports.isContextLost_ = function ()
    {var res = gl.isContextLost();
     if (res === undefined){
       throw "Undefined in  isContextLost"};
     return res;}
    ;
    exports.getSupportedExtensions_ = function ()
    {var res = gl.getSupportedExtensions();
     if (res === undefined){
       throw "Undefined in  getSupportedExtensions"};
     return res;}
    ;
    exports.getExtension_ = function (name)
    {return function()
     {var res = gl.getExtension(name);
      if (res === undefined){
        throw "Undefined in  getExtension"};
      return res;}
     ;}
    ;
    exports.activeTexture_ = function (texture)
    {return function()
     {gl.activeTexture(texture);}
     ;}
    ;
    exports.attachShader_ = function (program)
    {return function(shader)
     {return function()
      {gl.attachShader(program,shader);}
      ;}
     ;}
    ;
    exports.bindAttribLocation_ = function (program)
    {return function(index)
     {return function(name)
      {return function()
       {gl.bindAttribLocation(program,index,name);}
       ;}
      ;}
     ;}
    ;
    exports.bindBuffer_ = function (target)
    {return function(buffer)
     {return function()
      {gl.bindBuffer(target,buffer);}
      ;}
     ;}
    ;
    exports.bindFramebuffer_ = function (target)
    {return function(framebuffer)
     {return function()
      {gl.bindFramebuffer(target,framebuffer);}
      ;}
     ;}
    ;
    exports.bindRenderbuffer_ = function (target)
    {return function(renderbuffer)
     {return function()
      {gl.bindRenderbuffer(target,renderbuffer);}
      ;}
     ;}
    ;
    exports.bindTexture_ = function (target)
    {return function(texture)
     {return function()
      {gl.bindTexture(target,texture);}
      ;}
     ;}
    ;
    exports.blendColor_ = function (red)
    {return function(green)
     {return function(blue)
      {return function(alpha)
       {return function()
        {gl.blendColor(red,green,blue,alpha);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.blendEquation_ = function (mode)
    {return function()
     {gl.blendEquation(mode);}
     ;}
    ;
    exports.blendEquationSeparate_ = function (modeRGB)
    {return function(modeAlpha)
     {return function()
      {gl.blendEquationSeparate(modeRGB,modeAlpha);}
      ;}
     ;}
    ;
    exports.blendFunc_ = function (sfactor)
    {return function(dfactor)
     {return function()
      {gl.blendFunc(sfactor,dfactor);}
      ;}
     ;}
    ;
    exports.blendFuncSeparate_ = function (srcRGB)
    {return function(dstRGB)
     {return function(srcAlpha)
      {return function(dstAlpha)
       {return function()
        {gl.blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.bufferData_ = function (target)
    {return function(data)
     {return function(usage)
      {return function()
       {gl.bufferData(target,data,usage);}
       ;}
      ;}
     ;}
    ;
    exports.bufferSubData_ = function (target)
    {return function(offset)
     {return function(data)
      {return function()
       {gl.bufferSubData(target,offset,data);}
       ;}
      ;}
     ;}
    ;
    exports.checkFramebufferStatus_ = function (target)
    {return function()
     {var res = gl.checkFramebufferStatus(target);
      if (res === undefined){
        throw "Undefined in  checkFramebufferStatus"};
      return res;}
     ;}
    ;
    exports.clear_ = function (mask)
    {return function()
     {gl.clear(mask);}
     ;}
    ;
    exports.clearColor_ = function (red)
    {return function(green)
     {return function(blue)
      {return function(alpha)
       {return function()
        {gl.clearColor(red,green,blue,alpha);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.clearDepth_ = function (depth)
    {return function()
     {gl.clearDepth(depth);}
     ;}
    ;
    exports.clearStencil_ = function (s)
    {return function()
     {gl.clearStencil(s);}
     ;}
    ;
    exports.colorMask_ = function (red)
    {return function(green)
     {return function(blue)
      {return function(alpha)
       {return function()
        {gl.colorMask(red,green,blue,alpha);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.compileShader_ = function (shader)
    {return function()
     {gl.compileShader(shader);}
     ;}
    ;
    exports.copyTexImage2D_ = function (target)
    {return function(level)
     {return function(internalformat)
      {return function(x)
       {return function(y)
        {return function(width)
         {return function(height)
          {return function(border)
           {return function()
            {gl.copyTexImage2D(target,level,internalformat,x,y,width,height,border);}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.copyTexSubImage2D_ = function (target)
    {return function(level)
     {return function(xoffset)
      {return function(yoffset)
       {return function(x)
        {return function(y)
         {return function(width)
          {return function(height)
           {return function()
            {gl.copyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height);}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.createBuffer_ = function ()
    {var res = gl.createBuffer();
     if (res === undefined){
       throw "Undefined in  createBuffer"};
     return res;}
    ;
    exports.createFramebuffer_ = function ()
    {var res = gl.createFramebuffer();
     if (res === undefined){
       throw "Undefined in  createFramebuffer"};
     return res;}
    ;
    exports.createProgram_ = function ()
    {var res = gl.createProgram();
     if (res === undefined){
       throw "Undefined in  createProgram"};
     return res;}
    ;
    exports.createRenderbuffer_ = function ()
    {var res = gl.createRenderbuffer();
     if (res === undefined){
       throw "Undefined in  createRenderbuffer"};
     return res;}
    ;
    exports.createShader_ = function (type)
    {return function()
     {var res = gl.createShader(type);
      if (res === undefined){
        throw "Undefined in  createShader"};
      return res;}
     ;}
    ;
    exports.createTexture_ = function ()
    {var res = gl.createTexture();
     if (res === undefined){
       throw "Undefined in  createTexture"};
     return res;}
    ;
    exports.cullFace_ = function (mode)
    {return function()
     {gl.cullFace(mode);}
     ;}
    ;
    exports.deleteBuffer_ = function (buffer)
    {return function()
     {gl.deleteBuffer(buffer);}
     ;}
    ;
    exports.deleteFramebuffer_ = function (framebuffer)
    {return function()
     {gl.deleteFramebuffer(framebuffer);}
     ;}
    ;
    exports.deleteProgram_ = function (program)
    {return function()
     {gl.deleteProgram(program);}
     ;}
    ;
    exports.deleteRenderbuffer_ = function (renderbuffer)
    {return function()
     {gl.deleteRenderbuffer(renderbuffer);}
     ;}
    ;
    exports.deleteShader_ = function (shader)
    {return function()
     {gl.deleteShader(shader);}
     ;}
    ;
    exports.deleteTexture_ = function (texture)
    {return function()
     {gl.deleteTexture(texture);}
     ;}
    ;
    exports.depthFunc_ = function (func)
    {return function()
     {gl.depthFunc(func);}
     ;}
    ;
    exports.depthMask_ = function (flag)
    {return function()
     {gl.depthMask(flag);}
     ;}
    ;
    exports.depthRange_ = function (zNear)
    {return function(zFar)
     {return function()
      {gl.depthRange(zNear,zFar);}
      ;}
     ;}
    ;
    exports.detachShader_ = function (program)
    {return function(shader)
     {return function()
      {gl.detachShader(program,shader);}
      ;}
     ;}
    ;
    exports.disable_ = function (cap)
    {return function()
     {gl.disable(cap);}
     ;}
    ;
    exports.disableVertexAttribArray_ = function (index)
    {return function()
     {gl.disableVertexAttribArray(index);}
     ;}
    ;
    exports.drawArrays_ = function (mode)
    {return function(first)
     {return function(count)
      {return function()
       {gl.drawArrays(mode,first,count);}
       ;}
      ;}
     ;}
    ;
    exports.drawElements_ = function (mode)
    {return function(count)
     {return function(type)
      {return function(offset)
       {return function()
        {gl.drawElements(mode,count,type,offset);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.enable_ = function (cap)
    {return function()
     {gl.enable(cap);}
     ;}
    ;
    exports.enableVertexAttribArray_ = function (index)
    {return function()
     {gl.enableVertexAttribArray(index);}
     ;}
    ;
    exports.finish_ = function ()
    {gl.finish();}
    ;
    exports.flush_ = function ()
    {gl.flush();}
    ;
    exports.framebufferRenderbuffer_ = function (target)
    {return function(attachment)
     {return function(renderbuffertarget)
      {return function(renderbuffer)
       {return function()
        {gl.framebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.framebufferTexture2D_ = function (target)
    {return function(attachment)
     {return function(textarget)
      {return function(texture)
       {return function(level)
        {return function()
         {gl.framebufferTexture2D(target,attachment,textarget,texture,level);}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.frontFace_ = function (mode)
    {return function()
     {gl.frontFace(mode);}
     ;}
    ;
    exports.generateMipmap_ = function (target)
    {return function()
     {gl.generateMipmap(target);}
     ;}
    ;
    exports.getActiveAttrib_ = function (program)
    {return function(index)
     {return function()
      {var res = gl.getActiveAttrib(program,index);
       if (res === undefined){
         throw "Undefined in  getActiveAttrib"};
       return res;}
      ;}
     ;}
    ;
    exports.getActiveUniform_ = function (program)
    {return function(index)
     {return function()
      {var res = gl.getActiveUniform(program,index);
       if (res === undefined){
         throw "Undefined in  getActiveUniform"};
       return res;}
      ;}
     ;}
    ;
    exports.getAttachedShaders_ = function (program)
    {return function()
     {var res = gl.getAttachedShaders(program);
      if (res === undefined){
        throw "Undefined in  getAttachedShaders"};
      return res;}
     ;}
    ;
    exports.getAttribLocation_ = function (program)
    {return function(name)
     {return function()
      {var res = gl.getAttribLocation(program,name);
       if (res === undefined){
         throw "Undefined in  getAttribLocation"};
       return res;}
      ;}
     ;}
    ;
    exports.getParameter_ = function (pname)
    {return function()
     {var res = gl.getParameter(pname);
      if (res === undefined){
        throw "Undefined in  getParameter"};
      return res;}
     ;}
    ;
    exports.getBufferParameter_ = function (target)
    {return function(pname)
     {return function()
      {var res = gl.getBufferParameter(target,pname);
       if (res === undefined){
         throw "Undefined in  getBufferParameter"};
       return res;}
      ;}
     ;}
    ;
    exports.getError_ = function ()
    {var res = gl.getError();
     if (res === undefined){
       throw "Undefined in  getError"};
     return res;}
    ;
    exports.getFramebufferAttachmentParameter_ = function (target)
    {return function(attachment)
     {return function(pname)
      {return function()
       {var res = gl.getFramebufferAttachmentParameter(target,attachment,pname);
        if (res === undefined){
          throw "Undefined in  getFramebufferAttachmentParameter"};
        return res;}
       ;}
      ;}
     ;}
    ;
    exports.getProgramParameter_ = function (program)
    {return function(pname)
     {return function()
      {var res = gl.getProgramParameter(program,pname);
       if (res === undefined){
         throw "Undefined in  getProgramParameter"};
       return res;}
      ;}
     ;}
    ;
    exports.getProgramInfoLog_ = function (program)
    {return function()
     {var res = gl.getProgramInfoLog(program);
      if (res === undefined){
        throw "Undefined in  getProgramInfoLog"};
      return res;}
     ;}
    ;
    exports.getRenderbufferParameter_ = function (target)
    {return function(pname)
     {return function()
      {var res = gl.getRenderbufferParameter(target,pname);
       if (res === undefined){
         throw "Undefined in  getRenderbufferParameter"};
       return res;}
      ;}
     ;}
    ;
    exports.getShaderParameter_ = function (shader)
    {return function(pname)
     {return function()
      {var res = gl.getShaderParameter(shader,pname);
       if (res === undefined){
         throw "Undefined in  getShaderParameter"};
       return res;}
      ;}
     ;}
    ;
    exports.getShaderInfoLog_ = function (shader)
    {return function()
     {var res = gl.getShaderInfoLog(shader);
      if (res === undefined){
        throw "Undefined in  getShaderInfoLog"};
      return res;}
     ;}
    ;
    exports.getShaderSource_ = function (shader)
    {return function()
     {var res = gl.getShaderSource(shader);
      if (res === undefined){
        throw "Undefined in  getShaderSource"};
      return res;}
     ;}
    ;
    exports.getTexParameter_ = function (target)
    {return function(pname)
     {return function()
      {var res = gl.getTexParameter(target,pname);
       if (res === undefined){
         throw "Undefined in  getTexParameter"};
       return res;}
      ;}
     ;}
    ;
    exports.getUniform_ = function (program)
    {return function(location)
     {return function()
      {var res = gl.getUniform(program,location);
       if (res === undefined){
         throw "Undefined in  getUniform"};
       return res;}
      ;}
     ;}
    ;
    exports.getUniformLocation_ = function (program)
    {return function(name)
     {return function()
      {var res = gl.getUniformLocation(program,name);
       if (res === undefined){
         throw "Undefined in  getUniformLocation"};
       return res;}
      ;}
     ;}
    ;
    exports.getVertexAttrib_ = function (index)
    {return function(pname)
     {return function()
      {var res = gl.getVertexAttrib(index,pname);
       if (res === undefined){
         throw "Undefined in  getVertexAttrib"};
       return res;}
      ;}
     ;}
    ;
    exports.getVertexAttribOffset_ = function (index)
    {return function(pname)
     {return function()
      {var res = gl.getVertexAttribOffset(index,pname);
       if (res === undefined){
         throw "Undefined in  getVertexAttribOffset"};
       return res;}
      ;}
     ;}
    ;
    exports.hint_ = function (target)
    {return function(mode)
     {return function()
      {gl.hint(target,mode);}
      ;}
     ;}
    ;
    exports.isBuffer_ = function (buffer)
    {return function()
     {var res = gl.isBuffer(buffer);
      if (res === undefined){
        throw "Undefined in  isBuffer"};
      return res;}
     ;}
    ;
    exports.isEnabled_ = function (cap)
    {return function()
     {var res = gl.isEnabled(cap);
      if (res === undefined){
        throw "Undefined in  isEnabled"};
      return res;}
     ;}
    ;
    exports.isFramebuffer_ = function (framebuffer)
    {return function()
     {var res = gl.isFramebuffer(framebuffer);
      if (res === undefined){
        throw "Undefined in  isFramebuffer"};
      return res;}
     ;}
    ;
    exports.isProgram_ = function (program)
    {return function()
     {var res = gl.isProgram(program);
      if (res === undefined){
        throw "Undefined in  isProgram"};
      return res;}
     ;}
    ;
    exports.isRenderbuffer_ = function (renderbuffer)
    {return function()
     {var res = gl.isRenderbuffer(renderbuffer);
      if (res === undefined){
        throw "Undefined in  isRenderbuffer"};
      return res;}
     ;}
    ;
    exports.isShader_ = function (shader)
    {return function()
     {var res = gl.isShader(shader);
      if (res === undefined){
        throw "Undefined in  isShader"};
      return res;}
     ;}
    ;
    exports.isTexture_ = function (texture)
    {return function()
     {var res = gl.isTexture(texture);
      if (res === undefined){
        throw "Undefined in  isTexture"};
      return res;}
     ;}
    ;
    exports.lineWidth_ = function (width)
    {return function()
     {gl.lineWidth(width);}
     ;}
    ;
    exports.linkProgram_ = function (program)
    {return function()
     {gl.linkProgram(program);}
     ;}
    ;
    exports.pixelStorei_ = function (pname)
    {return function(param)
     {return function()
      {gl.pixelStorei(pname,param);}
      ;}
     ;}
    ;
    exports.polygonOffset_ = function (factor)
    {return function(units)
     {return function()
      {gl.polygonOffset(factor,units);}
      ;}
     ;}
    ;
    exports.readPixels_ = function (x)
    {return function(y)
     {return function(width)
      {return function(height)
       {return function(format)
        {return function(type)
         {return function(pixels)
          {return function()
           {gl.readPixels(x,y,width,height,format,type,pixels);}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.renderbufferStorage_ = function (target)
    {return function(internalformat)
     {return function(width)
      {return function(height)
       {return function()
        {gl.renderbufferStorage(target,internalformat,width,height);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.sampleCoverage_ = function (value)
    {return function(invert)
     {return function()
      {gl.sampleCoverage(value,invert);}
      ;}
     ;}
    ;
    exports.scissor_ = function (x)
    {return function(y)
     {return function(width)
      {return function(height)
       {return function()
        {gl.scissor(x,y,width,height);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.shaderSource_ = function (shader)
    {return function(source)
     {return function()
      {gl.shaderSource(shader,source);}
      ;}
     ;}
    ;
    exports.stencilFunc_ = function (func)
    {return function(ref)
     {return function(mask)
      {return function()
       {gl.stencilFunc(func,ref,mask);}
       ;}
      ;}
     ;}
    ;
    exports.stencilFuncSeparate_ = function (face)
    {return function(func)
     {return function(ref)
      {return function(mask)
       {return function()
        {gl.stencilFuncSeparate(face,func,ref,mask);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.stencilMask_ = function (mask)
    {return function()
     {gl.stencilMask(mask);}
     ;}
    ;
    exports.stencilMaskSeparate_ = function (face)
    {return function(mask)
     {return function()
      {gl.stencilMaskSeparate(face,mask);}
      ;}
     ;}
    ;
    exports.stencilOp_ = function (fail)
    {return function(zfail)
     {return function(zpass)
      {return function()
       {gl.stencilOp(fail,zfail,zpass);}
       ;}
      ;}
     ;}
    ;
    exports.stencilOpSeparate_ = function (face)
    {return function(fail)
     {return function(zfail)
      {return function(zpass)
       {return function()
        {gl.stencilOpSeparate(face,fail,zfail,zpass);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.texImage2D_ = function (target)
    {return function(level)
     {return function(internalformat)
      {return function(width)
       {return function(height)
        {return function(border)
         {return function(format)
          {return function(type)
           {return function(pixels)
            {return function()
             {gl.texImage2D(target,level,internalformat,width,height,border,format,type,pixels);}
             ;}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.texParameterf_ = function (target)
    {return function(pname)
     {return function(param)
      {return function()
       {gl.texParameterf(target,pname,param);}
       ;}
      ;}
     ;}
    ;
    exports.texParameteri_ = function (target)
    {return function(pname)
     {return function(param)
      {return function()
       {gl.texParameteri(target,pname,param);}
       ;}
      ;}
     ;}
    ;
    exports.texSubImage2D_ = function (target)
    {return function(level)
     {return function(xoffset)
      {return function(yoffset)
       {return function(width)
        {return function(height)
         {return function(format)
          {return function(type)
           {return function(pixels)
            {return function()
             {gl.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels);}
             ;}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.uniform1f_ = function (location)
    {return function(x)
     {return function()
      {gl.uniform1f(location,x);}
      ;}
     ;}
    ;
    exports.uniform1fv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform1fv(location,v);}
      ;}
     ;}
    ;
    exports.uniform1i_ = function (location)
    {return function(x)
     {return function()
      {gl.uniform1i(location,x);}
      ;}
     ;}
    ;
    exports.uniform1iv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform1iv(location,v);}
      ;}
     ;}
    ;
    exports.uniform2f_ = function (location)
    {return function(x)
     {return function(y)
      {return function()
       {gl.uniform2f(location,x,y);}
       ;}
      ;}
     ;}
    ;
    exports.uniform2fv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform2fv(location,v);}
      ;}
     ;}
    ;
    exports.uniform2i_ = function (location)
    {return function(x)
     {return function(y)
      {return function()
       {gl.uniform2i(location,x,y);}
       ;}
      ;}
     ;}
    ;
    exports.uniform2iv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform2iv(location,v);}
      ;}
     ;}
    ;
    exports.uniform3f_ = function (location)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function()
        {gl.uniform3f(location,x,y,z);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.uniform3fv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform3fv(location,v);}
      ;}
     ;}
    ;
    exports.uniform3i_ = function (location)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function()
        {gl.uniform3i(location,x,y,z);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.uniform3iv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform3iv(location,v);}
      ;}
     ;}
    ;
    exports.uniform4f_ = function (location)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function(w)
        {return function()
         {gl.uniform4f(location,x,y,z,w);}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.uniform4fv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform4fv(location,v);}
      ;}
     ;}
    ;
    exports.uniform4i_ = function (location)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function(w)
        {return function()
         {gl.uniform4i(location,x,y,z,w);}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.uniform4iv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform4iv(location,v);}
      ;}
     ;}
    ;
    exports.uniformMatrix2fv_ = function (location)
    {return function(transpose)
     {return function(value)
      {return function()
       {gl.uniformMatrix2fv(location,transpose,value);}
       ;}
      ;}
     ;}
    ;
    exports.uniformMatrix3fv_ = function (location)
    {return function(transpose)
     {return function(value)
      {return function()
       {gl.uniformMatrix3fv(location,transpose,value);}
       ;}
      ;}
     ;}
    ;
    exports.uniformMatrix4fv_ = function (location)
    {return function(transpose)
     {return function(value)
      {return function()
       {gl.uniformMatrix4fv(location,transpose,value);}
       ;}
      ;}
     ;}
    ;
    exports.useProgram_ = function (program)
    {return function()
     {gl.useProgram(program);}
     ;}
    ;
    exports.validateProgram_ = function (program)
    {return function()
     {gl.validateProgram(program);}
     ;}
    ;
    exports.vertexAttrib1f_ = function (indx)
    {return function(x)
     {return function()
      {gl.vertexAttrib1f(indx,x);}
      ;}
     ;}
    ;
    exports.vertexAttrib1fv_ = function (indx)
    {return function(values)
     {return function()
      {gl.vertexAttrib1fv(indx,values);}
      ;}
     ;}
    ;
    exports.vertexAttrib2f_ = function (indx)
    {return function(x)
     {return function(y)
      {return function()
       {gl.vertexAttrib2f(indx,x,y);}
       ;}
      ;}
     ;}
    ;
    exports.vertexAttrib2fv_ = function (indx)
    {return function(values)
     {return function()
      {gl.vertexAttrib2fv(indx,values);}
      ;}
     ;}
    ;
    exports.vertexAttrib3f_ = function (indx)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function()
        {gl.vertexAttrib3f(indx,x,y,z);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.vertexAttrib3fv_ = function (indx)
    {return function(values)
     {return function()
      {gl.vertexAttrib3fv(indx,values);}
      ;}
     ;}
    ;
    exports.vertexAttrib4f_ = function (indx)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function(w)
        {return function()
         {gl.vertexAttrib4f(indx,x,y,z,w);}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.vertexAttrib4fv_ = function (indx)
    {return function(values)
     {return function()
      {gl.vertexAttrib4fv(indx,values);}
      ;}
     ;}
    ;
    exports.vertexAttribPointer_ = function (indx)
    {return function(size)
     {return function(type)
      {return function(normalized)
       {return function(stride)
        {return function(offset)
         {return function()
          {gl.vertexAttribPointer(indx,size,type,normalized,stride,offset);}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.viewport_ = function (x)
    {return function(y)
     {return function(width)
      {return function(height)
       {return function()
        {gl.viewport(x,y,width,height);}
        ;}
       ;}
      ;}
     ;}
    ;
  

},{}],238:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_WebGL = require("../Control.Monad.Eff.WebGL");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Prelude = require("../Prelude");
var _ZERO = 0;
var _VIEWPORT = 2978;
var _VERTEX_SHADER = 35633;
var _VERTEX_ATTRIB_ARRAY_TYPE = 34341;
var _VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
var _VERTEX_ATTRIB_ARRAY_SIZE = 34339;
var _VERTEX_ATTRIB_ARRAY_POINTER = 34373;
var _VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
var _VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
var _VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
var _VERSION = 7938;
var _VENDOR = 7936;
var _VALIDATE_STATUS = 35715;
var _UNSIGNED_SHORT_5_6_5 = 33635;
var _UNSIGNED_SHORT_5_5_5_1 = 32820;
var _UNSIGNED_SHORT_4_4_4_4 = 32819;
var _UNSIGNED_SHORT = 5123;
var _UNSIGNED_INT = 5125;
var _UNSIGNED_BYTE = 5121;
var _UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
var _UNPACK_FLIP_Y_WEBGL = 37440;
var _UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
var _UNPACK_ALIGNMENT = 3317;
var _TRIANGLE_STRIP = 5;
var _TRIANGLE_FAN = 6;
var _TRIANGLES = 4;
var _TEXTURE_WRAP_T = 10243;
var _TEXTURE_WRAP_S = 10242;
var _TEXTURE_MIN_FILTER = 10241;
var _TEXTURE_MAG_FILTER = 10240;
var _TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
var _TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
var _TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
var _TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
var _TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
var _TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
var _TEXTURE_CUBE_MAP = 34067;
var _TEXTURE_BINDING_CUBE_MAP = 34068;
var _TEXTURE_BINDING_2D = 32873;
var _TEXTURE_2D = 3553;
var _TEXTURE9 = 33993;
var _TEXTURE8 = 33992;
var _TEXTURE7 = 33991;
var _TEXTURE6 = 33990;
var _TEXTURE5 = 33989;
var _TEXTURE4 = 33988;
var _TEXTURE31 = 34015;
var _TEXTURE30 = 34014;
var _TEXTURE3 = 33987;
var _TEXTURE29 = 34013;
var _TEXTURE28 = 34012;
var _TEXTURE27 = 34011;
var _TEXTURE26 = 34010;
var _TEXTURE25 = 34009;
var _TEXTURE24 = 34008;
var _TEXTURE23 = 34007;
var _TEXTURE22 = 34006;
var _TEXTURE21 = 34005;
var _TEXTURE20 = 34004;
var _TEXTURE2 = 33986;
var _TEXTURE19 = 34003;
var _TEXTURE18 = 34002;
var _TEXTURE17 = 34001;
var _TEXTURE16 = 34000;
var _TEXTURE15 = 33999;
var _TEXTURE14 = 33998;
var _TEXTURE13 = 33997;
var _TEXTURE12 = 33996;
var _TEXTURE11 = 33995;
var _TEXTURE10 = 33994;
var _TEXTURE1 = 33985;
var _TEXTURE0 = 33984;
var _TEXTURE = 5890;
var _SUBPIXEL_BITS = 3408;
var _STREAM_DRAW = 35040;
var _STENCIL_WRITEMASK = 2968;
var _STENCIL_VALUE_MASK = 2963;
var _STENCIL_TEST = 2960;
var _STENCIL_REF = 2967;
var _STENCIL_PASS_DEPTH_PASS = 2966;
var _STENCIL_PASS_DEPTH_FAIL = 2965;
var _STENCIL_INDEX8 = 36168;
var _STENCIL_INDEX = 6401;
var _STENCIL_FUNC = 2962;
var _STENCIL_FAIL = 2964;
var _STENCIL_CLEAR_VALUE = 2961;
var _STENCIL_BUFFER_BIT = 1024;
var _STENCIL_BITS = 3415;
var _STENCIL_BACK_WRITEMASK = 36005;
var _STENCIL_BACK_VALUE_MASK = 36004;
var _STENCIL_BACK_REF = 36003;
var _STENCIL_BACK_PASS_DEPTH_PASS = 34819;
var _STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
var _STENCIL_BACK_FUNC = 34816;
var _STENCIL_BACK_FAIL = 34817;
var _STENCIL_ATTACHMENT = 36128;
var _STATIC_DRAW = 35044;
var _SRC_COLOR = 768;
var _SRC_ALPHA_SATURATE = 776;
var _SRC_ALPHA = 770;
var _SHORT = 5122;
var _SHADING_LANGUAGE_VERSION = 35724;
var _SHADER_TYPE = 35663;
var _SHADER_SOURCE_LENGTH = 35720;
var _SCISSOR_TEST = 3089;
var _SCISSOR_BOX = 3088;
var _SAMPLE_COVERAGE_VALUE = 32938;
var _SAMPLE_COVERAGE_INVERT = 32939;
var _SAMPLE_COVERAGE = 32928;
var _SAMPLE_BUFFERS = 32936;
var _SAMPLE_ALPHA_TO_COVERAGE = 32926;
var _SAMPLES = 32937;
var _SAMPLER_CUBE = 35680;
var _SAMPLER_2D = 35678;
var _RGBA4 = 32854;
var _RGBA = 6408;
var _RGB5_A1 = 32855;
var _RGB565 = 36194;
var _RGB = 6407;
var _REPLACE = 7681;
var _REPEAT = 10497;
var _RENDERER = 7937;
var _RENDERBUFFER_WIDTH = 36162;
var _RENDERBUFFER_STENCIL_SIZE = 36181;
var _RENDERBUFFER_RED_SIZE = 36176;
var _RENDERBUFFER_INTERNAL_FORMAT = 36164;
var _RENDERBUFFER_HEIGHT = 36163;
var _RENDERBUFFER_GREEN_SIZE = 36177;
var _RENDERBUFFER_DEPTH_SIZE = 36180;
var _RENDERBUFFER_BLUE_SIZE = 36178;
var _RENDERBUFFER_BINDING = 36007;
var _RENDERBUFFER_ALPHA_SIZE = 36179;
var _RENDERBUFFER = 36161;
var _RED_BITS = 3410;
var _POLYGON_OFFSET_UNITS = 10752;
var _POLYGON_OFFSET_FILL = 32823;
var _POLYGON_OFFSET_FACTOR = 32824;
var _POINTS = 0;
var _PACK_ALIGNMENT = 3333;
var _OUT_OF_MEMORY = 1285;
var _ONE_MINUS_SRC_COLOR = 769;
var _ONE_MINUS_SRC_ALPHA = 771;
var _ONE_MINUS_DST_COLOR = 775;
var _ONE_MINUS_DST_ALPHA = 773;
var _ONE_MINUS_CONSTANT_COLOR = 32770;
var _ONE_MINUS_CONSTANT_ALPHA = 32772;
var _ONE = 1;
var _NUM_COMPRESSED_TEXTURE_FORMATS = 34466;
var _NO_ERROR = 0;
var _NOTEQUAL = 517;
var _NONE = 0;
var _NICEST = 4354;
var _NEVER = 512;
var _NEAREST_MIPMAP_NEAREST = 9984;
var _NEAREST_MIPMAP_LINEAR = 9986;
var _NEAREST = 9728;
var _MIRRORED_REPEAT = 33648;
var _MEDIUM_INT = 36340;
var _MEDIUM_FLOAT = 36337;
var _MAX_VIEWPORT_DIMS = 3386;
var _MAX_VERTEX_UNIFORM_VECTORS = 36347;
var _MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
var _MAX_VERTEX_ATTRIBS = 34921;
var _MAX_VARYING_VECTORS = 36348;
var _MAX_TEXTURE_SIZE = 3379;
var _MAX_TEXTURE_IMAGE_UNITS = 34930;
var _MAX_RENDERBUFFER_SIZE = 34024;
var _MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
var _MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
var _MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
var _LUMINANCE_ALPHA = 6410;
var _LUMINANCE = 6409;
var _LOW_INT = 36339;
var _LOW_FLOAT = 36336;
var _LINK_STATUS = 35714;
var _LINE_WIDTH = 2849;
var _LINE_STRIP = 3;
var _LINE_LOOP = 2;
var _LINES = 1;
var _LINEAR_MIPMAP_NEAREST = 9985;
var _LINEAR_MIPMAP_LINEAR = 9987;
var _LINEAR = 9729;
var _LESS = 513;
var _LEQUAL = 515;
var _KEEP = 7680;
var _INVERT = 5386;
var _INVALID_VALUE = 1281;
var _INVALID_OPERATION = 1282;
var _INVALID_FRAMEBUFFER_OPERATION = 1286;
var _INVALID_ENUM = 1280;
var _INT_VEC4 = 35669;
var _INT_VEC3 = 35668;
var _INT_VEC2 = 35667;
var _INT = 5124;
var _INFO_LOG_LENGTH = 35716;
var _INCR_WRAP = 34055;
var _INCR = 7682;
var _HIGH_INT = 36341;
var _HIGH_FLOAT = 36338;
var _GREEN_BITS = 3411;
var _GREATER = 516;
var _GEQUAL = 518;
var _GENERATE_MIPMAP_HINT = 33170;
var _FUNC_SUBTRACT = 32778;
var _FUNC_REVERSE_SUBTRACT = 32779;
var _FUNC_ADD = 32774;
var _FRONT_FACE = 2886;
var _FRONT_AND_BACK = 1032;
var _FRONT = 1028;
var _FRAMEBUFFER_UNSUPPORTED = 36061;
var _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
var _FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
var _FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
var _FRAMEBUFFER_COMPLETE = 36053;
var _FRAMEBUFFER_BINDING = 36006;
var _FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
var _FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
var _FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
var _FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
var _FRAMEBUFFER = 36160;
var _FRAGMENT_SHADER = 35632;
var _FLOAT_VEC4 = 35666;
var _FLOAT_VEC3 = 35665;
var _FLOAT_VEC2 = 35664;
var _FLOAT_MAT4 = 35676;
var _FLOAT_MAT3 = 35675;
var _FLOAT_MAT2 = 35674;
var _FLOAT = 5126;
var _FASTEST = 4353;
var _EQUAL = 514;
var _ELEMENT_ARRAY_BUFFER_BINDING = 34965;
var _ELEMENT_ARRAY_BUFFER = 34963;
var _DYNAMIC_DRAW = 35048;
var _DST_COLOR = 774;
var _DST_ALPHA = 772;
var _DONT_CARE = 4352;
var _DITHER = 3024;
var _DEPTH_WRITEMASK = 2930;
var _DEPTH_TEST = 2929;
var _DEPTH_STENCIL_ATTACHMENT = 33306;
var _DEPTH_STENCIL = 34041;
var _DEPTH_RANGE = 2928;
var _DEPTH_FUNC = 2932;
var _DEPTH_COMPONENT16 = 33189;
var _DEPTH_COMPONENT = 6402;
var _DEPTH_CLEAR_VALUE = 2931;
var _DEPTH_BUFFER_BIT = 256;
var _DEPTH_BITS = 3414;
var _DEPTH_ATTACHMENT = 36096;
var _DELETE_STATUS = 35712;
var _DECR_WRAP = 34056;
var _DECR = 7683;
var _CW = 2304;
var _CURRENT_VERTEX_ATTRIB = 34342;
var _CURRENT_PROGRAM = 35725;
var _CULL_FACE_MODE = 2885;
var _CULL_FACE = 2884;
var _CONTEXT_LOST_WEBGL = 37442;
var _CONSTANT_COLOR = 32769;
var _CONSTANT_ALPHA = 32771;
var _COMPRESSED_TEXTURE_FORMATS = 34467;
var _COMPILE_STATUS = 35713;
var _COLOR_WRITEMASK = 3107;
var _COLOR_CLEAR_VALUE = 3106;
var _COLOR_BUFFER_BIT = 16384;
var _COLOR_ATTACHMENT0 = 36064;
var _CLAMP_TO_EDGE = 33071;
var _CCW = 2305;
var _BYTE = 5120;
var _BUFFER_USAGE = 34661;
var _BUFFER_SIZE = 34660;
var _BROWSER_DEFAULT_WEBGL = 37444;
var _BOOL_VEC4 = 35673;
var _BOOL_VEC3 = 35672;
var _BOOL_VEC2 = 35671;
var _BOOL = 35670;
var _BLUE_BITS = 3412;
var _BLEND_SRC_RGB = 32969;
var _BLEND_SRC_ALPHA = 32971;
var _BLEND_EQUATION_RGB = 32777;
var _BLEND_EQUATION_ALPHA = 34877;
var _BLEND_EQUATION = 32777;
var _BLEND_DST_RGB = 32968;
var _BLEND_DST_ALPHA = 32970;
var _BLEND_COLOR = 32773;
var _BLEND = 3042;
var _BACK = 1029;
var _ATTACHED_SHADERS = 35717;
var _ARRAY_BUFFER_BINDING = 34964;
var _ARRAY_BUFFER = 34962;
var _ALWAYS = 519;
var _ALPHA_BITS = 3413;
var _ALPHA = 6406;
var _ALIASED_POINT_SIZE_RANGE = 33901;
var _ALIASED_LINE_WIDTH_RANGE = 33902;
var _ACTIVE_UNIFORM_MAX_LENGTH = 35719;
var _ACTIVE_UNIFORMS = 35718;
var _ACTIVE_TEXTURE = 34016;
var _ACTIVE_ATTRIBUTE_MAX_LENGTH = 35722;
var _ACTIVE_ATTRIBUTES = 35721;
module.exports = {
    _DEPTH_BUFFER_BIT: _DEPTH_BUFFER_BIT,
    _STENCIL_BUFFER_BIT: _STENCIL_BUFFER_BIT,
    _COLOR_BUFFER_BIT: _COLOR_BUFFER_BIT,
    _POINTS: _POINTS,
    _LINES: _LINES,
    _LINE_LOOP: _LINE_LOOP,
    _LINE_STRIP: _LINE_STRIP,
    _TRIANGLES: _TRIANGLES,
    _TRIANGLE_STRIP: _TRIANGLE_STRIP,
    _TRIANGLE_FAN: _TRIANGLE_FAN,
    _ZERO: _ZERO,
    _ONE: _ONE,
    _SRC_COLOR: _SRC_COLOR,
    _ONE_MINUS_SRC_COLOR: _ONE_MINUS_SRC_COLOR,
    _SRC_ALPHA: _SRC_ALPHA,
    _ONE_MINUS_SRC_ALPHA: _ONE_MINUS_SRC_ALPHA,
    _DST_ALPHA: _DST_ALPHA,
    _ONE_MINUS_DST_ALPHA: _ONE_MINUS_DST_ALPHA,
    _DST_COLOR: _DST_COLOR,
    _ONE_MINUS_DST_COLOR: _ONE_MINUS_DST_COLOR,
    _SRC_ALPHA_SATURATE: _SRC_ALPHA_SATURATE,
    _FUNC_ADD: _FUNC_ADD,
    _BLEND_EQUATION: _BLEND_EQUATION,
    _BLEND_EQUATION_RGB: _BLEND_EQUATION_RGB,
    _BLEND_EQUATION_ALPHA: _BLEND_EQUATION_ALPHA,
    _FUNC_SUBTRACT: _FUNC_SUBTRACT,
    _FUNC_REVERSE_SUBTRACT: _FUNC_REVERSE_SUBTRACT,
    _BLEND_DST_RGB: _BLEND_DST_RGB,
    _BLEND_SRC_RGB: _BLEND_SRC_RGB,
    _BLEND_DST_ALPHA: _BLEND_DST_ALPHA,
    _BLEND_SRC_ALPHA: _BLEND_SRC_ALPHA,
    _CONSTANT_COLOR: _CONSTANT_COLOR,
    _ONE_MINUS_CONSTANT_COLOR: _ONE_MINUS_CONSTANT_COLOR,
    _CONSTANT_ALPHA: _CONSTANT_ALPHA,
    _ONE_MINUS_CONSTANT_ALPHA: _ONE_MINUS_CONSTANT_ALPHA,
    _BLEND_COLOR: _BLEND_COLOR,
    _ARRAY_BUFFER: _ARRAY_BUFFER,
    _ELEMENT_ARRAY_BUFFER: _ELEMENT_ARRAY_BUFFER,
    _ARRAY_BUFFER_BINDING: _ARRAY_BUFFER_BINDING,
    _ELEMENT_ARRAY_BUFFER_BINDING: _ELEMENT_ARRAY_BUFFER_BINDING,
    _STREAM_DRAW: _STREAM_DRAW,
    _STATIC_DRAW: _STATIC_DRAW,
    _DYNAMIC_DRAW: _DYNAMIC_DRAW,
    _BUFFER_SIZE: _BUFFER_SIZE,
    _BUFFER_USAGE: _BUFFER_USAGE,
    _CURRENT_VERTEX_ATTRIB: _CURRENT_VERTEX_ATTRIB,
    _FRONT: _FRONT,
    _BACK: _BACK,
    _FRONT_AND_BACK: _FRONT_AND_BACK,
    _TEXTURE_2D: _TEXTURE_2D,
    _CULL_FACE: _CULL_FACE,
    _BLEND: _BLEND,
    _DITHER: _DITHER,
    _STENCIL_TEST: _STENCIL_TEST,
    _DEPTH_TEST: _DEPTH_TEST,
    _SCISSOR_TEST: _SCISSOR_TEST,
    _POLYGON_OFFSET_FILL: _POLYGON_OFFSET_FILL,
    _SAMPLE_ALPHA_TO_COVERAGE: _SAMPLE_ALPHA_TO_COVERAGE,
    _SAMPLE_COVERAGE: _SAMPLE_COVERAGE,
    _NO_ERROR: _NO_ERROR,
    _INVALID_ENUM: _INVALID_ENUM,
    _INVALID_VALUE: _INVALID_VALUE,
    _INVALID_OPERATION: _INVALID_OPERATION,
    _OUT_OF_MEMORY: _OUT_OF_MEMORY,
    _CW: _CW,
    _CCW: _CCW,
    _LINE_WIDTH: _LINE_WIDTH,
    _ALIASED_POINT_SIZE_RANGE: _ALIASED_POINT_SIZE_RANGE,
    _ALIASED_LINE_WIDTH_RANGE: _ALIASED_LINE_WIDTH_RANGE,
    _CULL_FACE_MODE: _CULL_FACE_MODE,
    _FRONT_FACE: _FRONT_FACE,
    _DEPTH_RANGE: _DEPTH_RANGE,
    _DEPTH_WRITEMASK: _DEPTH_WRITEMASK,
    _DEPTH_CLEAR_VALUE: _DEPTH_CLEAR_VALUE,
    _DEPTH_FUNC: _DEPTH_FUNC,
    _STENCIL_CLEAR_VALUE: _STENCIL_CLEAR_VALUE,
    _STENCIL_FUNC: _STENCIL_FUNC,
    _STENCIL_FAIL: _STENCIL_FAIL,
    _STENCIL_PASS_DEPTH_FAIL: _STENCIL_PASS_DEPTH_FAIL,
    _STENCIL_PASS_DEPTH_PASS: _STENCIL_PASS_DEPTH_PASS,
    _STENCIL_REF: _STENCIL_REF,
    _STENCIL_VALUE_MASK: _STENCIL_VALUE_MASK,
    _STENCIL_WRITEMASK: _STENCIL_WRITEMASK,
    _STENCIL_BACK_FUNC: _STENCIL_BACK_FUNC,
    _STENCIL_BACK_FAIL: _STENCIL_BACK_FAIL,
    _STENCIL_BACK_PASS_DEPTH_FAIL: _STENCIL_BACK_PASS_DEPTH_FAIL,
    _STENCIL_BACK_PASS_DEPTH_PASS: _STENCIL_BACK_PASS_DEPTH_PASS,
    _STENCIL_BACK_REF: _STENCIL_BACK_REF,
    _STENCIL_BACK_VALUE_MASK: _STENCIL_BACK_VALUE_MASK,
    _STENCIL_BACK_WRITEMASK: _STENCIL_BACK_WRITEMASK,
    _VIEWPORT: _VIEWPORT,
    _SCISSOR_BOX: _SCISSOR_BOX,
    _COLOR_CLEAR_VALUE: _COLOR_CLEAR_VALUE,
    _COLOR_WRITEMASK: _COLOR_WRITEMASK,
    _UNPACK_ALIGNMENT: _UNPACK_ALIGNMENT,
    _PACK_ALIGNMENT: _PACK_ALIGNMENT,
    _MAX_TEXTURE_SIZE: _MAX_TEXTURE_SIZE,
    _MAX_VIEWPORT_DIMS: _MAX_VIEWPORT_DIMS,
    _SUBPIXEL_BITS: _SUBPIXEL_BITS,
    _RED_BITS: _RED_BITS,
    _GREEN_BITS: _GREEN_BITS,
    _BLUE_BITS: _BLUE_BITS,
    _ALPHA_BITS: _ALPHA_BITS,
    _DEPTH_BITS: _DEPTH_BITS,
    _STENCIL_BITS: _STENCIL_BITS,
    _POLYGON_OFFSET_UNITS: _POLYGON_OFFSET_UNITS,
    _POLYGON_OFFSET_FACTOR: _POLYGON_OFFSET_FACTOR,
    _TEXTURE_BINDING_2D: _TEXTURE_BINDING_2D,
    _SAMPLE_BUFFERS: _SAMPLE_BUFFERS,
    _SAMPLES: _SAMPLES,
    _SAMPLE_COVERAGE_VALUE: _SAMPLE_COVERAGE_VALUE,
    _SAMPLE_COVERAGE_INVERT: _SAMPLE_COVERAGE_INVERT,
    _NUM_COMPRESSED_TEXTURE_FORMATS: _NUM_COMPRESSED_TEXTURE_FORMATS,
    _COMPRESSED_TEXTURE_FORMATS: _COMPRESSED_TEXTURE_FORMATS,
    _DONT_CARE: _DONT_CARE,
    _FASTEST: _FASTEST,
    _NICEST: _NICEST,
    _GENERATE_MIPMAP_HINT: _GENERATE_MIPMAP_HINT,
    _BYTE: _BYTE,
    _UNSIGNED_BYTE: _UNSIGNED_BYTE,
    _SHORT: _SHORT,
    _UNSIGNED_SHORT: _UNSIGNED_SHORT,
    _INT: _INT,
    _UNSIGNED_INT: _UNSIGNED_INT,
    _FLOAT: _FLOAT,
    _DEPTH_COMPONENT: _DEPTH_COMPONENT,
    _ALPHA: _ALPHA,
    _RGB: _RGB,
    _RGBA: _RGBA,
    _LUMINANCE: _LUMINANCE,
    _LUMINANCE_ALPHA: _LUMINANCE_ALPHA,
    _UNSIGNED_SHORT_4_4_4_4: _UNSIGNED_SHORT_4_4_4_4,
    _UNSIGNED_SHORT_5_5_5_1: _UNSIGNED_SHORT_5_5_5_1,
    _UNSIGNED_SHORT_5_6_5: _UNSIGNED_SHORT_5_6_5,
    _FRAGMENT_SHADER: _FRAGMENT_SHADER,
    _VERTEX_SHADER: _VERTEX_SHADER,
    _MAX_VERTEX_ATTRIBS: _MAX_VERTEX_ATTRIBS,
    _MAX_VERTEX_UNIFORM_VECTORS: _MAX_VERTEX_UNIFORM_VECTORS,
    _MAX_VARYING_VECTORS: _MAX_VARYING_VECTORS,
    _MAX_COMBINED_TEXTURE_IMAGE_UNITS: _MAX_COMBINED_TEXTURE_IMAGE_UNITS,
    _MAX_VERTEX_TEXTURE_IMAGE_UNITS: _MAX_VERTEX_TEXTURE_IMAGE_UNITS,
    _MAX_TEXTURE_IMAGE_UNITS: _MAX_TEXTURE_IMAGE_UNITS,
    _MAX_FRAGMENT_UNIFORM_VECTORS: _MAX_FRAGMENT_UNIFORM_VECTORS,
    _SHADER_TYPE: _SHADER_TYPE,
    _DELETE_STATUS: _DELETE_STATUS,
    _LINK_STATUS: _LINK_STATUS,
    _VALIDATE_STATUS: _VALIDATE_STATUS,
    _ATTACHED_SHADERS: _ATTACHED_SHADERS,
    _ACTIVE_UNIFORMS: _ACTIVE_UNIFORMS,
    _ACTIVE_UNIFORM_MAX_LENGTH: _ACTIVE_UNIFORM_MAX_LENGTH,
    _ACTIVE_ATTRIBUTES: _ACTIVE_ATTRIBUTES,
    _ACTIVE_ATTRIBUTE_MAX_LENGTH: _ACTIVE_ATTRIBUTE_MAX_LENGTH,
    _SHADING_LANGUAGE_VERSION: _SHADING_LANGUAGE_VERSION,
    _CURRENT_PROGRAM: _CURRENT_PROGRAM,
    _NEVER: _NEVER,
    _LESS: _LESS,
    _EQUAL: _EQUAL,
    _LEQUAL: _LEQUAL,
    _GREATER: _GREATER,
    _NOTEQUAL: _NOTEQUAL,
    _GEQUAL: _GEQUAL,
    _ALWAYS: _ALWAYS,
    _KEEP: _KEEP,
    _REPLACE: _REPLACE,
    _INCR: _INCR,
    _DECR: _DECR,
    _INVERT: _INVERT,
    _INCR_WRAP: _INCR_WRAP,
    _DECR_WRAP: _DECR_WRAP,
    _VENDOR: _VENDOR,
    _RENDERER: _RENDERER,
    _VERSION: _VERSION,
    _NEAREST: _NEAREST,
    _LINEAR: _LINEAR,
    _NEAREST_MIPMAP_NEAREST: _NEAREST_MIPMAP_NEAREST,
    _LINEAR_MIPMAP_NEAREST: _LINEAR_MIPMAP_NEAREST,
    _NEAREST_MIPMAP_LINEAR: _NEAREST_MIPMAP_LINEAR,
    _LINEAR_MIPMAP_LINEAR: _LINEAR_MIPMAP_LINEAR,
    _TEXTURE_MAG_FILTER: _TEXTURE_MAG_FILTER,
    _TEXTURE_MIN_FILTER: _TEXTURE_MIN_FILTER,
    _TEXTURE_WRAP_S: _TEXTURE_WRAP_S,
    _TEXTURE_WRAP_T: _TEXTURE_WRAP_T,
    _TEXTURE: _TEXTURE,
    _TEXTURE_CUBE_MAP: _TEXTURE_CUBE_MAP,
    _TEXTURE_BINDING_CUBE_MAP: _TEXTURE_BINDING_CUBE_MAP,
    _TEXTURE_CUBE_MAP_POSITIVE_X: _TEXTURE_CUBE_MAP_POSITIVE_X,
    _TEXTURE_CUBE_MAP_NEGATIVE_X: _TEXTURE_CUBE_MAP_NEGATIVE_X,
    _TEXTURE_CUBE_MAP_POSITIVE_Y: _TEXTURE_CUBE_MAP_POSITIVE_Y,
    _TEXTURE_CUBE_MAP_NEGATIVE_Y: _TEXTURE_CUBE_MAP_NEGATIVE_Y,
    _TEXTURE_CUBE_MAP_POSITIVE_Z: _TEXTURE_CUBE_MAP_POSITIVE_Z,
    _TEXTURE_CUBE_MAP_NEGATIVE_Z: _TEXTURE_CUBE_MAP_NEGATIVE_Z,
    _MAX_CUBE_MAP_TEXTURE_SIZE: _MAX_CUBE_MAP_TEXTURE_SIZE,
    _TEXTURE0: _TEXTURE0,
    _TEXTURE1: _TEXTURE1,
    _TEXTURE2: _TEXTURE2,
    _TEXTURE3: _TEXTURE3,
    _TEXTURE4: _TEXTURE4,
    _TEXTURE5: _TEXTURE5,
    _TEXTURE6: _TEXTURE6,
    _TEXTURE7: _TEXTURE7,
    _TEXTURE8: _TEXTURE8,
    _TEXTURE9: _TEXTURE9,
    _TEXTURE10: _TEXTURE10,
    _TEXTURE11: _TEXTURE11,
    _TEXTURE12: _TEXTURE12,
    _TEXTURE13: _TEXTURE13,
    _TEXTURE14: _TEXTURE14,
    _TEXTURE15: _TEXTURE15,
    _TEXTURE16: _TEXTURE16,
    _TEXTURE17: _TEXTURE17,
    _TEXTURE18: _TEXTURE18,
    _TEXTURE19: _TEXTURE19,
    _TEXTURE20: _TEXTURE20,
    _TEXTURE21: _TEXTURE21,
    _TEXTURE22: _TEXTURE22,
    _TEXTURE23: _TEXTURE23,
    _TEXTURE24: _TEXTURE24,
    _TEXTURE25: _TEXTURE25,
    _TEXTURE26: _TEXTURE26,
    _TEXTURE27: _TEXTURE27,
    _TEXTURE28: _TEXTURE28,
    _TEXTURE29: _TEXTURE29,
    _TEXTURE30: _TEXTURE30,
    _TEXTURE31: _TEXTURE31,
    _ACTIVE_TEXTURE: _ACTIVE_TEXTURE,
    _REPEAT: _REPEAT,
    _CLAMP_TO_EDGE: _CLAMP_TO_EDGE,
    _MIRRORED_REPEAT: _MIRRORED_REPEAT,
    _FLOAT_VEC2: _FLOAT_VEC2,
    _FLOAT_VEC3: _FLOAT_VEC3,
    _FLOAT_VEC4: _FLOAT_VEC4,
    _INT_VEC2: _INT_VEC2,
    _INT_VEC3: _INT_VEC3,
    _INT_VEC4: _INT_VEC4,
    _BOOL: _BOOL,
    _BOOL_VEC2: _BOOL_VEC2,
    _BOOL_VEC3: _BOOL_VEC3,
    _BOOL_VEC4: _BOOL_VEC4,
    _FLOAT_MAT2: _FLOAT_MAT2,
    _FLOAT_MAT3: _FLOAT_MAT3,
    _FLOAT_MAT4: _FLOAT_MAT4,
    _SAMPLER_2D: _SAMPLER_2D,
    _SAMPLER_CUBE: _SAMPLER_CUBE,
    _VERTEX_ATTRIB_ARRAY_ENABLED: _VERTEX_ATTRIB_ARRAY_ENABLED,
    _VERTEX_ATTRIB_ARRAY_SIZE: _VERTEX_ATTRIB_ARRAY_SIZE,
    _VERTEX_ATTRIB_ARRAY_STRIDE: _VERTEX_ATTRIB_ARRAY_STRIDE,
    _VERTEX_ATTRIB_ARRAY_TYPE: _VERTEX_ATTRIB_ARRAY_TYPE,
    _VERTEX_ATTRIB_ARRAY_NORMALIZED: _VERTEX_ATTRIB_ARRAY_NORMALIZED,
    _VERTEX_ATTRIB_ARRAY_POINTER: _VERTEX_ATTRIB_ARRAY_POINTER,
    _VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: _VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,
    _COMPILE_STATUS: _COMPILE_STATUS,
    _INFO_LOG_LENGTH: _INFO_LOG_LENGTH,
    _SHADER_SOURCE_LENGTH: _SHADER_SOURCE_LENGTH,
    _LOW_FLOAT: _LOW_FLOAT,
    _MEDIUM_FLOAT: _MEDIUM_FLOAT,
    _HIGH_FLOAT: _HIGH_FLOAT,
    _LOW_INT: _LOW_INT,
    _MEDIUM_INT: _MEDIUM_INT,
    _HIGH_INT: _HIGH_INT,
    _FRAMEBUFFER: _FRAMEBUFFER,
    _RENDERBUFFER: _RENDERBUFFER,
    _RGBA4: _RGBA4,
    _RGB5_A1: _RGB5_A1,
    _RGB565: _RGB565,
    _DEPTH_COMPONENT16: _DEPTH_COMPONENT16,
    _STENCIL_INDEX: _STENCIL_INDEX,
    _STENCIL_INDEX8: _STENCIL_INDEX8,
    _DEPTH_STENCIL: _DEPTH_STENCIL,
    _RENDERBUFFER_WIDTH: _RENDERBUFFER_WIDTH,
    _RENDERBUFFER_HEIGHT: _RENDERBUFFER_HEIGHT,
    _RENDERBUFFER_INTERNAL_FORMAT: _RENDERBUFFER_INTERNAL_FORMAT,
    _RENDERBUFFER_RED_SIZE: _RENDERBUFFER_RED_SIZE,
    _RENDERBUFFER_GREEN_SIZE: _RENDERBUFFER_GREEN_SIZE,
    _RENDERBUFFER_BLUE_SIZE: _RENDERBUFFER_BLUE_SIZE,
    _RENDERBUFFER_ALPHA_SIZE: _RENDERBUFFER_ALPHA_SIZE,
    _RENDERBUFFER_DEPTH_SIZE: _RENDERBUFFER_DEPTH_SIZE,
    _RENDERBUFFER_STENCIL_SIZE: _RENDERBUFFER_STENCIL_SIZE,
    _FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: _FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,
    _FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: _FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,
    _FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: _FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,
    _FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: _FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,
    _COLOR_ATTACHMENT0: _COLOR_ATTACHMENT0,
    _DEPTH_ATTACHMENT: _DEPTH_ATTACHMENT,
    _STENCIL_ATTACHMENT: _STENCIL_ATTACHMENT,
    _DEPTH_STENCIL_ATTACHMENT: _DEPTH_STENCIL_ATTACHMENT,
    _NONE: _NONE,
    _FRAMEBUFFER_COMPLETE: _FRAMEBUFFER_COMPLETE,
    _FRAMEBUFFER_INCOMPLETE_ATTACHMENT: _FRAMEBUFFER_INCOMPLETE_ATTACHMENT,
    _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,
    _FRAMEBUFFER_INCOMPLETE_DIMENSIONS: _FRAMEBUFFER_INCOMPLETE_DIMENSIONS,
    _FRAMEBUFFER_UNSUPPORTED: _FRAMEBUFFER_UNSUPPORTED,
    _FRAMEBUFFER_BINDING: _FRAMEBUFFER_BINDING,
    _RENDERBUFFER_BINDING: _RENDERBUFFER_BINDING,
    _MAX_RENDERBUFFER_SIZE: _MAX_RENDERBUFFER_SIZE,
    _INVALID_FRAMEBUFFER_OPERATION: _INVALID_FRAMEBUFFER_OPERATION,
    _UNPACK_FLIP_Y_WEBGL: _UNPACK_FLIP_Y_WEBGL,
    _UNPACK_PREMULTIPLY_ALPHA_WEBGL: _UNPACK_PREMULTIPLY_ALPHA_WEBGL,
    _CONTEXT_LOST_WEBGL: _CONTEXT_LOST_WEBGL,
    _UNPACK_COLORSPACE_CONVERSION_WEBGL: _UNPACK_COLORSPACE_CONVERSION_WEBGL,
    _BROWSER_DEFAULT_WEBGL: _BROWSER_DEFAULT_WEBGL,
    getContextAttributes_: $foreign.getContextAttributes_,
    isContextLost_: $foreign.isContextLost_,
    getSupportedExtensions_: $foreign.getSupportedExtensions_,
    getExtension_: $foreign.getExtension_,
    activeTexture_: $foreign.activeTexture_,
    attachShader_: $foreign.attachShader_,
    bindAttribLocation_: $foreign.bindAttribLocation_,
    bindBuffer_: $foreign.bindBuffer_,
    bindFramebuffer_: $foreign.bindFramebuffer_,
    bindRenderbuffer_: $foreign.bindRenderbuffer_,
    bindTexture_: $foreign.bindTexture_,
    blendColor_: $foreign.blendColor_,
    blendEquation_: $foreign.blendEquation_,
    blendEquationSeparate_: $foreign.blendEquationSeparate_,
    blendFunc_: $foreign.blendFunc_,
    blendFuncSeparate_: $foreign.blendFuncSeparate_,
    bufferData_: $foreign.bufferData_,
    bufferSubData_: $foreign.bufferSubData_,
    checkFramebufferStatus_: $foreign.checkFramebufferStatus_,
    clear_: $foreign.clear_,
    clearColor_: $foreign.clearColor_,
    clearDepth_: $foreign.clearDepth_,
    clearStencil_: $foreign.clearStencil_,
    colorMask_: $foreign.colorMask_,
    compileShader_: $foreign.compileShader_,
    copyTexImage2D_: $foreign.copyTexImage2D_,
    copyTexSubImage2D_: $foreign.copyTexSubImage2D_,
    createBuffer_: $foreign.createBuffer_,
    createFramebuffer_: $foreign.createFramebuffer_,
    createProgram_: $foreign.createProgram_,
    createRenderbuffer_: $foreign.createRenderbuffer_,
    createShader_: $foreign.createShader_,
    createTexture_: $foreign.createTexture_,
    cullFace_: $foreign.cullFace_,
    deleteBuffer_: $foreign.deleteBuffer_,
    deleteFramebuffer_: $foreign.deleteFramebuffer_,
    deleteProgram_: $foreign.deleteProgram_,
    deleteRenderbuffer_: $foreign.deleteRenderbuffer_,
    deleteShader_: $foreign.deleteShader_,
    deleteTexture_: $foreign.deleteTexture_,
    depthFunc_: $foreign.depthFunc_,
    depthMask_: $foreign.depthMask_,
    depthRange_: $foreign.depthRange_,
    detachShader_: $foreign.detachShader_,
    disable_: $foreign.disable_,
    disableVertexAttribArray_: $foreign.disableVertexAttribArray_,
    drawArrays_: $foreign.drawArrays_,
    drawElements_: $foreign.drawElements_,
    enable_: $foreign.enable_,
    enableVertexAttribArray_: $foreign.enableVertexAttribArray_,
    finish_: $foreign.finish_,
    flush_: $foreign.flush_,
    framebufferRenderbuffer_: $foreign.framebufferRenderbuffer_,
    framebufferTexture2D_: $foreign.framebufferTexture2D_,
    frontFace_: $foreign.frontFace_,
    generateMipmap_: $foreign.generateMipmap_,
    getActiveAttrib_: $foreign.getActiveAttrib_,
    getActiveUniform_: $foreign.getActiveUniform_,
    getAttachedShaders_: $foreign.getAttachedShaders_,
    getAttribLocation_: $foreign.getAttribLocation_,
    getParameter_: $foreign.getParameter_,
    getBufferParameter_: $foreign.getBufferParameter_,
    getError_: $foreign.getError_,
    getFramebufferAttachmentParameter_: $foreign.getFramebufferAttachmentParameter_,
    getProgramParameter_: $foreign.getProgramParameter_,
    getProgramInfoLog_: $foreign.getProgramInfoLog_,
    getRenderbufferParameter_: $foreign.getRenderbufferParameter_,
    getShaderParameter_: $foreign.getShaderParameter_,
    getShaderInfoLog_: $foreign.getShaderInfoLog_,
    getShaderSource_: $foreign.getShaderSource_,
    getTexParameter_: $foreign.getTexParameter_,
    getUniform_: $foreign.getUniform_,
    getUniformLocation_: $foreign.getUniformLocation_,
    getVertexAttrib_: $foreign.getVertexAttrib_,
    getVertexAttribOffset_: $foreign.getVertexAttribOffset_,
    hint_: $foreign.hint_,
    isBuffer_: $foreign.isBuffer_,
    isEnabled_: $foreign.isEnabled_,
    isFramebuffer_: $foreign.isFramebuffer_,
    isProgram_: $foreign.isProgram_,
    isRenderbuffer_: $foreign.isRenderbuffer_,
    isShader_: $foreign.isShader_,
    isTexture_: $foreign.isTexture_,
    lineWidth_: $foreign.lineWidth_,
    linkProgram_: $foreign.linkProgram_,
    pixelStorei_: $foreign.pixelStorei_,
    polygonOffset_: $foreign.polygonOffset_,
    readPixels_: $foreign.readPixels_,
    renderbufferStorage_: $foreign.renderbufferStorage_,
    sampleCoverage_: $foreign.sampleCoverage_,
    scissor_: $foreign.scissor_,
    shaderSource_: $foreign.shaderSource_,
    stencilFunc_: $foreign.stencilFunc_,
    stencilFuncSeparate_: $foreign.stencilFuncSeparate_,
    stencilMask_: $foreign.stencilMask_,
    stencilMaskSeparate_: $foreign.stencilMaskSeparate_,
    stencilOp_: $foreign.stencilOp_,
    stencilOpSeparate_: $foreign.stencilOpSeparate_,
    texImage2D_: $foreign.texImage2D_,
    texParameterf_: $foreign.texParameterf_,
    texParameteri_: $foreign.texParameteri_,
    texSubImage2D_: $foreign.texSubImage2D_,
    uniform1f_: $foreign.uniform1f_,
    uniform1fv_: $foreign.uniform1fv_,
    uniform1i_: $foreign.uniform1i_,
    uniform1iv_: $foreign.uniform1iv_,
    uniform2f_: $foreign.uniform2f_,
    uniform2fv_: $foreign.uniform2fv_,
    uniform2i_: $foreign.uniform2i_,
    uniform2iv_: $foreign.uniform2iv_,
    uniform3f_: $foreign.uniform3f_,
    uniform3fv_: $foreign.uniform3fv_,
    uniform3i_: $foreign.uniform3i_,
    uniform3iv_: $foreign.uniform3iv_,
    uniform4f_: $foreign.uniform4f_,
    uniform4fv_: $foreign.uniform4fv_,
    uniform4i_: $foreign.uniform4i_,
    uniform4iv_: $foreign.uniform4iv_,
    uniformMatrix2fv_: $foreign.uniformMatrix2fv_,
    uniformMatrix3fv_: $foreign.uniformMatrix3fv_,
    uniformMatrix4fv_: $foreign.uniformMatrix4fv_,
    useProgram_: $foreign.useProgram_,
    validateProgram_: $foreign.validateProgram_,
    vertexAttrib1f_: $foreign.vertexAttrib1f_,
    vertexAttrib1fv_: $foreign.vertexAttrib1fv_,
    vertexAttrib2f_: $foreign.vertexAttrib2f_,
    vertexAttrib2fv_: $foreign.vertexAttrib2fv_,
    vertexAttrib3f_: $foreign.vertexAttrib3f_,
    vertexAttrib3fv_: $foreign.vertexAttrib3fv_,
    vertexAttrib4f_: $foreign.vertexAttrib4f_,
    vertexAttrib4fv_: $foreign.vertexAttrib4fv_,
    vertexAttribPointer_: $foreign.vertexAttribPointer_,
    viewport_: $foreign.viewport_
};

},{"../Control.Monad.Eff":40,"../Control.Monad.Eff.WebGL":38,"../Data.ArrayBuffer.Types":81,"../Prelude":263,"./foreign":237}],239:[function(require,module,exports){
/* global exports */

// module Graphics.WebGLTexture


    "use strict";

    exports.asArrayBufferView_ = function (it) {
        return (it);
    };

    exports.loadImage_ = function(name) {
        return function(continuation) {
            return function()
                {var i = new Image();
                 i.src = name;
                 i.onload = continuation (i);
                  };
              };
          };

    exports.texImage2D__ = function (target)
    {return function(level)
     {return function(internalformat)
         {return function(format)
          {return function(type)
           {return function(pixels)
            {return function()
             {gl.texImage2D(target,level,internalformat,format,type,pixels);}
            ;}
          ;}
        ;}
      ;}
    ;}
   ;};

    exports.texImage2DNull_ = function (target)
    {return function(level)
     {return function(internalformat)
      {return function(width)
       {return function(height)
        {return function(border)
         {return function(format)
          {return function(type)
            {return function()
             {gl.texImage2D(target,level,internalformat,width,height,border,format,type,null);}
             ;}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
    ;

    exports.bindTexture__ = function(target)
        {return function()
         {gl.bindTexture(target,null);};};

    exports.texSubImage2D__ = function (target)
    {return function(level)
     {return function(xoffset)
      {return function(yoffset)
       {return function(format)
          {return function(type)
           {return function(pixels)
            {return function()
             {gl.texSubImage2D(target,level,xoffset,yoffset,format,type,pixels);}
             ;}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;

},{}],240:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_WebGL = require("../Control.Monad.Eff.WebGL");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Ord = require("../Data.Ord");
var Data_Semiring = require("../Data.Semiring");
var Data_TypedArray = require("../Data.TypedArray");
var Data_Unit = require("../Data.Unit");
var Extensions = require("../Extensions");
var Graphics_Canvas = require("../Graphics.Canvas");
var Graphics_WebGL = require("../Graphics.WebGL");
var Graphics_WebGLRaw = require("../Graphics.WebGLRaw");
var Prelude = require("../Prelude");
var WebGLTex = function (x) {
    return x;
};
var UNSIGNED_BYTE = (function () {
    function UNSIGNED_BYTE() {

    };
    UNSIGNED_BYTE.value = new UNSIGNED_BYTE();
    return UNSIGNED_BYTE;
})();
var RGBA = (function () {
    function RGBA() {

    };
    RGBA.value = new RGBA();
    return RGBA;
})();
var FLOAT = (function () {
    function FLOAT() {

    };
    FLOAT.value = new FLOAT();
    return FLOAT;
})();
var UNSIGNED_SHORT_5_6_5 = (function () {
    function UNSIGNED_SHORT_5_6_5() {

    };
    UNSIGNED_SHORT_5_6_5.value = new UNSIGNED_SHORT_5_6_5();
    return UNSIGNED_SHORT_5_6_5;
})();
var UNSIGNED_SHORT_4_4_4_4 = (function () {
    function UNSIGNED_SHORT_4_4_4_4() {

    };
    UNSIGNED_SHORT_4_4_4_4.value = new UNSIGNED_SHORT_4_4_4_4();
    return UNSIGNED_SHORT_4_4_4_4;
})();
var UNSIGNED_SHORT_5_5_5_1 = (function () {
    function UNSIGNED_SHORT_5_5_5_1() {

    };
    UNSIGNED_SHORT_5_5_5_1.value = new UNSIGNED_SHORT_5_5_5_1();
    return UNSIGNED_SHORT_5_5_5_1;
})();
var TTEXTURE_2D = (function () {
    function TTEXTURE_2D() {

    };
    TTEXTURE_2D.value = new TTEXTURE_2D();
    return TTEXTURE_2D;
})();
var TTEXTURE_CUBE_MAP = (function () {
    function TTEXTURE_CUBE_MAP() {

    };
    TTEXTURE_CUBE_MAP.value = new TTEXTURE_CUBE_MAP();
    return TTEXTURE_CUBE_MAP;
})();
var TEXTURE_MIN_FILTER = (function () {
    function TEXTURE_MIN_FILTER() {

    };
    TEXTURE_MIN_FILTER.value = new TEXTURE_MIN_FILTER();
    return TEXTURE_MIN_FILTER;
})();
var TEXTURE_MAG_FILTER = (function () {
    function TEXTURE_MAG_FILTER() {

    };
    TEXTURE_MAG_FILTER.value = new TEXTURE_MAG_FILTER();
    return TEXTURE_MAG_FILTER;
})();
var TEXTURE_WRAP_S = (function () {
    function TEXTURE_WRAP_S() {

    };
    TEXTURE_WRAP_S.value = new TEXTURE_WRAP_S();
    return TEXTURE_WRAP_S;
})();
var TEXTURE_WRAP_T = (function () {
    function TEXTURE_WRAP_T() {

    };
    TEXTURE_WRAP_T.value = new TEXTURE_WRAP_T();
    return TEXTURE_WRAP_T;
})();
var NEAREST = (function () {
    function NEAREST() {

    };
    NEAREST.value = new NEAREST();
    return NEAREST;
})();
var LINEAR = (function () {
    function LINEAR() {

    };
    LINEAR.value = new LINEAR();
    return LINEAR;
})();
var MIPMAP = (function () {
    function MIPMAP() {

    };
    MIPMAP.value = new MIPMAP();
    return MIPMAP;
})();
var TEXTURE_2D = (function () {
    function TEXTURE_2D() {

    };
    TEXTURE_2D.value = new TEXTURE_2D();
    return TEXTURE_2D;
})();
var TEXTURE_CUBE_MAP_POSITIVE_X = (function () {
    function TEXTURE_CUBE_MAP_POSITIVE_X() {

    };
    TEXTURE_CUBE_MAP_POSITIVE_X.value = new TEXTURE_CUBE_MAP_POSITIVE_X();
    return TEXTURE_CUBE_MAP_POSITIVE_X;
})();
var TEXTURE_CUBE_MAP_NEGATIVE_X = (function () {
    function TEXTURE_CUBE_MAP_NEGATIVE_X() {

    };
    TEXTURE_CUBE_MAP_NEGATIVE_X.value = new TEXTURE_CUBE_MAP_NEGATIVE_X();
    return TEXTURE_CUBE_MAP_NEGATIVE_X;
})();
var TEXTURE_CUBE_MAP_POSITIVE_Y = (function () {
    function TEXTURE_CUBE_MAP_POSITIVE_Y() {

    };
    TEXTURE_CUBE_MAP_POSITIVE_Y.value = new TEXTURE_CUBE_MAP_POSITIVE_Y();
    return TEXTURE_CUBE_MAP_POSITIVE_Y;
})();
var TEXTURE_CUBE_MAP_NEGATIVE_Y = (function () {
    function TEXTURE_CUBE_MAP_NEGATIVE_Y() {

    };
    TEXTURE_CUBE_MAP_NEGATIVE_Y.value = new TEXTURE_CUBE_MAP_NEGATIVE_Y();
    return TEXTURE_CUBE_MAP_NEGATIVE_Y;
})();
var TEXTURE_CUBE_MAP_POSITIVE_Z = (function () {
    function TEXTURE_CUBE_MAP_POSITIVE_Z() {

    };
    TEXTURE_CUBE_MAP_POSITIVE_Z.value = new TEXTURE_CUBE_MAP_POSITIVE_Z();
    return TEXTURE_CUBE_MAP_POSITIVE_Z;
})();
var TEXTURE_CUBE_MAP_NEGATIVE_Z = (function () {
    function TEXTURE_CUBE_MAP_NEGATIVE_Z() {

    };
    TEXTURE_CUBE_MAP_NEGATIVE_Z.value = new TEXTURE_CUBE_MAP_NEGATIVE_Z();
    return TEXTURE_CUBE_MAP_NEGATIVE_Z;
})();
var PACK_ALIGNMENT = (function () {
    function PACK_ALIGNMENT() {

    };
    PACK_ALIGNMENT.value = new PACK_ALIGNMENT();
    return PACK_ALIGNMENT;
})();
var UNPACK_ALIGNMENT = (function () {
    function UNPACK_ALIGNMENT() {

    };
    UNPACK_ALIGNMENT.value = new UNPACK_ALIGNMENT();
    return UNPACK_ALIGNMENT;
})();
var UNPACK_FLIP_Y_WEBGL = (function () {
    function UNPACK_FLIP_Y_WEBGL() {

    };
    UNPACK_FLIP_Y_WEBGL.value = new UNPACK_FLIP_Y_WEBGL();
    return UNPACK_FLIP_Y_WEBGL;
})();
var UNPACK_PREMULTIPLY_ALPHA_WEBGL = (function () {
    function UNPACK_PREMULTIPLY_ALPHA_WEBGL() {

    };
    UNPACK_PREMULTIPLY_ALPHA_WEBGL.value = new UNPACK_PREMULTIPLY_ALPHA_WEBGL();
    return UNPACK_PREMULTIPLY_ALPHA_WEBGL;
})();
var UNPACK_COLORSPACE_CONVERSION_WEBGL = (function () {
    function UNPACK_COLORSPACE_CONVERSION_WEBGL() {

    };
    UNPACK_COLORSPACE_CONVERSION_WEBGL.value = new UNPACK_COLORSPACE_CONVERSION_WEBGL();
    return UNPACK_COLORSPACE_CONVERSION_WEBGL;
})();
var IF_ALPHA = (function () {
    function IF_ALPHA() {

    };
    IF_ALPHA.value = new IF_ALPHA();
    return IF_ALPHA;
})();
var IF_LUMINANCE = (function () {
    function IF_LUMINANCE() {

    };
    IF_LUMINANCE.value = new IF_LUMINANCE();
    return IF_LUMINANCE;
})();
var IF_LUMINANCE_ALPHA = (function () {
    function IF_LUMINANCE_ALPHA() {

    };
    IF_LUMINANCE_ALPHA.value = new IF_LUMINANCE_ALPHA();
    return IF_LUMINANCE_ALPHA;
})();
var IF_RGB = (function () {
    function IF_RGB() {

    };
    IF_RGB.value = new IF_RGB();
    return IF_RGB;
})();
var IF_RGBA = (function () {
    function IF_RGBA() {

    };
    IF_RGBA.value = new IF_RGBA();
    return IF_RGBA;
})();
var uniform1i = Graphics_WebGLRaw.uniform1i_;
var textureTypeToConst = function (v) {
    if (v instanceof UNSIGNED_BYTE) {
        return Graphics_WebGLRaw._UNSIGNED_BYTE;
    };
    if (v instanceof RGBA) {
        return Graphics_WebGLRaw._RGBA;
    };
    if (v instanceof FLOAT) {
        return Graphics_WebGLRaw._FLOAT;
    };
    if (v instanceof UNSIGNED_SHORT_5_6_5) {
        return Graphics_WebGLRaw._UNSIGNED_SHORT_5_6_5;
    };
    if (v instanceof UNSIGNED_SHORT_4_4_4_4) {
        return Graphics_WebGLRaw._UNSIGNED_SHORT_4_4_4_4;
    };
    if (v instanceof UNSIGNED_SHORT_5_5_5_1) {
        return Graphics_WebGLRaw._UNSIGNED_SHORT_5_5_5_1;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 100, column 1 - line 100, column 44: " + [ v.constructor.name ]);
};
var texTargetToConst = function (v) {
    if (v instanceof TTEXTURE_2D) {
        return Graphics_WebGLRaw._TEXTURE_2D;
    };
    if (v instanceof TTEXTURE_CUBE_MAP) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 126, column 1 - line 126, column 40: " + [ v.constructor.name ]);
};
var texParNameToConst = function (v) {
    if (v instanceof TEXTURE_MIN_FILTER) {
        return Graphics_WebGLRaw._TEXTURE_MIN_FILTER;
    };
    if (v instanceof TEXTURE_MAG_FILTER) {
        return Graphics_WebGLRaw._TEXTURE_MAG_FILTER;
    };
    if (v instanceof TEXTURE_WRAP_S) {
        return Graphics_WebGLRaw._TEXTURE_WRAP_S;
    };
    if (v instanceof TEXTURE_WRAP_T) {
        return Graphics_WebGLRaw._TEXTURE_WRAP_T;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 137, column 1 - line 137, column 42: " + [ v.constructor.name ]);
};
var texParameteri = function (target) {
    return function (pname) {
        return function (param) {
            return Graphics_WebGLRaw.texParameteri_(texTargetToConst(target))(texParNameToConst(pname))(param);
        };
    };
};
var texFilterSpecToMinConst = function (v) {
    if (v instanceof NEAREST) {
        return Graphics_WebGLRaw._NEAREST;
    };
    if (v instanceof LINEAR) {
        return Graphics_WebGLRaw._LINEAR;
    };
    if (v instanceof MIPMAP) {
        return Graphics_WebGLRaw._LINEAR_MIPMAP_NEAREST;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 154, column 1 - line 154, column 51: " + [ v.constructor.name ]);
};
var texFilterSpecToMagConst = function (v) {
    if (v instanceof NEAREST) {
        return Graphics_WebGLRaw._NEAREST;
    };
    if (v instanceof LINEAR) {
        return Graphics_WebGLRaw._LINEAR;
    };
    if (v instanceof MIPMAP) {
        return Graphics_WebGLRaw._LINEAR;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 149, column 1 - line 149, column 51: " + [ v.constructor.name ]);
};
var targetTypeToConst = function (v) {
    if (v instanceof TEXTURE_2D) {
        return Graphics_WebGLRaw._TEXTURE_2D;
    };
    if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_X) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_X;
    };
    if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_X) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_X;
    };
    if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_Y) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_Y;
    };
    if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_Y) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_Y;
    };
    if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_Z) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_Z;
    };
    if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_Z) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_Z;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 69, column 1 - line 69, column 42: " + [ v.constructor.name ]);
};
var unbindTexture = function (tt) {
    return $foreign.bindTexture__(targetTypeToConst(tt));
};
var symbolicParameterToConst = function (v) {
    if (v instanceof PACK_ALIGNMENT) {
        return Graphics_WebGLRaw._PACK_ALIGNMENT;
    };
    if (v instanceof UNPACK_ALIGNMENT) {
        return Graphics_WebGLRaw._UNPACK_ALIGNMENT;
    };
    if (v instanceof UNPACK_FLIP_Y_WEBGL) {
        return Graphics_WebGLRaw._UNPACK_FLIP_Y_WEBGL;
    };
    if (v instanceof UNPACK_PREMULTIPLY_ALPHA_WEBGL) {
        return Graphics_WebGLRaw._UNPACK_PREMULTIPLY_ALPHA_WEBGL;
    };
    if (v instanceof UNPACK_COLORSPACE_CONVERSION_WEBGL) {
        return Graphics_WebGLRaw._UNPACK_COLORSPACE_CONVERSION_WEBGL;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 115, column 1 - line 115, column 56: " + [ v.constructor.name ]);
};
var pixelStorei = function (symbolicParameter) {
    return function (num) {
        return Graphics_WebGLRaw.pixelStorei_(symbolicParameterToConst(symbolicParameter))(num);
    };
};
var internalFormatToConst = function (v) {
    if (v instanceof IF_ALPHA) {
        return Graphics_WebGLRaw._ALPHA;
    };
    if (v instanceof IF_LUMINANCE) {
        return Graphics_WebGLRaw._LUMINANCE;
    };
    if (v instanceof IF_LUMINANCE_ALPHA) {
        return Graphics_WebGLRaw._LUMINANCE_ALPHA;
    };
    if (v instanceof IF_RGB) {
        return Graphics_WebGLRaw._RGB;
    };
    if (v instanceof IF_RGBA) {
        return Graphics_WebGLRaw._RGBA;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 85, column 1 - line 85, column 50: " + [ v.constructor.name ]);
};
var texImage2D = function (target) {
    return function (level) {
        return function (internalFormat) {
            return function (format) {
                return function (typ) {
                    return function (pixels) {
                        return $foreign.texImage2D__(targetTypeToConst(target))(level)(internalFormatToConst(internalFormat))(internalFormatToConst(format))(textureTypeToConst(typ))(pixels);
                    };
                };
            };
        };
    };
};
var texImage2DNull = function (target) {
    return function (level) {
        return function (internalFormat) {
            return function (width) {
                return function (height) {
                    return function (format) {
                        return function (typ) {
                            return $foreign.texImage2DNull_(targetTypeToConst(target))(level)(internalFormatToConst(internalFormat))(width)(height)(0)(internalFormatToConst(format))(textureTypeToConst(typ));
                        };
                    };
                };
            };
        };
    };
};
var texImage2DPixels = function (target) {
    return function (level) {
        return function (internalFormat) {
            return function (width) {
                return function (height) {
                    return function (format) {
                        return function (typ) {
                            return function (pixels) {
                                return Graphics_WebGLRaw.texImage2D_(targetTypeToConst(target))(level)(internalFormatToConst(internalFormat))(width)(height)(0)(internalFormatToConst(format))(textureTypeToConst(typ))(pixels);
                            };
                        };
                    };
                };
            };
        };
    };
};
var texSubImage2D = function (target) {
    return function (level) {
        return function (x) {
            return function (y) {
                return function (format) {
                    return function (typ) {
                        return function (pixels) {
                            return $foreign.texSubImage2D__(targetTypeToConst(target))(level)(x)(y)(internalFormatToConst(format))(textureTypeToConst(typ))(pixels);
                        };
                    };
                };
            };
        };
    };
};
var createTexture = function __do() {
    var v = Graphics_WebGLRaw.createTexture_();
    return v;
};
var bindTexture = function (tt) {
    return function (v) {
        return Graphics_WebGLRaw.bindTexture_(targetTypeToConst(tt))(v);
    };
};
var handleLoad2D = function (texture) {
    return function (filterSpec) {
        return function (whatever) {
            return function __do() {
                bindTexture(TEXTURE_2D.value)(texture)();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MAG_FILTER.value)(texFilterSpecToMagConst(filterSpec))();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MIN_FILTER.value)(texFilterSpecToMinConst(filterSpec))();
                pixelStorei(UNPACK_FLIP_Y_WEBGL.value)(0)();
                pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL.value)(0)();
                texImage2D(TEXTURE_2D.value)(0)(IF_RGBA.value)(IF_RGBA.value)(UNSIGNED_BYTE.value)(whatever)();
                (function () {
                    if (filterSpec instanceof MIPMAP) {
                        return Graphics_WebGLRaw.generateMipmap_(Graphics_WebGLRaw._TEXTURE_2D);
                    };
                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                })()();
                return unbindTexture(TEXTURE_2D.value)();
            };
        };
    };
};
var texture2DFor = function (name) {
    return function (filterSpec) {
        return function (continuation) {
            return function __do() {
                var v = createTexture();
                return $foreign.loadImage_(name)(function (image) {
                    return function __do() {
                        handleLoad2D(v)(filterSpec)(image)();
                        return continuation(v)();
                    };
                })();
            };
        };
    };
};
var handleSubLoad2D = function (texture) {
    return function (x) {
        return function (y) {
            return function (w) {
                return function (h) {
                    return function (filterSpec) {
                        return function (whatever) {
                            return function __do() {
                                bindTexture(TEXTURE_2D.value)(texture)();
                                texParameteri(TTEXTURE_2D.value)(TEXTURE_MAG_FILTER.value)(texFilterSpecToMagConst(filterSpec))();
                                texParameteri(TTEXTURE_2D.value)(TEXTURE_MIN_FILTER.value)(texFilterSpecToMinConst(filterSpec))();
                                pixelStorei(UNPACK_FLIP_Y_WEBGL.value)(0)();
                                pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL.value)(0)();
                                texSubImage2D(TEXTURE_2D.value)(0)(x)(y)(IF_RGBA.value)(UNSIGNED_BYTE.value)(whatever)();
                                (function () {
                                    if (filterSpec instanceof MIPMAP) {
                                        return Graphics_WebGLRaw.generateMipmap_(Graphics_WebGLRaw._TEXTURE_2D);
                                    };
                                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                                })()();
                                return unbindTexture(TEXTURE_2D.value)();
                            };
                        };
                    };
                };
            };
        };
    };
};
var newTexture = function (width) {
    return function (height) {
        return function (filterSpec) {
            return function __do() {
                var v = createTexture();
                bindTexture(TEXTURE_2D.value)(v)();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MAG_FILTER.value)(texFilterSpecToMagConst(filterSpec))();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MIN_FILTER.value)(texFilterSpecToMinConst(filterSpec))();
                Control_Applicative.when(Control_Monad_Eff.applicativeEff)(((width | height) & 1) === 1)(function __do() {
                    texParameteri(TTEXTURE_2D.value)(TEXTURE_WRAP_S.value)(Graphics_WebGLRaw._CLAMP_TO_EDGE)();
                    return texParameteri(TTEXTURE_2D.value)(TEXTURE_WRAP_T.value)(Graphics_WebGLRaw._CLAMP_TO_EDGE)();
                })();
                texImage2DNull(TEXTURE_2D.value)(0)(IF_RGBA.value)(width)(height)(IF_RGBA.value)(UNSIGNED_BYTE.value)();
                (function () {
                    if (filterSpec instanceof MIPMAP) {
                        return Graphics_WebGLRaw.generateMipmap_(Graphics_WebGLRaw._TEXTURE_2D);
                    };
                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                })()();
                unbindTexture(TEXTURE_2D.value)();
                return v;
            };
        };
    };
};
var newTextureInit = function (width) {
    return function (height) {
        return function (filterSpec) {
            return function __do() {
                var v = createTexture();
                var pixels = Data_TypedArray.newUint8Array((width * height | 0) * 4 | 0);
                bindTexture(TEXTURE_2D.value)(v)();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MAG_FILTER.value)(texFilterSpecToMagConst(filterSpec))();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MIN_FILTER.value)(texFilterSpecToMinConst(filterSpec))();
                Control_Applicative.when(Control_Monad_Eff.applicativeEff)(((width | height) & 1) === 1)(function __do() {
                    texParameteri(TTEXTURE_2D.value)(TEXTURE_WRAP_S.value)(Graphics_WebGLRaw._CLAMP_TO_EDGE)();
                    return texParameteri(TTEXTURE_2D.value)(TEXTURE_WRAP_T.value)(Graphics_WebGLRaw._CLAMP_TO_EDGE)();
                })();
                texImage2DPixels(TEXTURE_2D.value)(0)(IF_RGBA.value)(width)(height)(IF_RGBA.value)(UNSIGNED_BYTE.value)($foreign.asArrayBufferView_(pixels))();
                (function () {
                    if (filterSpec instanceof MIPMAP) {
                        return Graphics_WebGLRaw.generateMipmap_(Graphics_WebGLRaw._TEXTURE_2D);
                    };
                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                })()();
                unbindTexture(TEXTURE_2D.value)();
                return v;
            };
        };
    };
};
var activeTexture = function (n) {
    if (n < Graphics_WebGLRaw._MAX_COMBINED_TEXTURE_IMAGE_UNITS) {
        return Graphics_WebGLRaw.activeTexture_(Graphics_WebGLRaw._TEXTURE0 + n | 0);
    };
    if (Data_Boolean.otherwise) {
        return Extensions.fail("WebGLTexture>>activeTexture: wrong argument!");
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 268, column 1 - line 268, column 68: " + [ n.constructor.name ]);
};
var withTexture2D = function (texture) {
    return function (index) {
        return function (v) {
            return function (pos) {
                return function (continuation) {
                    return function __do() {
                        activeTexture(index)();
                        bindTexture(TEXTURE_2D.value)(texture)();
                        uniform1i(v.uLocation)(pos)();
                        continuation();
                        return unbindTexture(TEXTURE_2D.value)();
                    };
                };
            };
        };
    };
};
module.exports = {
    TEXTURE_2D: TEXTURE_2D,
    TEXTURE_CUBE_MAP_POSITIVE_X: TEXTURE_CUBE_MAP_POSITIVE_X,
    TEXTURE_CUBE_MAP_NEGATIVE_X: TEXTURE_CUBE_MAP_NEGATIVE_X,
    TEXTURE_CUBE_MAP_POSITIVE_Y: TEXTURE_CUBE_MAP_POSITIVE_Y,
    TEXTURE_CUBE_MAP_NEGATIVE_Y: TEXTURE_CUBE_MAP_NEGATIVE_Y,
    TEXTURE_CUBE_MAP_POSITIVE_Z: TEXTURE_CUBE_MAP_POSITIVE_Z,
    TEXTURE_CUBE_MAP_NEGATIVE_Z: TEXTURE_CUBE_MAP_NEGATIVE_Z,
    IF_ALPHA: IF_ALPHA,
    IF_LUMINANCE: IF_LUMINANCE,
    IF_LUMINANCE_ALPHA: IF_LUMINANCE_ALPHA,
    IF_RGB: IF_RGB,
    IF_RGBA: IF_RGBA,
    UNSIGNED_BYTE: UNSIGNED_BYTE,
    RGBA: RGBA,
    FLOAT: FLOAT,
    UNSIGNED_SHORT_5_6_5: UNSIGNED_SHORT_5_6_5,
    UNSIGNED_SHORT_4_4_4_4: UNSIGNED_SHORT_4_4_4_4,
    UNSIGNED_SHORT_5_5_5_1: UNSIGNED_SHORT_5_5_5_1,
    PACK_ALIGNMENT: PACK_ALIGNMENT,
    UNPACK_ALIGNMENT: UNPACK_ALIGNMENT,
    UNPACK_FLIP_Y_WEBGL: UNPACK_FLIP_Y_WEBGL,
    UNPACK_PREMULTIPLY_ALPHA_WEBGL: UNPACK_PREMULTIPLY_ALPHA_WEBGL,
    UNPACK_COLORSPACE_CONVERSION_WEBGL: UNPACK_COLORSPACE_CONVERSION_WEBGL,
    TTEXTURE_2D: TTEXTURE_2D,
    TTEXTURE_CUBE_MAP: TTEXTURE_CUBE_MAP,
    TEXTURE_MIN_FILTER: TEXTURE_MIN_FILTER,
    TEXTURE_MAG_FILTER: TEXTURE_MAG_FILTER,
    TEXTURE_WRAP_S: TEXTURE_WRAP_S,
    TEXTURE_WRAP_T: TEXTURE_WRAP_T,
    WebGLTex: WebGLTex,
    NEAREST: NEAREST,
    LINEAR: LINEAR,
    MIPMAP: MIPMAP,
    texture2DFor: texture2DFor,
    withTexture2D: withTexture2D,
    activeTexture: activeTexture,
    bindTexture: bindTexture,
    unbindTexture: unbindTexture,
    handleLoad2D: handleLoad2D,
    handleSubLoad2D: handleSubLoad2D,
    createTexture: createTexture,
    newTexture: newTexture,
    newTextureInit: newTextureInit,
    targetTypeToConst: targetTypeToConst
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.WebGL":38,"../Data.ArrayBuffer.Types":81,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Function":125,"../Data.Int.Bits":144,"../Data.Ord":178,"../Data.Semiring":187,"../Data.TypedArray":215,"../Data.Unit":220,"../Extensions":227,"../Graphics.Canvas":231,"../Graphics.WebGL":233,"../Graphics.WebGLRaw":238,"../Prelude":263,"./foreign":239}],241:[function(require,module,exports){
"use strict";

// -----------------------------------------------------------------------------
// OBJ
// -----------------------------------------------------------------------------

var OBJFile = require('obj-file-parser');

exports.readWFObj = function(objString) {
    var objFile = new OBJFile(objString);
    var output = objFile.parse();
    console.log(output)
    return output;
}

function main() {
    var canvas = document.getElementById("glcanvas");

    var resize = function() {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    }

    resize();
    window.onresize = resize;
}

main();

},{"obj-file-parser":1}],242:[function(require,module,exports){
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Console = require("../Control.Monad.Eff.Console");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Random = require("../Control.Monad.Eff.Random");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM = require("../DOM");
var Data_Array = require("../Data.Array");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty");
var Data_Char = require("../Data.Char");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Foldable = require("../Data.Foldable");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Index = require("../Data.Foreign.Index");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Int = require("../Data.Int");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Data_Matrix = require("../Data.Matrix");
var Data_Matrix4 = require("../Data.Matrix4");
var Data_Maybe = require("../Data.Maybe");
var Data_Midi = require("../Data.Midi");
var Data_Midi_WebMidi = require("../Data.Midi.WebMidi");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Data_Symbol = require("../Data.Symbol");
var Data_Tuple = require("../Data.Tuple");
var Data_Tuple_Nested = require("../Data.Tuple.Nested");
var Data_TypeNat = require("../Data.TypeNat");
var Data_Vector = require("../Data.Vector");
var Data_Vector2 = require("../Data.Vector2");
var Data_Vector3 = require("../Data.Vector3");
var Extensions = require("../Extensions");
var Graphics_WebGL = require("../Graphics.WebGL");
var Graphics_WebGLAll = require("../Graphics.WebGLAll");
var $$Math = require("../Math");
var Network_HTTP_Affjax = require("../Network.HTTP.Affjax");
var Network_HTTP_Affjax_Response = require("../Network.HTTP.Affjax.Response");
var Partial_Unsafe = require("../Partial.Unsafe");
var Pathy = require("../Pathy");
var Pathy_Name = require("../Pathy.Name");
var Pathy_Parser = require("../Pathy.Parser");
var Pathy_Path = require("../Pathy.Path");
var Pathy_Phantom = require("../Pathy.Phantom");
var Pathy_Printer = require("../Pathy.Printer");
var Pathy_Sandboxed = require("../Pathy.Sandboxed");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var Signal_Channel = require("../Signal.Channel");
var Signal_DOM = require("../Signal.DOM");
var Signal_Time = require("../Signal.Time");
var Type_Data_Ordering = require("../Type.Data.Ordering");
var Type_Data_Symbol = require("../Type.Data.Symbol");
var Triangle = (function () {
    function Triangle(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Triangle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Triangle(value0, value1, value2);
            };
        };
    };
    return Triangle;
})();
var State = function (x) {
    return x;
};
var Scene = function (x) {
    return x;
};
var ScaleFn = (function () {
    function ScaleFn(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ScaleFn.create = function (value0) {
        return function (value1) {
            return new ScaleFn(value0, value1);
        };
    };
    return ScaleFn;
})();
var CharKey = (function () {
    function CharKey(value0) {
        this.value0 = value0;
    };
    CharKey.create = function (value0) {
        return new CharKey(value0);
    };
    return CharKey;
})();
var Input = (function () {
    function Input(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Input.create = function (value0) {
        return function (value1) {
            return new Input(value0, value1);
        };
    };
    return Input;
})();
var SigTime = (function () {
    function SigTime(value0) {
        this.value0 = value0;
    };
    SigTime.create = function (value0) {
        return new SigTime(value0);
    };
    return SigTime;
})();
var SigSize = (function () {
    function SigSize(value0) {
        this.value0 = value0;
    };
    SigSize.create = function (value0) {
        return new SigSize(value0);
    };
    return SigSize;
})();
var SigKey = (function () {
    function SigKey(value0) {
        this.value0 = value0;
    };
    SigKey.create = function (value0) {
        return new SigKey(value0);
    };
    return SigKey;
})();
var SigMouse = (function () {
    function SigMouse(value0) {
        this.value0 = value0;
    };
    SigMouse.create = function (value0) {
        return new SigMouse(value0);
    };
    return SigMouse;
})();
var SigMidi = (function () {
    function SigMidi() {

    };
    SigMidi.value = new SigMidi();
    return SigMidi;
})();
var SigInput = (function () {
    function SigInput(value0) {
        this.value0 = value0;
    };
    SigInput.create = function (value0) {
        return new SigInput(value0);
    };
    return SigInput;
})();

//------------------------------------------------------------------------------
// TYPES
//------------------------------------------------------------------------------
var Config = function (x) {
    return x;
};

//------------------------------------------------------------------------------
// CLASS
//------------------------------------------------------------------------------
var Morph = function (morph) {
    this.morph = morph;
};

//------------------------------------------------------------------------------
// SHORTHANDS
//------------------------------------------------------------------------------
var zero = 0.0;

//------------------------------------------------------------------------------
// SHADERS
//------------------------------------------------------------------------------
var vertexShader = "\x0a    attribute vec3 aVertexPosition;\x0a\x0a    uniform mat4 uMVMatrix;\x0a    uniform mat4 uPMatrix;\x0a\x0a    void main(void) {\x0a      gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\x0a    }\x0a  ";
var vec2to3 = function (vec) {
    return function (z) {
        return Data_Vector3.vec3(Data_Vector2.get2X(vec))(Data_Vector2.get2Y(vec))(z);
    };
};
var update = function (sig) {
    return function (v) {
        if (sig instanceof SigTime) {
            return State((function () {
                var $74 = {};
                for (var $75 in v) {
                    if ({}.hasOwnProperty.call(v, $75)) {
                        $74[$75] = v[$75];
                    };
                };
                $74.time = sig.value0;
                return $74;
            })());
        };
        if (sig instanceof SigSize) {
            return State((function () {
                var $78 = {};
                for (var $79 in v) {
                    if ({}.hasOwnProperty.call(v, $79)) {
                        $78[$79] = v[$79];
                    };
                };
                $78.size = Data_Vector2.vec2(sig.value0.w)(sig.value0.h);
                return $78;
            })());
        };
        if (sig instanceof SigInput && sig.value0.value0 === "1") {
            return State((function () {
                var $87 = {};
                for (var $88 in v) {
                    if ({}.hasOwnProperty.call(v, $88)) {
                        $87[$88] = v[$88];
                    };
                };
                $87.pcts = (function () {
                    var $84 = {};
                    for (var $85 in v.pcts) {
                        if ({}.hasOwnProperty.call(v.pcts, $85)) {
                            $84[$85] = v["pcts"][$85];
                        };
                    };
                    $84.n1 = sig.value0.value1;
                    return $84;
                })();
                return $87;
            })());
        };
        if (sig instanceof SigInput && sig.value0.value0 === "2") {
            return State((function () {
                var $96 = {};
                for (var $97 in v) {
                    if ({}.hasOwnProperty.call(v, $97)) {
                        $96[$97] = v[$97];
                    };
                };
                $96.pcts = (function () {
                    var $93 = {};
                    for (var $94 in v.pcts) {
                        if ({}.hasOwnProperty.call(v.pcts, $94)) {
                            $93[$94] = v["pcts"][$94];
                        };
                    };
                    $93.n2 = sig.value0.value1;
                    return $93;
                })();
                return $96;
            })());
        };
        return v;
    };
};
var two = 2.0;
var toFunction = function (v) {
    return v.value1;
};

//------------------------------------------------------------------------------
// MORPH CHAIN
//------------------------------------------------------------------------------
var semigroupScaleFn = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        var f = function (t) {
            var $107 = t < v.value0;
            if ($107) {
                return v.value1(t);
            };
            return v1.value1(t - v.value0);
        };
        return new ScaleFn(v.value0 + v1.value0, f);
    };
});
var section = function (stride) {
    return function (offset) {
        return function (xs) {
            var go = function ($copy_acc) {
                return function ($copy_xs1) {
                    var $tco_var_acc = $copy_acc;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(acc, xs1) {
                        var ys = Data_Array.take(stride)(xs1);
                        var $112 = Data_Array.length(ys) === stride;
                        if ($112) {
                            $tco_var_acc = Data_Array.snoc(acc)(ys);
                            $copy_xs1 = Data_Array.drop(offset)(xs1);
                            return;
                        };
                        $tco_done = true;
                        return acc;
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_acc, $copy_xs1);
                    };
                    return $tco_result;
                };
            };
            return go([  ])(xs);
        };
    };
};
var section2 = function (offset) {
    return function (xs) {
        return Data_Functor.map(Data_Functor.functorArray)(function (v) {
            var __unused = function (dictPartial1) {
                return function ($dollar55) {
                    return $dollar55;
                };
            };
            return __unused()((function () {
                if (v.length === 2) {
                    return new Data_Tuple.Tuple(v[0], v[1]);
                };
                throw new Error("Failed pattern match at Main line 487, column 25 - line 487, column 42: " + [ v.constructor.name ]);
            })());
        })(section(2)(offset)(xs));
    };
};

//------------------------------------------------------------------------------
// MAIN
//------------------------------------------------------------------------------
var runAff$prime = function (aff) {
    return function (errCb) {
        return function (okCb) {
            return Control_Monad_Aff.runAff(errCb)(okCb)(aff);
        };
    };
};
var renderInit = function (v) {
    return function __do() {
        Graphics_WebGL.clearColor(0.0)(0.5)(0.0)(1.0)();
        return Graphics_WebGL.enable(Graphics_WebGL.DEPTH_TEST.value)();
    };
};
var rangeChar = function (c1) {
    return function (c2) {
        return Data_Functor.map(Data_Functor.functorArray)(Data_Char.fromCharCode)(Data_Array.range(Data_Char.toCharCode(c1))(Data_Char.toCharCode(c2)));
    };
};
var randomVec3n = Control_Apply.apply(Control_Monad_Eff.applyEff)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Vector3.vec3)(Control_Monad_Eff_Random.random))(Control_Monad_Eff_Random.random))(Control_Monad_Eff_Random.random);
var randomVec2n = Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Vector2.vec2)(Control_Monad_Eff_Random.random))(Control_Monad_Eff_Random.random);
var printPath$prime = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return function (path) {
            return Pathy_Printer.unsafePrintPath(dictIsRelOrAbs)(dictIsDirOrFile)(Pathy_Printer.posixPrinter)(path);
        };
    };
};
var parseVertex = function (val) {
    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("x")(val))(Data_Foreign.readNumber))(function (v) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("y")(val))(Data_Foreign.readNumber))(function (v1) {
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("z")(val))(Data_Foreign.readNumber))(function (v2) {
                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Vector3.vec3(v)(v1)(v2));
            });
        });
    });
};
var parseIndexFile = function (str) {
    return Data_Maybe.maybe(new Data_Either.Left("Invalid index file"))(Data_Either.Right.create)(Extensions.mapM(Data_Maybe.monadMaybe)(Pathy_Parser.parseRelFile(Pathy_Parser.posixParser))(Data_Array.filter(Data_Eq.notEq(Data_Eq.eqString)(""))(Data_String.split("\x0a")(str))));
};
var onePos = 1.0;
var spacePos = Data_Vector2.vec2(zero)(onePos);
var oneNeg = -1.0;
var spaceNegPos = Data_Vector2.vec2(oneNeg)(onePos);
var one = onePos;
var morphNumber = new Morph(function (pct) {
    return function (x) {
        return function (y) {
            return x + pct * (y - x);
        };
    };
});
var morph = function (dict) {
    return dict.morph;
};
var morph$prime = function (dictMorph) {
    return function (x) {
        return function (y) {
            return function (t) {
                return morph(dictMorph)(t)(x)(y);
            };
        };
    };
};
var morphArray = function (dictMorph) {
    return new Morph(function (pct) {
        return function (xs) {
            return function (ys) {
                return Data_Array.zipWith(morph(dictMorph)(pct))(xs)(ys);
            };
        };
    });
};
var morphVec3 = function (dictMorph) {
    return new Morph(function (pct) {
        return function (x) {
            return function (y) {
                return Control_Apply.apply(Data_Vector.applyVec)(Data_Functor.map(Data_Vector.functorVec)(morph(dictMorph)(pct))(x))(y);
            };
        };
    });
};
var morphTriangle = new Morph(function (pct) {
    return function (v) {
        return function (v1) {
            var f = morph(morphVec3(morphNumber))(pct);
            return new Triangle(f(v.value0)(v1.value0), f(v.value1)(v1.value1), f(v.value2)(v1.value2));
        };
    };
});
var morphScene = new Morph(function (pct) {
    return function (v) {
        return function (v1) {
            return Scene(morph(morphArray(morphTriangle))(pct)(v)(v1));
        };
    };
});

//------------------------------------------------------------------------------
// SELECTORS
//------------------------------------------------------------------------------
var selectScaleFn = function (v) {
    return function (state) {
        var randomScene = Scene(Data_Functor.map(Data_Functor.functorArray)(function (v1) {
            return new Triangle(v1, v1, v1);
        })(v.randomField));
        var n = Data_Array_NonEmpty.length(v.scenes) * 2 | 0;
        var f = function (scene) {
            return Data_Semigroup.append(Data_Array_NonEmpty.semigroupNonEmptyArray)(Data_Array_NonEmpty.singleton(new ScaleFn(1.0, morph$prime(morphScene)(randomScene)(scene))))(Data_Array_NonEmpty.singleton(new ScaleFn(1.0, morph$prime(morphScene)(scene)(randomScene))));
        };
        return Data_Semigroup_Foldable.fold1(Data_Array_NonEmpty.foldable1NonEmptyArray)(semigroupScaleFn)(Data_Array_NonEmpty.concatMap(f)(v.scenes));
    };
};
var merge3 = function (s1) {
    return function (s2) {
        return function (s3) {
            return Signal.merge(s3)(Signal.merge(s1)(s2));
        };
    };
};
var merge4 = function (s1) {
    return function (s2) {
        return function (s3) {
            return function (s4) {
                return Signal.merge(s4)(merge3(s1)(s2)(s3));
            };
        };
    };
};
var mapWithPct = function (f) {
    return function (xs) {
        var n = Data_Int.toNumber(Data_Array.length(xs));
        return Data_Array.mapWithIndex(function (i) {
            return function (x) {
                return f(Data_Int.toNumber(i) / n)(x);
            };
        })(xs);
    };
};
var lookup = function (xs) {
    return function (indices) {
        var hunde = new Data_Tuple.Tuple(xs, indices);
        return Extensions.mapM(Data_Maybe.monadMaybe)(Data_Array.index(xs))(indices);
    };
};
var parseFace = function (verticesLookup) {
    return function (val) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("vertices")(val))(Data_Foreign.readArray))(Extensions.mapM(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(function (v) {
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("vertexIndex")(v))(Data_Foreign.readInt);
        })))(function (v) {
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Maybe["maybe'"](function (v1) {
                return Extensions.fail("lookup error");
            })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(lookup(verticesLookup)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                return x - 1 | 0;
            })(v))))(function (v1) {
                return Data_Maybe["maybe'"](function (_d) {
                    return Extensions.fail("triangle error");
                })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(v1)(0))(function (v2) {
                    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(v1)(1))(function (v3) {
                        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(v1)(2))(function (v4) {
                            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(v1)(3))(function (v5) {
                                return new Data_Maybe.Just([ new Triangle(v2, v3, v4), new Triangle(v2, v4, v5) ]);
                            });
                        });
                    });
                }));
            });
        });
    };
};
var parseModel = function (verticesLookup) {
    return function (val) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("faces")(val))(Data_Foreign.readArray))(Extensions.mapM(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(parseFace(verticesLookup))))(function (v) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.concat(v));
        });
    };
};
var parse = function (val) {
    var parseVertices = function (val1) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("vertices")(val1))(Data_Foreign.readArray))(Extensions.mapM(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(parseVertex));
    };
    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("models")(val))(Data_Foreign.readArray))(Extensions.mapM(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(parseVertices)))(Data_Array.concat))(function (v) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("models")(val))(Data_Foreign.readArray))(Extensions.mapM(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(parseModel(v))))(function (v1) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.concat(v1));
        });
    });
};
var keyToInt = function (key) {
    return Data_Char.toCharCode(key.value0);
};
var keysPressed = (function () {
    var keys = Data_Functor.map(Data_Functor.functorArray)(CharKey.create)(rangeChar("0")("9"));
    var f = function (key) {
        return Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Signal_DOM.keyPressed(keyToInt(key)))(Data_Functor.map(Signal.functorSignal)(Data_Function["const"](key)));
    };
    return Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Extensions.mapM(Control_Monad_Eff.monadEff)(f)(keys))(function ($226) {
        return Data_Maybe.fromJust()(Signal.mergeMany(Data_Functor.functorArray)(Data_Foldable.foldableArray)($226));
    });
})();
var keyboardMouseInput = (function () {
    var update1 = function (x) {
        return function (m) {
            var v = new Data_Tuple.Tuple(x, m);
            if (v.value0 instanceof SigKey) {
                var $147 = {};
                for (var $148 in m) {
                    if ({}.hasOwnProperty.call(m, $148)) {
                        $147[$148] = m[$148];
                    };
                };
                $147.lastKey = v.value0.value0;
                $147.value = Data_Maybe.Nothing.value;
                return $147;
            };
            if (v.value0 instanceof SigMouse && v.value1.lastKey.value0 === "1") {
                var $153 = {};
                for (var $154 in m) {
                    if ({}.hasOwnProperty.call(m, $154)) {
                        $153[$154] = m[$154];
                    };
                };
                $153.value = Data_Maybe.Just.create(Data_Int.toNumber(v.value0.value0.x));
                return $153;
            };
            if (v.value0 instanceof SigMouse && v.value1.lastKey.value0 === "2") {
                var $162 = {};
                for (var $163 in m) {
                    if ({}.hasOwnProperty.call(m, $163)) {
                        $162[$163] = m[$163];
                    };
                };
                $162.value = Data_Maybe.Just.create(Data_Int.toNumber(v.value0.value0.x));
                return $162;
            };
            return m;
        };
    };
    var init = {
        lastKey: new CharKey("0"),
        value: Data_Maybe.Nothing.value
    };
    return function __do() {
        var v = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(keysPressed)(Data_Functor.map(Signal.functorSignal)(SigKey.create))();
        var v1 = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Signal_DOM.mousePos)(Data_Functor.map(Signal.functorSignal)(SigMouse.create))();
        var v2 = Signal_DOM.windowDimensions();
        return Signal.map2(function (v3) {
            return function (v4) {
                return new Input(v4.value0, v4.value1 / Data_Int.toNumber(v3.w));
            };
        })(v2)(Signal.filterMap(function (v3) {
            return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Input.create)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v3.lastKey.value0)))(v3.value);
        })(new Input("0", 0.0))(Signal.foldp(update1)(init)(Signal.merge(v)(v1))));
    };
})();
var intToKey = function (n) {
    return new CharKey(Data_Char.fromCharCode(n));
};

//------------------------------------------------------------------------------
// UPDATE
//------------------------------------------------------------------------------
var initState = {
    pcts: {
        n1: 0.0,
        n2: 0.0
    },
    time: 0.0,
    size: Data_Vector2.vec2(0)(0)
};
var getScene = function (path) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.get(Network_HTTP_Affjax_Response.responsableString)(printPath$prime(Pathy_Phantom.relIsRelOrAbs)(Pathy_Phantom.isDirOrFileFile)(Pathy_Sandboxed.sandboxAny(path))))(function (v) {
        var v1 = Control_Monad_Except.runExcept(parse($foreign.readWFObj(v.response)));
        if (v1 instanceof Data_Either.Left) {
            return Extensions.fail(Data_Show.show(Data_Foreign.showForeignError)(Data_List_NonEmpty.head(v1.value0)));
        };
        if (v1 instanceof Data_Either.Right) {
            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1.value0);
        };
        throw new Error("Failed pattern match at Main line 383, column 3 - line 385, column 32: " + [ v1.constructor.name ]);
    });
};
var getIndex = function (folder) {
    var indexFile = Pathy_Path.file(Pathy_Name.isNameNESymbol(new Data_Symbol.IsSymbol(function () {
        return "index.txt";
    }))(Type_Data_Symbol.equalsSymbol(Type_Data_Symbol.CompareSymbol)(Type_Data_Ordering.equalsEQGT)))(Data_Symbol.SProxy.value);
    var path = Pathy_Path.appendPath(Pathy_Phantom.relIsRelOrAbs)(folder)(indexFile);
    return Data_Functor.mapFlipped(Control_Monad_Aff.functorAff)(Control_Bind.bind(Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.get(Network_HTTP_Affjax_Response.responsableString)(printPath$prime(Pathy_Phantom.relIsRelOrAbs)(Pathy_Phantom.isDirOrFileFile)(Pathy_Sandboxed.sandboxAny(path))))(function ($227) {
        return Data_Either.either(Extensions.fail)(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(parseIndexFile((function (v) {
            return v.response;
        })($227)));
    }))(Data_Functor.map(Data_Functor.functorArray)(Pathy_Path.appendPath(Pathy_Phantom.relIsRelOrAbs)(folder)));
};

//------------------------------------------------------------------------------
// DATA
//------------------------------------------------------------------------------
var getScenes = (function () {
    var objExt = Data_String_NonEmpty.unsafeFromString()("obj");
    var predFn = function ($228) {
        return (function ($229) {
            return Data_Maybe.maybe(false)(Control_Category.id(Control_Category.categoryFn))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Eq.eq(Data_String_NonEmpty.eqNonEmptyString)(objExt))($229));
        })(Pathy_Name.extension(Pathy_Path.fileName($228)));
    };
    var indexDir = Pathy_Path.dir(Pathy_Name.isNameNESymbol(new Data_Symbol.IsSymbol(function () {
        return "data";
    }))(Type_Data_Symbol.equalsSymbol(Type_Data_Symbol.CompareSymbol)(Type_Data_Ordering.equalsEQGT)))(Data_Symbol.SProxy.value);
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Functor.mapFlipped(Control_Monad_Aff.functorAff)(getIndex(indexDir))(Data_Array.filter(predFn)))(function (v) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Extensions.mapM(Control_Monad_Aff.monadAff)(getScene)(v))(function ($230) {
            return Data_Maybe["maybe'"](function (v1) {
                return Extensions.fail("no scenes");
            })(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(Data_Array_NonEmpty.fromArray($230));
        });
    });
})();
var get2 = function (vec) {
    return new Data_Tuple.Tuple(Data_Vector2.get2X(vec), Data_Vector2.get2Y(vec));
};

//------------------------------------------------------------------------------
// UTIL
//------------------------------------------------------------------------------
var reMap = function (pair1) {
    return function (pair2) {
        return function (value) {
            var sub$prime = Data_Tuple.uncurry(Data_Function.flip(Data_Ring.sub(Data_Ring.ringNumber)));
            var pivot2 = Data_Vector2.get2X(pair2);
            var pivot1 = Data_Vector2.get2X(pair1);
            var dist2 = sub$prime(get2(pair2));
            var dist1 = sub$prime(get2(pair1));
            var pct = (value - pivot1) / dist1;
            return pivot2 + pct * dist2;
        };
    };
};
var midiInput = (function () {
    var reMap$prime = function (n) {
        return reMap(Data_Vector2.vec2(0.0)(127.0))(spacePos)(Data_Int.toNumber(n));
    };
    var f = function (v) {
        if (v.event instanceof Data_Maybe.Just && v.event.value0 instanceof Data_Midi.ControlChange) {
            return Data_Maybe.Just.create(new Input("2", reMap$prime(v.event.value0.value2)));
        };
        return Data_Maybe.Nothing.value;
    };
    return function __do() {
        var v = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Data_Midi_WebMidi.createEventChannel)(Signal_Channel.subscribe)();
        return Signal.filterMap(f)(new Input("0", 0.5))(v);
    };
})();

//------------------------------------------------------------------------------
// CONFIG
//------------------------------------------------------------------------------
//mkConfig :: NonEmptyArray Scene -> Config
var mkConfig = function (scenes) {
    var randVec = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(randomVec2n)(function ($231) {
        return (function (v2) {
            return vec2to3(v2)(18.0);
        })(Data_Functor.map(Data_Vector.functorVec)(reMap(spacePos)(spaceNegPos))($231));
    });
    var n = Data_Foldable.foldr(Data_Array_NonEmpty.foldableNonEmptyArray)(Data_Ord.max(Data_Ord.ordInt))(0)(Data_Functor.map(Data_Array_NonEmpty.functorNonEmptyArray)(function (v) {
        return Data_Array.length(v);
    })(scenes));
    return function __do() {
        var v = Extensions.mapM(Control_Monad_Eff.monadEff)(Data_Function["const"](randVec))(Data_Array.range(0)(n))();
        return {
            randomField: v,
            scenes: scenes
        };
    };
};
var render = function (v) {
    return function (v1) {
        return function (bindings) {
            var v2 = selectScaleFn(v)(v1);
            var loopTime = 20.0 * 1000.0;
            var t = reMap(spaceNegPos)(spacePos)($$Math.sin((v1.time / loopTime) * two * $$Math.pi));
            var t$prime$prime = $$Math.remainder(v1.time / loopTime)(1.0);
            var xs = (function () {
                var v3 = v2.value1(t$prime$prime * v2.value0);
                return Control_Bind.bind(Control_Bind.bindArray)(v3)(function (v4) {
                    return Data_Array.concatMap(Data_Vector.toArray)([ v4.value0, v4.value1, v4.value2 ]);
                });
            })();
            var getPct = function (offsetPct) {
                return reMap(spacePos)(spaceNegPos)($$Math.sin((v1.time / loopTime) * two * $$Math.pi + offsetPct * loopTime));
            };
            var v3 = get2(v1.size);
            var pMatrix = Data_Matrix4.makePerspective(45.0)(Data_Int.toNumber(v3.value0) / Data_Int.toNumber(v3.value1))(0.1)(100.0);
            var mvMatrix = Data_Matrix4.translate(Data_Vector3.vec3(zero)(0.0)(-20.0))(Data_Matrix4.identity);
            return function __do() {
                Graphics_WebGL.clear([ Graphics_WebGL.COLOR_BUFFER_BIT.value, Graphics_WebGL.DEPTH_BUFFER_BIT.value ])();
                Graphics_WebGL.setUniformFloats(bindings.uPMatrix)(Data_Matrix.toArray(pMatrix))();
                Graphics_WebGL.setUniformFloats(bindings.uMVMatrix)(Data_Matrix.toArray(mvMatrix))();
                var v4 = get2(v1.size);
                Graphics_WebGL.viewport(0)(0)(v4.value0)(v4.value1)();
                Control_Monad_Eff_Console.log(Data_Show.show(Data_Show.showArray(Data_Show.showNumber))([ v1.pcts.n1, v1.pcts.n2 ]))();
                var v5 = Graphics_WebGL.makeBufferFloat(xs)();
                return Graphics_WebGL.drawArr(Graphics_WebGL.TRIANGLES.value)(v5)(bindings.aVertexPosition)();
            };
        };
    };
};

//------------------------------------------------------------------------------
// FRP
//------------------------------------------------------------------------------
var mainFrp = function (config) {
    return function (bindings) {
        return function __do() {
            var v = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Signal_DOM.animationFrame)(Data_Functor.map(Signal.functorSignal)(SigTime.create))();
            var v1 = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Signal_DOM.windowDimensions)(Data_Functor.map(Signal.functorSignal)(SigSize.create))();
            var v2 = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(keyboardMouseInput)(Data_Functor.map(Signal.functorSignal)(SigInput.create))();
            var v3 = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(midiInput)(Data_Functor.map(Signal.functorSignal)(SigInput.create))();
            var sigState = Signal.foldp(update)(initState)(merge4(v)(v1)(v2)(v3));
            return Signal.runSignal(Signal.flippedMap(Signal.functorSignal)(sigState)(function (state) {
                return render(config)(state)(bindings);
            }))();
        };
    };
};
var fragmentShader = "\x0a    precision mediump float;\x0a\x0a    void main(void) {\x0a      gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\x0a    }\x0a  ";
var shaders = new Graphics_WebGL.Shaders(fragmentShader, vertexShader);

// main :: forall a.
//   Eff
//     ( ajax :: AJAX
//     , console :: CONSOLE
//     , clock :: CLOCK
//     , random :: RANDOM
//     | a
//     )
//     (Canceler
//        ( ajax :: AJAX
//        , console :: CONSOLE
//        , clock :: CLOCK
//        , random :: RANDOM
//        | a
//        )
//     )
var main = runAff$prime(getScenes)(function ($232) {
    return Control_Monad_Eff_Console.log(Data_Show.show(Control_Monad_Eff_Exception.showError)($232));
})(function (scenes) {
    return Graphics_WebGL.runWebGL("glcanvas")(Control_Monad_Eff_Console.log)(function (context) {
        return Graphics_WebGL.withShaders(shaders)(Control_Monad_Eff_Console.log)(function (bindings) {
            return function __do() {
                var v = mkConfig(scenes)();
                renderInit(v)();
                return mainFrp(v)(bindings)();
            };
        });
    });
});
module.exports = {
    morph: morph,
    vertexShader: vertexShader,
    fragmentShader: fragmentShader,
    shaders: shaders,
    "runAff'": runAff$prime,
    main: main,
    mainFrp: mainFrp,
    keysPressed: keysPressed,
    rangeChar: rangeChar,
    merge3: merge3,
    merge4: merge4,
    keyboardMouseInput: keyboardMouseInput,
    midiInput: midiInput,
    keyToInt: keyToInt,
    intToKey: intToKey,
    mkConfig: mkConfig,
    randomVec2n: randomVec2n,
    randomVec3n: randomVec3n,
    vec2to3: vec2to3,
    toFunction: toFunction,
    "morph'": morph$prime,
    initState: initState,
    update: update,
    selectScaleFn: selectScaleFn,
    render: render,
    mapWithPct: mapWithPct,
    renderInit: renderInit,
    get2: get2,
    getScenes: getScenes,
    getIndex: getIndex,
    "printPath'": printPath$prime,
    parseIndexFile: parseIndexFile,
    getScene: getScene,
    parse: parse,
    parseModel: parseModel,
    parseVertex: parseVertex,
    parseFace: parseFace,
    lookup: lookup,
    zero: zero,
    onePos: onePos,
    one: one,
    two: two,
    oneNeg: oneNeg,
    spaceNegPos: spaceNegPos,
    spacePos: spacePos,
    reMap: reMap,
    section: section,
    section2: section2,
    Morph: Morph,
    Config: Config,
    State: State,
    Scene: Scene,
    Triangle: Triangle,
    SigTime: SigTime,
    SigSize: SigSize,
    SigKey: SigKey,
    SigMouse: SigMouse,
    SigMidi: SigMidi,
    SigInput: SigInput,
    Input: Input,
    ScaleFn: ScaleFn,
    CharKey: CharKey,
    semigroupScaleFn: semigroupScaleFn,
    morphNumber: morphNumber,
    morphVec3: morphVec3,
    morphTriangle: morphTriangle,
    morphArray: morphArray,
    morphScene: morphScene,
    readWFObj: $foreign.readWFObj
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Monad.Aff":20,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Console":25,"../Control.Monad.Eff.Exception":28,"../Control.Monad.Eff.Random":30,"../Control.Monad.Except":43,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../DOM":68,"../Data.Array":80,"../Data.Array.NonEmpty":74,"../Data.Char":97,"../Data.Either":108,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Foldable":116,"../Data.Foreign":121,"../Data.Foreign.Index":119,"../Data.Function":125,"../Data.Functor":130,"../Data.Identity":142,"../Data.Int":146,"../Data.List.NonEmpty":149,"../Data.Matrix":152,"../Data.Matrix4":153,"../Data.Maybe":156,"../Data.Midi":162,"../Data.Midi.WebMidi":161,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Semiring":187,"../Data.Show":189,"../Data.String":201,"../Data.String.NonEmpty":194,"../Data.Symbol":202,"../Data.Tuple":212,"../Data.Tuple.Nested":211,"../Data.TypeNat":213,"../Data.Vector":221,"../Data.Vector2":222,"../Data.Vector3":223,"../Extensions":227,"../Graphics.WebGL":233,"../Graphics.WebGLAll":234,"../Math":244,"../Network.HTTP.Affjax":248,"../Network.HTTP.Affjax.Response":246,"../Partial.Unsafe":253,"../Pathy":262,"../Pathy.Name":256,"../Pathy.Parser":257,"../Pathy.Path":258,"../Pathy.Phantom":259,"../Pathy.Printer":260,"../Pathy.Sandboxed":261,"../Prelude":263,"../Signal":271,"../Signal.Channel":265,"../Signal.DOM":267,"../Signal.Time":269,"../Type.Data.Ordering":276,"../Type.Data.Symbol":277,"./foreign":241}],243:[function(require,module,exports){
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.trunc = Math.trunc || function (n) {
  return n < 0 ? Math.ceil(n) : Math.floor(n);
};

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports.remainder = function (n) {
  return function (m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.tau = 2 * Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],244:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    abs: $foreign.abs,
    acos: $foreign.acos,
    asin: $foreign.asin,
    atan: $foreign.atan,
    atan2: $foreign.atan2,
    ceil: $foreign.ceil,
    cos: $foreign.cos,
    exp: $foreign.exp,
    floor: $foreign.floor,
    log: $foreign.log,
    max: $foreign.max,
    min: $foreign.min,
    pow: $foreign.pow,
    round: $foreign.round,
    sin: $foreign.sin,
    sqrt: $foreign.sqrt,
    tan: $foreign.tan,
    trunc: $foreign.trunc,
    remainder: $foreign.remainder,
    e: $foreign.e,
    ln2: $foreign.ln2,
    ln10: $foreign.ln10,
    log2e: $foreign.log2e,
    log10e: $foreign.log10e,
    pi: $foreign.pi,
    tau: $foreign.tau,
    sqrt1_2: $foreign.sqrt1_2,
    sqrt2: $foreign.sqrt2
};

},{"./foreign":243}],245:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_File_Types = require("../DOM.File.Types");
var DOM_Node_Types = require("../DOM.Node.Types");
var DOM_XHR_Types = require("../DOM.XHR.Types");
var Data_Argonaut_Core = require("../Data.Argonaut.Core");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_FormURLEncoded = require("../Data.FormURLEncoded");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_MediaType_Common = require("../Data.MediaType.Common");
var Data_Show = require("../Data.Show");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Requestable = function (toRequest) {
    this.toRequest = toRequest;
};
var toRequest = function (dict) {
    return dict.toRequest;
};
var requestableJson = new Requestable(function (json) {
    return new Data_Tuple.Tuple(new Data_Maybe.Just(Data_MediaType_Common.applicationJSON), Data_Show.show(Data_Argonaut_Core.showJson)(json));
});
var requestableFormURLEncoded = new Requestable(function (form) {
    return new Data_Tuple.Tuple(new Data_Maybe.Just(Data_MediaType_Common.applicationFormURLEncoded), Data_FormURLEncoded.encode(form));
});
var defaultToRequest = function ($0) {
    return Data_Tuple.Tuple.create(Data_Maybe.Nothing.value)($0);
};
var requestableBlob = new Requestable(defaultToRequest);
var requestableDocument = new Requestable(defaultToRequest);
var requestableFloat32Array = new Requestable(defaultToRequest);
var requestableFloat64Array = new Requestable(defaultToRequest);
var requestableFormData = new Requestable(defaultToRequest);
var requestableInt16Array = new Requestable(defaultToRequest);
var requestableInt32Array = new Requestable(defaultToRequest);
var requestableInt8Array = new Requestable(defaultToRequest);
var requestableRequestContent = new Requestable(defaultToRequest);
var requestableString = new Requestable(defaultToRequest);
var requestableUint16Array = new Requestable(defaultToRequest);
var requestableUint32Array = new Requestable(defaultToRequest);
var requestableUint8Array = new Requestable(defaultToRequest);
var requestableUint8ClampedArray = new Requestable(defaultToRequest);
var requestableUnit = new Requestable(defaultToRequest);
module.exports = {
    Requestable: Requestable,
    toRequest: toRequest,
    requestableRequestContent: requestableRequestContent,
    requestableInt8Array: requestableInt8Array,
    requestableInt16Array: requestableInt16Array,
    requestableInt32Array: requestableInt32Array,
    requestableUint8Array: requestableUint8Array,
    requestableUint16Array: requestableUint16Array,
    requestableUint32Array: requestableUint32Array,
    requestableUint8ClampedArray: requestableUint8ClampedArray,
    requestableFloat32Array: requestableFloat32Array,
    requestableFloat64Array: requestableFloat64Array,
    requestableBlob: requestableBlob,
    requestableDocument: requestableDocument,
    requestableString: requestableString,
    requestableJson: requestableJson,
    requestableFormData: requestableFormData,
    requestableFormURLEncoded: requestableFormURLEncoded,
    requestableUnit: requestableUnit
};

},{"../Control.Semigroupoid":60,"../DOM.File.Types":63,"../DOM.Node.Types":64,"../DOM.XHR.Types":67,"../Data.Argonaut.Core":70,"../Data.ArrayBuffer.Types":81,"../Data.FormURLEncoded":122,"../Data.Maybe":156,"../Data.MediaType":158,"../Data.MediaType.Common":157,"../Data.Show":189,"../Data.Tuple":212,"../Prelude":263,"../Unsafe.Coerce":281}],246:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_File_Types = require("../DOM.File.Types");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Argonaut_Core = require("../Data.Argonaut.Core");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_MediaType_Common = require("../Data.MediaType.Common");
var Data_Show = require("../Data.Show");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ArrayBufferResponse = (function () {
    function ArrayBufferResponse() {

    };
    ArrayBufferResponse.value = new ArrayBufferResponse();
    return ArrayBufferResponse;
})();
var BlobResponse = (function () {
    function BlobResponse() {

    };
    BlobResponse.value = new BlobResponse();
    return BlobResponse;
})();
var DocumentResponse = (function () {
    function DocumentResponse() {

    };
    DocumentResponse.value = new DocumentResponse();
    return DocumentResponse;
})();
var JSONResponse = (function () {
    function JSONResponse() {

    };
    JSONResponse.value = new JSONResponse();
    return JSONResponse;
})();
var StringResponse = (function () {
    function StringResponse() {

    };
    StringResponse.value = new StringResponse();
    return StringResponse;
})();
var Respondable = function (fromResponse, responseType) {
    this.fromResponse = fromResponse;
    this.responseType = responseType;
};
var showResponseType = new Data_Show.Show(function (v) {
    if (v instanceof ArrayBufferResponse) {
        return "ArrayBufferResponse";
    };
    if (v instanceof BlobResponse) {
        return "BlobResponse";
    };
    if (v instanceof DocumentResponse) {
        return "DocumentResponse";
    };
    if (v instanceof JSONResponse) {
        return "JSONResponse";
    };
    if (v instanceof StringResponse) {
        return "StringResponse";
    };
    throw new Error("Failed pattern match at Network.HTTP.Affjax.Response line 41, column 1 - line 41, column 51: " + [ v.constructor.name ]);
});
var responseTypeToString = function (v) {
    if (v instanceof ArrayBufferResponse) {
        return "arraybuffer";
    };
    if (v instanceof BlobResponse) {
        return "blob";
    };
    if (v instanceof DocumentResponse) {
        return "document";
    };
    if (v instanceof JSONResponse) {
        return "text";
    };
    if (v instanceof StringResponse) {
        return "text";
    };
    throw new Error("Failed pattern match at Network.HTTP.Affjax.Response line 48, column 1 - line 48, column 61: " + [ v.constructor.name ]);
};
var responseType = function (dict) {
    return dict.responseType;
};
var responsableUnit = new Respondable(Data_Function["const"](Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit)), new Data_Tuple.Tuple(Data_Maybe.Nothing.value, StringResponse.value));
var responsableString = new Respondable(Data_Foreign.readString, new Data_Tuple.Tuple(Data_Maybe.Nothing.value, StringResponse.value));
var responsableJson = new Respondable(function ($8) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($8);
}, new Data_Tuple.Tuple(new Data_Maybe.Just(Data_MediaType_Common.applicationJSON), JSONResponse.value));
var responsableForeign = new Respondable(function ($9) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($9);
}, new Data_Tuple.Tuple(Data_Maybe.Nothing.value, JSONResponse.value));
var responsableDocument = new Respondable(Data_Foreign.unsafeReadTagged("Document"), new Data_Tuple.Tuple(Data_Maybe.Nothing.value, DocumentResponse.value));
var responsableBlob = new Respondable(Data_Foreign.unsafeReadTagged("Blob"), new Data_Tuple.Tuple(Data_Maybe.Nothing.value, BlobResponse.value));
var responsableArrayBuffer = new Respondable(Data_Foreign.unsafeReadTagged("ArrayBuffer"), new Data_Tuple.Tuple(Data_Maybe.Nothing.value, ArrayBufferResponse.value));
var fromResponse = function (dict) {
    return dict.fromResponse;
};
var eqResponseType = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof ArrayBufferResponse && v1 instanceof ArrayBufferResponse) {
            return true;
        };
        if (v instanceof BlobResponse && v1 instanceof BlobResponse) {
            return true;
        };
        if (v instanceof DocumentResponse && v1 instanceof DocumentResponse) {
            return true;
        };
        if (v instanceof JSONResponse && v1 instanceof JSONResponse) {
            return true;
        };
        if (v instanceof StringResponse && v1 instanceof StringResponse) {
            return true;
        };
        return false;
    };
});
module.exports = {
    ArrayBufferResponse: ArrayBufferResponse,
    BlobResponse: BlobResponse,
    DocumentResponse: DocumentResponse,
    JSONResponse: JSONResponse,
    StringResponse: StringResponse,
    responseTypeToString: responseTypeToString,
    Respondable: Respondable,
    responseType: responseType,
    fromResponse: fromResponse,
    eqResponseType: eqResponseType,
    showResponseType: showResponseType,
    responsableBlob: responsableBlob,
    responsableDocument: responsableDocument,
    responsableForeign: responsableForeign,
    responsableString: responsableString,
    responsableUnit: responsableUnit,
    responsableArrayBuffer: responsableArrayBuffer,
    responsableJson: responsableJson
};

},{"../Control.Applicative":4,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../DOM.File.Types":63,"../DOM.Node.Types":64,"../Data.Argonaut.Core":70,"../Data.ArrayBuffer.Types":81,"../Data.Eq":111,"../Data.Foreign":121,"../Data.Function":125,"../Data.Identity":142,"../Data.Maybe":156,"../Data.MediaType":158,"../Data.MediaType.Common":157,"../Data.Show":189,"../Data.Tuple":212,"../Data.Unit":220,"../Prelude":263,"../Unsafe.Coerce":281}],247:[function(require,module,exports){
(function (process){
/* global exports */
/* global XMLHttpRequest */
/* global module */
/* global process */
"use strict";

// module Network.HTTP.Affjax

// jshint maxparams: 5
exports._ajax = function (mkHeader, options, canceler, errback, callback) {
  var platformSpecific = { };
  if (typeof module !== "undefined" && module.require && !(typeof process !== "undefined" && process.versions["electron"])) {
    // We are on node.js
    platformSpecific.newXHR = function () {
      var XHR = module.require("xhr2");
      return new XHR();
    };

    platformSpecific.fixupUrl = function (url) {
      var urllib = module.require("url");
      var u = urllib.parse(url);
      u.protocol = u.protocol || "http:";
      u.hostname = u.hostname || "localhost";
      return urllib.format(u);
    };

    platformSpecific.getResponse = function (xhr) {
      return xhr.response;
    };
  } else {
    // We are in the browser
    platformSpecific.newXHR = function () {
      return new XMLHttpRequest();
    };

    platformSpecific.fixupUrl = function (url) {
      return url || "/";
    };

    platformSpecific.getResponse = function (xhr) {
      return xhr.response;
    };
  }

  return function () {
    var xhr = platformSpecific.newXHR();
    var fixedUrl = platformSpecific.fixupUrl(options.url);
    xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);
    if (options.headers) {
      try {
        for (var i = 0, header; (header = options.headers[i]) != null; i++) {
          xhr.setRequestHeader(header.field, header.value);
        }
      }
      catch (e) {
        errback(e)();
      }
    }
    xhr.onerror = function () {
      errback(new Error("AJAX request failed: " + options.method + " " + options.url))();
    };
    xhr.onload = function () {
      callback({
        status: xhr.status,
        headers: xhr.getAllResponseHeaders().split("\r\n")
          .filter(function (header) {
            return header.length > 0;
          })
          .map(function (header) {
            var i = header.indexOf(":");
            return mkHeader(header.substring(0, i))(header.substring(i + 2));
          }),
        response: platformSpecific.getResponse(xhr)
      })();
    };
    xhr.responseType = options.responseType;
    xhr.withCredentials = options.withCredentials;
    xhr.send(options.content);
    return canceler(xhr);
  };
};

// jshint maxparams: 4
exports._cancelAjax = function (xhr, cancelError, errback, callback) {
  return function () {
    try { xhr.abort(); } catch (e) { return callback(false)(); }
    return callback(true)();
  };
};


}).call(this,require('_process'))
},{"_process":283}],248:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_XHR_Types = require("../DOM.XHR.Types");
var Data_Argonaut_Parser = require("../Data.Argonaut.Parser");
var Data_Array = require("../Data.Array");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_HTTP_Method = require("../Data.HTTP.Method");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Int = require("../Data.Int");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Tuple = require("../Data.Tuple");
var $$Math = require("../Math");
var Network_HTTP_Affjax_Request = require("../Network.HTTP.Affjax.Request");
var Network_HTTP_Affjax_Response = require("../Network.HTTP.Affjax.Response");
var Network_HTTP_RequestHeader = require("../Network.HTTP.RequestHeader");
var Network_HTTP_ResponseHeader = require("../Network.HTTP.ResponseHeader");
var Network_HTTP_StatusCode = require("../Network.HTTP.StatusCode");
var Prelude = require("../Prelude");
var retry = function (dictRequestable) {
    return function (policy) {
        return function (run) {
            return function (req) {
                var retryState = function (v) {
                    if (v instanceof Data_Either.Left) {
                        return Data_Either.Left.create(new Data_Either.Left(v.value0));
                    };
                    if (v instanceof Data_Either.Right) {
                        if (v.value0.status === 200) {
                            return new Data_Either.Right(v.value0);
                        };
                        var $49 = policy.shouldRetryWithStatusCode(v.value0.status);
                        if ($49) {
                            return Data_Either.Left.create(new Data_Either.Right(v.value0));
                        };
                        return new Data_Either.Right(v.value0);
                    };
                    throw new Error("Failed pattern match at Network.HTTP.Affjax line 214, column 5 - line 216, column 45: " + [ v.constructor.name ]);
                };
                var go = function (failureRef) {
                    return function (n) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Functor.map(Control_Monad_Aff.functorAff)(retryState)(Control_Monad_Aff.attempt(run(req))))(function (v) {
                            if (v instanceof Data_Either.Left) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(failureRef)(new Data_Maybe.Just(v.value0))))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Aff.delay(policy.delayCurve(n)))(function () {
                                        return go(failureRef)(n + 1 | 0);
                                    });
                                });
                            };
                            if (v instanceof Data_Either.Right) {
                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value0);
                            };
                            throw new Error("Failed pattern match at Network.HTTP.Affjax line 229, column 7 - line 234, column 32: " + [ v.constructor.name ]);
                        });
                    };
                };
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)))(function (v) {
                    var loop = go(v);
                    if (policy.timeout instanceof Data_Maybe.Nothing) {
                        return loop(1);
                    };
                    if (policy.timeout instanceof Data_Maybe.Just) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v1) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(loop(1))(function ($104) {
                                return Control_Monad_Aff_AVar.putVar(v1)(Data_Maybe.Just.create($104));
                            })))(function (v2) {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Aff.delay(policy.timeout.value0))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(v1)(Data_Maybe.Nothing.value))(function () {
                                        return Control_Monad_Aff.cancel(v2)(Control_Monad_Eff_Exception.error("Cancel"));
                                    });
                                })))(function (v3) {
                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(v1))(function (v4) {
                                        if (v4 instanceof Data_Maybe.Nothing) {
                                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v)))(function (v5) {
                                                if (v5 instanceof Data_Maybe.Nothing) {
                                                    return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Timeout"));
                                                };
                                                if (v5 instanceof Data_Maybe.Just) {
                                                    return Data_Either.either(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(v5.value0);
                                                };
                                                throw new Error("Failed pattern match at Network.HTTP.Affjax line 209, column 11 - line 211, column 61: " + [ v5.constructor.name ]);
                                            });
                                        };
                                        if (v4 instanceof Data_Maybe.Just) {
                                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v4.value0);
                                        };
                                        throw new Error("Failed pattern match at Network.HTTP.Affjax line 206, column 7 - line 212, column 31: " + [ v4.constructor.name ]);
                                    });
                                });
                            });
                        });
                    };
                    throw new Error("Failed pattern match at Network.HTTP.Affjax line 195, column 3 - line 212, column 31: " + [ policy.timeout.constructor.name ]);
                });
            };
        };
    };
};
var defaultRetryPolicy = {
    timeout: Data_Maybe.Nothing.value,
    delayCurve: function (n) {
        return Data_Time_Duration.Milliseconds($$Math.max(30.0 * 1000.0)(100.0 * $$Math.pow(2.0)(Data_Int.toNumber(n - 1 | 0))));
    },
    shouldRetryWithStatusCode: Data_Function["const"](false)
};
var defaultRequest = {
    method: new Data_Either.Left(Data_HTTP_Method.GET.value),
    url: "/",
    headers: [  ],
    content: Data_Maybe.Nothing.value,
    username: Data_Maybe.Nothing.value,
    password: Data_Maybe.Nothing.value,
    withCredentials: false
};
var cancelAjax = function (xhr) {
    return function (err) {
        return Control_Monad_Aff.makeAff(function (eb) {
            return function (cb) {
                return $foreign._cancelAjax(xhr, err, eb, cb);
            };
        });
    };
};
var affjax$prime = function (dictRequestable) {
    return function (dictRespondable) {
        return function (req) {
            return function (eb) {
                return function (cb) {
                    var responseSettings = Network_HTTP_Affjax_Response.responseType(dictRespondable);
                    var requestSettings = (function () {
                        var v = Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_Affjax_Request.toRequest(dictRequestable))(req.content);
                        if (v instanceof Data_Maybe.Nothing) {
                            return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
                        };
                        if (v instanceof Data_Maybe.Just) {
                            return new Data_Tuple.Tuple(v.value0.value0, new Data_Maybe.Just(v.value0.value1));
                        };
                        throw new Error("Failed pattern match at Network.HTTP.Affjax line 262, column 21 - line 264, column 49: " + [ v.constructor.name ]);
                    })();
                    var parseJSON = function ($105) {
                        return Data_Either.either(function ($106) {
                            return Data_Foreign.fail(Data_Foreign.JSONError.create($106));
                        })(function ($107) {
                            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Foreign.toForeign($107));
                        })(Data_Argonaut_Parser.jsonParser($105));
                    };
                    var fromResponse$prime = (function () {
                        var v = Data_Tuple.snd(responseSettings);
                        if (v instanceof Network_HTTP_Affjax_Response.JSONResponse) {
                            return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Network_HTTP_Affjax_Response.fromResponse(dictRespondable))(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(parseJSON)(Data_Foreign.readString));
                        };
                        return Network_HTTP_Affjax_Response.fromResponse(dictRespondable);
                    })();
                    var cb$prime = function (res) {
                        var v = Data_Functor.map(Data_Either.functorEither)(function (v1) {
                            var $72 = {};
                            for (var $73 in res) {
                                if ({}.hasOwnProperty.call(res, $73)) {
                                    $72[$73] = res[$73];
                                };
                            };
                            $72.response = v1;
                            return $72;
                        })(Control_Monad_Except.runExcept(fromResponse$prime(res.response)));
                        if (v instanceof Data_Either.Left) {
                            return eb(Control_Monad_Eff_Exception.error(Data_Show.show(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(v.value0)));
                        };
                        if (v instanceof Data_Either.Right) {
                            return cb(v.value0);
                        };
                        throw new Error("Failed pattern match at Network.HTTP.Affjax line 281, column 13 - line 283, column 26: " + [ v.constructor.name ]);
                    };
                    var addHeader = function (mh) {
                        return function (hs) {
                            if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Network_HTTP_RequestHeader.requestHeaderName)(mh.value0))(hs)) {
                                return Data_Array.snoc(hs)(mh.value0);
                            };
                            return hs;
                        };
                    };
                    var headers = addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_RequestHeader.ContentType.create)(Data_Tuple.fst(requestSettings)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_RequestHeader.Accept.create)(Data_Tuple.fst(responseSettings)))(req.headers));
                    var req$prime = {
                        method: Data_HTTP_Method.print(req.method),
                        url: req.url,
                        headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
                            return {
                                field: Network_HTTP_RequestHeader.requestHeaderName(h),
                                value: Network_HTTP_RequestHeader.requestHeaderValue(h)
                            };
                        })(headers),
                        content: Data_Nullable.toNullable(Data_Tuple.snd(requestSettings)),
                        responseType: Network_HTTP_Affjax_Response.responseTypeToString(Data_Tuple.snd(responseSettings)),
                        username: Data_Nullable.toNullable(req.username),
                        password: Data_Nullable.toNullable(req.password),
                        withCredentials: req.withCredentials
                    };
                    return $foreign._ajax(Network_HTTP_ResponseHeader.responseHeader, req$prime, cancelAjax, eb, cb$prime);
                };
            };
        };
    };
};
var affjax = function (dictRequestable) {
    return function (dictRespondable) {
        return function ($108) {
            return Control_Monad_Aff["makeAff'"](affjax$prime(dictRequestable)(dictRespondable)($108));
        };
    };
};
var $$delete = function (dictRespondable) {
    return function (u) {
        return affjax(Network_HTTP_Affjax_Request.requestableUnit)(dictRespondable)((function () {
            var $80 = {};
            for (var $81 in defaultRequest) {
                if ({}.hasOwnProperty.call(defaultRequest, $81)) {
                    $80[$81] = defaultRequest[$81];
                };
            };
            $80.method = new Data_Either.Left(Data_HTTP_Method.DELETE.value);
            $80.url = u;
            return $80;
        })());
    };
};
var delete_ = $$delete(Network_HTTP_Affjax_Response.responsableUnit);
var get = function (dictRespondable) {
    return function (u) {
        return affjax(Network_HTTP_Affjax_Request.requestableUnit)(dictRespondable)((function () {
            var $83 = {};
            for (var $84 in defaultRequest) {
                if ({}.hasOwnProperty.call(defaultRequest, $84)) {
                    $83[$84] = defaultRequest[$84];
                };
            };
            $83.url = u;
            return $83;
        })());
    };
};
var patch = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $86 = {};
                    for (var $87 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $87)) {
                            $86[$87] = defaultRequest[$87];
                        };
                    };
                    $86.method = new Data_Either.Left(Data_HTTP_Method.PATCH.value);
                    $86.url = u;
                    $86.content = new Data_Maybe.Just(c);
                    return $86;
                })());
            };
        };
    };
};
var patch_ = function (dictRequestable) {
    return patch(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var patch$prime = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $89 = {};
                    for (var $90 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $90)) {
                            $89[$90] = defaultRequest[$90];
                        };
                    };
                    $89.method = new Data_Either.Left(Data_HTTP_Method.PATCH.value);
                    $89.url = u;
                    $89.content = c;
                    return $89;
                })());
            };
        };
    };
};
var patch_$prime = function (dictRequestable) {
    return patch$prime(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var post = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $92 = {};
                    for (var $93 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $93)) {
                            $92[$93] = defaultRequest[$93];
                        };
                    };
                    $92.method = new Data_Either.Left(Data_HTTP_Method.POST.value);
                    $92.url = u;
                    $92.content = new Data_Maybe.Just(c);
                    return $92;
                })());
            };
        };
    };
};
var post_ = function (dictRequestable) {
    return post(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var post$prime = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $95 = {};
                    for (var $96 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $96)) {
                            $95[$96] = defaultRequest[$96];
                        };
                    };
                    $95.method = new Data_Either.Left(Data_HTTP_Method.POST.value);
                    $95.url = u;
                    $95.content = c;
                    return $95;
                })());
            };
        };
    };
};
var post_$prime = function (dictRequestable) {
    return post$prime(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var put = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $98 = {};
                    for (var $99 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $99)) {
                            $98[$99] = defaultRequest[$99];
                        };
                    };
                    $98.method = new Data_Either.Left(Data_HTTP_Method.PUT.value);
                    $98.url = u;
                    $98.content = new Data_Maybe.Just(c);
                    return $98;
                })());
            };
        };
    };
};
var put_ = function (dictRequestable) {
    return put(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var put$prime = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $101 = {};
                    for (var $102 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $102)) {
                            $101[$102] = defaultRequest[$102];
                        };
                    };
                    $101.method = new Data_Either.Left(Data_HTTP_Method.PUT.value);
                    $101.url = u;
                    $101.content = c;
                    return $101;
                })());
            };
        };
    };
};
var put_$prime = function (dictRequestable) {
    return put$prime(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
module.exports = {
    defaultRequest: defaultRequest,
    affjax: affjax,
    "affjax'": affjax$prime,
    get: get,
    post: post,
    post_: post_,
    "post'": post$prime,
    "post_'": post_$prime,
    put: put,
    put_: put_,
    "put'": put$prime,
    "put_'": put_$prime,
    "delete": $$delete,
    delete_: delete_,
    patch: patch,
    patch_: patch_,
    "patch'": patch$prime,
    "patch_'": patch_$prime,
    defaultRetryPolicy: defaultRetryPolicy,
    retry: retry
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Aff":20,"../Control.Monad.Aff.AVar":16,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Class":23,"../Control.Monad.Eff.Exception":28,"../Control.Monad.Eff.Ref":32,"../Control.Monad.Error.Class":41,"../Control.Monad.Except":43,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../DOM.XHR.Types":67,"../Data.Argonaut.Parser":72,"../Data.Array":80,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Foreign":121,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.HTTP.Method":139,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.Int":146,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.MediaType":158,"../Data.Nullable":174,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Show":189,"../Data.Time.Duration":204,"../Data.Tuple":212,"../Math":244,"../Network.HTTP.Affjax.Request":245,"../Network.HTTP.Affjax.Response":246,"../Network.HTTP.RequestHeader":249,"../Network.HTTP.ResponseHeader":250,"../Network.HTTP.StatusCode":251,"../Prelude":263,"./foreign":247}],249:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_MediaType = require("../Data.MediaType");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Accept = (function () {
    function Accept(value0) {
        this.value0 = value0;
    };
    Accept.create = function (value0) {
        return new Accept(value0);
    };
    return Accept;
})();
var ContentType = (function () {
    function ContentType(value0) {
        this.value0 = value0;
    };
    ContentType.create = function (value0) {
        return new ContentType(value0);
    };
    return ContentType;
})();
var RequestHeader = (function () {
    function RequestHeader(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    RequestHeader.create = function (value0) {
        return function (value1) {
            return new RequestHeader(value0, value1);
        };
    };
    return RequestHeader;
})();
var showRequestHeader = new Data_Show.Show(function (v) {
    if (v instanceof Accept) {
        return "(Accept " + (Data_Show.show(Data_MediaType.showMediaType)(v.value0) + ")");
    };
    if (v instanceof ContentType) {
        return "(ContentType " + (Data_Show.show(Data_MediaType.showMediaType)(v.value0) + ")");
    };
    if (v instanceof RequestHeader) {
        return "(RequestHeader " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 19, column 1 - line 19, column 49: " + [ v.constructor.name ]);
});
var requestHeaderValue = function (v) {
    if (v instanceof Accept) {
        return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
    };
    if (v instanceof ContentType) {
        return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
    };
    if (v instanceof RequestHeader) {
        return v.value1;
    };
    throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 29, column 1 - line 29, column 46: " + [ v.constructor.name ]);
};
var requestHeaderName = function (v) {
    if (v instanceof Accept) {
        return "Accept";
    };
    if (v instanceof ContentType) {
        return "Content-Type";
    };
    if (v instanceof RequestHeader) {
        return v.value0;
    };
    throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 24, column 1 - line 24, column 45: " + [ v.constructor.name ]);
};
var eqRequestHeader = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof Accept && v1 instanceof Accept) {
            return Data_Eq.eq(Data_MediaType.eqMediaType)(v.value0)(v1.value0);
        };
        if (v instanceof ContentType && v1 instanceof ContentType) {
            return Data_Eq.eq(Data_MediaType.eqMediaType)(v.value0)(v1.value0);
        };
        if (v instanceof RequestHeader && v1 instanceof RequestHeader) {
            return v.value0 === v1.value0 && v.value1 === v1.value1;
        };
        return false;
    };
});
module.exports = {
    Accept: Accept,
    ContentType: ContentType,
    RequestHeader: RequestHeader,
    requestHeaderName: requestHeaderName,
    requestHeaderValue: requestHeaderValue,
    eqRequestHeader: eqRequestHeader,
    showRequestHeader: showRequestHeader
};

},{"../Data.Eq":111,"../Data.HeytingAlgebra":141,"../Data.MediaType":158,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],250:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var ResponseHeader = (function () {
    function ResponseHeader(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ResponseHeader.create = function (value0) {
        return function (value1) {
            return new ResponseHeader(value0, value1);
        };
    };
    return ResponseHeader;
})();
var showResponseHeader = new Data_Show.Show(function (v) {
    return "(ResponseHeader " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
});
var responseHeaderValue = function (v) {
    return v.value1;
};
var responseHeaderName = function (v) {
    return v.value0;
};
var responseHeader = function (field) {
    return function (value) {
        return new ResponseHeader(field, value);
    };
};
var genericResponseHeader = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Network.HTTP.ResponseHeader.ResponseHeader" && v.value1.length === 2)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(ResponseHeader.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][1](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Network.HTTP.ResponseHeader.ResponseHeader", [ {
        sigConstructor: "Network.HTTP.ResponseHeader.ResponseHeader",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Network.HTTP.ResponseHeader.ResponseHeader", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v.value1);
    } ]);
});
var eqResponseHeader = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v.value0 === v1.value0 && v.value1 === v1.value1;
    };
});
module.exports = {
    responseHeader: responseHeader,
    responseHeaderName: responseHeaderName,
    responseHeaderValue: responseHeaderValue,
    genericResponseHeader: genericResponseHeader,
    eqResponseHeader: eqResponseHeader,
    showResponseHeader: showResponseHeader
};

},{"../Control.Apply":6,"../Data.Eq":111,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],251:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var StatusCode = function (x) {
    return x;
};
var showStatusCode = new Data_Show.Show(function (v) {
    return "(StatusCode " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var genericStatusCode = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Network.HTTP.StatusCode.StatusCode" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(StatusCode))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Network.HTTP.StatusCode.StatusCode", [ {
        sigConstructor: "Network.HTTP.StatusCode.StatusCode",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Network.HTTP.StatusCode.StatusCode", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var eqStatusCode = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v === v1;
    };
});
module.exports = {
    StatusCode: StatusCode,
    genericStatusCode: genericStatusCode,
    eqStatusCode: eqStatusCode,
    showStatusCode: showStatusCode
};

},{"../Control.Apply":6,"../Data.Eq":111,"../Data.Generic":138,"../Data.Maybe":156,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],252:[function(require,module,exports){
"use strict";

// module Partial.Unsafe

exports.unsafePartial = function (f) {
  return f();
};

},{}],253:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Partial = require("../Partial");
var unsafePartialBecause = function (v) {
    return function (x) {
        return $foreign.unsafePartial(function (dictPartial) {
            return x(dictPartial);
        });
    };
};
var unsafeCrashWith = function (msg) {
    return $foreign.unsafePartial(function (dictPartial) {
        return Partial.crashWith(dictPartial)(msg);
    });
};
module.exports = {
    unsafePartialBecause: unsafePartialBecause,
    unsafeCrashWith: unsafeCrashWith,
    unsafePartial: $foreign.unsafePartial
};

},{"../Partial":255,"./foreign":252}],254:[function(require,module,exports){
"use strict";

// module Partial

exports.crashWith = function () {
  return function (msg) {
    throw new Error(msg);
  };
};

},{}],255:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var crash = function (dictPartial) {
    return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
};
module.exports = {
    crash: crash,
    crashWith: $foreign.crashWith
};

},{"./foreign":254}],256:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Data_Symbol = require("../Data.Symbol");
var Pathy_Phantom = require("../Pathy.Phantom");
var Prelude = require("../Prelude");
var Type_Data_Boolean = require("../Type.Data.Boolean");
var Type_Data_Symbol = require("../Type.Data.Symbol");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Name = function (x) {
    return x;
};
var IsName = function (reflectName) {
    this.reflectName = reflectName;
};
var splitName = function (v) {
    return Data_Maybe.fromMaybe({
        name: v,
        ext: Data_Maybe.Nothing.value
    })(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_NonEmpty.lastIndexOf(".")(v))(function (v1) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_NonEmpty.take(v1)(v))(function (v2) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_NonEmpty.drop(v1 + 1 | 0)(v))(function (v3) {
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                    name: v2,
                    ext: new Data_Maybe.Just(v3)
                });
            });
        });
    }));
};
var showName = new Data_Show.Show(function (v) {
    return "(Name " + (Data_Show.show(Data_String_NonEmpty.showNonEmptyString)(v) + ")");
});
var reflectName = function (dict) {
    return dict.reflectName;
};
var ordName = Data_String_NonEmpty.ordNonEmptyString;
var newtypeName = new Data_Newtype.Newtype(function (n) {
    return n;
}, Name);
var joinName = function (v) {
    return Name((function () {
        if (v.ext instanceof Data_Maybe.Nothing) {
            return v.name;
        };
        if (v.ext instanceof Data_Maybe.Just) {
            return Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(v.name)(Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(Data_String_NonEmpty.singleton("."))(v.ext.value0));
        };
        throw new Error("Failed pattern match at Pathy.Name line 59, column 33 - line 61, column 49: " + [ v.ext.constructor.name ]);
    })());
};
var isNameNESymbol = function (dictIsSymbol) {
    return function (dictEquals) {
        return new IsName(function (v) {
            return Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
        });
    };
};
var extension = function ($27) {
    return (function (v) {
        return v.ext;
    })(splitName($27));
};
var eqName = Data_String_NonEmpty.eqNonEmptyString;
var alterExtension = function (f) {
    return function (n) {
        var spn = splitName(n);
        return joinName((function () {
            var $24 = {};
            for (var $25 in spn) {
                if ({}.hasOwnProperty.call(spn, $25)) {
                    $24[$25] = spn[$25];
                };
            };
            $24.ext = f(spn.ext);
            return $24;
        })());
    };
};
module.exports = {
    reflectName: reflectName,
    Name: Name,
    splitName: splitName,
    joinName: joinName,
    extension: extension,
    alterExtension: alterExtension,
    IsName: IsName,
    newtypeName: newtypeName,
    eqName: eqName,
    ordName: ordName,
    showName: showName,
    isNameNESymbol: isNameNESymbol
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Function":125,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.String":201,"../Data.String.NonEmpty":194,"../Data.Symbol":202,"../Pathy.Phantom":259,"../Prelude":263,"../Type.Data.Boolean":275,"../Type.Data.Symbol":277,"../Unsafe.Coerce":281}],257:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_String = require("../Data.String");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Pathy_Name = require("../Pathy.Name");
var Pathy_Path = require("../Pathy.Path");
var Pathy_Phantom = require("../Pathy.Phantom");
var Prelude = require("../Prelude");
var Parser = function (x) {
    return x;
};
var parsePath = function (v) {
    return v;
};
var parseRelDir = function (p) {
    return parsePath(p)(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Nothing.value);
};
var parseRelFile = function (p) {
    return parsePath(p)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Nothing.value);
};
var parseAbsFile = function (p) {
    return parsePath(p)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
};
var parseAbsDir = function (p) {
    return parsePath(p)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Nothing.value);
};
var buildPath = function (dictIsRelOrAbs) {
    return function (z) {
        return function (init) {
            return function (k) {
                return function (segs) {
                    var go = function (v) {
                        if (v instanceof Data_List_Types.Nil) {
                            return init;
                        };
                        if (v instanceof Data_List_Types.Cons) {
                            if (Data_String_NonEmpty.toString(v.value0) === "..") {
                                return Pathy_Path.parentOf(dictIsRelOrAbs)(go(v.value1));
                            };
                            if (Data_String_NonEmpty.toString(v.value0) === ".") {
                                return go(v.value1);
                            };
                            if (Data_Boolean.otherwise) {
                                return Pathy_Path.extendPath(go(v.value1))(v.value0);
                            };
                        };
                        throw new Error("Failed pattern match at Pathy.Parser line 77, column 10 - line 82, column 57: " + [ v.constructor.name ]);
                    };
                    if (segs instanceof Data_List_Types.Nil) {
                        return z;
                    };
                    if (segs instanceof Data_List_Types.Cons) {
                        if (Data_String_NonEmpty.toString(segs.value0) === "..") {
                            return k(new Data_Either.Left(Pathy_Path.parentOf(dictIsRelOrAbs)(go(segs.value1))));
                        };
                        if (Data_String_NonEmpty.toString(segs.value0) === ".") {
                            return k(new Data_Either.Left(go(segs.value1)));
                        };
                        if (Data_Boolean.otherwise) {
                            return k(new Data_Either.Right(Pathy_Path.extendPath(go(segs.value1))(segs.value0)));
                        };
                    };
                    throw new Error("Failed pattern match at Pathy.Parser line 69, column 3 - line 74, column 67: " + [ segs.constructor.name ]);
                };
            };
        };
    };
};
var asReversedList = Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(Data_List_Types.Cons.create))(Data_List_Types.Nil.value);
var posixParser = function (relDir) {
    return function (absDir) {
        return function (relFile) {
            return function (absFile) {
                return function (z) {
                    return function (v) {
                        if (v === "") {
                            return z;
                        };
                        if (v === "/") {
                            return absDir(Pathy_Path.rootDir);
                        };
                        var segs = asReversedList(Data_Array.mapMaybe(Data_String_NonEmpty.fromString)(Data_String.split("/")(v)));
                        var isFile = Data_String.takeRight(1)(v) !== "/";
                        var isAbs = Data_String.take(1)(v) === "/";
                        if (isAbs && isFile) {
                            return buildPath(Pathy_Phantom.absIsRelOrAbs)(z)(Pathy_Path.rootDir)(Data_Either.either(Data_Function["const"](z))(absFile))(segs);
                        };
                        if (isAbs && !isFile) {
                            return buildPath(Pathy_Phantom.absIsRelOrAbs)(z)(Pathy_Path.rootDir)(Data_Either.either(absDir)(absDir))(segs);
                        };
                        if (!isAbs && isFile) {
                            return buildPath(Pathy_Phantom.relIsRelOrAbs)(z)(Pathy_Path.currentDir)(Data_Either.either(Data_Function["const"](z))(relFile))(segs);
                        };
                        if (!isAbs && !isFile) {
                            return buildPath(Pathy_Phantom.relIsRelOrAbs)(z)(Pathy_Path.currentDir)(Data_Either.either(relDir)(relDir))(segs);
                        };
                        throw new Error("Failed pattern match at Pathy.Parser line 49, column 9 - line 53, column 77: " + [ isAbs.constructor.name, isFile.constructor.name ]);
                    };
                };
            };
        };
    };
};
module.exports = {
    Parser: Parser,
    posixParser: posixParser,
    parsePath: parsePath,
    parseRelFile: parseRelFile,
    parseAbsFile: parseAbsFile,
    parseRelDir: parseRelDir,
    parseAbsDir: parseAbsDir
};

},{"../Data.Array":80,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.List":151,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.String":201,"../Data.String.NonEmpty":194,"../Pathy.Name":256,"../Pathy.Path":258,"../Pathy.Phantom":259,"../Prelude":263}],258:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Data_Symbol = require("../Data.Symbol");
var Data_Tuple = require("../Data.Tuple");
var Partial_Unsafe = require("../Partial.Unsafe");
var Pathy_Name = require("../Pathy.Name");
var Pathy_Phantom = require("../Pathy.Phantom");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Init = (function () {
    function Init() {

    };
    Init.value = new Init();
    return Init;
})();
var ParentOf = (function () {
    function ParentOf(value0) {
        this.value0 = value0;
    };
    ParentOf.create = function (value0) {
        return new ParentOf(value0);
    };
    return ParentOf;
})();
var In = (function () {
    function In(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    In.create = function (value0) {
        return function (value1) {
            return new In(value0, value1);
        };
    };
    return In;
})();
var showPathRelDir = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Init) {
                return Pathy_Phantom.foldRelOrAbs(dictIsRelOrAbs)(Data_Function["const"]("currentDir"))(Data_Function["const"]("rootDir"))(v);
            };
            if (v instanceof ParentOf) {
                return "(parentOf " + (Data_Show.show(showPathRelDir(Pathy_Phantom.relIsRelOrAbs)(Pathy_Phantom.isDirOrFileDir))(v.value0) + ")");
            };
            if (v instanceof In) {
                return "(" + (Data_Show.show(showPathRelDir(dictIsRelOrAbs)(Pathy_Phantom.isDirOrFileDir))(v.value0) + (" </> " + (Pathy_Phantom.foldDirOrFile(dictIsDirOrFile)(function ($97) {
                    return (function (v1) {
                        return "dir " + v1;
                    })(Data_Show.show(Pathy_Name.showName)($97));
                })(function ($98) {
                    return (function (v1) {
                        return "file " + v1;
                    })(Data_Show.show(Pathy_Name.showName)($98));
                })(v.value1) + ")")));
            };
            throw new Error("Failed pattern match at Pathy.Path line 70, column 1 - line 70, column 76: " + [ v.constructor.name ]);
        });
    };
};
var rootDir = Init.value;
var renameTraverse = function (dictApplicative) {
    return function (f) {
        return function (v) {
            if (v instanceof In) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(In.create(v.value0))(f(v.value1));
            };
            return Control_Applicative.pure(dictApplicative)(v);
        };
    };
};
var rename = function (f) {
    return function ($99) {
        return Data_Newtype.un(Data_Identity.newtypeIdentity)(Data_Identity.Identity)(renameTraverse(Data_Identity.applicativeIdentity)(function ($100) {
            return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f($100));
        })($99));
    };
};
var setExtension = function (p) {
    return function (ext) {
        return rename(Pathy_Name.alterExtension(Data_Function["const"](Data_String_NonEmpty.fromString(ext))))(p);
    };
};
var refine = function (dictIsDirOrFile) {
    return function (f) {
        return function (d) {
            var go = function (dictIsDirOrFile1) {
                return function (v) {
                    if (v instanceof Init) {
                        return Init.value;
                    };
                    if (v instanceof ParentOf) {
                        return new ParentOf(go(Pathy_Phantom.isDirOrFileDir)(v.value0));
                    };
                    if (v instanceof In) {
                        return new In(go(Pathy_Phantom.isDirOrFileDir)(v.value0), Pathy_Phantom.onDirOrFile(dictIsDirOrFile1)(function (v1) {
                            return function ($101) {
                                return v1(d($101));
                            };
                        })(function (v1) {
                            return function ($102) {
                                return v1(f($102));
                            };
                        })(v.value1));
                    };
                    throw new Error("Failed pattern match at Pathy.Path line 302, column 5 - line 302, column 67: " + [ v.constructor.name ]);
                };
            };
            return go(dictIsDirOrFile);
        };
    };
};
var peelFile = function (v) {
    if (v instanceof Init) {
        return Partial_Unsafe.unsafeCrashWith("`Init` in Pathy.peelFile (this should be impossible)");
    };
    if (v instanceof ParentOf) {
        return Partial_Unsafe.unsafeCrashWith("`ParentOf` in Pathy.peelFile (this should be impossible)");
    };
    if (v instanceof In) {
        return new Data_Tuple.Tuple(v.value0, v.value1);
    };
    throw new Error("Failed pattern match at Pathy.Path line 214, column 12 - line 217, column 22: " + [ v.constructor.name ]);
};
var foldPath = function (r) {
    return function (f) {
        return function (g) {
            return function (v) {
                if (v instanceof Init) {
                    return r;
                };
                if (v instanceof ParentOf) {
                    return f(v.value0);
                };
                if (v instanceof In) {
                    return g(v.value0)(v.value1);
                };
                throw new Error("Failed pattern match at Pathy.Path line 199, column 18 - line 202, column 18: " + [ v.constructor.name ]);
            };
        };
    };
};
var name = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return foldPath(Data_Maybe.Nothing.value)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Just.create));
    };
};
var peel = foldPath(Data_Maybe.Nothing.value)(Data_Function["const"](Data_Maybe.Nothing.value))(function (p) {
    return function (n) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(p, n));
    };
});
var parentOf = function (dictIsRelOrAbs) {
    return Pathy_Phantom.onRelOrAbs(dictIsRelOrAbs)(function (coe) {
        return function (p) {
            return Data_Maybe.maybe(new ParentOf(p))(function ($103) {
                return coe(Data_Tuple.fst($103));
            })(peel(p));
        };
    })(function (coe) {
        return function ($104) {
            return coe(Data_Maybe.maybe(Init.value)(Data_Tuple.fst)(peel($104)));
        };
    });
};
var fileName = function ($105) {
    return Data_Tuple.snd(peelFile($105));
};
var extendPath = function (p) {
    return In.create(p);
};
var eqPath = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Init && y instanceof Init) {
            return true;
        };
        if (x instanceof ParentOf && y instanceof ParentOf) {
            return Data_Eq.eq(eqPath)(x.value0)(y.value0);
        };
        if (x instanceof In && y instanceof In) {
            return Data_Eq.eq(eqPath)(x.value0)(y.value0) && Data_Eq.eq(Pathy_Name.eqName)(x.value1)(y.value1);
        };
        return false;
    };
});
var ordPath = new Data_Ord.Ord(function () {
    return eqPath;
}, function (x) {
    return function (y) {
        if (x instanceof Init && y instanceof Init) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Init) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Init) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ParentOf && y instanceof ParentOf) {
            return Data_Ord.compare(ordPath)(x.value0)(y.value0);
        };
        if (x instanceof ParentOf) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ParentOf) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof In && y instanceof In) {
            var v = Data_Ord.compare(ordPath)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(Pathy_Name.ordName)(x.value1)(y.value1);
        };
        throw new Error("Failed pattern match at Pathy.Path line 68, column 8 - line 68, column 42: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var relativeTo = function (p) {
    var step = function (acc) {
        return function (v) {
            return function (v1) {
                if (Data_Eq.eq(eqPath)(v)(v1)) {
                    return acc;
                };
                if (v instanceof Init && v1 instanceof In) {
                    return step(new ParentOf(acc))(Init.value)(v1.value0);
                };
                if (v instanceof In && v1 instanceof Init) {
                    return new In(step(acc)(v.value0)(Init.value), v.value1);
                };
                if (v instanceof In) {
                    if (Data_Eq.eq(eqPath)(v.value0)(v1)) {
                        return new In(acc, v.value1);
                    };
                    if (Data_Boolean.otherwise) {
                        return new In(step(acc)(v.value0)(v1), v.value1);
                    };
                };
                return Partial_Unsafe.unsafeCrashWith("`ParentOf` in Pathy.relativeTo (this should be impossible)");
            };
        };
    };
    return function ($106) {
        return step(Init.value)(p)($106);
    };
};
var currentDir = Init.value;
var in$prime = In.create(currentDir);
var dir$prime = in$prime;
var dir = function (dictIsName) {
    return function ($107) {
        return dir$prime(Pathy_Name.reflectName(dictIsName)($107));
    };
};
var file$prime = in$prime;
var file = function (dictIsName) {
    return function ($108) {
        return file$prime(Pathy_Name.reflectName(dictIsName)($108));
    };
};
var appendPath = function (dictIsRelOrAbs) {
    return function (v) {
        return function (v1) {
            if (v instanceof Init && v1 instanceof Init) {
                return Init.value;
            };
            if (v instanceof ParentOf && v1 instanceof Init) {
                return new ParentOf(appendPath(Pathy_Phantom.relIsRelOrAbs)(v.value0)(Init.value));
            };
            if (v instanceof In && v1 instanceof Init) {
                return new In(appendPath(dictIsRelOrAbs)(v.value0)(Init.value), v.value1);
            };
            if (v1 instanceof ParentOf) {
                return parentOf(dictIsRelOrAbs)(appendPath(dictIsRelOrAbs)(v)(v1.value0));
            };
            if (v1 instanceof In) {
                return new In(appendPath(dictIsRelOrAbs)(v)(v1.value0), v1.value1);
            };
            throw new Error("Failed pattern match at Pathy.Path line 162, column 14 - line 167, column 34: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var parentAppend = function (dictIsRelOrAbs) {
    return function (d) {
        return function (p) {
            return appendPath(dictIsRelOrAbs)(parentOf(dictIsRelOrAbs)(d))(p);
        };
    };
};
module.exports = {
    rootDir: rootDir,
    currentDir: currentDir,
    dir: dir,
    "dir'": dir$prime,
    file: file,
    "file'": file$prime,
    "in'": in$prime,
    parentOf: parentOf,
    extendPath: extendPath,
    appendPath: appendPath,
    parentAppend: parentAppend,
    foldPath: foldPath,
    peel: peel,
    peelFile: peelFile,
    name: name,
    fileName: fileName,
    rename: rename,
    renameTraverse: renameTraverse,
    setExtension: setExtension,
    relativeTo: relativeTo,
    refine: refine,
    eqPath: eqPath,
    ordPath: ordPath,
    showPathRelDir: showPathRelDir
};

},{"../Control.Applicative":4,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String.NonEmpty":194,"../Data.Symbol":202,"../Data.Tuple":212,"../Partial.Unsafe":253,"../Pathy.Name":256,"../Pathy.Phantom":259,"../Prelude":263,"../Unsafe.Coerce":281}],259:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Function = require("../Data.Function");
var Prelude = require("../Prelude");
var IsRelOrAbs = function (onRelOrAbs) {
    this.onRelOrAbs = onRelOrAbs;
};
var IsDirOrFile = function (onDirOrFile) {
    this.onDirOrFile = onDirOrFile;
};
var relIsRelOrAbs = new IsRelOrAbs(function (f) {
    return function (v) {
        return f(Control_Category.id(Control_Category.categoryFn));
    };
});
var onRelOrAbs = function (dict) {
    return dict.onRelOrAbs;
};
var onDirOrFile = function (dict) {
    return dict.onDirOrFile;
};
var isDirOrFileFile = new IsDirOrFile(function (v) {
    return function (f) {
        return f(Control_Category.id(Control_Category.categoryFn));
    };
});
var isDirOrFileDir = new IsDirOrFile(function (f) {
    return function (v) {
        return f(Control_Category.id(Control_Category.categoryFn));
    };
});
var foldRelOrAbs = function (dictIsRelOrAbs) {
    return function (f) {
        return function (g) {
            return onRelOrAbs(dictIsRelOrAbs)(Data_Function["const"](f))(Data_Function["const"](g));
        };
    };
};
var foldDirOrFile = function (dictIsDirOrFile) {
    return function (f) {
        return function (g) {
            return onDirOrFile(dictIsDirOrFile)(Data_Function["const"](f))(Data_Function["const"](g));
        };
    };
};
var absIsRelOrAbs = new IsRelOrAbs(function (v) {
    return function (f) {
        return f(Control_Category.id(Control_Category.categoryFn));
    };
});
module.exports = {
    onDirOrFile: onDirOrFile,
    onRelOrAbs: onRelOrAbs,
    IsRelOrAbs: IsRelOrAbs,
    foldRelOrAbs: foldRelOrAbs,
    IsDirOrFile: IsDirOrFile,
    foldDirOrFile: foldDirOrFile,
    relIsRelOrAbs: relIsRelOrAbs,
    absIsRelOrAbs: absIsRelOrAbs,
    isDirOrFileDir: isDirOrFileDir,
    isDirOrFileFile: isDirOrFileFile
};

},{"../Control.Category":11,"../Data.Function":125,"../Prelude":263}],260:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_String = require("../Data.String");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Partial_Unsafe = require("../Partial.Unsafe");
var Pathy_Name = require("../Pathy.Name");
var Pathy_Path = require("../Pathy.Path");
var Pathy_Phantom = require("../Pathy.Phantom");
var Pathy_Sandboxed = require("../Pathy.Sandboxed");
var Prelude = require("../Prelude");
var Escaper = function (x) {
    return x;
};
var slashEscaper = (function () {
    var dash = Data_String_NonEmpty.singleton("-");
    return Data_String_NonEmpty.replaceAll("/")(dash);
})();
var semigroupEscaper = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function ($29) {
            return v(v1($29));
        };
    };
});
var newtypeEscaper = new Data_Newtype.Newtype(function (n) {
    return n;
}, Escaper);
var printSegment = function (dictNewtype) {
    return function (printer) {
        return function ($30) {
            return Data_String_NonEmpty.toString(Data_Newtype.un(newtypeEscaper)(Escaper)(printer.escaper)(Data_Newtype.unwrap(dictNewtype)($30)));
        };
    };
};
var printPathRep = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return function (printer) {
            return function (inputPath) {
                var isAbs = Pathy_Phantom.foldRelOrAbs(dictIsRelOrAbs)(Data_Function["const"](false))(Data_Function["const"](true))(inputPath);
                var caseCurrent = (function () {
                    if (isAbs) {
                        return printer.root(Data_Maybe.Nothing.value);
                    };
                    return Data_String_NonEmpty.toString(Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(printer.current)(printer.sep));
                })();
                var go = function (dictIsRelOrAbs1) {
                    return function (dictIsDirOrFile1) {
                        return Pathy_Path.foldPath(caseCurrent)(caseParentOf)(caseIn(dictIsRelOrAbs1)(dictIsDirOrFile1));
                    };
                };
                var caseParentOf = function (p) {
                    return go(Pathy_Phantom.relIsRelOrAbs)(Pathy_Phantom.isDirOrFileDir)(p) + Data_String_NonEmpty.toString(Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(printer.up)(printer.sep));
                };
                var caseIn = function (dictIsRelOrAbs1) {
                    return function (dictIsDirOrFile1) {
                        return function (p) {
                            return function (name) {
                                return Pathy_Phantom.foldDirOrFile(dictIsDirOrFile1)(function (dirName) {
                                    return Pathy_Path.foldPath((function () {
                                        if (isAbs) {
                                            return printer.root(Data_Maybe.Just.create(Data_Newtype.unwrap(Pathy_Name.newtypeName)(dirName))) + Data_String_NonEmpty.toString(printer.sep);
                                        };
                                        return caseCurrent + (printSegment(Pathy_Name.newtypeName)(printer)(dirName) + Data_String_NonEmpty.toString(printer.sep));
                                    })())(function (p$prime) {
                                        return caseParentOf(p$prime) + (printSegment(Pathy_Name.newtypeName)(printer)(dirName) + Data_String_NonEmpty.toString(printer.sep));
                                    })(function (p$prime) {
                                        return function (n$prime) {
                                            return caseIn(dictIsRelOrAbs1)(Pathy_Phantom.isDirOrFileDir)(p$prime)(n$prime) + (printSegment(Pathy_Name.newtypeName)(printer)(dirName) + Data_String_NonEmpty.toString(printer.sep));
                                        };
                                    })(p);
                                })(function (fileName) {
                                    return go(dictIsRelOrAbs1)(Pathy_Phantom.isDirOrFileDir)(p) + printSegment(Pathy_Name.newtypeName)(printer)(fileName);
                                })(name);
                            };
                        };
                    };
                };
                return go(dictIsRelOrAbs)(dictIsDirOrFile)(inputPath);
            };
        };
    };
};
var printPath = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return function (r) {
            return function (sp) {
                var root = Pathy_Sandboxed.sandboxRoot(sp);
                var p = Pathy_Sandboxed.unsandbox(sp);
                return printPathRep(Pathy_Phantom.absIsRelOrAbs)(dictIsDirOrFile)(r)(Pathy_Phantom.foldRelOrAbs(dictIsRelOrAbs)(function (v) {
                    return Pathy_Path.appendPath(Pathy_Phantom.absIsRelOrAbs)(root)(v);
                })(Control_Category.id(Control_Category.categoryFn))(p));
            };
        };
    };
};
var unsafePrintPath = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return function (r) {
            return function (sp) {
                return printPathRep(dictIsRelOrAbs)(dictIsDirOrFile)(r)(Pathy_Sandboxed.unsandbox(sp));
            };
        };
    };
};
var monoidEscaper = new Data_Monoid.Monoid(function () {
    return semigroupEscaper;
}, Control_Category.id(Control_Category.categoryFn));
var $$escape = function (dictNewtype) {
    return function (r) {
        return function ($31) {
            return Data_String_NonEmpty.toString(Data_Newtype.un(newtypeEscaper)(Escaper)(r)(Data_Newtype.unwrap(dictNewtype)($31)));
        };
    };
};
var dotEscaper = function (s) {
    var v = Data_String_NonEmpty.toString(s);
    if (v === "..") {
        return Data_String_NonEmpty.unsafeFromString()("$dot$dot");
    };
    if (v === ".") {
        return Data_String_NonEmpty.unsafeFromString()("$dot");
    };
    return s;
};
var posixEscaper = Data_Semigroup.append(semigroupEscaper)(slashEscaper)(dotEscaper);
var posixPrinter = {
    root: Data_Maybe.maybe("/")(function (name) {
        return "/" + Data_String_NonEmpty.toString(Data_Newtype.un(newtypeEscaper)(Escaper)(posixEscaper)(name));
    }),
    current: Data_String_NonEmpty.singleton("."),
    up: Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(Data_String_NonEmpty.singleton("."))(Data_String_NonEmpty.singleton(".")),
    sep: Data_String_NonEmpty.singleton("/"),
    escaper: posixEscaper
};
var windowsEscaper = (function () {
    var dash = Data_String_NonEmpty.singleton("-");
    var badNameEscaper = Data_Foldable.fold(Data_Foldable.foldableArray)(monoidEscaper)(Data_Functor.map(Data_Functor.functorArray)(function (n) {
        return Data_String_NonEmpty.replaceAll(n)(Data_String_NonEmpty.cons("$")(n));
    })([ "CON", "PRN", "AUX", "NUL", "COM1", "COM2", "COM3", "COM4", "COM5", "COM6", "COM7", "COM8", "COM9", "LPT1", "LPT2", "LPT3", "LPT4", "LPT5", "LPT6", "LPT7", "LPT8", "LPT9" ]));
    var badCharEscaper = Data_Foldable.fold(Data_Foldable.foldableArray)(monoidEscaper)(Data_Functor.map(Data_Functor.functorArray)(function (c) {
        return Data_String_NonEmpty.replaceAll(Data_String.singleton(c))(dash);
    })([ "\\", "/", ":", "*", "?", "\"", "<", ">", "|" ]));
    return Data_Semigroup.append(semigroupEscaper)(badCharEscaper)(Data_Semigroup.append(semigroupEscaper)(badNameEscaper)(dotEscaper));
})();
var windowsPrinter = {
    root: Data_Maybe.maybe("\\")(function (drive) {
        return Data_String_NonEmpty.toString(drive) + ":";
    }),
    current: Data_String_NonEmpty.singleton("."),
    up: Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(Data_String_NonEmpty.singleton("."))(Data_String_NonEmpty.singleton(".")),
    sep: Data_String_NonEmpty.singleton("\\"),
    escaper: windowsEscaper
};
var debugPrintPath = function (dictWarn) {
    return function (dictIsRelOrAbs) {
        return function (dictIsDirOrFile) {
            return printPathRep(dictIsRelOrAbs)(dictIsDirOrFile);
        };
    };
};
module.exports = {
    posixPrinter: posixPrinter,
    windowsPrinter: windowsPrinter,
    printPath: printPath,
    unsafePrintPath: unsafePrintPath,
    debugPrintPath: debugPrintPath,
    Escaper: Escaper,
    slashEscaper: slashEscaper,
    dotEscaper: dotEscaper,
    posixEscaper: posixEscaper,
    windowsEscaper: windowsEscaper,
    newtypeEscaper: newtypeEscaper,
    semigroupEscaper: semigroupEscaper,
    monoidEscaper: monoidEscaper
};

},{"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.String":201,"../Data.String.NonEmpty":194,"../Partial.Unsafe":253,"../Pathy.Name":256,"../Pathy.Path":258,"../Pathy.Phantom":259,"../Pathy.Sandboxed":261,"../Prelude":263}],261:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Pathy_Path = require("../Pathy.Path");
var Pathy_Phantom = require("../Pathy.Phantom");
var Prelude = require("../Prelude");
var SandboxedPath = (function () {
    function SandboxedPath(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SandboxedPath.create = function (value0) {
        return function (value1) {
            return new SandboxedPath(value0, value1);
        };
    };
    return SandboxedPath;
})();
var unsandbox = function (v) {
    return v.value1;
};
var showSandboxedPath = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return new Data_Show.Show(function (v) {
            return "(SandboxedPath " + (Data_Show.show(Pathy_Path.showPathRelDir(Pathy_Phantom.absIsRelOrAbs)(Pathy_Phantom.isDirOrFileDir))(v.value0) + (" " + (Data_Show.show(Pathy_Path.showPathRelDir(dictIsRelOrAbs)(dictIsDirOrFile))(v.value1) + ")")));
        });
    };
};
var sandboxRoot = function (v) {
    return v.value0;
};
var sandboxAny = function (p) {
    return new SandboxedPath(Pathy_Path.rootDir, p);
};
var sandbox = function (dictIsRelOrAbs) {
    return function (root) {
        var goesUp = Pathy_Path.foldPath(false)(Data_Function["const"](true))(function (p) {
            return function (v) {
                return goesUp(p);
            };
        });
        var go = function (f) {
            return function (coe) {
                return function (p) {
                    var $35 = goesUp(Pathy_Path.relativeTo(f(p))(root));
                    if ($35) {
                        return Data_Maybe.Nothing.value;
                    };
                    return new Data_Maybe.Just(coe(p));
                };
            };
        };
        return function ($49) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(SandboxedPath.create(root))(Pathy_Phantom.onRelOrAbs(dictIsRelOrAbs)(go(function (v) {
                return Pathy_Path.appendPath(Pathy_Phantom.absIsRelOrAbs)(root)(v);
            }))(go(Control_Category.id(Control_Category.categoryFn)))($49));
        };
    };
};
var eqSandboxedPath = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(Pathy_Path.eqPath)(x.value0)(y.value0) && Data_Eq.eq(Pathy_Path.eqPath)(x.value1)(y.value1);
            };
        });
    };
};
var ordSandboxedPath = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return new Data_Ord.Ord(function () {
            return eqSandboxedPath(dictIsRelOrAbs)(dictIsDirOrFile);
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(Pathy_Path.ordPath)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(Pathy_Path.ordPath)(x.value1)(y.value1);
            };
        });
    };
};
module.exports = {
    sandbox: sandbox,
    sandboxAny: sandboxAny,
    sandboxRoot: sandboxRoot,
    unsandbox: unsandbox,
    eqSandboxedPath: eqSandboxedPath,
    ordSandboxedPath: ordSandboxedPath,
    showSandboxedPath: showSandboxedPath
};

},{"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Pathy.Path":258,"../Pathy.Phantom":259,"../Prelude":263}],262:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Pathy_Name = require("../Pathy.Name");
var Pathy_Parser = require("../Pathy.Parser");
var Pathy_Path = require("../Pathy.Path");
var Pathy_Phantom = require("../Pathy.Phantom");
var Pathy_Printer = require("../Pathy.Printer");
var Pathy_Sandboxed = require("../Pathy.Sandboxed");
module.exports = {};

},{"../Pathy.Name":256,"../Pathy.Parser":257,"../Pathy.Path":258,"../Pathy.Phantom":259,"../Pathy.Printer":260,"../Pathy.Sandboxed":261}],263:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_DivisionRing = require("../Data.DivisionRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_NaturalTransformation = require("../Data.NaturalTransformation");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
module.exports = {};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Monad":54,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.BooleanAlgebra":91,"../Data.Bounded":93,"../Data.CommutativeRing":98,"../Data.DivisionRing":107,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Field":114,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.NaturalTransformation":170,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Unit":220,"../Data.Void":225}],264:[function(require,module,exports){
// module Signal.Channel

exports.channelP =
  function channelP(constant) {
    return function(v) {
      return function() {
        return constant(v);
      };
    };
  };

exports.sendP =
  function sendP(chan) {
    return function(v) {
      return function() {
        chan.set(v);
      };
    };
  };

exports.subscribe =
  function subscribe(chan) {
    return chan;
  };

},{}],265:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var send = $foreign.sendP;
var channel = $foreign.channelP(Signal.constant);
module.exports = {
    channel: channel,
    send: send,
    subscribe: $foreign.subscribe
};

},{"../Control.Monad.Eff":40,"../Prelude":263,"../Signal":271,"./foreign":264}],266:[function(require,module,exports){
// module Signal.DOM

exports.keyPressedP =
  function keyPressedP(constant) {
    return function(keyCode) {
      return function() {
        var out = constant(false);
        window.addEventListener("keydown", function(e) {
          if (e.keyCode === keyCode) out.set(true);
        });
        window.addEventListener("keyup", function(e) {
          if (e.keyCode === keyCode) out.set(false);
        });
        return out;
      };
    };
  };

exports.mouseButtonP =
  function mouseButtonP(constant) {
    return function(button) {
      return function() {
        var out = constant(false);
        window.addEventListener("mousedown", function(e) {
          if (e.button === button) out.set(true);
        });
        window.addEventListener("mouseup", function(e) {
          if (e.button === button) out.set(false);
        });
        return out;
      };
    };
  };

exports.touchP =
  function touchP(constant) {
    var out = constant([]);
    function report(e) {
      var touches = [], i, l = e.touches.length;
      for (i = 0; i < l; i++) touches.push(e.touches.item(i));
      out.set(touches);
    }
    window.addEventListener("touchstart", report);
    window.addEventListener("touchend", report);
    window.addEventListener("touchmove", report);
    window.addEventListener("touchcancel", report);
    return function() {
      return out;
    };
  };

exports.mousePosP =
  function mousePosP(constant) {
    var out = constant({x:0,y:0});
    window.addEventListener('mousemove', function(e) {
      if (e.pageX !== undefined && e.pageY !== undefined) {
        out.set({x: e.pageX, y: e.pageY});
      } else if (e.clientX !== undefined && e.clientY !== undefined) {
        out.set({
          x: e.clientX + document.body.scrollLeft +
             document.documentElement.scrollLeft,
          y: e.clientY + document.body.scrollTop +
             document.documentElement.scrollTop
        });
      } else {
        throw new Error('Mouse event has no coordinates I recognise!');
      }
    });
    return function() {
      return out;
    };
  };

exports.animationFrameP =
  function animationFrameP(constant) {
    return function(now) {
      return function() {
        var requestAnimFrame, cancelAnimFrame;
        if (window.requestAnimationFrame) {
          requestAnimFrame = window.requestAnimationFrame;
          cancelAnimFrame = window.cancelAnimationFrame;
        } else if (window.mozRequestAnimationFrame) {
          requestAnimFrame = window.mozRequestAnimationFrame;
          cancelAnimFrame = window.mozCancelAnimationFrame;
        } else if (window.webkitRequestAnimationFrame) {
          requestAnimFrame = window.webkitRequestAnimationFrame;
          cancelAnimFrame = window.webkitCancelAnimationFrame;
        } else if (window.msRequestAnimationFrame) {
          requestAnimFrame = window.msRequestAnimationFrame;
          cancelAnimFrame = window.msCancelAnimationFrame;
        } else if (window.oRequestAnimationFrame) {
          requestAnimFrame = window.oRequestAnimationFrame;
          cancelAnimFrame = window.oCancelAnimationFrame;
        } else {
          requestAnimFrame = function(cb) {setTimeout(function() {cb(now())}, 1000/60)};
          cancelAnimFrame = window.clearTimeout;
        }
        var out = constant(now());
        requestAnimFrame(function tick(t) {
          out.set(t); requestAnimFrame(tick);
        });
        return out;
      };
    };
  };

exports.windowDimensionsP = function windowDimensionsP(constant) {
  var out = constant({ w: window.innerWidth, h: window.innerHeight });
  window.addEventListener("resize", function() {
    out.set({ w: window.innerWidth, h: window.innerHeight });
  });
  return function() {
    return out;
  }
}

},{}],267:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Timer = require("../Control.Monad.Eff.Timer");
var DOM = require("../DOM");
var Data_Function = require("../Data.Function");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var Signal_Time = require("../Signal.Time");
var windowDimensions = $foreign.windowDimensionsP(Signal.constant);
var touch = $foreign.touchP(Signal.constant);
var tap = function __do() {
    var v = touch();
    return Signal.flippedMap(Signal.functorSignal)(v)(function (t) {
        if (t.length === 0) {
            return false;
        };
        return true;
    });
};
var mousePos = $foreign.mousePosP(Signal.constant);
var mouseButton = $foreign.mouseButtonP(Signal.constant);
var keyPressed = $foreign.keyPressedP(Signal.constant);
var animationFrame = $foreign.animationFrameP(Signal.constant)(Signal_Time.now);
module.exports = {
    animationFrame: animationFrame,
    keyPressed: keyPressed,
    mouseButton: mouseButton,
    touch: touch,
    tap: tap,
    mousePos: mousePos,
    windowDimensions: windowDimensions
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Timer":34,"../DOM":68,"../Data.Function":125,"../Prelude":263,"../Signal":271,"../Signal.Time":269,"./foreign":266}],268:[function(require,module,exports){
(function (process){
// module Signal.Time

function now() {
  var perf = typeof performance !== 'undefined' ? performance : null,
      proc = typeof process !== 'undefined' ? process : null;
  return (
    perf && (perf.now || perf.webkitNow || perf.msNow || perf.oNow || perf.mozNow) ||
    (proc && proc.hrtime && function() {
      var t = proc.hrtime();
      return (t[0] * 1e9 + t[1]) / 1e6;
    }) ||
    Date.now
  ).call(perf);
};

exports.now = now;

exports.everyP = function everyP(constant) {
  return function(t) {
    var out = constant(now());
    setInterval(function() {
      out.set(now());
    }, t);
    return out;
  };
};

exports.delayP = function delayP(constant) {
  return function(t) {
    return function(sig) {
      var out = constant(sig.get());
      var first = true;
      sig.subscribe(function(val) {
        if (first) {
          first = false;
        } else {
          setTimeout(function() {
            out.set(val);
          }, t);
        }
      });
      return out;
    }
  };
};

exports.sinceP = function sinceP(constant) {
  return function(t) {
    return function(sig) {
      var out = constant(false);
      var first = true;
      var timer = undefined;
      var tick = function() {
        out.set(false);
        timer = undefined;
      };
      sig.subscribe(function() {
        if (first) {
          first = false;
          return;
        }
        if (timer === undefined) {
          out.set(true);
          timer = setTimeout(tick, t);
        } else {
          clearTimeout(timer);
          timer = setTimeout(tick, t);
        }
      });
      return out;
    }
  };
};

}).call(this,require('_process'))
},{"_process":283}],269:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Timer = require("../Control.Monad.Eff.Timer");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var since = $foreign.sinceP(Signal.constant);
var second = 1000.0;
var millisecond = 1.0;
var every = $foreign.everyP(Signal.constant);
var delay = $foreign.delayP(Signal.constant);
var debounce = function (t) {
    return function (s) {
        var whenEqual = function (value) {
            return function (input) {
                return Signal.filter(Data_Eq.eq(Data_Eq.eqBoolean)(value))(value)(input);
            };
        };
        var whenChangeTo = function (value) {
            return function (input) {
                return whenEqual(value)(Signal.dropRepeats(Data_Eq.eqBoolean)(input));
            };
        };
        var leading = whenChangeTo(false)(since(t)(s));
        return Signal.sampleOn(leading)(s);
    };
};
module.exports = {
    every: every,
    delay: delay,
    since: since,
    debounce: debounce,
    millisecond: millisecond,
    second: second,
    now: $foreign.now
};

},{"../Control.Monad.Eff":40,"../Control.Monad.Eff.Timer":34,"../Data.Eq":111,"../Data.Function":125,"../Prelude":263,"../Signal":271,"./foreign":268}],270:[function(require,module,exports){
// module Signal

function make(initial) {
  var subs = [];
  var val = initial;
  var sig = {
    subscribe: function(sub) {
      subs.push(sub);
      sub(val);
    },
    get: function() { return val; },
    set: function(newval) {
      val = newval;
      subs.forEach(function(sub) { sub(newval); });
    }
  };
  return sig;
};

exports.constant = make;

exports.mapSig = function(fun) {
  return function(sig) {
    var out = make(fun(sig.get()));
    sig.subscribe(function(val) { out.set(fun(val)); });
    return out;
  };
};


exports.applySig = function(fun) {
  return function(sig) {
    var out = make(fun.get()(sig.get()));
    var produce = function() { out.set(fun.get()(sig.get())); };
    fun.subscribe(produce);
    sig.subscribe(produce);
    return out;
  };
};

exports.merge = function(sig1) {
  return function(sig2) {
    var out = make(sig1.get());
    sig2.subscribe(out.set);
    sig1.subscribe(out.set);
    return out;
  };
};

exports.foldp = function(fun) {
  return function(seed) {
    return function(sig) {
      var acc = seed;
      var out = make(acc);
      sig.subscribe(function(val) {
        acc = fun(val)(acc);
        out.set(acc);
      });
      return out;
    };
  };
};

exports.sampleOn = function(sig1) {
  return function(sig2) {
    var out = make(sig2.get());
    sig1.subscribe(function() {
      out.set(sig2.get());
    });
    return out;
  };
};

exports.dropRepeats = function(eq) {
  return function(sig) {
    var val = sig.get();
    var out = make(val);
    sig.subscribe(function(newval) {
      if (!eq["eq"](val)(newval)) {
        val = newval;
        out.set(val);
      }
    });
    return out;
  };
};

exports["dropRepeats'"] = function(sig) {
  var val = sig.get();
  var out = make(val);
  sig.subscribe(function(newval) {
    if (val !== newval) {
      val = newval;
      out.set(val);
    }
  });
  return out;
};

exports.runSignal =
  function runSignal(sig) {
    return function() {
      sig.subscribe(function(val) {
        val();
      });
      return {};
    };
  };

exports.unwrap = function(sig) {
  return function() {
    var out = make(sig.get()());
    sig.subscribe(function(val) { out.set(val()); });
    return out;
  };
};

exports.filter = function(fn) {
  return function(seed) {
    return function(sig) {
      var out = make(fn(sig.get()) ? sig.get() : seed);
      sig.subscribe(function(val) { if (fn(val)) out.set(val); });
      return out;
    };
  };
};

exports.flattenArray = function(sig) {
  return function(seed) {
    var first = sig.get().slice();
    if (first.length > 0) {
      seed = first[0];
    } else {
      first = null;
    }
    var out = make(seed);
    var feed = function(items) { items.forEach(out.set); };
    setTimeout(function() { sig.subscribe(function(val) {
      if (first === null) {
        feed(val);
      } else {
        feed(first.slice(1));
        first = null;
      }
    }); }, 0);
    return out;
  };
};

},{}],271:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var squigglyMap = function (dictFunctor) {
    return Data_Functor.map(dictFunctor);
};
var squigglyApply = function (dictApply) {
    return Control_Apply.apply(dictApply);
};
var semigroupSignal = new Data_Semigroup.Semigroup($foreign.merge);
var monoidSignal = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupSignal;
    }, $foreign.constant(Data_Monoid.mempty(dictMonoid)));
};
var mergeMany = function (dictFunctor) {
    return function (dictFoldable) {
        return function (sigs) {
            var mergeMaybe = function (v) {
                return function (v1) {
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return v;
                    };
                    if (v instanceof Data_Maybe.Nothing) {
                        return v1;
                    };
                    if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just($foreign.merge(v.value0)(v1.value0));
                    };
                    throw new Error("Failed pattern match at Signal line 53, column 9 - line 53, column 33: " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Data_Foldable.foldl(dictFoldable)(mergeMaybe)(Data_Maybe.Nothing.value)(Data_Functor.map(dictFunctor)(Data_Maybe.Just.create)(sigs));
        };
    };
};
var functorSignal = new Data_Functor.Functor($foreign.mapSig);
var flippedMap = function (dictFunctor) {
    return Data_Function.flip(Data_Functor.map(dictFunctor));
};
var flatten = function (dictFunctor) {
    return function (dictFoldable) {
        return function (sig) {
            return $foreign.flattenArray(flippedMap(functorSignal)(sig)(function ($14) {
                return Data_Foldable.fold(dictFoldable)(Data_Monoid.monoidArray)(Data_Functor.map(dictFunctor)(function (i) {
                    return [ i ];
                })($14));
            }));
        };
    };
};
var filterMap = function (f) {
    return function (def) {
        return function (sig) {
            return Data_Functor.map(functorSignal)(Data_Maybe.fromMaybe(def))($foreign.filter(Data_Maybe.isJust)(new Data_Maybe.Just(def))(Data_Functor.map(functorSignal)(f)(sig)));
        };
    };
};
var applySignal = new Control_Apply.Apply(function () {
    return functorSignal;
}, $foreign.applySig);
var map2 = function (f) {
    return function (a) {
        return function (b) {
            return squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b);
        };
    };
};
var map3 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c);
            };
        };
    };
};
var map4 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c))(d);
                };
            };
        };
    };
};
var map5 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c))(d))(e);
                    };
                };
            };
        };
    };
};
var applicativeSignal = new Control_Applicative.Applicative(function () {
    return applySignal;
}, $foreign.constant);
module.exports = {
    mergeMany: mergeMany,
    filterMap: filterMap,
    flatten: flatten,
    squigglyMap: squigglyMap,
    squigglyApply: squigglyApply,
    flippedMap: flippedMap,
    map2: map2,
    map3: map3,
    map4: map4,
    map5: map5,
    functorSignal: functorSignal,
    applySignal: applySignal,
    applicativeSignal: applicativeSignal,
    semigroupSignal: semigroupSignal,
    monoidSignal: monoidSignal,
    constant: $foreign.constant,
    merge: $foreign.merge,
    foldp: $foreign.foldp,
    sampleOn: $foreign.sampleOn,
    dropRepeats: $foreign.dropRepeats,
    "dropRepeats'": $foreign["dropRepeats'"],
    runSignal: $foreign.runSignal,
    unwrap: $foreign.unwrap,
    filter: $foreign.filter,
    flattenArray: $foreign.flattenArray
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Monad.Eff":40,"../Control.Semigroupoid":60,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Semigroup":185,"../Prelude":263,"./foreign":270}],272:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser");
var withError = function (p) {
    return function (msg) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Text_Parsing_StringParser.fail(msg));
    };
};
var sepEndBy1 = function (p) {
    return function (sep) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sep)(function (v1) {
                return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sepEndBy(p)(sep))(function (v2) {
                    return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_List_Types.Cons(v, v2));
                });
            }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List.singleton(v)));
        });
    };
};
var sepEndBy = function (p) {
    return function (sep) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(sepEndBy1(p)(sep))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value));
    };
};
var optional = function (p) {
    return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
    }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit));
};
var option = function (a) {
    return function (p) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
    };
};
var optionMaybe = function (p) {
    return option(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Maybe.Just.create)(p));
};
var many1Till = function (p) {
    return function (end) {
        var ending = function (acc) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(end)(function (v) {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Control_Monad_Rec_Class.Done(Data_List.reverse(acc)));
            });
        };
        var $$continue = function (acc) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Control_Monad_Rec_Class.Loop(new Data_List_Types.Cons(v, acc)));
            });
        };
        var inner = function (acc) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(ending(acc))($$continue(acc));
        };
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return Control_Monad_Rec_Class.tailRecM(Text_Parsing_StringParser.monadRecParser)(inner)(Control_Applicative.pure(Data_List_Types.applicativeList)(v));
        });
    };
};
var manyTill = function (p) {
    return function (end) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(end)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value)))(many1Till(p)(end));
    };
};
var many = Data_List.manyRec(Text_Parsing_StringParser.monadRecParser)(Text_Parsing_StringParser.alternativeParser);
var many1 = function (p) {
    return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_Types.Cons.create)(p))(many(p));
};
var sepBy1 = function (p) {
    return function (sep) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(sep)(p)))(function (v1) {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_List_Types.Cons(v, v1));
            });
        });
    };
};
var sepBy = function (p) {
    return function (sep) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(sepBy1(p)(sep))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value));
    };
};
var lookAhead = function (v) {
    return function (s) {
        var v1 = v(s);
        if (v1 instanceof Data_Either.Right) {
            return new Data_Either.Right({
                result: v1.value0.result,
                suffix: s
            });
        };
        return v1;
    };
};
var endBy1 = function (p) {
    return function (sep) {
        return many1(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(p)(sep));
    };
};
var endBy = function (p) {
    return function (sep) {
        return many(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(p)(sep));
    };
};
var choice = function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_StringParser.altParser))(Text_Parsing_StringParser.fail("Nothing to parse"));
};
var chainr1$prime = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(f)(function (v) {
                return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(chainr1(p)(f))(function (v1) {
                    return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v(a)(v1));
                });
            }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var chainr1 = function (p) {
    return function (f) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return chainr1$prime(p)(f)(v);
        });
    };
};
var chainr = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(chainr1(p)(f))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var chainl1$prime = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(f)(function (v) {
                return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v1) {
                    return chainl1$prime(p)(f)(v(a)(v1));
                });
            }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var chainl1 = function (p) {
    return function (f) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return chainl1$prime(p)(f)(v);
        });
    };
};
var chainl = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(chainl1(p)(f))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var between = function (open) {
    return function (close) {
        return function (p) {
            return Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(open)(p))(close);
        };
    };
};
module.exports = {
    lookAhead: lookAhead,
    many: many,
    many1: many1,
    withError: withError,
    between: between,
    option: option,
    optional: optional,
    optionMaybe: optionMaybe,
    sepBy: sepBy,
    sepBy1: sepBy1,
    sepEndBy: sepEndBy,
    sepEndBy1: sepEndBy1,
    endBy1: endBy1,
    endBy: endBy,
    chainr: chainr,
    chainl: chainl,
    chainl1: chainl1,
    "chainl1'": chainl1$prime,
    chainr1: chainr1,
    "chainr1'": chainr1$prime,
    choice: choice,
    manyTill: manyTill,
    many1Till: many1Till
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Lazy":15,"../Control.Monad.Rec.Class":47,"../Data.Either":108,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.List":151,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Unit":220,"../Prelude":263,"../Text.Parsing.StringParser":274}],273:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Char = require("../Data.Char");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_String_Regex = require("../Data.String.Regex");
var Data_String_Regex_Flags = require("../Data.String.Regex.Flags");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser");
var Text_Parsing_StringParser_Combinators = require("../Text.Parsing.StringParser.Combinators");
var string = function (nt) {
    return function (s) {
        if (Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String["indexOf'"](nt)(s.pos)(s.str))(new Data_Maybe.Just(s.pos))) {
            return new Data_Either.Right({
                result: nt,
                suffix: {
                    str: s.str,
                    pos: s.pos + Data_String.length(nt) | 0
                }
            });
        };
        return new Data_Either.Left({
            pos: s.pos,
            error: new Text_Parsing_StringParser.ParseError("Expected '" + (nt + "'."))
        });
    };
};
var regex = function (pat) {
    var pattern = (function () {
        var v = Data_String.stripPrefix("^")(pat);
        if (v instanceof Data_Maybe.Nothing) {
            return "^" + pat;
        };
        return pat;
    })();
    var matchRegex = function (r) {
        return function (v) {
            var remainder = Data_String.drop(v.pos)(v.str);
            var v1 = Data_Array.uncons(Data_Maybe.fromMaybe([  ])(Data_String_Regex.match(r)(remainder)));
            if (v1 instanceof Data_Maybe.Just && v1.value0.head instanceof Data_Maybe.Just) {
                return new Data_Either.Right({
                    result: v1.value0.head.value0,
                    suffix: {
                        str: v.str,
                        pos: v.pos + Data_String.length(v1.value0.head.value0) | 0
                    }
                });
            };
            return new Data_Either.Left({
                pos: v.pos,
                error: new Text_Parsing_StringParser.ParseError("no match")
            });
        };
    };
    var v = Data_String_Regex.regex(pattern)(Data_String_Regex_Flags.noFlags);
    if (v instanceof Data_Either.Left) {
        return Text_Parsing_StringParser.fail("Text.Parsing.StringParser.String.regex': illegal regex " + pat);
    };
    if (v instanceof Data_Either.Right) {
        return matchRegex(v.value0);
    };
    throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 121, column 3 - line 125, column 19: " + [ v.constructor.name ]);
};
var eof = function (s) {
    if (s.pos < Data_String.length(s.str)) {
        return new Data_Either.Left({
            pos: s.pos,
            error: new Text_Parsing_StringParser.ParseError("Expected EOF")
        });
    };
    return new Data_Either.Right({
        result: Data_Unit.unit,
        suffix: s
    });
};
var anyChar = function (v) {
    var v1 = Data_String.charAt(v.pos)(v.str);
    if (v1 instanceof Data_Maybe.Just) {
        return new Data_Either.Right({
            result: v1.value0,
            suffix: {
                str: v.str,
                pos: v.pos + 1 | 0
            }
        });
    };
    if (v1 instanceof Data_Maybe.Nothing) {
        return new Data_Either.Left({
            pos: v.pos,
            error: new Text_Parsing_StringParser.ParseError("Unexpected EOF")
        });
    };
    throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 45, column 3 - line 47, column 64: " + [ v1.constructor.name ]);
};
var anyDigit = Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
    var $39 = v >= "0" && v <= "9";
    if ($39) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
    };
    return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(v) + " is not a digit"));
}));
var lowerCaseChar = Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
    var $41 = Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqInt)(Data_Char.toCharCode(v))(Data_Array.range(97)(122));
    if ($41) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
    };
    return Text_Parsing_StringParser.fail("Expected a lower case character but found " + Data_Show.show(Data_Show.showChar)(v));
}));
var satisfy = function (f) {
    return Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
        var $43 = f(v);
        if ($43) {
            return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
        };
        return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(v) + " did not satisfy predicate"));
    }));
};
var $$char = function (c) {
    return Text_Parsing_StringParser_Combinators.withError(satisfy(function (v) {
        return v === c;
    }))("Could not match character " + Data_Show.show(Data_Show.showChar)(c));
};
var noneOf = function (dictFoldable) {
    return function ($47) {
        return satisfy(Data_Function.flip(Data_Foldable.notElem(dictFoldable)(Data_Eq.eqChar))($47));
    };
};
var oneOf = function (dictFoldable) {
    return function ($48) {
        return satisfy(Data_Function.flip(Data_Foldable.elem(dictFoldable)(Data_Eq.eqChar))($48));
    };
};
var whiteSpace = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(satisfy(function (c) {
    return c === "\x0a" || (c === "\x0d" || (c === " " || c === "\x09"));
})))(function (v) {
    return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String.singleton)(v));
});
var skipSpaces = Data_Functor["void"](Text_Parsing_StringParser.functorParser)(whiteSpace);
var upperCaseChar = Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
    var $46 = Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqInt)(Data_Char.toCharCode(v))(Data_Array.range(65)(90));
    if ($46) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
    };
    return Text_Parsing_StringParser.fail("Expected an upper case character but found " + Data_Show.show(Data_Show.showChar)(v));
}));
var anyLetter = Text_Parsing_StringParser_Combinators.withError(Control_Alt.alt(Text_Parsing_StringParser.altParser)(lowerCaseChar)(upperCaseChar))("Expected a letter");
var alphaNum = Text_Parsing_StringParser_Combinators.withError(Control_Alt.alt(Text_Parsing_StringParser.altParser)(anyLetter)(anyDigit))("Expected a letter or a number");
module.exports = {
    eof: eof,
    anyChar: anyChar,
    anyDigit: anyDigit,
    string: string,
    satisfy: satisfy,
    "char": $$char,
    whiteSpace: whiteSpace,
    skipSpaces: skipSpaces,
    oneOf: oneOf,
    noneOf: noneOf,
    lowerCaseChar: lowerCaseChar,
    upperCaseChar: upperCaseChar,
    anyLetter: anyLetter,
    alphaNum: alphaNum,
    regex: regex
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Char":97,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.String":201,"../Data.String.Regex":197,"../Data.String.Regex.Flags":195,"../Data.Unit":220,"../Prelude":263,"../Text.Parsing.StringParser":274,"../Text.Parsing.StringParser.Combinators":272}],274:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var ParseError = (function () {
    function ParseError(value0) {
        this.value0 = value0;
    };
    ParseError.create = function (value0) {
        return new ParseError(value0);
    };
    return ParseError;
})();
var Parser = function (x) {
    return x;
};
var unParser = function (v) {
    return v;
};
var $$try = function (v) {
    return function (v1) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v2) {
            var $34 = {};
            for (var $35 in v2) {
                if ({}.hasOwnProperty.call(v2, $35)) {
                    $34[$35] = v2[$35];
                };
            };
            $34.pos = v1.pos;
            return $34;
        })(v(v1));
    };
};
var showParseError = new Data_Show.Show(function (v) {
    return v.value0;
});
var runParser = function (v) {
    return function (s) {
        return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(function (v1) {
            return v1.error;
        })(function (v1) {
            return v1.result;
        })(v({
            str: s,
            pos: 0
        }));
    };
};
var lazyParser = new Control_Lazy.Lazy(function (f) {
    return Parser(function (str) {
        return unParser(f(Data_Unit.unit))(str);
    });
});
var functorParser = new Data_Functor.Functor(function (f) {
    return function (v) {
        return function ($83) {
            return Data_Functor.map(Data_Either.functorEither)(function (v1) {
                return {
                    result: f(v1.result),
                    suffix: v1.suffix
                };
            })(v($83));
        };
    };
});
var fail = function (msg) {
    return function (v) {
        return new Data_Either.Left({
            pos: v.pos,
            error: new ParseError(msg)
        });
    };
};
var eqParseError = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x.value0 === y.value0;
    };
});
var ordParseError = new Data_Ord.Ord(function () {
    return eqParseError;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
    };
});
var applyParser = new Control_Apply.Apply(function () {
    return functorParser;
}, function (v) {
    return function (v1) {
        return function (s) {
            return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v2) {
                return Control_Bind.bind(Data_Either.bindEither)(v1(v2.suffix))(function (v3) {
                    return Control_Applicative.pure(Data_Either.applicativeEither)({
                        result: v2.result(v3.result),
                        suffix: v3.suffix
                    });
                });
            });
        };
    };
});
var bindParser = new Control_Bind.Bind(function () {
    return applyParser;
}, function (v) {
    return function (f) {
        return function (s) {
            return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v1) {
                return unParser(f(v1.result))(v1.suffix);
            });
        };
    };
});
var semigroupParser = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParser)(Data_Semigroup.append(dictSemigroup)));
};
var applicativeParser = new Control_Applicative.Applicative(function () {
    return applyParser;
}, function (a) {
    return function (s) {
        return new Data_Either.Right({
            result: a,
            suffix: s
        });
    };
});
var monadParser = new Control_Monad.Monad(function () {
    return applicativeParser;
}, function () {
    return bindParser;
});
var monadRecParser = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadParser;
}, function (f) {
    return function (a) {
        var split = function (v) {
            if (v.result instanceof Control_Monad_Rec_Class.Loop) {
                return new Control_Monad_Rec_Class.Loop({
                    state: v.result.value0,
                    str: v.suffix
                });
            };
            if (v.result instanceof Control_Monad_Rec_Class.Done) {
                return new Control_Monad_Rec_Class.Done({
                    result: v.result.value0,
                    suffix: v.suffix
                });
            };
            throw new Error("Failed pattern match at Text.Parsing.StringParser line 88, column 7 - line 88, column 70: " + [ v.constructor.name ]);
        };
        return function (str) {
            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEither)(function (st) {
                return Data_Functor.map(Data_Either.functorEither)(split)(unParser(f(st.state))(st.str));
            })({
                state: a,
                str: str
            });
        };
    };
});
var altParser = new Control_Alt.Alt(function () {
    return functorParser;
}, function (v) {
    return function (v1) {
        return function (s) {
            var v2 = v(s);
            if (v2 instanceof Data_Either.Left) {
                if (s.pos === v2.value0.pos) {
                    return v1(s);
                };
                if (Data_Boolean.otherwise) {
                    return new Data_Either.Left({
                        error: v2.value0.error,
                        pos: v2.value0.pos
                    });
                };
            };
            return v2;
        };
    };
});
var plusParser = new Control_Plus.Plus(function () {
    return altParser;
}, fail("No alternative"));
var alternativeParser = new Control_Alternative.Alternative(function () {
    return applicativeParser;
}, function () {
    return plusParser;
});
var monadZeroParser = new Control_MonadZero.MonadZero(function () {
    return alternativeParser;
}, function () {
    return monadParser;
});
var monadPlusParser = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroParser;
});
module.exports = {
    ParseError: ParseError,
    Parser: Parser,
    unParser: unParser,
    runParser: runParser,
    fail: fail,
    "try": $$try,
    showParseError: showParseError,
    eqParseError: eqParseError,
    ordParseError: ordParseError,
    functorParser: functorParser,
    applyParser: applyParser,
    applicativeParser: applicativeParser,
    altParser: altParser,
    plusParser: plusParser,
    alternativeParser: alternativeParser,
    bindParser: bindParser,
    monadParser: monadParser,
    monadZeroParser: monadZeroParser,
    monadPlusParser: monadPlusParser,
    monadRecParser: monadRecParser,
    lazyParser: lazyParser,
    semigroupParser: semigroupParser
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Lazy":15,"../Control.Monad":54,"../Control.Monad.Rec.Class":47,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Bifunctor":88,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],275:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Type_Proxy = require("../Type.Proxy");
var BProxy = (function () {
    function BProxy() {

    };
    BProxy.value = new BProxy();
    return BProxy;
})();
var IsBoolean = function (reflectBoolean) {
    this.reflectBoolean = reflectBoolean;
};
var And = {};
var Or = {};
var Not = {};
var If = {};
var reflectBoolean = function (dict) {
    return dict.reflectBoolean;
};
var orTrue = Or;
var orFalse = Or;
var or = function (dictOr) {
    return function (v) {
        return function (v1) {
            return BProxy.value;
        };
    };
};
var notTrue = Not;
var notFalse = Not;
var not = function (dictNot) {
    return function (v) {
        return BProxy.value;
    };
};
var isBooleanTrue = new IsBoolean(function (v) {
    return true;
});
var isBooleanFalse = new IsBoolean(function (v) {
    return false;
});
var reifyBoolean = function (v) {
    return function (f) {
        if (v) {
            return f(isBooleanTrue)(BProxy.value);
        };
        if (!v) {
            return f(isBooleanFalse)(BProxy.value);
        };
        throw new Error("Failed pattern match at Type.Data.Boolean line 36, column 1 - line 36, column 83: " + [ v.constructor.name, f.constructor.name ]);
    };
};
var if_ = function (dictIf) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                return Type_Proxy["Proxy"].value;
            };
        };
    };
};
var ifTrue = If;
var ifFalse = If;
var andTrue = And;
var andFalse = And;
var and = function (dictAnd) {
    return function (v) {
        return function (v1) {
            return BProxy.value;
        };
    };
};
module.exports = {
    BProxy: BProxy,
    IsBoolean: IsBoolean,
    reflectBoolean: reflectBoolean,
    reifyBoolean: reifyBoolean,
    And: And,
    and: and,
    Or: Or,
    or: or,
    Not: Not,
    not: not,
    If: If,
    if_: if_,
    isBooleanTrue: isBooleanTrue,
    isBooleanFalse: isBooleanFalse,
    andTrue: andTrue,
    andFalse: andFalse,
    orTrue: orTrue,
    orFalse: orFalse,
    notTrue: notTrue,
    notFalse: notFalse,
    ifTrue: ifTrue,
    ifFalse: ifFalse
};

},{"../Type.Proxy":279}],276:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Ordering = require("../Data.Ordering");
var Type_Data_Boolean = require("../Type.Data.Boolean");
var OProxy = (function () {
    function OProxy() {

    };
    OProxy.value = new OProxy();
    return OProxy;
})();
var IsOrdering = function (reflectOrdering) {
    this.reflectOrdering = reflectOrdering;
};
var AppendOrdering = {};
var InvertOrdering = {};
var Equals = {};
var reflectOrdering = function (dict) {
    return dict.reflectOrdering;
};
var isOrderingLT = new IsOrdering(function (v) {
    return Data_Ordering.LT.value;
});
var isOrderingGT = new IsOrdering(function (v) {
    return Data_Ordering.GT.value;
});
var isOrderingEQ = new IsOrdering(function (v) {
    return Data_Ordering.EQ.value;
});
var reifyOrdering = function (v) {
    return function (f) {
        if (v instanceof Data_Ordering.LT) {
            return f(isOrderingLT)(OProxy.value);
        };
        if (v instanceof Data_Ordering.EQ) {
            return f(isOrderingEQ)(OProxy.value);
        };
        if (v instanceof Data_Ordering.GT) {
            return f(isOrderingGT)(OProxy.value);
        };
        throw new Error("Failed pattern match at Type.Data.Ordering line 38, column 1 - line 38, column 86: " + [ v.constructor.name, f.constructor.name ]);
    };
};
var invertOrderingLT = InvertOrdering;
var invertOrderingGT = InvertOrdering;
var invertOrderingEQ = InvertOrdering;
var invertOrdering = function (dictInvertOrdering) {
    return function (v) {
        return OProxy.value;
    };
};
var equalsLTLT = Equals;
var equalsLTGT = Equals;
var equalsLTEQ = Equals;
var equalsGTLT = Equals;
var equalsGTGT = Equals;
var equalsGTEQ = Equals;
var equalsEQLT = Equals;
var equalsEQGT = Equals;
var equalsEQEQ = Equals;
var equals = function (dictEquals) {
    return function (v) {
        return function (v1) {
            return Type_Data_Boolean.BProxy.value;
        };
    };
};
var appendOrderingLT = AppendOrdering;
var appendOrderingGT = AppendOrdering;
var appendOrderingEQ = AppendOrdering;
var appendOrdering = function (dictAppendOrdering) {
    return function (v) {
        return function (v1) {
            return OProxy.value;
        };
    };
};
module.exports = {
    OProxy: OProxy,
    IsOrdering: IsOrdering,
    reflectOrdering: reflectOrdering,
    reifyOrdering: reifyOrdering,
    AppendOrdering: AppendOrdering,
    appendOrdering: appendOrdering,
    InvertOrdering: InvertOrdering,
    invertOrdering: invertOrdering,
    Equals: Equals,
    equals: equals,
    isOrderingLT: isOrderingLT,
    isOrderingEQ: isOrderingEQ,
    isOrderingGT: isOrderingGT,
    appendOrderingLT: appendOrderingLT,
    appendOrderingEQ: appendOrderingEQ,
    appendOrderingGT: appendOrderingGT,
    invertOrderingLT: invertOrderingLT,
    invertOrderingEQ: invertOrderingEQ,
    invertOrderingGT: invertOrderingGT,
    equalsEQEQ: equalsEQEQ,
    equalsLTLT: equalsLTLT,
    equalsGTGT: equalsGTGT,
    equalsEQLT: equalsEQLT,
    equalsEQGT: equalsEQGT,
    equalsLTEQ: equalsLTEQ,
    equalsLTGT: equalsLTGT,
    equalsGTLT: equalsGTLT,
    equalsGTEQ: equalsGTEQ
};

},{"../Data.Ordering":179,"../Type.Data.Boolean":275}],277:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Symbol = require("../Data.Symbol");
var Type_Data_Boolean = require("../Type.Data.Boolean");
var Type_Data_Ordering = require("../Type.Data.Ordering");
var CompareSymbol = {};
var AppendSymbol = {};
var Equals = {};
var equalsSymbol = function (dictCompareSymbol) {
    return function (dictEquals) {
        return Equals;
    };
};
var equals = function (dictEquals) {
    return function (v) {
        return function (v1) {
            return Type_Data_Boolean.BProxy.value;
        };
    };
};
var compareSymbol = function (dictCompareSymbol) {
    return function (v) {
        return function (v1) {
            return Type_Data_Ordering.OProxy.value;
        };
    };
};
var appendSymbol = function (dictAppendSymbol) {
    return function (v) {
        return function (v1) {
            return Data_Symbol.SProxy.value;
        };
    };
};
module.exports = {
    CompareSymbol: CompareSymbol,
    compareSymbol: compareSymbol,
    AppendSymbol: AppendSymbol,
    appendSymbol: appendSymbol,
    Equals: Equals,
    equals: equals,
    equalsSymbol: equalsSymbol
};

},{"../Data.Symbol":202,"../Type.Data.Boolean":275,"../Type.Data.Ordering":276}],278:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var TypeEquals = function (from, to) {
    this.from = from;
    this.to = to;
};
var to = function (dict) {
    return dict.to;
};
var refl = new TypeEquals(function (a) {
    return a;
}, function (a) {
    return a;
});
var from = function (dict) {
    return dict.from;
};
module.exports = {
    TypeEquals: TypeEquals,
    to: to,
    from: from,
    refl: refl
};

},{}],279:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Proxy3 = (function () {
    function Proxy3() {

    };
    Proxy3.value = new Proxy3();
    return Proxy3;
})();
var Proxy2 = (function () {
    function Proxy2() {

    };
    Proxy2.value = new Proxy2();
    return Proxy2;
})();
var $$Proxy = (function () {
    function $$Proxy() {

    };
    $$Proxy.value = new $$Proxy();
    return $$Proxy;
})();
var showProxy3 = new Data_Show.Show(function (v) {
    return "Proxy3";
});
var showProxy2 = new Data_Show.Show(function (v) {
    return "Proxy2";
});
var showProxy = new Data_Show.Show(function (v) {
    return "Proxy";
});
var semiringProxy3 = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, Proxy3.value, Proxy3.value);
var semiringProxy2 = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, Proxy2.value, Proxy2.value);
var semiringProxy = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, $$Proxy.value, $$Proxy.value);
var semigroupProxy3 = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
});
var semigroupProxy2 = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
});
var semigroupProxy = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var ringProxy3 = new Data_Ring.Ring(function () {
    return semiringProxy3;
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
});
var ringProxy2 = new Data_Ring.Ring(function () {
    return semiringProxy2;
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
});
var ringProxy = new Data_Ring.Ring(function () {
    return semiringProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var heytingAlgebraProxy3 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, Proxy3.value, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return Proxy3.value;
}, Proxy3.value);
var heytingAlgebraProxy2 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, Proxy2.value, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return Proxy2.value;
}, Proxy2.value);
var heytingAlgebraProxy = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, $$Proxy.value, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return $$Proxy.value;
}, $$Proxy.value);
var functorProxy = new Data_Functor.Functor(function (f) {
    return function (m) {
        return $$Proxy.value;
    };
});
var eqProxy3 = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy3 = new Data_Ord.Ord(function () {
    return eqProxy3;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var eqProxy2 = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy2 = new Data_Ord.Ord(function () {
    return eqProxy2;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var eqProxy = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy = new Data_Ord.Ord(function () {
    return eqProxy;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var discardProxy3 = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var discardProxy2 = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var discardProxy = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var commutativeRingProxy3 = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy3;
});
var commutativeRingProxy2 = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy2;
});
var commutativeRingProxy = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy;
});
var boundedProxy3 = new Data_Bounded.Bounded(function () {
    return ordProxy3;
}, Proxy3.value, Proxy3.value);
var boundedProxy2 = new Data_Bounded.Bounded(function () {
    return ordProxy2;
}, Proxy2.value, Proxy2.value);
var boundedProxy = new Data_Bounded.Bounded(function () {
    return ordProxy;
}, $$Proxy.value, $$Proxy.value);
var booleanAlgebraProxy3 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy3;
});
var booleanAlgebraProxy2 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy2;
});
var booleanAlgebraProxy = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy;
});
var applyProxy = new Control_Apply.Apply(function () {
    return functorProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var bindProxy = new Control_Bind.Bind(function () {
    return applyProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var applicativeProxy = new Control_Applicative.Applicative(function () {
    return applyProxy;
}, function (v) {
    return $$Proxy.value;
});
var monadProxy = new Control_Monad.Monad(function () {
    return applicativeProxy;
}, function () {
    return bindProxy;
});
module.exports = {
    "Proxy": $$Proxy,
    Proxy2: Proxy2,
    Proxy3: Proxy3,
    eqProxy: eqProxy,
    functorProxy: functorProxy,
    ordProxy: ordProxy,
    applicativeProxy: applicativeProxy,
    applyProxy: applyProxy,
    bindProxy: bindProxy,
    booleanAlgebraProxy: booleanAlgebraProxy,
    boundedProxy: boundedProxy,
    commutativeRingProxy: commutativeRingProxy,
    discardProxy: discardProxy,
    heytingAlgebraProxy: heytingAlgebraProxy,
    monadProxy: monadProxy,
    ringProxy: ringProxy,
    semigroupProxy: semigroupProxy,
    semiringProxy: semiringProxy,
    showProxy: showProxy,
    eqProxy2: eqProxy2,
    ordProxy2: ordProxy2,
    booleanAlgebraProxy2: booleanAlgebraProxy2,
    boundedProxy2: boundedProxy2,
    commutativeRingProxy2: commutativeRingProxy2,
    discardProxy2: discardProxy2,
    heytingAlgebraProxy2: heytingAlgebraProxy2,
    ringProxy2: ringProxy2,
    semigroupProxy2: semigroupProxy2,
    semiringProxy2: semiringProxy2,
    showProxy2: showProxy2,
    eqProxy3: eqProxy3,
    ordProxy3: ordProxy3,
    booleanAlgebraProxy3: booleanAlgebraProxy3,
    boundedProxy3: boundedProxy3,
    commutativeRingProxy3: commutativeRingProxy3,
    discardProxy3: discardProxy3,
    heytingAlgebraProxy3: heytingAlgebraProxy3,
    ringProxy3: ringProxy3,
    semigroupProxy3: semigroupProxy3,
    semiringProxy3: semiringProxy3,
    showProxy3: showProxy3
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Data.BooleanAlgebra":91,"../Data.Bounded":93,"../Data.CommutativeRing":98,"../Data.Eq":111,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Prelude":263}],280:[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function (x) {
  return x;
};

},{}],281:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":280}],282:[function(require,module,exports){
require('Main').main();

},{"Main":242}],283:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],284:[function(require,module,exports){
(function (setImmediate,clearImmediate){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":283,"timers":284}]},{},[282]);
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var OBJFile = function () {
  function OBJFile(fileContents, defaultModelName) {
    _classCallCheck(this, OBJFile);

    this._reset();
    this.fileContents = fileContents;
    this.defaultModelName = defaultModelName || 'untitled';
  }

  _createClass(OBJFile, [{
    key: '_reset',
    value: function _reset() {
      this.result = {
        models: [],
        materialLibraries: []
      };
      this.currentMaterial = '';
      this.currentGroup = '';
      this.smoothingGroup = 0;
    }
  }, {
    key: 'parse',
    value: function parse() {
      this._reset();

      var _stripComments = function _stripComments(lineString) {
        var commentIndex = lineString.indexOf('#');
        if (commentIndex > -1) {
          return lineString.substring(0, commentIndex);
        }
        return lineString;
      };

      var lines = this.fileContents.split('\n');
      for (var i = 0; i < lines.length; i += 1) {
        var line = _stripComments(lines[i]);

        var lineItems = line.replace(/\s\s+/g, ' ').trim().split(' ');

        switch (lineItems[0].toLowerCase()) {
          case 'o':
            // Start A New Model
            this._parseObject(lineItems);
            break;
          case 'g':
            // Start a new polygon group
            this._parseGroup(lineItems);
            break;
          case 'v':
            // Define a vertex for the current model
            this._parseVertexCoords(lineItems);
            break;
          case 'vt':
            // Texture Coords
            this._parseTextureCoords(lineItems);
            break;
          case 'vn':
            // Define a vertex normal for the current model
            this._parseVertexNormal(lineItems);
            break;
          case 's':
            // Smooth shading statement
            this._parseSmoothShadingStatement(lineItems);
            break;
          case 'f':
            // Define a Face/Polygon
            this._parsePolygon(lineItems);
            break;
          case 'mtllib':
            // Reference to a material library file (.mtl)
            this._parseMtlLib(lineItems);
            break;
          case 'usemtl':
            // Sets the current material to be applied to polygons defined from this point forward
            this._parseUseMtl(lineItems);
            break;
        }
      }

      return this.result;
    }
  }, {
    key: '_currentModel',
    value: function _currentModel() {
      if (this.result.models.length == 0) {
        this.result.models.push({
          name: this.defaultModelName,
          vertices: [],
          textureCoords: [],
          vertexNormals: [],
          faces: []
        });
        this.currentGroup = '';
        this.smoothingGroup = 0;
      }

      return this.result.models[this.result.models.length - 1];
    }
  }, {
    key: '_parseObject',
    value: function _parseObject(lineItems) {
      var modelName = lineItems.length >= 2 ? lineItems[1] : this._getDefaultModelName();
      this.result.models.push({
        name: modelName,
        vertices: [],
        textureCoords: [],
        vertexNormals: [],
        faces: []
      });
      this.currentGroup = '';
      this.smoothingGroup = 0;
    }
  }, {
    key: '_parseGroup',
    value: function _parseGroup(lineItems) {
      if (lineItems.length != 2) {
        throw 'Group statements must have exactly 1 argument (eg. g group_1)';
      }

      this.currentGroup = lineItems[1];
    }
  }, {
    key: '_parseVertexCoords',
    value: function _parseVertexCoords(lineItems) {
      var x = lineItems.length >= 2 ? parseFloat(lineItems[1]) : 0.0;
      var y = lineItems.length >= 3 ? parseFloat(lineItems[2]) : 0.0;
      var z = lineItems.length >= 4 ? parseFloat(lineItems[3]) : 0.0;

      this._currentModel().vertices.push({ x: x, y: y, z: z });
    }
  }, {
    key: '_parseTextureCoords',
    value: function _parseTextureCoords(lineItems) {
      var u = lineItems.length >= 2 ? parseFloat(lineItems[1]) : 0.0;
      var v = lineItems.length >= 3 ? parseFloat(lineItems[2]) : 0.0;
      var w = lineItems.length >= 4 ? parseFloat(lineItems[3]) : 0.0;

      this._currentModel().textureCoords.push({ u: u, v: v, w: w });
    }
  }, {
    key: '_parseVertexNormal',
    value: function _parseVertexNormal(lineItems) {
      var x = lineItems.length >= 2 ? parseFloat(lineItems[1]) : 0.0;
      var y = lineItems.length >= 3 ? parseFloat(lineItems[2]) : 0.0;
      var z = lineItems.length >= 4 ? parseFloat(lineItems[3]) : 0.0;

      this._currentModel().vertexNormals.push({ x: x, y: y, z: z });
    }
  }, {
    key: '_parsePolygon',
    value: function _parsePolygon(lineItems) {
      var totalVertices = lineItems.length - 1;
      if (totalVertices < 3) {
        throw 'Face statement has less than 3 vertices' + this.filePath + this.lineNumber;
      }

      var face = {
        material: this.currentMaterial,
        group: this.currentGroup,
        smoothingGroup: this.smoothingGroup,
        vertices: []
      };

      for (var i = 0; i < totalVertices; i += 1) {
        var vertexString = lineItems[i + 1];
        var vertexValues = vertexString.split('/');

        if (vertexValues.length < 1 || vertexValues.length > 3) {
          throw 'Two many values (separated by /) for a single vertex' + this.filePath + this.lineNumber;
        }

        var vertexIndex = 0;
        var textureCoordsIndex = 0;
        var vertexNormalIndex = 0;
        vertexIndex = parseInt(vertexValues[0]);
        if (vertexValues.length > 1 && !vertexValues[1] == '') {
          textureCoordsIndex = parseInt(vertexValues[1]);
        }
        if (vertexValues.length > 2) {
          vertexNormalIndex = parseInt(vertexValues[2]);
        }

        if (vertexIndex == 0) {
          throw 'Faces uses invalid vertex index of 0';
        }

        // Negative vertex indices refer to the nth last defined vertex
        // convert these to postive indices for simplicity
        if (vertexIndex < 0) {
          vertexIndex = this._currentModel().vertices.length + 1 + vertexIndex;
        }

        face.vertices.push({
          vertexIndex: vertexIndex,
          textureCoordsIndex: textureCoordsIndex,
          vertexNormalIndex: vertexNormalIndex
        });
      }
      this._currentModel().faces.push(face);
    }
  }, {
    key: '_parseMtlLib',
    value: function _parseMtlLib(lineItems) {
      if (lineItems.length >= 2) {
        this.result.materialLibraries.push(lineItems[1]);
      }
    }
  }, {
    key: '_parseUseMtl',
    value: function _parseUseMtl(lineItems) {
      if (lineItems.length >= 2) {
        this.currentMaterial = lineItems[1];
      }
    }
  }, {
    key: '_parseSmoothShadingStatement',
    value: function _parseSmoothShadingStatement(lineItems) {
      if (lineItems.length != 2) {
        throw 'Smoothing group statements must have exactly 1 argument (eg. s <number|off>)';
      }

      var groupNumber = lineItems[1].toLowerCase() == 'off' ? 0 : parseInt(lineItems[1]);
      this.smoothingGroup = groupNumber;
    }
  }]);

  return OBJFile;
}();

module.exports = OBJFile;
},{}],2:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Functor = require("../Data.Functor");
var Data_Semigroup = require("../Data.Semigroup");
var Alt = function (Functor0, alt) {
    this.Functor0 = Functor0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Data_Functor.functorArray;
}, Data_Semigroup.append(Data_Semigroup.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
module.exports = {
    Alt: Alt,
    alt: alt,
    altArray: altArray
};

},{"../Data.Functor":130,"../Data.Semigroup":185}],3:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var Alternative = function (Applicative0, Plus1) {
    this.Applicative0 = Applicative0;
    this.Plus1 = Plus1;
};
var alternativeArray = new Alternative(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Plus.plusArray;
});
module.exports = {
    Alternative: Alternative,
    alternativeArray: alternativeArray
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Plus":59,"../Data.Functor":130}],4:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Applicative = function (Apply0, pure) {
    this.Apply0 = Apply0;
    this.pure = pure;
};
var pure = function (dict) {
    return dict.pure;
};
var unless = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (!v) {
                return v1;
            };
            if (v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 62, column 1 - line 62, column 65: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var when = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var liftA1 = function (dictApplicative) {
    return function (f) {
        return function (a) {
            return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return Control_Apply.applyFn;
}, function (x) {
    return function (v) {
        return x;
    };
});
var applicativeArray = new Applicative(function () {
    return Control_Apply.applyArray;
}, function (x) {
    return [ x ];
});
module.exports = {
    Applicative: Applicative,
    pure: pure,
    liftA1: liftA1,
    unless: unless,
    when: when,
    applicativeFn: applicativeFn,
    applicativeArray: applicativeArray
};

},{"../Control.Apply":6,"../Data.Functor":130,"../Data.Unit":220}],5:[function(require,module,exports){
"use strict";

exports.arrayApply = function (fs) {
  return function (xs) {
    var l = fs.length;
    var k = xs.length;
    var result = new Array(l*k);
    var n = 0;
    for (var i = 0; i < l; i++) {
      var f = fs[i];
      for (var j = 0; j < k; j++) {
        result[n++] = f(xs[j]);
      }
    }
    return result;
  };
};

},{}],6:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Apply = function (Functor0, apply) {
    this.Functor0 = Functor0;
    this.apply = apply;
};
var applyFn = new Apply(function () {
    return Data_Functor.functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var applyArray = new Apply(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayApply);
var apply = function (dict) {
    return dict.apply;
};
var applyFirst = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
        };
    };
};
var applySecond = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
        };
    };
};
var lift2 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
            };
        };
    };
};
var lift3 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift4 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift5 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    Apply: Apply,
    apply: apply,
    applyFirst: applyFirst,
    applySecond: applySecond,
    lift2: lift2,
    lift3: lift3,
    lift4: lift4,
    lift5: lift5,
    applyFn: applyFn,
    applyArray: applyArray
};

},{"../Control.Category":11,"../Data.Function":125,"../Data.Functor":130,"./foreign":5}],7:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapply = require("../Control.Biapply");
var Biapplicative = function (Biapply0, bipure) {
    this.Biapply0 = Biapply0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    bipure: bipure,
    Biapplicative: Biapplicative
};

},{"../Control.Biapply":8}],8:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Function = require("../Data.Function");
var Biapply = function (Bifunctor0, biapply) {
    this.Bifunctor0 = Bifunctor0;
    this.biapply = biapply;
};
var biapply = function (dict) {
    return dict.biapply;
};
var biapplyFirst = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.id(Control_Category.categoryFn))))(a))(b);
        };
    };
};
var biapplySecond = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"])(Data_Function["const"]))(a))(b);
        };
    };
};
var bilift2 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
module.exports = {
    biapply: biapply,
    Biapply: Biapply,
    biapplyFirst: biapplyFirst,
    biapplySecond: biapplySecond,
    bilift2: bilift2,
    bilift3: bilift3
};

},{"../Control.Category":11,"../Data.Bifunctor":88,"../Data.Function":125}],9:[function(require,module,exports){
"use strict";

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

},{}],10:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Bind = function (Apply0, bind) {
    this.Apply0 = Apply0;
    this.bind = bind;
};
var Discard = function (discard) {
    this.discard = discard;
};
var discard = function (dict) {
    return dict.discard;
};
var bindFn = new Bind(function () {
    return Control_Apply.applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var bindArray = new Bind(function () {
    return Control_Apply.applyArray;
}, $foreign.arrayBind);
var bind = function (dict) {
    return dict.bind;
};
var bindFlipped = function (dictBind) {
    return Data_Function.flip(bind(dictBind));
};
var composeKleisliFlipped = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bindFlipped(dictBind)(f)(g(a));
            };
        };
    };
};
var composeKleisli = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bind(dictBind)(f(a))(g);
            };
        };
    };
};
var discardUnit = new Discard(function (dictBind) {
    return bind(dictBind);
});
var ifM = function (dictBind) {
    return function (cond) {
        return function (t) {
            return function (f) {
                return bind(dictBind)(cond)(function (cond$prime) {
                    if (cond$prime) {
                        return t;
                    };
                    return f;
                });
            };
        };
    };
};
var join = function (dictBind) {
    return function (m) {
        return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Bind: Bind,
    bind: bind,
    bindFlipped: bindFlipped,
    Discard: Discard,
    discard: discard,
    join: join,
    composeKleisli: composeKleisli,
    composeKleisliFlipped: composeKleisliFlipped,
    ifM: ifM,
    bindFn: bindFn,
    bindArray: bindArray,
    discardUnit: discardUnit
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Data.Function":125,"../Data.Functor":130,"../Data.Unit":220,"./foreign":9}],11:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Category = function (Semigroupoid0, id) {
    this.Semigroupoid0 = Semigroupoid0;
    this.id = id;
};
var id = function (dict) {
    return dict.id;
};
var categoryFn = new Category(function () {
    return Control_Semigroupoid.semigroupoidFn;
}, function (x) {
    return x;
});
module.exports = {
    Category: Category,
    id: id,
    categoryFn: categoryFn
};

},{"../Control.Semigroupoid":60}],12:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Extend = require("../Control.Extend");
var Data_Functor = require("../Data.Functor");
var Comonad = function (Extend0, extract) {
    this.Extend0 = Extend0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad,
    extract: extract
};

},{"../Control.Extend":14,"../Data.Functor":130}],13:[function(require,module,exports){
"use strict";

exports.arrayExtend = function(f) {
  return function(xs) {
    return xs.map(function (_, i, xs) {
      return f(xs.slice(i));
    });
  };
};

},{}],14:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Data_Functor = require("../Data.Functor");
var Data_Semigroup = require("../Data.Semigroup");
var Extend = function (Functor0, extend) {
    this.Functor0 = Functor0;
    this.extend = extend;
};
var extendFn = function (dictSemigroup) {
    return new Extend(function () {
        return Data_Functor.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
                });
            };
        };
    });
};
var extendArray = new Extend(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayExtend);
var extend = function (dict) {
    return dict.extend;
};
var extendFlipped = function (dictExtend) {
    return function (w) {
        return function (f) {
            return extend(dictExtend)(f)(w);
        };
    };
};
var duplicate = function (dictExtend) {
    return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));
};
var composeCoKleisliFlipped = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f(extend(dictExtend)(g)(w));
            };
        };
    };
};
var composeCoKleisli = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g(extend(dictExtend)(f)(w));
            };
        };
    };
};
module.exports = {
    Extend: Extend,
    extend: extend,
    extendFlipped: extendFlipped,
    composeCoKleisli: composeCoKleisli,
    composeCoKleisliFlipped: composeCoKleisliFlipped,
    duplicate: duplicate,
    extendFn: extendFn,
    extendArray: extendArray
};

},{"../Control.Category":11,"../Data.Functor":130,"../Data.Semigroup":185,"./foreign":13}],15:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Unit = require("../Data.Unit");
var Lazy = function (defer) {
    this.defer = defer;
};
var lazyUnit = new Lazy(function (v) {
    return Data_Unit.unit;
});
var lazyFn = new Lazy(function (f) {
    return function (x) {
        return f(Data_Unit.unit)(x);
    };
});
var defer = function (dict) {
    return dict.defer;
};
var fix = function (dictLazy) {
    return function (f) {
        return defer(dictLazy)(function (v) {
            return f(fix(dictLazy)(f));
        });
    };
};
module.exports = {
    defer: defer,
    Lazy: Lazy,
    fix: fix,
    lazyFn: lazyFn,
    lazyUnit: lazyUnit
};

},{"../Data.Unit":220}],16:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_Internal = require("../Control.Monad.Aff.Internal");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var fromAVBox = Unsafe_Coerce.unsafeCoerce;
var killVar = function (q) {
    return function (e) {
        return fromAVBox(Control_Monad_Aff_Internal._killVar(Control_Monad_Aff.nonCanceler, q, e));
    };
};
var makeVar = fromAVBox(Control_Monad_Aff_Internal._makeVar(Control_Monad_Aff.nonCanceler));
var peekVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._peekVar(Control_Monad_Aff.nonCanceler, q));
};
var putVar = function (q) {
    return function (a) {
        return fromAVBox(Control_Monad_Aff_Internal._putVar(Control_Monad_Aff.nonCanceler, q, a));
    };
};
var makeVar$prime = function (a) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(makeVar)(function (v) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(putVar(v)(a))(function () {
            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v);
        });
    });
};
var takeVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._takeVar(Control_Monad_Aff.nonCanceler, q));
};
var modifyVar = function (f) {
    return function (v) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(takeVar(v))(function ($2) {
            return putVar(v)(f($2));
        });
    };
};
var tryPeekVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._tryPeekVar(Data_Maybe.Nothing.value, Data_Maybe.Just.create, Control_Monad_Aff.nonCanceler, q));
};
var tryTakeVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._tryTakeVar(Data_Maybe.Nothing.value, Data_Maybe.Just.create, Control_Monad_Aff.nonCanceler, q));
};
module.exports = {
    makeVar: makeVar,
    "makeVar'": makeVar$prime,
    takeVar: takeVar,
    peekVar: peekVar,
    putVar: putVar,
    modifyVar: modifyVar,
    killVar: killVar,
    tryTakeVar: tryTakeVar,
    tryPeekVar: tryPeekVar
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Aff":20,"../Control.Monad.Aff.Internal":18,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Exception":28,"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Maybe":156,"../Prelude":263,"../Unsafe.Coerce":281}],17:[function(require,module,exports){
"use strict";

exports._makeVar = function (nonCanceler) {
  return function (success) {
    success({
      consumers: [],
      producers: [],
      error: undefined
    });
    return nonCanceler;
  };
};

exports._takeVar = function (nonCanceler, avar) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.producers.length > 0) {
      avar.producers.shift()(success, error);
    } else {
      avar.consumers.push({ peek: false, success: success, error: error });
    }

    return nonCanceler;
  };
};

exports._tryTakeVar = function (nothing, just, nonCanceler, avar) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.producers.length > 0) {
      avar.producers.shift()(function (x) {
        return success(just(x));
      }, error);
    } else {
      success(nothing);
    }
    return nonCanceler;
  };
};

exports._peekVar = function (nonCanceler, avar) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.producers.length > 0) {
      avar.producers[0](success, error);
    } else {
      avar.consumers.push({ peek: true, success: success, error: error });
    }
    return nonCanceler;
  };
};

exports._tryPeekVar = function (nothing, just, nonCanceler, avar) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.producers.length > 0) {
      avar.producers[0](function (x) {
        return success(just(x));
      }, error);
    } else {
      success(nothing);
    }
    return nonCanceler;
  };
};

exports._putVar = function (nonCanceler, avar, a) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else {
      var shouldQueue = true;
      var consumers = [];
      var consumer;

      while (true) {
        consumer = avar.consumers.shift();
        if (consumer) {
          consumers.push(consumer);
          if (consumer.peek) {
            continue;
          } else {
            shouldQueue = false;
          }
        }
        break;
      }

      if (shouldQueue) {
        avar.producers.push(function (success) {
          success(a);
          return nonCanceler;
        });
      }

      for (var i = 0; i < consumers.length; i++) {
        consumers[i].success(a);
      }

      success({});
    }

    return nonCanceler;
  };
};

exports._killVar = function (nonCanceler, avar, e) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else {
      avar.error = e;
      while (avar.consumers.length) {
        avar.consumers.shift().error(e);
      }
      success({});
    }

    return nonCanceler;
  };
};

},{}],18:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
module.exports = {
    _makeVar: $foreign._makeVar,
    _takeVar: $foreign._takeVar,
    _tryTakeVar: $foreign._tryTakeVar,
    _peekVar: $foreign._peekVar,
    _tryPeekVar: $foreign._tryPeekVar,
    _putVar: $foreign._putVar,
    _killVar: $foreign._killVar
};

},{"../Control.Monad.Eff.Exception":28,"../Data.Function.Uncurried":124,"../Data.Maybe":156,"../Prelude":263,"./foreign":17}],19:[function(require,module,exports){
(function (setImmediate,clearImmediate){
/* globals setTimeout, clearTimeout, setImmediate, clearImmediate */
"use strict";

exports._cancelWith = function (nonCanceler, aff, canceler1) {
  return function (success, error) {
    var canceler2 = aff(success, error);

    return function (e) {
      return function (success, error) {
        var cancellations = 0;
        var result = false;
        var errored = false;

        var s = function (bool) {
          cancellations = cancellations + 1;
          result = result || bool;

          if (cancellations === 2 && !errored) {
            success(result);
          }
        };

        var f = function (err) {
          if (!errored) {
            errored = true;
            error(err);
          }
        };

        canceler2(e)(s, f);
        canceler1(e)(s, f);

        return nonCanceler;
      };
    };
  };
};

exports._delay = function (nonCanceler, millis) {
  var set = setTimeout;
  var clear = clearTimeout;
  if (millis <= 0 && typeof setImmediate === "function") {
    set = setImmediate;
    clear = clearImmediate;
  }
  return function (success) {
    var timedOut = false;
    var timer = set(function () {
      timedOut = true;
      success();
    }, millis);

    return function () {
      return function (s) {
        if (timedOut) {
          s(false);
        } else {
          clear(timer);
          s(true);
        }
        return nonCanceler;
      };
    };
  };
};

exports._unsafeInterleaveAff = function (aff) {
  return aff;
};

exports._forkAff = function (nonCanceler, aff) {
  var voidF = function () {};

  return function (success) {
    var canceler = aff(voidF, voidF);
    success(canceler);
    return nonCanceler;
  };
};

exports._forkAll = function (nonCanceler, foldl, affs) {
  var voidF = function () {};

  return function (success) {
    var cancelers = foldl(function (acc) {
      return function (aff) {
        acc.push(aff(voidF, voidF));
        return acc;
      };
    })([])(affs);

    var canceler = function (e) {
      return function (success, error) {
        var cancellations = 0;
        var result        = false;
        var errored       = false;

        var s = function (bool) {
          cancellations = cancellations + 1;
          result        = result || bool;

          if (cancellations === cancelers.length && !errored) {
            success(result);
          }
        };

        var f = function (err) {
          if (!errored) {
            errored = true;
            error(err);
          }
        };

        for (var i = 0; i < cancelers.length; i++) {
          cancelers[i](e)(s, f);
        }

        return nonCanceler;
      };
    };

    success(canceler);
    return nonCanceler;
  };
};

exports._makeAff = function (cb) {
  return function (success, error) {
    try {
      return cb(function (e) {
        return function () {
          error(e);
        };
      })(function (v) {
        return function () {
          success(v);
        };
      })();
    } catch (err) {
      error(err);
    }
  };
};

exports._pure = function (nonCanceler, v) {
  return function (success) {
    success(v);
    return nonCanceler;
  };
};

exports._throwError = function (nonCanceler, e) {
  return function (success, error) {
    error(e);
    return nonCanceler;
  };
};

exports._fmap = function (f, aff) {
  return function (success, error) {
    return aff(function (v) {
      success(f(v));
    }, error);
  };
};

exports._bind = function (alwaysCanceler, aff, f) {
  return function (success, error) {
    var canceler1, canceler2;

    var isCanceled    = false;
    var requestCancel = false;

    var onCanceler = function () {};

    canceler1 = aff(function (v) {
      if (requestCancel) {
        isCanceled = true;

        return alwaysCanceler;
      } else {
        canceler2 = f(v)(success, error);

        onCanceler(canceler2);

        return canceler2;
      }
    }, error);

    return function (e) {
      return function (s, f) {
        requestCancel = true;

        if (canceler2 !== undefined) {
          return canceler2(e)(s, f);
        } else {
          return canceler1(e)(function (bool) {
            if (bool || isCanceled) {
              s(true);
            } else {
              onCanceler = function (canceler) {
                canceler(e)(s, f);
              };
            }
          }, f);
        }
      };
    };
  };
};

exports._attempt = function (Left, Right, aff) {
  return function (success) {
    return aff(function (v) {
      success(Right(v));
    }, function (e) {
      success(Left(e));
    });
  };
};

exports._runAff = function (errorT, successT, aff) {
  // If errorT or successT throw, and an Aff is comprised only of synchronous
  // effects, then it's possible for makeAff/liftEff to accidentally catch
  // it, which may end up rerunning the Aff depending on error recovery
  // behavior. To mitigate this, we observe synchronicity using mutation. If
  // an Aff is observed to be synchronous, we let the stack reset and run the
  // handlers outside of the normal callback flow.
  return function () {
    var status = 0;
    var result, success;

    var canceler = aff(function (v) {
      if (status === 2) {
        successT(v)();
      } else {
        status = 1;
        result = v;
        success = true;
      }
    }, function (e) {
      if (status === 2) {
        errorT(e)();
      } else {
        status = 1;
        result = e;
        success = false;
      }
    });

    if (status === 1) {
      if (success) {
        successT(result)();
      } else {
        errorT(result)();
      }
    } else {
      status = 2;
    }

    return canceler;
  };
};

exports._liftEff = function (nonCanceler, e) {
  return function (success, error) {
    var result;
    try {
      result = e();
    } catch (err) {
      error(err);
      return nonCanceler;
    }

    success(result);
    return nonCanceler;
  };
};

exports._tailRecM = function (isLeft, f, a) {
  return function (success, error) {
    return function go (acc) {
      var result, status, canceler;

      // Observes synchronous effects using a flag.
      //   status = 0 (unresolved status)
      //   status = 1 (synchronous effect)
      //   status = 2 (asynchronous effect)

      var csuccess = function (v) {
        // If the status is still unresolved, we have observed a
        // synchronous effect. Otherwise, the status will be `2`.
        if (status === 0) {
          // Store the result for further synchronous processing.
          result = v;
          status = 1;
        } else {
          // When we have observed an asynchronous effect, we use normal
          // recursion. This is safe because we will be on a new stack.
          if (isLeft(v)) {
            go(v.value0);
          } else {
            success(v.value0);
          }
        }
      };

      while (true) {
        status = 0;
        canceler = f(acc)(csuccess, error);

        // If the status has already resolved to `1` by our Aff handler, then
        // we have observed a synchronous effect. Otherwise it will still be
        // `0`.
        if (status === 1) {
          // When we have observed a synchronous effect, we merely swap out the
          // accumulator and continue the loop, preserving stack.
          if (isLeft(result)) {
            acc = result.value0;
            continue;
          } else {
            success(result.value0);
          }
        } else {
          // If the status has not resolved yet, then we have observed an
          // asynchronous effect.
          status = 2;
        }
        return canceler;
      }

    }(a);
  };
};

}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"timers":284}],20:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Aff_Internal = require("../Control.Monad.Aff.Internal");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Parallel = require("../Control.Parallel");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ParAff = function (x) {
    return x;
};
var Canceler = function (x) {
    return x;
};
var runAff = function (ex) {
    return function (f) {
        return function (aff) {
            return $foreign._runAff(ex, f, aff);
        };
    };
};
var newtypeParAff = new Data_Newtype.Newtype(function (n) {
    return n;
}, ParAff);
var makeAff$prime = function (h) {
    return $foreign._makeAff(h);
};
var functorAff = new Data_Functor.Functor(function (f) {
    return function (fa) {
        return $foreign._fmap(f, fa);
    };
});
var functorParAff = functorAff;
var fromAVBox = Unsafe_Coerce.unsafeCoerce;
var cancel = function (v) {
    return v;
};
var launchAff = (function () {
    var lowerEx = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($54) {
        return Canceler(Data_Functor.map(Data_Functor.functorFn)($foreign._unsafeInterleaveAff)(cancel($54)));
    });
    return function ($55) {
        return lowerEx(runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($foreign._unsafeInterleaveAff($55)));
    };
})();
var attempt = function (aff) {
    return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
};
var apathize = function (a) {
    return Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit))(attempt(a));
};
var applyAff = new Control_Apply.Apply(function () {
    return functorAff;
}, function (ff) {
    return function (fa) {
        return $foreign._bind(alwaysCanceler, ff, function (f) {
            return Data_Functor.map(functorAff)(f)(fa);
        });
    };
});
var applicativeAff = new Control_Applicative.Applicative(function () {
    return applyAff;
}, function (v) {
    return $foreign._pure(nonCanceler, v);
});
var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(false));
var alwaysCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(true));
var cancelWith = function (aff) {
    return function (c) {
        return $foreign._cancelWith(nonCanceler, aff, c);
    };
};
var delay = function (v) {
    return $foreign._delay(nonCanceler, v);
};
var forkAff = function (aff) {
    return $foreign._forkAff(nonCanceler, aff);
};
var forkAll = function (dictFoldable) {
    return function (affs) {
        return $foreign._forkAll(nonCanceler, Data_Foldable.foldl(dictFoldable), affs);
    };
};
var killVar = function (q) {
    return function (e) {
        return fromAVBox(Control_Monad_Aff_Internal._killVar(nonCanceler, q, e));
    };
};
var liftEff$prime = function (eff) {
    return attempt($foreign._unsafeInterleaveAff($foreign._liftEff(nonCanceler, eff)));
};
var makeAff = function (h) {
    return makeAff$prime(function (e) {
        return function (a) {
            return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Function["const"](nonCanceler))(h(e)(a));
        };
    });
};
var makeVar = fromAVBox(Control_Monad_Aff_Internal._makeVar(nonCanceler));
var putVar = function (q) {
    return function (a) {
        return fromAVBox(Control_Monad_Aff_Internal._putVar(nonCanceler, q, a));
    };
};
var takeVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._takeVar(nonCanceler, q));
};
var semigroupAff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (a) {
        return function (b) {
            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_Semigroup.append(dictSemigroup))(a))(b);
        };
    });
};
var monoidAff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
};
var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function (e) {
            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(v(e)))(v1(e));
        };
    };
});
var monoidCanceler = new Data_Monoid.Monoid(function () {
    return semigroupCanceler;
}, Data_Function["const"](Control_Applicative.pure(applicativeAff)(true)));
var bindAff = new Control_Bind.Bind(function () {
    return applyAff;
}, function (fa) {
    return function (f) {
        return $foreign._bind(alwaysCanceler, fa, f);
    };
});
var applyParAff = new Control_Apply.Apply(function () {
    return functorParAff;
}, function (v) {
    return function (v1) {
        var putOrKill = function (v2) {
            return Data_Either.either(killVar(v2))(putVar(v2));
        };
        return Control_Bind.bind(bindAff)(makeVar)(function (v2) {
            return Control_Bind.bind(bindAff)(makeVar)(function (v3) {
                return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v2))(attempt(v))))(function (v4) {
                    return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v3))(attempt(v1))))(function (v5) {
                        return cancelWith(Control_Apply.apply(applyAff)(takeVar(v2))(takeVar(v3)))(Data_Semigroup.append(semigroupCanceler)(v4)(v5));
                    });
                });
            });
        });
    };
});
var applicativeParAff = new Control_Applicative.Applicative(function () {
    return applyParAff;
}, function ($56) {
    return ParAff(Control_Applicative.pure(applicativeAff)($56));
});
var semigroupParAff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (a) {
        return function (b) {
            return Control_Apply.apply(applyParAff)(Data_Functor.map(functorParAff)(Data_Semigroup.append(dictSemigroup))(a))(b);
        };
    });
};
var monoidParAff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupParAff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeParAff)(Data_Monoid.mempty(dictMonoid)));
};
var monadAff = new Control_Monad.Monad(function () {
    return applicativeAff;
}, function () {
    return bindAff;
});
var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
    return monadAff;
}, function (eff) {
    return $foreign._liftEff(nonCanceler, eff);
});
var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadAff;
}, function (f) {
    return function (a) {
        var isLoop = function (v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return true;
            };
            return false;
        };
        return $foreign._tailRecM(isLoop, f, a);
    };
});
var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
    return monadAff;
}, function (e) {
    return $foreign._throwError(nonCanceler, e);
});
var $$finally = function (aff1) {
    return function (aff2) {
        return Control_Bind.bind(bindAff)(attempt(aff1))(function (v) {
            return Control_Bind.bind(bindAff)(aff2)(function (v1) {
                return Data_Either.either(Control_Monad_Error_Class.throwError(monadThrowAff))(Control_Applicative.pure(applicativeAff))(v);
            });
        });
    };
};
var parallelParAff = new Control_Parallel_Class.Parallel(function () {
    return applicativeParAff;
}, function () {
    return monadAff;
}, ParAff, function (v) {
    return v;
});
var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowAff;
}, function (aff) {
    return function (ex) {
        return Control_Bind.bind(bindAff)(attempt(aff))(Data_Either.either(ex)(Control_Applicative.pure(applicativeAff)));
    };
});
var altParAff = new Control_Alt.Alt(function () {
    return functorParAff;
}, function (v) {
    return function (v1) {
        var maybeKill = function (va) {
            return function (ve) {
                return function (err) {
                    return Control_Bind.bind(bindAff)(takeVar(ve))(function (v2) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(Control_Applicative.when(applicativeAff)(v2 === 1)(killVar(va)(err)))(function () {
                            return putVar(ve)(v2 + 1 | 0);
                        });
                    });
                };
            };
        };
        var done = function (cs) {
            return function (get) {
                return function (va) {
                    return function (x) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(putVar(va)(x))(function () {
                            return Control_Bind.bind(bindAff)(Data_Functor.map(functorAff)(get)(takeVar(cs)))(function (v2) {
                                return Data_Functor["void"](functorAff)(cancel(v2)(Control_Monad_Eff_Exception.error("Alt early exit")));
                            });
                        });
                    };
                };
            };
        };
        return Control_Bind.bind(bindAff)(makeVar)(function (v2) {
            return Control_Bind.bind(bindAff)(makeVar)(function (v3) {
                return Control_Bind.bind(bindAff)(makeVar)(function (v4) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(putVar(v3)(0))(function () {
                        return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v2)(v3))(done(v4)(Data_Tuple.snd)(v2)))(attempt(v))))(function (v5) {
                            return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v2)(v3))(done(v4)(Data_Tuple.fst)(v2)))(attempt(v1))))(function (v6) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(putVar(v4)(new Data_Tuple.Tuple(v5, v6)))(function () {
                                    return cancelWith(takeVar(v2))(Data_Semigroup.append(semigroupCanceler)(v5)(v6));
                                });
                            });
                        });
                    });
                });
            });
        });
    };
});
var altAff = new Control_Alt.Alt(function () {
    return functorAff;
}, function (a1) {
    return function (a2) {
        return Control_Bind.bind(bindAff)(attempt(a1))(Data_Either.either(Data_Function["const"](a2))(Control_Applicative.pure(applicativeAff)));
    };
});
var plusAff = new Control_Plus.Plus(function () {
    return altAff;
}, Control_Monad_Error_Class.throwError(monadThrowAff)(Control_Monad_Eff_Exception.error("Always fails")));
var alternativeAff = new Control_Alternative.Alternative(function () {
    return applicativeAff;
}, function () {
    return plusAff;
});
var monadZero = new Control_MonadZero.MonadZero(function () {
    return alternativeAff;
}, function () {
    return monadAff;
});
var monadPlusAff = new Control_MonadPlus.MonadPlus(function () {
    return monadZero;
});
var plusParAff = new Control_Plus.Plus(function () {
    return altParAff;
}, Control_Plus.empty(plusAff));
var alternativeParAff = new Control_Alternative.Alternative(function () {
    return applicativeParAff;
}, function () {
    return plusParAff;
});
module.exports = {
    Canceler: Canceler,
    apathize: apathize,
    attempt: attempt,
    cancel: cancel,
    cancelWith: cancelWith,
    "finally": $$finally,
    forkAff: forkAff,
    forkAll: forkAll,
    delay: delay,
    launchAff: launchAff,
    "liftEff'": liftEff$prime,
    makeAff: makeAff,
    "makeAff'": makeAff$prime,
    nonCanceler: nonCanceler,
    runAff: runAff,
    ParAff: ParAff,
    semigroupAff: semigroupAff,
    monoidAff: monoidAff,
    functorAff: functorAff,
    applyAff: applyAff,
    applicativeAff: applicativeAff,
    bindAff: bindAff,
    monadAff: monadAff,
    monadEffAff: monadEffAff,
    monadThrowAff: monadThrowAff,
    monadErrorAff: monadErrorAff,
    altAff: altAff,
    plusAff: plusAff,
    alternativeAff: alternativeAff,
    monadZero: monadZero,
    monadPlusAff: monadPlusAff,
    monadRecAff: monadRecAff,
    semigroupCanceler: semigroupCanceler,
    monoidCanceler: monoidCanceler,
    newtypeParAff: newtypeParAff,
    semigroupParAff: semigroupParAff,
    monoidParAff: monoidParAff,
    functorParAff: functorParAff,
    applyParAff: applyParAff,
    applicativeParAff: applicativeParAff,
    altParAff: altParAff,
    plusParAff: plusParAff,
    alternativeParAff: alternativeParAff,
    parallelParAff: parallelParAff
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.Monad.Aff.Internal":18,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Class":23,"../Control.Monad.Eff.Exception":28,"../Control.Monad.Error.Class":41,"../Control.Monad.Rec.Class":47,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Parallel":58,"../Control.Parallel.Class":57,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Time.Duration":204,"../Data.Tuple":212,"../Data.Unit":220,"../Prelude":263,"../Unsafe.Coerce":281,"./foreign":19}],21:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Prelude = require("../Prelude");
var MonadCont = function (Monad0, callCC) {
    this.Monad0 = Monad0;
    this.callCC = callCC;
};
var callCC = function (dict) {
    return dict.callCC;
};
module.exports = {
    MonadCont: MonadCont,
    callCC: callCC
};

},{"../Prelude":263}],22:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var ContT = function (x) {
    return x;
};
var withContT = function (f) {
    return function (v) {
        return function (k) {
            return v(f(k));
        };
    };
};
var runContT = function (v) {
    return function (k) {
        return v(k);
    };
};
var newtypeContT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ContT);
var monadTransContT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(k);
        };
    };
});
var mapContT = function (f) {
    return function (v) {
        return function (k) {
            return f(v(k));
        };
    };
};
var functorContT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (k) {
                return v(function (a) {
                    return k(f(a));
                });
            };
        };
    });
};
var applyContT = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorContT(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return function (k) {
                return v(function (g) {
                    return v1(function (a) {
                        return k(g(a));
                    });
                });
            };
        };
    });
};
var bindContT = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyContT(dictBind.Apply0());
    }, function (v) {
        return function (k) {
            return function (k$prime) {
                return v(function (a) {
                    var v1 = k(a);
                    return v1(k$prime);
                });
            };
        };
    });
};
var applicativeContT = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyContT(dictApplicative.Apply0());
    }, function (a) {
        return function (k) {
            return k(a);
        };
    });
};
var monadContT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeContT(dictMonad.Applicative0());
    }, function () {
        return bindContT(dictMonad.Bind1());
    });
};
var monadAskContT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadContT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderContT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskContT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return function (v) {
            return function (k) {
                return Control_Bind.bind(((dictMonadReader.MonadAsk0()).Monad0()).Bind1())(Control_Monad_Reader_Class.ask(dictMonadReader.MonadAsk0()))(function (v1) {
                    return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function ($45) {
                        return Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](v1))(k($45));
                    }));
                });
            };
        };
    });
};
var monadContContT = function (dictMonad) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadContT(dictMonad);
    }, function (f) {
        return function (k) {
            var v = f(function (a) {
                return function (v1) {
                    return k(a);
                };
            });
            return v(k);
        };
    });
};
var monadEffContT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadContT(dictMonadEff.Monad0());
    }, function ($46) {
        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($46));
    });
};
var monadStateContT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadContT(dictMonadState.Monad0());
    }, function ($47) {
        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($47));
    });
};
module.exports = {
    ContT: ContT,
    runContT: runContT,
    mapContT: mapContT,
    withContT: withContT,
    newtypeContT: newtypeContT,
    monadContContT: monadContContT,
    functorContT: functorContT,
    applyContT: applyContT,
    applicativeContT: applicativeContT,
    bindContT: bindContT,
    monadContT: monadContT,
    monadTransContT: monadTransContT,
    monadEffContT: monadEffContT,
    monadAskContT: monadAskContT,
    monadReaderContT: monadReaderContT,
    monadStateContT: monadStateContT
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.Monad.Cont.Class":21,"../Control.Monad.Eff.Class":23,"../Control.Monad.Reader.Class":45,"../Control.Monad.State.Class":50,"../Control.Monad.Trans.Class":51,"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Functor":130,"../Data.Newtype":171,"../Prelude":263}],23:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var MonadEff = function (Monad0, liftEff) {
    this.Monad0 = Monad0;
    this.liftEff = liftEff;
};
var monadEffEff = new MonadEff(function () {
    return Control_Monad_Eff.monadEff;
}, Control_Category.id(Control_Category.categoryFn));
var liftEff = function (dict) {
    return dict.liftEff;
};
module.exports = {
    liftEff: liftEff,
    MonadEff: MonadEff,
    monadEffEff: monadEffEff
};

},{"../Control.Category":11,"../Control.Monad":54,"../Control.Monad.Eff":40}],24:[function(require,module,exports){
"use strict";

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.warn = function (s) {
  return function () {
    console.warn(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

exports.info = function (s) {
  return function () {
    console.info(s);
    return {};
  };
};

},{}],25:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var warnShow = function (dictShow) {
    return function (a) {
        return $foreign.warn(Data_Show.show(dictShow)(a));
    };
};
var logShow = function (dictShow) {
    return function (a) {
        return $foreign.log(Data_Show.show(dictShow)(a));
    };
};
var infoShow = function (dictShow) {
    return function (a) {
        return $foreign.info(Data_Show.show(dictShow)(a));
    };
};
var errorShow = function (dictShow) {
    return function (a) {
        return $foreign.error(Data_Show.show(dictShow)(a));
    };
};
module.exports = {
    logShow: logShow,
    warnShow: warnShow,
    errorShow: errorShow,
    infoShow: infoShow,
    log: $foreign.log,
    warn: $foreign.warn,
    error: $foreign.error,
    info: $foreign.info
};

},{"../Control.Monad.Eff":40,"../Data.Show":189,"../Data.Unit":220,"./foreign":24}],26:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var unsafeThrowException = function ($0) {
    return Control_Monad_Eff_Unsafe.unsafePerformEff(Control_Monad_Eff_Exception.throwException($0));
};
var unsafeThrow = function ($1) {
    return unsafeThrowException(Control_Monad_Eff_Exception.error($1));
};
module.exports = {
    unsafeThrowException: unsafeThrowException,
    unsafeThrow: unsafeThrow
};

},{"../Control.Monad.Eff.Exception":28,"../Control.Monad.Eff.Unsafe":36,"../Control.Semigroupoid":60}],27:[function(require,module,exports){
"use strict";

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.name = function (e) {
  return e.name || "Error";
};

exports.stackImpl = function (just) {
  return function (nothing) {
    return function (e) {
      return e.stack ? just(e.stack) : nothing;
    };
  };
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};

},{}],28:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var $$try = function (action) {
    return $foreign.catchException(function ($0) {
        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Either.Left.create($0));
    })(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Either.Right.create)(action));
};
var $$throw = function ($1) {
    return $foreign.throwException($foreign.error($1));
};
var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = new Data_Show.Show($foreign.showErrorImpl);
module.exports = {
    stack: stack,
    "throw": $$throw,
    "try": $$try,
    showError: showError,
    error: $foreign.error,
    message: $foreign.message,
    name: $foreign.name,
    throwException: $foreign.throwException,
    catchException: $foreign.catchException
};

},{"../Control.Applicative":4,"../Control.Monad.Eff":40,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Show":189,"../Prelude":263,"./foreign":27}],29:[function(require,module,exports){
"use strict";

exports.random = Math.random;

},{}],30:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Int = require("../Data.Int");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Prelude = require("../Prelude");
var randomRange = function (min) {
    return function (max) {
        return function __do() {
            var v = $foreign.random();
            return v * (max - min) + min;
        };
    };
};
var randomInt = function (low) {
    return function (high) {
        return function __do() {
            var v = $foreign.random();
            var asNumber = ((Data_Int.toNumber(high) - Data_Int.toNumber(low)) + 1) * v + Data_Int.toNumber(low);
            return Data_Int.floor(asNumber);
        };
    };
};
var randomBool = Data_Functor.map(Control_Monad_Eff.functorEff)(function (v) {
    return v < 0.5;
})($foreign.random);
module.exports = {
    randomInt: randomInt,
    randomRange: randomRange,
    randomBool: randomBool,
    random: $foreign.random
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Data.Function":125,"../Data.Functor":130,"../Data.Int":146,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semiring":187,"../Prelude":263,"./foreign":29}],31:[function(require,module,exports){
"use strict";

exports.newRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports["modifyRef'"] = function (ref) {
  return function (f) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.writeRef = function (ref) {
  return function (val) {
    return function () {
      ref.value = val;
      return {};
    };
  };
};

},{}],32:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var modifyRef = function (ref) {
    return function (f) {
        return $foreign["modifyRef'"](ref)(function (s) {
            return {
                state: f(s),
                value: Data_Unit.unit
            };
        });
    };
};
module.exports = {
    modifyRef: modifyRef,
    newRef: $foreign.newRef,
    readRef: $foreign.readRef,
    "modifyRef'": $foreign["modifyRef'"],
    writeRef: $foreign.writeRef
};

},{"../Control.Monad.Eff":40,"../Data.Unit":220,"../Prelude":263,"./foreign":31}],33:[function(require,module,exports){
/* global exports */
"use strict";

exports.setTimeout = function (ms) {
  return function (fn) {
    return function () {
      return setTimeout(fn, ms);
    };
  };
};

exports.clearTimeout = function (id) {
  return function () {
    clearTimeout(id);
  };
};

exports.setInterval = function (ms) {
  return function (fn) {
    return function () {
      return setInterval(fn, ms);
    };
  };
};

exports.clearInterval = function (id) {
  return function () {
    clearInterval(id);
  };
};

},{}],34:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var TimeoutId = function (x) {
    return x;
};
var IntervalId = function (x) {
    return x;
};
var eqTimeoutId = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordTimeoutId = new Data_Ord.Ord(function () {
    return eqTimeoutId;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
var eqIntervalId = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordIntervalId = new Data_Ord.Ord(function () {
    return eqIntervalId;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
module.exports = {
    eqTimeoutId: eqTimeoutId,
    ordTimeoutId: ordTimeoutId,
    eqIntervalId: eqIntervalId,
    ordIntervalId: ordIntervalId,
    setTimeout: $foreign.setTimeout,
    clearTimeout: $foreign.clearTimeout,
    setInterval: $foreign.setInterval,
    clearInterval: $foreign.clearInterval
};

},{"../Control.Monad.Eff":40,"../Data.Eq":111,"../Data.Ord":178,"../Prelude":263,"./foreign":33}],35:[function(require,module,exports){
"use strict";

exports.unsafeCoerceEff = function (f) {
  return f;
};

},{}],36:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var unsafePerformEff = function ($0) {
    return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0));
};
module.exports = {
    unsafePerformEff: unsafePerformEff,
    unsafeCoerceEff: $foreign.unsafeCoerceEff
};

},{"../Control.Monad.Eff":40,"../Control.Semigroupoid":60,"./foreign":35}],37:[function(require,module,exports){
/* global exports */

// module Control.Monad.Eff.WebGL


    "use strict";

    exports.runWebGl_ = function (f) {
      return f;
  };

},{}],38:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
module.exports = {
    runWebGl_: $foreign.runWebGl_
};

},{"../Control.Monad.Eff":40,"./foreign":37}],39:[function(require,module,exports){
"use strict";

exports.pureE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],40:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var monadEff = new Control_Monad.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Control_Bind.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Control_Apply.Apply(function () {
    return functorEff;
}, Control_Monad.ap(monadEff));
var applicativeEff = new Control_Applicative.Applicative(function () {
    return applyEff;
}, $foreign.pureE);
var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
var semigroupEff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEff)(Data_Semigroup.append(dictSemigroup)));
};
var monoidEff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupEff(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeEff)(Data_Monoid.mempty(dictMonoid)));
};
module.exports = {
    semigroupEff: semigroupEff,
    monoidEff: monoidEff,
    functorEff: functorEff,
    applyEff: applyEff,
    applicativeEff: applicativeEff,
    bindEff: bindEff,
    monadEff: monadEff,
    runPure: $foreign.runPure,
    untilE: $foreign.untilE,
    whileE: $foreign.whileE,
    forE: $foreign.forE,
    foreachE: $foreign.foreachE
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Semigroup":185,"../Data.Unit":220,"./foreign":39}],41:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var MonadThrow = function (Monad0, throwError) {
    this.Monad0 = Monad0;
    this.throwError = throwError;
};
var MonadError = function (MonadThrow0, catchError) {
    this.MonadThrow0 = MonadThrow0;
    this.catchError = catchError;
};
var throwError = function (dict) {
    return dict.throwError;
};
var monadThrowMaybe = new MonadThrow(function () {
    return Data_Maybe.monadMaybe;
}, Data_Function["const"](Data_Maybe.Nothing.value));
var monadThrowEither = new MonadThrow(function () {
    return Data_Either.monadEither;
}, Data_Either.Left.create);
var monadErrorMaybe = new MonadError(function () {
    return monadThrowMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
            return v1(Data_Unit.unit);
        };
        if (v instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 76, column 1 - line 76, column 50: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var monadErrorEither = new MonadError(function () {
    return monadThrowEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Either.Left) {
            return v1(v.value0);
        };
        if (v instanceof Data_Either.Right) {
            return new Data_Either.Right(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 69, column 1 - line 69, column 53: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var catchError = function (dict) {
    return dict.catchError;
};
var catchJust = function (dictMonadError) {
    return function (p) {
        return function (act) {
            return function (handler) {
                var handle = function (e) {
                    var v = p(e);
                    if (v instanceof Data_Maybe.Nothing) {
                        return throwError(dictMonadError.MonadThrow0())(e);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return handler(v.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 54, column 5 - line 56, column 26: " + [ v.constructor.name ]);
                };
                return catchError(dictMonadError)(act)(handle);
            };
        };
    };
};
var $$try = function (dictMonadError) {
    return function (a) {
        return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))(function ($21) {
            return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Data_Either.Left.create($21));
        });
    };
};
var withResource = function (dictMonadError) {
    return function (acquire) {
        return function (release) {
            return function (kleisli) {
                return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(acquire)(function (v) {
                    return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())($$try(dictMonadError)(kleisli(v)))(function (v1) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(release(v))(function () {
                            return Data_Either.either(throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0()))(v1);
                        });
                    });
                });
            };
        };
    };
};
module.exports = {
    catchError: catchError,
    throwError: throwError,
    MonadThrow: MonadThrow,
    MonadError: MonadError,
    catchJust: catchJust,
    "try": $$try,
    withResource: withResource,
    monadThrowEither: monadThrowEither,
    monadErrorEither: monadErrorEither,
    monadThrowMaybe: monadThrowMaybe,
    monadErrorMaybe: monadErrorMaybe
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Unit":220,"../Prelude":263}],42:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var ExceptT = function (x) {
    return x;
};
var withExceptT = function (dictFunctor) {
    return function (f) {
        return function (v) {
            var mapLeft = function (v1) {
                return function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return new Data_Either.Right(v2.value0);
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return new Data_Either.Left(v1(v2.value0));
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 44, column 3 - line 44, column 32: " + [ v1.constructor.name, v2.constructor.name ]);
                };
            };
            return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
        };
    };
};
var runExceptT = function (v) {
    return v;
};
var newtypeExceptT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ExceptT);
var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v));
        });
    };
});
var mapExceptT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorExceptT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    });
};
var except = function (dictApplicative) {
    return function ($96) {
        return ExceptT(Control_Applicative.pure(dictApplicative)($96));
    };
};
var monadExceptT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeExceptT(dictMonad);
    }, function () {
        return bindExceptT(dictMonad);
    });
};
var bindExceptT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
            })(function (a) {
                var v1 = k(a);
                return v1;
            }));
        };
    });
};
var applyExceptT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadExceptT(dictMonad)));
};
var applicativeExceptT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyExceptT(dictMonad);
    }, function ($98) {
        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
    });
};
var monadAskExceptT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadExceptT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderExceptT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskExceptT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContExceptT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadExceptT(dictMonadCont.Monad0());
    }, function (f) {
        return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            var v = f(function (a) {
                return ExceptT(c(new Data_Either.Right(a)));
            });
            return v;
        }));
    });
};
var monadEffExceptT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadExceptT(dictMonadEff.Monad0());
    }, function ($99) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($99));
    });
};
var monadRecExceptT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadExceptT(dictMonadRec.Monad0());
    }, function (f) {
        return function ($100) {
            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                    var v = f(a);
                    return v;
                })())(function (m$prime) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                        if (m$prime instanceof Data_Either.Left) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans line 76, column 14 - line 79, column 43: " + [ m$prime.constructor.name ]);
                    })());
                });
            })($100));
        };
    });
};
var monadStateExceptT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadExceptT(dictMonadState.Monad0());
    }, function (f) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellExceptT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadExceptT(dictMonadTell.Monad0());
    }, function ($101) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($101));
    });
};
var monadWriterExceptT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellExceptT(dictMonadWriter.MonadTell0());
    }, mapExceptT(function (m) {
        return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(Data_Functor.map(Data_Either.functorEither)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapExceptT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())((function () {
                if (v instanceof Data_Either.Left) {
                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Control_Category.id(Control_Category.categoryFn));
                };
                if (v instanceof Data_Either.Right) {
                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 138, column 10 - line 140, column 44: " + [ v.constructor.name ]);
            })());
        }));
    }));
};
var monadThrowExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadExceptT(dictMonad);
    }, function ($102) {
        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
    });
};
var monadErrorExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function (a) {
                var v1 = k(a);
                return v1;
            })(function ($103) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($103));
            }));
        };
    });
};
var altExceptT = function (dictSemigroup) {
    return function (dictMonad) {
        return new Control_Alt.Alt(function () {
            return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
        }, function (v) {
            return function (v1) {
                return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v2.value0));
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return Control_Bind.bind(dictMonad.Bind1())(v1)(function (v3) {
                            if (v3 instanceof Data_Either.Right) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v3.value0));
                            };
                            if (v3 instanceof Data_Either.Left) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Except.Trans line 88, column 9 - line 90, column 49: " + [ v3.constructor.name ]);
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 84, column 5 - line 90, column 49: " + [ v2.constructor.name ]);
                });
            };
        });
    };
};
var plusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Plus.Plus(function () {
            return altExceptT(dictMonoid.Semigroup0())(dictMonad);
        }, Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var alternativeExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Alternative.Alternative(function () {
            return applicativeExceptT(dictMonad);
        }, function () {
            return plusExceptT(dictMonoid)(dictMonad);
        });
    };
};
var monadZeroExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadZero.MonadZero(function () {
            return alternativeExceptT(dictMonoid)(dictMonad);
        }, function () {
            return monadExceptT(dictMonad);
        });
    };
};
var monadPlusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadPlus.MonadPlus(function () {
            return monadZeroExceptT(dictMonoid)(dictMonad);
        });
    };
};
module.exports = {
    ExceptT: ExceptT,
    runExceptT: runExceptT,
    withExceptT: withExceptT,
    mapExceptT: mapExceptT,
    except: except,
    newtypeExceptT: newtypeExceptT,
    functorExceptT: functorExceptT,
    applyExceptT: applyExceptT,
    applicativeExceptT: applicativeExceptT,
    bindExceptT: bindExceptT,
    monadExceptT: monadExceptT,
    monadRecExceptT: monadRecExceptT,
    altExceptT: altExceptT,
    plusExceptT: plusExceptT,
    alternativeExceptT: alternativeExceptT,
    monadPlusExceptT: monadPlusExceptT,
    monadZeroExceptT: monadZeroExceptT,
    monadTransExceptT: monadTransExceptT,
    monadEffExceptT: monadEffExceptT,
    monadContExceptT: monadContExceptT,
    monadThrowExceptT: monadThrowExceptT,
    monadErrorExceptT: monadErrorExceptT,
    monadAskExceptT: monadAskExceptT,
    monadReaderExceptT: monadReaderExceptT,
    monadStateExceptT: monadStateExceptT,
    monadTellExceptT: monadTellExceptT,
    monadWriterExceptT: monadWriterExceptT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Monad":54,"../Control.Monad.Cont.Class":21,"../Control.Monad.Eff.Class":23,"../Control.Monad.Error.Class":41,"../Control.Monad.Reader.Class":45,"../Control.Monad.Rec.Class":47,"../Control.Monad.State.Class":50,"../Control.Monad.Trans.Class":51,"../Control.Monad.Writer.Class":52,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Function":125,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Tuple":212,"../Prelude":263}],43:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
var runExcept = function ($0) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
};
var mapExcept = function (f) {
    return Control_Monad_Except_Trans.mapExceptT(function ($1) {
        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
    });
};
module.exports = {
    runExcept: runExcept,
    mapExcept: mapExcept,
    withExcept: withExcept
};

},{"../Control.Monad.Error.Class":41,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Identity":142,"../Data.Newtype":171,"../Prelude":263}],44:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var MaybeT = function (x) {
    return x;
};
var runMaybeT = function (v) {
    return v;
};
var newtypeMaybeT = new Data_Newtype.Newtype(function (n) {
    return n;
}, MaybeT);
var monadTransMaybeT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function ($75) {
        return MaybeT(Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create)($75));
    };
});
var mapMaybeT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorMaybeT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
        };
    });
};
var monadMaybeT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeMaybeT(dictMonad);
    }, function () {
        return bindMaybeT(dictMonad);
    });
};
var bindMaybeT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyMaybeT(dictMonad);
    }, function (v) {
        return function (f) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                if (v1 instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
                };
                if (v1 instanceof Data_Maybe.Just) {
                    var v2 = f(v1.value0);
                    return v2;
                };
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 55, column 11 - line 57, column 42: " + [ v1.constructor.name ]);
            });
        };
    });
};
var applyMaybeT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadMaybeT(dictMonad)));
};
var applicativeMaybeT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyMaybeT(dictMonad);
    }, function ($76) {
        return MaybeT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create($76)));
    });
};
var monadAskMaybeT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadMaybeT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderMaybeT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskMaybeT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContMaybeT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadMaybeT(dictMonadCont.Monad0());
    }, function (f) {
        return MaybeT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            var v = f(function (a) {
                return MaybeT(c(new Data_Maybe.Just(a)));
            });
            return v;
        }));
    });
};
var monadEffMaybe = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadMaybeT(dictMonadEff.Monad0());
    }, function ($77) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($77));
    });
};
var monadRecMaybeT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadMaybeT(dictMonadRec.Monad0());
    }, function (f) {
        return function ($78) {
            return MaybeT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                    var v = f(a);
                    return v;
                })())(function (m$prime) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                        if (m$prime instanceof Data_Maybe.Nothing) {
                            return new Control_Monad_Rec_Class.Done(Data_Maybe.Nothing.value);
                        };
                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                        };
                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Maybe.Just(m$prime.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 85, column 16 - line 88, column 43: " + [ m$prime.constructor.name ]);
                    })());
                });
            })($78));
        };
    });
};
var monadStateMaybeT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadMaybeT(dictMonadState.Monad0());
    }, function (f) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellMaybeT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadMaybeT(dictMonadTell.Monad0());
    }, function ($79) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($79));
    });
};
var monadWriterMaybeT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellMaybeT(dictMonadWriter.MonadTell0());
    }, mapMaybeT(function (m) {
        return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapMaybeT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())((function () {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.id(Control_Category.categoryFn));
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Tuple.Tuple(new Data_Maybe.Just(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 122, column 10 - line 124, column 42: " + [ v.constructor.name ]);
            })());
        }));
    }));
};
var monadThrowMaybeT = function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadMaybeT(dictMonadThrow.Monad0());
    }, function (e) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
};
var monadErrorMaybeT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowMaybeT(dictMonadError.MonadThrow0());
    }, function (v) {
        return function (h) {
            return MaybeT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
                var v1 = h(a);
                return v1;
            }));
        };
    });
};
var altMaybeT = function (dictMonad) {
    return new Control_Alt.Alt(function () {
        return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
                if (v2 instanceof Data_Maybe.Nothing) {
                    return v1;
                };
                return Control_Applicative.pure(dictMonad.Applicative0())(v2);
            });
        };
    });
};
var plusMaybeT = function (dictMonad) {
    return new Control_Plus.Plus(function () {
        return altMaybeT(dictMonad);
    }, Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value));
};
var alternativeMaybeT = function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
        return applicativeMaybeT(dictMonad);
    }, function () {
        return plusMaybeT(dictMonad);
    });
};
var monadZeroMaybeT = function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeMaybeT(dictMonad);
    }, function () {
        return monadMaybeT(dictMonad);
    });
};
var monadPlusMaybeT = function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroMaybeT(dictMonad);
    });
};
module.exports = {
    MaybeT: MaybeT,
    runMaybeT: runMaybeT,
    mapMaybeT: mapMaybeT,
    newtypeMaybeT: newtypeMaybeT,
    functorMaybeT: functorMaybeT,
    applyMaybeT: applyMaybeT,
    applicativeMaybeT: applicativeMaybeT,
    bindMaybeT: bindMaybeT,
    monadMaybeT: monadMaybeT,
    monadTransMaybeT: monadTransMaybeT,
    altMaybeT: altMaybeT,
    plusMaybeT: plusMaybeT,
    alternativeMaybeT: alternativeMaybeT,
    monadPlusMaybeT: monadPlusMaybeT,
    monadZeroMaybeT: monadZeroMaybeT,
    monadRecMaybeT: monadRecMaybeT,
    monadEffMaybe: monadEffMaybe,
    monadContMaybeT: monadContMaybeT,
    monadThrowMaybeT: monadThrowMaybeT,
    monadErrorMaybeT: monadErrorMaybeT,
    monadAskMaybeT: monadAskMaybeT,
    monadReaderMaybeT: monadReaderMaybeT,
    monadStateMaybeT: monadStateMaybeT,
    monadTellMaybeT: monadTellMaybeT,
    monadWriterMaybeT: monadWriterMaybeT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Monad":54,"../Control.Monad.Cont.Class":21,"../Control.Monad.Eff.Class":23,"../Control.Monad.Error.Class":41,"../Control.Monad.Reader.Class":45,"../Control.Monad.Rec.Class":47,"../Control.Monad.State.Class":50,"../Control.Monad.Trans.Class":51,"../Control.Monad.Writer.Class":52,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Tuple":212,"../Prelude":263}],45:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Prelude = require("../Prelude");
var MonadAsk = function (Monad0, ask) {
    this.Monad0 = Monad0;
    this.ask = ask;
};
var MonadReader = function (MonadAsk0, local) {
    this.MonadAsk0 = MonadAsk0;
    this.local = local;
};
var monadAskFun = new MonadAsk(function () {
    return Control_Monad.monadFn;
}, Control_Category.id(Control_Category.categoryFn));
var monadReaderFun = new MonadReader(function () {
    return monadAskFun;
}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));
var local = function (dict) {
    return dict.local;
};
var ask = function (dict) {
    return dict.ask;
};
var asks = function (dictMonadAsk) {
    return function (f) {
        return Data_Functor.map((((dictMonadAsk.Monad0()).Bind1()).Apply0()).Functor0())(f)(ask(dictMonadAsk));
    };
};
module.exports = {
    ask: ask,
    local: local,
    MonadAsk: MonadAsk,
    asks: asks,
    MonadReader: MonadReader,
    monadAskFun: monadAskFun,
    monadReaderFun: monadReaderFun
};

},{"../Control.Category":11,"../Control.Monad":54,"../Control.Semigroupoid":60,"../Data.Functor":130,"../Prelude":263}],46:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Distributive = require("../Data.Distributive");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var ReaderT = function (x) {
    return x;
};
var withReaderT = function (f) {
    return function (v) {
        return function ($66) {
            return v(f($66));
        };
    };
};
var runReaderT = function (v) {
    return v;
};
var newtypeReaderT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ReaderT);
var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function ($67) {
        return ReaderT(Data_Function["const"]($67));
    };
});
var mapReaderT = function (f) {
    return function (v) {
        return function ($68) {
            return f(v($68));
        };
    };
};
var functorReaderT = function (dictFunctor) {
    return new Data_Functor.Functor(function ($69) {
        return mapReaderT(Data_Functor.map(dictFunctor)($69));
    });
};
var distributiveReaderT = function (dictDistributive) {
    return new Data_Distributive.Distributive(function () {
        return functorReaderT(dictDistributive.Functor0());
    }, function (dictFunctor) {
        return function (f) {
            return function ($70) {
                return Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($70));
            };
        };
    }, function (dictFunctor) {
        return function (a) {
            return function (e) {
                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
                    return r(e);
                })(a);
            };
        };
    });
};
var applyReaderT = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorReaderT(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return function (r) {
                return Control_Apply.apply(dictApply)(v(r))(v1(r));
            };
        };
    });
};
var bindReaderT = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyReaderT(dictBind.Apply0());
    }, function (v) {
        return function (k) {
            return function (r) {
                return Control_Bind.bind(dictBind)(v(r))(function (a) {
                    var v1 = k(a);
                    return v1(r);
                });
            };
        };
    });
};
var semigroupReaderT = function (dictApply) {
    return function (dictSemigroup) {
        return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)));
    };
};
var applicativeReaderT = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyReaderT(dictApplicative.Apply0());
    }, function ($71) {
        return ReaderT(Data_Function["const"](Control_Applicative.pure(dictApplicative)($71)));
    });
};
var monadReaderT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeReaderT(dictMonad.Applicative0());
    }, function () {
        return bindReaderT(dictMonad.Bind1());
    });
};
var monadAskReaderT = function (dictMonad) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadReaderT(dictMonad);
    }, Control_Applicative.pure(dictMonad.Applicative0()));
};
var monadReaderReaderT = function (dictMonad) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskReaderT(dictMonad);
    }, withReaderT);
};
var monadContReaderT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadReaderT(dictMonadCont.Monad0());
    }, function (f) {
        return function (r) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var v = f(function ($72) {
                    return ReaderT(Data_Function["const"](c($72)));
                });
                return v(r);
            });
        };
    });
};
var monadEffReader = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadReaderT(dictMonadEff.Monad0());
    }, function ($73) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($73));
    });
};
var monadRecReaderT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadReaderT(dictMonadRec.Monad0());
    }, function (k) {
        return function (a) {
            var k$prime = function (r) {
                return function (a$prime) {
                    var v = k(a$prime);
                    return Control_Bind.bindFlipped((dictMonadRec.Monad0()).Bind1())(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0()))(v(r));
                };
            };
            return function (r) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
            };
        };
    });
};
var monadStateReaderT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadReaderT(dictMonadState.Monad0());
    }, function ($74) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)($74));
    });
};
var monadTellReaderT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadReaderT(dictMonadTell.Monad0());
    }, function ($75) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($75));
    });
};
var monadWriterReaderT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellReaderT(dictMonadWriter.MonadTell0());
    }, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)));
};
var monadThrowReaderT = function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadReaderT(dictMonadThrow.Monad0());
    }, function ($76) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)($76));
    });
};
var monadErrorReaderT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowReaderT(dictMonadError.MonadThrow0());
    }, function (v) {
        return function (h) {
            return function (r) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
                    var v1 = h(e);
                    return v1(r);
                });
            };
        };
    });
};
var monoidReaderT = function (dictApplicative) {
    return function (dictMonoid) {
        return new Data_Monoid.Monoid(function () {
            return semigroupReaderT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(applicativeReaderT(dictApplicative))(Data_Monoid.mempty(dictMonoid)));
    };
};
var altReaderT = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorReaderT(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return function (r) {
                return Control_Alt.alt(dictAlt)(v(r))(v1(r));
            };
        };
    });
};
var plusReaderT = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altReaderT(dictPlus.Alt0());
    }, Data_Function["const"](Control_Plus.empty(dictPlus)));
};
var alternativeReaderT = function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
        return applicativeReaderT(dictAlternative.Applicative0());
    }, function () {
        return plusReaderT(dictAlternative.Plus1());
    });
};
var monadZeroReaderT = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeReaderT(dictMonadZero.Alternative1());
    }, function () {
        return monadReaderT(dictMonadZero.Monad0());
    });
};
var monadPlusReaderT = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroReaderT(dictMonadPlus.MonadZero0());
    });
};
module.exports = {
    ReaderT: ReaderT,
    runReaderT: runReaderT,
    withReaderT: withReaderT,
    mapReaderT: mapReaderT,
    newtypeReaderT: newtypeReaderT,
    functorReaderT: functorReaderT,
    applyReaderT: applyReaderT,
    applicativeReaderT: applicativeReaderT,
    altReaderT: altReaderT,
    plusReaderT: plusReaderT,
    alternativeReaderT: alternativeReaderT,
    bindReaderT: bindReaderT,
    monadReaderT: monadReaderT,
    monadZeroReaderT: monadZeroReaderT,
    semigroupReaderT: semigroupReaderT,
    monoidReaderT: monoidReaderT,
    monadPlusReaderT: monadPlusReaderT,
    monadTransReaderT: monadTransReaderT,
    monadEffReader: monadEffReader,
    monadContReaderT: monadContReaderT,
    monadThrowReaderT: monadThrowReaderT,
    monadErrorReaderT: monadErrorReaderT,
    monadAskReaderT: monadAskReaderT,
    monadReaderReaderT: monadReaderReaderT,
    monadStateReaderT: monadStateReaderT,
    monadTellReaderT: monadTellReaderT,
    monadWriterReaderT: monadWriterReaderT,
    distributiveReaderT: distributiveReaderT,
    monadRecReaderT: monadRecReaderT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.Monad.Cont.Class":21,"../Control.Monad.Eff.Class":23,"../Control.Monad.Error.Class":41,"../Control.Monad.Reader.Class":45,"../Control.Monad.Rec.Class":47,"../Control.Monad.State.Class":50,"../Control.Monad.Trans.Class":51,"../Control.Monad.Writer.Class":52,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Distributive":106,"../Data.Function":125,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Prelude":263}],47:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Loop = (function () {
    function Loop(value0) {
        this.value0 = value0;
    };
    Loop.create = function (value0) {
        return new Loop(value0);
    };
    return Loop;
})();
var Done = (function () {
    function Done(value0) {
        this.value0 = value0;
    };
    Done.create = function (value0) {
        return new Done(value0);
    };
    return Done;
})();
var MonadRec = function (Monad0, tailRecM) {
    this.Monad0 = Monad0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var tailRecM2 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return tailRecM(dictMonadRec)(function (o) {
                    return f(o.a)(o.b);
                })({
                    a: a,
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return tailRecM(dictMonadRec)(function (o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a,
                        b: b,
                        c: c
                    });
                };
            };
        };
    };
};
var tailRecEff = function (f) {
    return function (a) {
        var fromDone = function (v) {
            var __unused = function (dictPartial1) {
                return function ($dollar16) {
                    return $dollar16;
                };
            };
            return __unused()((function () {
                if (v instanceof Done) {
                    return v.value0;
                };
                throw new Error("Failed pattern match at Control.Monad.Rec.Class line 141, column 28 - line 141, column 42: " + [ v.constructor.name ]);
            })());
        };
        var f$prime = function ($52) {
            return Control_Monad_Eff_Unsafe.unsafeCoerceEff(f($52));
        };
        return function __do() {
            var v = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Monad_ST.newSTRef)(f$prime(a))();
            (function () {
                while (!(function __do() {
                    var v1 = v.value;
                    if (v1 instanceof Loop) {
                        var v2 = f$prime(v1.value0)();
                        var v3 = v.value = v2;
                        return false;
                    };
                    if (v1 instanceof Done) {
                        return true;
                    };
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 130, column 5 - line 135, column 26: " + [ v1.constructor.name ]);
                })()) {

                };
                return {};
            })();
            return Data_Functor.map(Control_Monad_Eff.functorEff)(fromDone)(Control_Monad_ST.readSTRef(v))();
        };
    };
};
var tailRec = function (f) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Loop) {
                $copy_v = f(v.value0);
                return;
            };
            if (v instanceof Done) {
                $tco_done = true;
                return v.value0;
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 96, column 3 - line 96, column 25: " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($53) {
        return go(f($53));
    };
};
var monadRecMaybe = new MonadRec(function () {
    return Data_Maybe.monadMaybe;
}, function (f) {
    return function (a0) {
        var g = function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return new Done(Data_Maybe.Nothing.value);
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {
                return new Loop(f(v.value0.value0));
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {
                return new Done(new Data_Maybe.Just(v.value0.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 120, column 7 - line 120, column 31: " + [ v.constructor.name ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecIdentity = new MonadRec(function () {
    return Data_Identity.monadIdentity;
}, function (f) {
    var runIdentity = function (v) {
        return v;
    };
    return function ($54) {
        return Data_Identity.Identity(tailRec(function ($55) {
            return runIdentity(f($55));
        })($54));
    };
});
var monadRecFunction = new MonadRec(function () {
    return Control_Monad.monadFn;
}, function (f) {
    return function (a0) {
        return function (e) {
            return tailRec(function (a) {
                return f(a)(e);
            })(a0);
        };
    };
});
var monadRecEither = new MonadRec(function () {
    return Data_Either.monadEither;
}, function (f) {
    return function (a0) {
        var g = function (v) {
            if (v instanceof Data_Either.Left) {
                return new Done(new Data_Either.Left(v.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                return new Loop(f(v.value0.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                return new Done(new Data_Either.Right(v.value0.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 112, column 7 - line 112, column 33: " + [ v.constructor.name ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecEff = new MonadRec(function () {
    return Control_Monad_Eff.monadEff;
}, tailRecEff);
var functorStep = new Data_Functor.Functor(function (f) {
    return function (v) {
        if (v instanceof Loop) {
            return new Loop(v.value0);
        };
        if (v instanceof Done) {
            return new Done(f(v.value0));
        };
        throw new Error("Failed pattern match at Control.Monad.Rec.Class line 28, column 1 - line 28, column 41: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var forever = function (dictMonadRec) {
    return function (ma) {
        return tailRecM(dictMonadRec)(function (u) {
            return Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(new Loop(u))(ma);
        })(Data_Unit.unit);
    };
};
var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Loop) {
                return new Loop(v(v2.value0));
            };
            if (v2 instanceof Done) {
                return new Done(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 32, column 1 - line 32, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
module.exports = {
    Loop: Loop,
    Done: Done,
    MonadRec: MonadRec,
    tailRec: tailRec,
    tailRecM: tailRecM,
    tailRecM2: tailRecM2,
    tailRecM3: tailRecM3,
    forever: forever,
    functorStep: functorStep,
    bifunctorStep: bifunctorStep,
    monadRecIdentity: monadRecIdentity,
    monadRecEff: monadRecEff,
    monadRecFunction: monadRecFunction,
    monadRecEither: monadRecEither,
    monadRecMaybe: monadRecMaybe
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad":54,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Unsafe":36,"../Control.Monad.ST":49,"../Control.Semigroupoid":60,"../Data.Bifunctor":88,"../Data.Either":108,"../Data.Functor":130,"../Data.Identity":142,"../Data.Maybe":156,"../Data.Unit":220,"../Partial.Unsafe":253,"../Prelude":263}],48:[function(require,module,exports){
"use strict";

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      return ref.value = f(ref.value); // eslint-disable-line no-return-assign
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      return ref.value = a; // eslint-disable-line no-return-assign
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],49:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var pureST = function (st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST,
    newSTRef: $foreign.newSTRef,
    readSTRef: $foreign.readSTRef,
    modifySTRef: $foreign.modifySTRef,
    writeSTRef: $foreign.writeSTRef,
    runST: $foreign.runST
};

},{"../Control.Monad.Eff":40,"./foreign":48}],50:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var MonadState = function (Monad0, state) {
    this.Monad0 = Monad0;
    this.state = state;
};
var state = function (dict) {
    return dict.state;
};
var put = function (dictMonadState) {
    return function (s) {
        return state(dictMonadState)(function (v) {
            return new Data_Tuple.Tuple(Data_Unit.unit, s);
        });
    };
};
var modify = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
        });
    };
};
var gets = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(f(s), s);
        });
    };
};
var get = function (dictMonadState) {
    return state(dictMonadState)(function (s) {
        return new Data_Tuple.Tuple(s, s);
    });
};
module.exports = {
    state: state,
    MonadState: MonadState,
    get: get,
    gets: gets,
    put: put,
    modify: modify
};

},{"../Data.Tuple":212,"../Data.Unit":220,"../Prelude":263}],51:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Prelude = require("../Prelude");
var MonadTrans = function (lift) {
    this.lift = lift;
};
var lift = function (dict) {
    return dict.lift;
};
module.exports = {
    lift: lift,
    MonadTrans: MonadTrans
};

},{"../Prelude":263}],52:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var MonadTell = function (Monad0, tell) {
    this.Monad0 = Monad0;
    this.tell = tell;
};
var MonadWriter = function (MonadTell0, listen, pass) {
    this.MonadTell0 = MonadTell0;
    this.listen = listen;
    this.pass = pass;
};
var tell = function (dict) {
    return dict.tell;
};
var pass = function (dict) {
    return dict.pass;
};
var listen = function (dict) {
    return dict.listen;
};
var listens = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(listen(dictMonadWriter)(m))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
            });
        };
    };
};
var censor = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v, f));
            }));
        };
    };
};
module.exports = {
    listen: listen,
    pass: pass,
    tell: tell,
    MonadTell: MonadTell,
    MonadWriter: MonadWriter,
    listens: listens,
    censor: censor
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Data.Function":125,"../Data.Tuple":212,"../Prelude":263}],53:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var WriterT = function (x) {
    return x;
};
var runWriterT = function (v) {
    return v;
};
var newtypeWriterT = new Data_Newtype.Newtype(function (n) {
    return n;
}, WriterT);
var monadTransWriterT = function (dictMonoid) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, Data_Monoid.mempty(dictMonoid)));
            });
        };
    });
};
var mapWriterT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorWriterT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
            return new Data_Tuple.Tuple(f(v.value0), v.value1);
        }));
    });
};
var execWriterT = function (dictFunctor) {
    return function (v) {
        return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
    };
};
var applyWriterT = function (dictSemigroup) {
    return function (dictApply) {
        return new Control_Apply.Apply(function () {
            return functorWriterT(dictApply.Functor0());
        }, function (v) {
            return function (v1) {
                var k = function (v3) {
                    return function (v4) {
                        return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
                    };
                };
                return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
            };
        });
    };
};
var bindWriterT = function (dictSemigroup) {
    return function (dictBind) {
        return new Control_Bind.Bind(function () {
            return applyWriterT(dictSemigroup)(dictBind.Apply0());
        }, function (v) {
            return function (k) {
                return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
                    var v2 = k(v1.value0);
                    return Data_Functor.map((dictBind.Apply0()).Functor0())(function (v3) {
                        return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
                    })(v2);
                }));
            };
        });
    };
};
var applicativeWriterT = function (dictMonoid) {
    return function (dictApplicative) {
        return new Control_Applicative.Applicative(function () {
            return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
        }, function (a) {
            return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
        });
    };
};
var monadWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad.Monad(function () {
            return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
        }, function () {
            return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
        });
    };
};
var monadAskWriterT = function (dictMonoid) {
    return function (dictMonadAsk) {
        return new Control_Monad_Reader_Class.MonadAsk(function () {
            return monadWriterT(dictMonoid)(dictMonadAsk.Monad0());
        }, Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
    };
};
var monadReaderWriterT = function (dictMonoid) {
    return function (dictMonadReader) {
        return new Control_Monad_Reader_Class.MonadReader(function () {
            return monadAskWriterT(dictMonoid)(dictMonadReader.MonadAsk0());
        }, function (f) {
            return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
        });
    };
};
var monadContWriterT = function (dictMonoid) {
    return function (dictMonadCont) {
        return new Control_Monad_Cont_Class.MonadCont(function () {
            return monadWriterT(dictMonoid)(dictMonadCont.Monad0());
        }, function (f) {
            return WriterT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var v = f(function (a) {
                    return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
                });
                return v;
            }));
        });
    };
};
var monadEffWriter = function (dictMonoid) {
    return function (dictMonadEff) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadWriterT(dictMonoid)(dictMonadEff.Monad0());
        }, function ($123) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($123));
        });
    };
};
var monadRecWriterT = function (dictMonoid) {
    return function (dictMonadRec) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadWriterT(dictMonoid)(dictMonadRec.Monad0());
        }, function (f) {
            return function (a) {
                var f$prime = function (v) {
                    return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                        var v1 = f(v.value0);
                        return v1;
                    })())(function (v1) {
                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                            if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
                                return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
                            };
                            if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
                                return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v1.value1)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Writer.Trans line 85, column 16 - line 87, column 47: " + [ v1.value0.constructor.name ]);
                        })());
                    });
                };
                return WriterT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
            };
        });
    };
};
var monadStateWriterT = function (dictMonoid) {
    return function (dictMonadState) {
        return new Control_Monad_State_Class.MonadState(function () {
            return monadWriterT(dictMonoid)(dictMonadState.Monad0());
        }, function (f) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
        });
    };
};
var monadTellWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad_Writer_Class.MonadTell(function () {
            return monadWriterT(dictMonoid)(dictMonad);
        }, function ($124) {
            return WriterT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Tuple.Tuple.create(Data_Unit.unit)($124)));
        });
    };
};
var monadWriterWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad_Writer_Class.MonadWriter(function () {
            return monadTellWriterT(dictMonoid)(dictMonad);
        }, function (v) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
            });
        }, function (v) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
            });
        });
    };
};
var monadThrowWriterT = function (dictMonoid) {
    return function (dictMonadThrow) {
        return new Control_Monad_Error_Class.MonadThrow(function () {
            return monadWriterT(dictMonoid)(dictMonadThrow.Monad0());
        }, function (e) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
        });
    };
};
var monadErrorWriterT = function (dictMonoid) {
    return function (dictMonadError) {
        return new Control_Monad_Error_Class.MonadError(function () {
            return monadThrowWriterT(dictMonoid)(dictMonadError.MonadThrow0());
        }, function (v) {
            return function (h) {
                return WriterT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
                    var v1 = h(e);
                    return v1;
                }));
            };
        });
    };
};
var altWriterT = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorWriterT(dictAlt.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Alt.alt(dictAlt)(v)(v1);
        };
    });
};
var plusWriterT = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altWriterT(dictPlus.Alt0());
    }, Control_Plus.empty(dictPlus));
};
var alternativeWriterT = function (dictMonoid) {
    return function (dictAlternative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeWriterT(dictMonoid)(dictAlternative.Applicative0());
        }, function () {
            return plusWriterT(dictAlternative.Plus1());
        });
    };
};
var monadZeroWriterT = function (dictMonoid) {
    return function (dictMonadZero) {
        return new Control_MonadZero.MonadZero(function () {
            return alternativeWriterT(dictMonoid)(dictMonadZero.Alternative1());
        }, function () {
            return monadWriterT(dictMonoid)(dictMonadZero.Monad0());
        });
    };
};
var monadPlusWriterT = function (dictMonoid) {
    return function (dictMonadPlus) {
        return new Control_MonadPlus.MonadPlus(function () {
            return monadZeroWriterT(dictMonoid)(dictMonadPlus.MonadZero0());
        });
    };
};
module.exports = {
    WriterT: WriterT,
    runWriterT: runWriterT,
    execWriterT: execWriterT,
    mapWriterT: mapWriterT,
    newtypeWriterT: newtypeWriterT,
    functorWriterT: functorWriterT,
    applyWriterT: applyWriterT,
    applicativeWriterT: applicativeWriterT,
    altWriterT: altWriterT,
    plusWriterT: plusWriterT,
    alternativeWriterT: alternativeWriterT,
    bindWriterT: bindWriterT,
    monadWriterT: monadWriterT,
    monadRecWriterT: monadRecWriterT,
    monadZeroWriterT: monadZeroWriterT,
    monadPlusWriterT: monadPlusWriterT,
    monadTransWriterT: monadTransWriterT,
    monadEffWriter: monadEffWriter,
    monadContWriterT: monadContWriterT,
    monadThrowWriterT: monadThrowWriterT,
    monadErrorWriterT: monadErrorWriterT,
    monadAskWriterT: monadAskWriterT,
    monadReaderWriterT: monadReaderWriterT,
    monadStateWriterT: monadStateWriterT,
    monadTellWriterT: monadTellWriterT,
    monadWriterWriterT: monadWriterWriterT
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.Monad.Cont.Class":21,"../Control.Monad.Eff.Class":23,"../Control.Monad.Error.Class":41,"../Control.Monad.Reader.Class":45,"../Control.Monad.Rec.Class":47,"../Control.Monad.State.Class":50,"../Control.Monad.Trans.Class":51,"../Control.Monad.Writer.Class":52,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Tuple":212,"../Data.Unit":220,"../Prelude":263}],54:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Monad = function (Applicative0, Bind1) {
    this.Applicative0 = Applicative0;
    this.Bind1 = Bind1;
};
var whenM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.when(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var unlessM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.unless(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var monadFn = new Monad(function () {
    return Control_Applicative.applicativeFn;
}, function () {
    return Control_Bind.bindFn;
});
var monadArray = new Monad(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Bind.bindArray;
});
var liftM1 = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(a)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(f(v));
            });
        };
    };
};
var ap = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                });
            });
        };
    };
};
module.exports = {
    Monad: Monad,
    liftM1: liftM1,
    ap: ap,
    whenM: whenM,
    unlessM: unlessM,
    monadFn: monadFn,
    monadArray: monadArray
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Data.Functor":130,"../Data.Unit":220}],55:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var MonadPlus = function (MonadZero0) {
    this.MonadZero0 = MonadZero0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_MonadZero.monadZeroArray;
});
module.exports = {
    MonadPlus: MonadPlus,
    monadPlusArray: monadPlusArray
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.MonadZero":56,"../Control.Plus":59,"../Data.Functor":130}],56:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var MonadZero = function (Alternative1, Monad0) {
    this.Alternative1 = Alternative1;
    this.Monad0 = Monad0;
};
var monadZeroArray = new MonadZero(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Control_Monad.monadArray;
});
var guard = function (dictMonadZero) {
    return function (v) {
        if (v) {
            return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
        };
        if (!v) {
            return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
        };
        throw new Error("Failed pattern match at Control.MonadZero line 54, column 1 - line 54, column 52: " + [ v.constructor.name ]);
    };
};
module.exports = {
    MonadZero: MonadZero,
    guard: guard,
    monadZeroArray: monadZeroArray
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Control.Plus":59,"../Data.Functor":130,"../Data.Unit":220}],57:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Compose = require("../Data.Functor.Compose");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var ParCont = function (x) {
    return x;
};
var Parallel = function (Applicative1, Monad0, parallel, sequential) {
    this.Applicative1 = Applicative1;
    this.Monad0 = Monad0;
    this.parallel = parallel;
    this.sequential = sequential;
};
var unsafeWithRef = Control_Monad_Eff_Unsafe.unsafeCoerceEff;
var sequential = function (dict) {
    return dict.sequential;
};
var parallel = function (dict) {
    return dict.parallel;
};
var newtypeParCont = new Data_Newtype.Newtype(function (n) {
    return n;
}, ParCont);
var monadParWriterT = function (dictMonoid) {
    return function (dictParallel) {
        return new Parallel(function () {
            return Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid)(dictParallel.Applicative1());
        }, function () {
            return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictParallel.Monad0());
        }, Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)), Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)));
    };
};
var monadParReaderT = function (dictParallel) {
    return new Parallel(function () {
        return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());
    }, function () {
        return Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());
    }, Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)), Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)));
};
var monadParMaybeT = function (dictParallel) {
    return new Parallel(function () {
        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Maybe.applicativeMaybe);
    }, function () {
        return Control_Monad_Maybe_Trans.monadMaybeT(dictParallel.Monad0());
    }, function (v) {
        return parallel(dictParallel)(v);
    }, function (v) {
        return sequential(dictParallel)(v);
    });
};
var monadParExceptT = function (dictParallel) {
    return new Parallel(function () {
        return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
    }, function () {
        return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
    }, function (v) {
        return parallel(dictParallel)(v);
    }, function (v) {
        return sequential(dictParallel)(v);
    });
};
var monadParParCont = function (dictMonadEff) {
    return new Parallel(function () {
        return applicativeParCont(dictMonadEff);
    }, function () {
        return Control_Monad_Cont_Trans.monadContT(dictMonadEff.Monad0());
    }, ParCont, function (v) {
        return v;
    });
};
var functorParCont = function (dictMonadEff) {
    return new Data_Functor.Functor(function (f) {
        return function ($54) {
            return parallel(monadParParCont(dictMonadEff))(Data_Functor.map(Control_Monad_Cont_Trans.functorContT((((dictMonadEff.Monad0()).Bind1()).Apply0()).Functor0()))(f)(sequential(monadParParCont(dictMonadEff))($54)));
        };
    });
};
var applyParCont = function (dictMonadEff) {
    return new Control_Apply.Apply(function () {
        return functorParCont(dictMonadEff);
    }, function (v) {
        return function (v1) {
            return ParCont(function (k) {
                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v2) {
                    return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v3) {
                        return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                            return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v3))))(function (v4) {
                                if (v4 instanceof Data_Maybe.Nothing) {
                                    return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(new Data_Maybe.Just(a))));
                                };
                                if (v4 instanceof Data_Maybe.Just) {
                                    return k(a(v4.value0));
                                };
                                throw new Error("Failed pattern match at Control.Parallel.Class line 80, column 7 - line 82, column 26: " + [ v4.constructor.name ]);
                            });
                        }))(function () {
                            return Control_Monad_Cont_Trans.runContT(v1)(function (b) {
                                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v4) {
                                    if (v4 instanceof Data_Maybe.Nothing) {
                                        return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v3)(new Data_Maybe.Just(b))));
                                    };
                                    if (v4 instanceof Data_Maybe.Just) {
                                        return k(v4.value0(b));
                                    };
                                    throw new Error("Failed pattern match at Control.Parallel.Class line 86, column 7 - line 88, column 26: " + [ v4.constructor.name ]);
                                });
                            });
                        });
                    });
                });
            });
        };
    });
};
var applicativeParCont = function (dictMonadEff) {
    return new Control_Applicative.Applicative(function () {
        return applyParCont(dictMonadEff);
    }, function ($55) {
        return parallel(monadParParCont(dictMonadEff))(Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT((dictMonadEff.Monad0()).Applicative0()))($55));
    });
};
var altParCont = function (dictMonadEff) {
    return new Control_Alt.Alt(function () {
        return functorParCont(dictMonadEff);
    }, function (v) {
        return function (v1) {
            return ParCont(function (k) {
                return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(false))))(function (v2) {
                    return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                        return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v3) {
                            if (v3) {
                                return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
                            };
                            return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(true))))(function () {
                                return k(a);
                            });
                        });
                    }))(function () {
                        return Control_Monad_Cont_Trans.runContT(v1)(function (a) {
                            return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v3) {
                                if (v3) {
                                    return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
                                };
                                return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(true))))(function () {
                                    return k(a);
                                });
                            });
                        });
                    });
                });
            });
        };
    });
};
var plusParCont = function (dictMonadEff) {
    return new Control_Plus.Plus(function () {
        return altParCont(dictMonadEff);
    }, ParCont(function (v) {
        return Control_Applicative.pure((dictMonadEff.Monad0()).Applicative0())(Data_Unit.unit);
    }));
};
var alternativeParCont = function (dictMonadEff) {
    return new Control_Alternative.Alternative(function () {
        return applicativeParCont(dictMonadEff);
    }, function () {
        return plusParCont(dictMonadEff);
    });
};
module.exports = {
    Parallel: Parallel,
    parallel: parallel,
    sequential: sequential,
    ParCont: ParCont,
    monadParExceptT: monadParExceptT,
    monadParReaderT: monadParReaderT,
    monadParWriterT: monadParWriterT,
    monadParMaybeT: monadParMaybeT,
    newtypeParCont: newtypeParCont,
    functorParCont: functorParCont,
    applyParCont: applyParCont,
    applicativeParCont: applicativeParCont,
    altParCont: altParCont,
    plusParCont: plusParCont,
    alternativeParCont: alternativeParCont,
    monadParParCont: monadParParCont
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad.Cont.Trans":22,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Class":23,"../Control.Monad.Eff.Ref":32,"../Control.Monad.Eff.Unsafe":36,"../Control.Monad.Except.Trans":42,"../Control.Monad.Maybe.Trans":44,"../Control.Monad.Reader.Trans":46,"../Control.Monad.Writer.Trans":53,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Function":125,"../Data.Functor":130,"../Data.Functor.Compose":127,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Unit":220,"../Prelude":263}],58:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alternative = require("../Control.Alternative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var parTraverse_ = function (dictParallel) {
    return function (dictFoldable) {
        return function (f) {
            return function ($17) {
                return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function ($18) {
                    return Control_Parallel_Class.parallel(dictParallel)(f($18));
                })($17));
            };
        };
    };
};
var parTraverse = function (dictParallel) {
    return function (dictTraversable) {
        return function (f) {
            return function ($19) {
                return Control_Parallel_Class.sequential(dictParallel)(Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())(function ($20) {
                    return Control_Parallel_Class.parallel(dictParallel)(f($20));
                })($19));
            };
        };
    };
};
var parSequence_ = function (dictParallel) {
    return function (dictFoldable) {
        return parTraverse_(dictParallel)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var parSequence = function (dictParallel) {
    return function (dictTraversable) {
        return parTraverse(dictParallel)(dictTraversable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var parOneOfMap = function (dictParallel) {
    return function (dictAlternative) {
        return function (dictFoldable) {
            return function (dictFunctor) {
                return function (f) {
                    return function ($21) {
                        return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(function ($22) {
                            return Control_Parallel_Class.parallel(dictParallel)(f($22));
                        })($21));
                    };
                };
            };
        };
    };
};
var parOneOf = function (dictParallel) {
    return function (dictAlternative) {
        return function (dictFoldable) {
            return function (dictFunctor) {
                return function ($23) {
                    return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel))($23));
                };
            };
        };
    };
};
var parApply = function (dictParallel) {
    return function (mf) {
        return function (ma) {
            return Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Control_Parallel_Class.parallel(dictParallel)(mf))(Control_Parallel_Class.parallel(dictParallel)(ma)));
        };
    };
};
module.exports = {
    parTraverse: parTraverse,
    parTraverse_: parTraverse_,
    parSequence: parSequence,
    parSequence_: parSequence_,
    parOneOf: parOneOf,
    parOneOfMap: parOneOfMap,
    parApply: parApply
};

},{"../Control.Alternative":3,"../Control.Apply":6,"../Control.Category":11,"../Control.Parallel.Class":57,"../Control.Semigroupoid":60,"../Data.Foldable":116,"../Data.Traversable":209,"../Prelude":263}],59:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Data_Functor = require("../Data.Functor");
var Plus = function (Alt0, empty) {
    this.Alt0 = Alt0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus,
    empty: empty,
    plusArray: plusArray
};

},{"../Control.Alt":2,"../Data.Functor":130}],60:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var compose = function (dict) {
    return dict.compose;
};
var composeFlipped = function (dictSemigroupoid) {
    return function (f) {
        return function (g) {
            return compose(dictSemigroupoid)(g)(f);
        };
    };
};
module.exports = {
    compose: compose,
    Semigroupoid: Semigroupoid,
    composeFlipped: composeFlipped,
    semigroupoidFn: semigroupoidFn
};

},{}],61:[function(require,module,exports){
/* global EventTarget */
"use strict";

exports._readEventTarget = function (left) {
  return function (right) {
    return function (foreign) {
      return foreign instanceof EventTarget ? right(foreign) : left("Value is not an EventTarget");
    };
  };
};

},{}],62:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var EventType = function (x) {
    return x;
};
var wheelEventToEvent = Unsafe_Coerce.unsafeCoerce;
var uiEventToEvent = Unsafe_Coerce.unsafeCoerce;
var touchEventToEvent = Unsafe_Coerce.unsafeCoerce;
var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
var readPopStateEvent = Data_Foreign.unsafeReadTagged("PopStateEvent");
var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
var readEventTarget = function ($3) {
    return Data_Newtype.wrap(Control_Monad_Except_Trans.newtypeExceptT)(Data_Newtype.wrap(Data_Identity.newtypeIdentity)(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function ($4) {
        return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.ForeignError.create($4));
    })($foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create)($3))));
};
var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
var readClipboardEvent = Data_Foreign.unsafeReadTagged("ClipboardEvent");
var progressEventToEvent = Unsafe_Coerce.unsafeCoerce;
var popStateEventToEvent = Unsafe_Coerce.unsafeCoerce;
var ordEventType = Data_Ord.ordString;
var newtypeEventType = new Data_Newtype.Newtype(function (n) {
    return n;
}, EventType);
var mouseEventToEvent = Unsafe_Coerce.unsafeCoerce;
var keyboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
var inputEventToEvent = Unsafe_Coerce.unsafeCoerce;
var focusEventToEvent = Unsafe_Coerce.unsafeCoerce;
var eqEventType = Data_Eq.eqString;
var customEventToEvent = Unsafe_Coerce.unsafeCoerce;
var compositionEventToEvent = Unsafe_Coerce.unsafeCoerce;
var clipboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    EventType: EventType,
    readEventTarget: readEventTarget,
    customEventToEvent: customEventToEvent,
    readCustomEvent: readCustomEvent,
    uiEventToEvent: uiEventToEvent,
    readUIEvent: readUIEvent,
    focusEventToEvent: focusEventToEvent,
    readFocusEvent: readFocusEvent,
    mouseEventToEvent: mouseEventToEvent,
    readMouseEvent: readMouseEvent,
    wheelEventToEvent: wheelEventToEvent,
    readWheelEvent: readWheelEvent,
    touchEventToEvent: touchEventToEvent,
    readTouchEvent: readTouchEvent,
    inputEventToEvent: inputEventToEvent,
    readInputEvent: readInputEvent,
    keyboardEventToEvent: keyboardEventToEvent,
    readKeyboardEvent: readKeyboardEvent,
    compositionEventToEvent: compositionEventToEvent,
    readCompositionEvent: readCompositionEvent,
    popStateEventToEvent: popStateEventToEvent,
    readPopStateEvent: readPopStateEvent,
    progressEventToEvent: progressEventToEvent,
    readProgressEvent: readProgressEvent,
    clipboardEventToEvent: clipboardEventToEvent,
    readClipboardEvent: readClipboardEvent,
    newtypeEventType: newtypeEventType,
    eqEventType: eqEventType,
    ordEventType: ordEventType
};

},{"../Control.Applicative":4,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../Data.Bifunctor":88,"../Data.Either":108,"../Data.Eq":111,"../Data.Foreign":121,"../Data.Identity":142,"../Data.List.Types":150,"../Data.Newtype":171,"../Data.Ord":178,"../Prelude":263,"../Unsafe.Coerce":281,"./foreign":61}],63:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var DOM_Event_Types = require("../DOM.Event.Types");
var Data_Foreign = require("../Data.Foreign");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var readFileList = Data_Foreign.unsafeReadTagged("FileList");
var fileToBlob = Unsafe_Coerce.unsafeCoerce;
var fileReaderToEventTarget = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    fileToBlob: fileToBlob,
    fileReaderToEventTarget: fileReaderToEventTarget,
    readFileList: readFileList
};

},{"../DOM.Event.Types":62,"../Data.Foreign":121,"../Unsafe.Coerce":281}],64:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_Util_FFI = require("../DOM.Util.FFI");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ElementId = function (x) {
    return x;
};
var textToNode = Unsafe_Coerce.unsafeCoerce;
var readNode = DOM_Util_FFI.unsafeReadProtoTagged("Node");
var readElement = DOM_Util_FFI.unsafeReadProtoTagged("Element");
var readDocument = DOM_Util_FFI.unsafeReadProtoTagged("Document");
var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
var oOrdElementId = Data_Ord.ordString;
var newtypeElementId = new Data_Newtype.Newtype(function (n) {
    return n;
}, ElementId);
var eqElementId = Data_Eq.eqString;
var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var elementToNode = Unsafe_Coerce.unsafeCoerce;
var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNode = Unsafe_Coerce.unsafeCoerce;
var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
var commentToNode = Unsafe_Coerce.unsafeCoerce;
var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    readNode: readNode,
    readDocument: readDocument,
    documentToNonElementParentNode: documentToNonElementParentNode,
    documentToParentNode: documentToParentNode,
    documentToNode: documentToNode,
    documentToEventTarget: documentToEventTarget,
    ElementId: ElementId,
    readElement: readElement,
    elementToParentNode: elementToParentNode,
    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode,
    elementToNode: elementToNode,
    elementToEventTarget: elementToEventTarget,
    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode,
    textToNode: textToNode,
    commentToNode: commentToNode,
    processingInstructionToNode: processingInstructionToNode,
    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode,
    documentFragmentToParentNode: documentFragmentToParentNode,
    documentFragmentToNode: documentFragmentToNode,
    documentTypeToNode: documentTypeToNode,
    newtypeElementId: newtypeElementId,
    eqElementId: eqElementId,
    oOrdElementId: oOrdElementId
};

},{"../DOM.Event.Types":62,"../DOM.Util.FFI":66,"../Data.Eq":111,"../Data.Foreign":121,"../Data.Newtype":171,"../Data.Ord":178,"../Prelude":263,"../Unsafe.Coerce":281}],65:[function(require,module,exports){
"use strict";

exports._unsafeReadProtoTagged = (function () {
  var tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
  return function (name) {
    return function (failure) {
      return function (success) {
        return function (value) {
          var obj = value;
          while (obj != null) {
            var proto = Object.getPrototypeOf(obj);
            var ctor = tagOf(proto);
            if (ctor === name) {
              return success(value);
            } else if (ctor === "Object") {
              return failure(tagOf(value));
            }
            obj = proto;
          }
          return failure(tagOf(value));
        };
      };
    };
  };
}());

},{}],66:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Prelude = require("../Prelude");
var unsafeReadProtoTagged = function (name) {
    return $foreign._unsafeReadProtoTagged(name)(function ($0) {
        return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Left.create(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.TypeMismatch.create(name)($0))));
    })(function ($1) {
        return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Right.create($1));
    });
};
module.exports = {
    unsafeReadProtoTagged: unsafeReadProtoTagged
};

},{"../Control.Applicative":4,"../Control.Monad.Except":43,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Foreign":121,"../Data.Identity":142,"../Data.List.Types":150,"../Prelude":263,"./foreign":65}],67:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
module.exports = {};

},{}],68:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Eff = require("../Control.Monad.Eff");
module.exports = {};

},{"../Control.Monad.Eff":40}],69:[function(require,module,exports){
"use strict";

function id(x) {
  return x;
}

exports.fromNull = function () {
  return null;
};

exports.fromBoolean = id;
exports.fromNumber = id;
exports.fromString = id;
exports.fromArray = id;
exports.fromObject = id;

exports.jsonNull = null;

exports.stringify = function (j) {
  return JSON.stringify(j);
};

var objToString = Object.prototype.toString;
var objKeys = Object.keys;

function isArray(a) {
  return objToString.call(a) === "[object Array]";
}

exports._foldJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
  if (j == null) return isNull(null);
  else if (typeof j === "boolean") return isBool(j);
  else if (typeof j === "number") return isNum(j);
  else if (typeof j === "string") return isStr(j);
  else if (objToString.call(j) === "[object Array]")
    return isArr(j);
  else return isObj(j);
};

exports._compare = function _compare (EQ, GT, LT, a, b) {
  if (a == null) {
    if (b == null) return EQ;
    else return LT;
  } else if (typeof a === "boolean") {
    if (typeof b === "boolean") {
      // boolean / boolean
      if (a === b) return EQ;
      else if (a === false) return LT;
      else return GT;
    } else if (b == null) return GT;
    else return LT;
  } else if (typeof a === "number") {
    if (typeof b === "number") {
      if (a === b) return EQ;
      else if (a < b) return LT;
      else return GT;
    } else if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else return LT;
  } else if (typeof a === "string") {
    if (typeof b === "string") {
      if (a === b) return EQ;
      else if (a < b) return LT;
      else return GT;
    } else if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else if (typeof b === "number") return GT;
    else return LT;
  } else if (isArray(a)) {
    if (isArray(b)) {
      for (var i = 0; i < Math.min(a.length, b.length); i++) {
        var ca = _compare(EQ, GT, LT, a[i], b[i]);
        if (ca !== EQ) return ca;
      }
      if (a.length === b.length) return EQ;
      else if (a.length < b.length) return LT;
      else return GT;
    } else if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else if (typeof b === "number") return GT;
    else if (typeof b === "string") return GT;
    else return LT;
  } else {
    if (b == null) return GT;
    else if (typeof b === "boolean") return GT;
    else if (typeof b === "number") return GT;
    else if (typeof b === "string") return GT;
    else if (isArray(b)) return GT;
    else {
      var akeys = objKeys(a);
      var bkeys = objKeys(b);
      if (akeys.length < bkeys.length) return LT;
      else if (akeys.length > bkeys.length) return GT;
      var keys = akeys.concat(bkeys).sort();
      for (var j = 0; j < keys.length; j++) {
        var k = keys[j];
        if (a[k] === undefined) return LT;
        else if (b[k] === undefined) return GT;
        var ck = _compare(EQ, GT, LT, a[k], b[k]);
        if (ck !== EQ) return ck;
      }
      return EQ;
    }
  }
};

},{}],70:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Show = require("../Data.Show");
var Data_StrMap = require("../Data.StrMap");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var verbJsonType = function (def) {
    return function (f) {
        return function (fold) {
            return fold(def)(f);
        };
    };
};
var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var showJson = new Data_Show.Show($foreign.stringify);
var showJNull = new Data_Show.Show(function (v) {
    return "null";
});
var jsonZero = $foreign.fromNumber(0.0);
var jsonTrue = $foreign.fromBoolean(true);
var jsonSingletonObject = function (key) {
    return function (val) {
        return $foreign.fromObject(Data_StrMap.singleton(key)(val));
    };
};
var jsonSingletonArray = function (j) {
    return $foreign.fromArray([ j ]);
};
var jsonFalse = $foreign.fromBoolean(false);
var jsonEmptyString = $foreign.fromString("");
var jsonEmptyObject = $foreign.fromObject(Data_StrMap.empty);
var jsonEmptyArray = $foreign.fromArray([  ]);
var jNull = $foreign.jsonNull;
var isJsonType = verbJsonType(false)(Data_Function["const"](true));
var foldJsonString = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isString = isJsonType(foldJsonString);
var toString = toJsonType(foldJsonString);
var foldJsonObject = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
        };
    };
};
var isObject = isJsonType(foldJsonObject);
var toObject = toJsonType(foldJsonObject);
var foldJsonNumber = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isNumber = isJsonType(foldJsonNumber);
var toNumber = toJsonType(foldJsonNumber);
var foldJsonNull = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isNull = isJsonType(foldJsonNull);
var toNull = toJsonType(foldJsonNull);
var foldJsonBoolean = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
        };
    };
};
var isBoolean = isJsonType(foldJsonBoolean);
var toBoolean = toJsonType(foldJsonBoolean);
var foldJsonArray = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
        };
    };
};
var isArray = isJsonType(foldJsonArray);
var toArray = toJsonType(foldJsonArray);
var foldJson = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (json) {
                            return $foreign._foldJson(a, b, c, d, e, f, json);
                        };
                    };
                };
            };
        };
    };
};
var ordJson = new Data_Ord.Ord(function () {
    return eqJson;
}, function (a) {
    return function (b) {
        return $foreign._compare(Data_Ordering.EQ.value, Data_Ordering.GT.value, Data_Ordering.LT.value, a, b);
    };
});
var eqJson = new Data_Eq.Eq(function (j1) {
    return function (j2) {
        return Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Ord.compare(ordJson)(j1)(j2))(Data_Ordering.EQ.value);
    };
});
var eqJNull = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var ordJNull = new Data_Ord.Ord(function () {
    return eqJNull;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
module.exports = {
    foldJson: foldJson,
    foldJsonNull: foldJsonNull,
    foldJsonBoolean: foldJsonBoolean,
    foldJsonNumber: foldJsonNumber,
    foldJsonString: foldJsonString,
    foldJsonArray: foldJsonArray,
    foldJsonObject: foldJsonObject,
    isNull: isNull,
    isBoolean: isBoolean,
    isNumber: isNumber,
    isString: isString,
    isArray: isArray,
    isObject: isObject,
    toNull: toNull,
    toBoolean: toBoolean,
    toNumber: toNumber,
    toString: toString,
    toArray: toArray,
    toObject: toObject,
    jNull: jNull,
    jsonTrue: jsonTrue,
    jsonFalse: jsonFalse,
    jsonZero: jsonZero,
    jsonEmptyString: jsonEmptyString,
    jsonEmptyArray: jsonEmptyArray,
    jsonSingletonArray: jsonSingletonArray,
    jsonEmptyObject: jsonEmptyObject,
    jsonSingletonObject: jsonSingletonObject,
    eqJNull: eqJNull,
    ordJNull: ordJNull,
    showJNull: showJNull,
    eqJson: eqJson,
    ordJson: ordJson,
    showJson: showJson,
    fromNull: $foreign.fromNull,
    fromBoolean: $foreign.fromBoolean,
    fromNumber: $foreign.fromNumber,
    fromString: $foreign.fromString,
    fromArray: $foreign.fromArray,
    fromObject: $foreign.fromObject,
    jsonNull: $foreign.jsonNull,
    stringify: $foreign.stringify
};

},{"../Data.Eq":111,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Show":189,"../Data.StrMap":193,"../Data.Tuple":212,"../Prelude":263,"../Unsafe.Coerce":281,"./foreign":69}],71:[function(require,module,exports){
"use strict";

exports._jsonParser = function (fail, succ, s) {
  try {
    return succ(JSON.parse(s));
  }
  catch (e) {
    return fail(e.message);
  }
};

},{}],72:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Argonaut_Core = require("../Data.Argonaut.Core");
var Data_Either = require("../Data.Either");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var jsonParser = function (j) {
    return $foreign._jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
};
module.exports = {
    jsonParser: jsonParser
};

},{"../Data.Argonaut.Core":70,"../Data.Either":108,"../Data.Function.Uncurried":124,"./foreign":71}],73:[function(require,module,exports){
"use strict";

exports.fold1Impl = function (f) {
  return function (xs) {
    var acc = xs[0];
    var len = xs.length;
    for (var i = 1; i < len; i++) {
      acc = f(acc)(xs[i]);
    }
    return acc;
  };
};

exports.traverse1Impl = function () {
  function Cont(fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function finalCell(head) {
    return new ConsCell(head, emptyList);
  }

  function consList(x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray(list) {
    var arr = [];
    var xs = list;
    while (xs !== emptyList) {
      arr.push(xs.head);
      xs = xs.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (f) {
        var buildFrom = function (x, ys) {
          return apply(map(consList)(f(x)))(ys);
        };

        var go = function (acc, currentLen, xs) {
          if (currentLen === 0) {
            return acc;
          } else {
            var last = xs[currentLen - 1];
            return new Cont(function () {
              var built = go(buildFrom(last, acc), currentLen - 1, xs);
              return built;
            });
          }
        };

        return function (array) {
          var acc = map(finalCell)(f(array[array.length - 1]));
          var result = go(acc, array.length - 1, array);
          while (result instanceof Cont) {
            result = result.fn();
          }

          return map(listToArray)(result);
        };
      };
    };
  };
}();

},{}],74:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var NonEmptyArray = function (x) {
    return x;
};
var unsafeFromArray = NonEmptyArray;
var traversableWithIndexNonEmptyArray = Data_TraversableWithIndex.traversableWithIndexArray;
var traversableNonEmptyArray = Data_Traversable.traversableArray;
var toArray = function (v) {
    return v;
};
var unionBy$prime = function (eq) {
    return function (xs) {
        return function ($46) {
            return unsafeFromArray(Data_Array.unionBy(eq)(toArray(xs))($46));
        };
    };
};
var union$prime = function (dictEq) {
    return unionBy$prime(Data_Eq.eq(dictEq));
};
var unionBy = function (eq) {
    return function (xs) {
        return function ($47) {
            return unionBy$prime(eq)(xs)(toArray($47));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var unzip = function ($48) {
    return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(NonEmptyArray)(NonEmptyArray)(Data_Array.unzip(toArray($48)));
};
var updateAt = function (i) {
    return function (x) {
        return function ($49) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(NonEmptyArray)(Data_Array.updateAt(i)(x)(toArray($49)));
        };
    };
};
var zip = function (xs) {
    return function (ys) {
        return NonEmptyArray(Data_Array.zip(toArray(xs))(toArray(ys)));
    };
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            return NonEmptyArray(Data_Array.zipWith(f)(toArray(xs))(toArray(ys)));
        };
    };
};
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmptyArray)(Data_Array.zipWithA(dictApplicative)(f)(toArray(xs))(toArray(ys)));
            };
        };
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function ($50) {
            return Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(NonEmptyArray)(Data_Array.some(dictAlternative)(dictLazy)($50));
        };
    };
};
var snoc$prime = function (xs) {
    return function (x) {
        return unsafeFromArray(Data_Array.snoc(xs)(x));
    };
};
var snoc = function (xs) {
    return function (x) {
        return unsafeFromArray(Data_Array.snoc(toArray(xs))(x));
    };
};
var singleton = function ($51) {
    return NonEmptyArray(Data_Array.singleton($51));
};
var showNonEmptyArray = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(NonEmptyArray " + (Data_Show.show(Data_Show.showArray(dictShow))(v) + ")");
    });
};
var semigroupNonEmptyArray = Data_Semigroup.semigroupArray;
var replicate = function (i) {
    return function (x) {
        return NonEmptyArray(Data_Array.replicate(Data_Ord.max(Data_Ord.ordInt)(1)(i))(x));
    };
};
var range = function (x) {
    return function (y) {
        return unsafeFromArray(Data_Array.range(x)(y));
    };
};
var ordNonEmptyArray = function (dictOrd) {
    return Data_Ord.ordArray(dictOrd);
};
var ord1NonEmptyArray = Data_Ord.ord1Array;
var monadNonEmptyArray = Control_Monad.monadArray;
var modifyAt = function (i) {
    return function (f) {
        return function ($52) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(NonEmptyArray)(Data_Array.modifyAt(i)(f)(toArray($52)));
        };
    };
};
var intersectBy$prime = function (eq) {
    return function (xs) {
        return Data_Array.intersectBy(eq)(toArray(xs));
    };
};
var intersectBy = function (eq) {
    return function (xs) {
        return function ($53) {
            return intersectBy$prime(eq)(xs)(toArray($53));
        };
    };
};
var intersect$prime = function (dictEq) {
    return intersectBy$prime(Data_Eq.eq(dictEq));
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var insertAt = function (i) {
    return function (x) {
        return function ($54) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(NonEmptyArray)(Data_Array.insertAt(i)(x)(toArray($54)));
        };
    };
};
var functorWithIndexNonEmptyArray = Data_FunctorWithIndex.functorWithIndexArray;
var functorNonEmptyArray = Data_Functor.functorArray;
var fromFoldable1 = function (dictFoldable1) {
    return function ($55) {
        return unsafeFromArray(Data_Array.fromFoldable(dictFoldable1.Foldable0())($55));
    };
};
var fromArray = function (xs) {
    if (Data_Array.length(xs) > 0) {
        return new Data_Maybe.Just(xs);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Array.NonEmpty line 176, column 1 - line 176, column 58: " + [ xs.constructor.name ]);
};
var fromFoldable = function (dictFoldable) {
    return function ($56) {
        return fromArray(Data_Array.fromFoldable(dictFoldable)($56));
    };
};
var foldableWithIndexNonEmptyArray = Data_FoldableWithIndex.foldableWithIndexArray;
var foldableNonEmptyArray = Data_Foldable.foldableArray;
var foldable1NonEmptyArray = new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableNonEmptyArray;
}, function (dictSemigroup) {
    return $foreign.fold1Impl(Data_Semigroup.append(dictSemigroup));
}, function (dictSemigroup) {
    return Data_Semigroup_Foldable.foldMap1Default(foldable1NonEmptyArray)(functorNonEmptyArray)(dictSemigroup);
});
var traversable1NonEmptyArray = new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1NonEmptyArray;
}, function () {
    return traversableNonEmptyArray;
}, function (dictApply) {
    return Data_Semigroup_Traversable.sequence1Default(traversable1NonEmptyArray)(dictApply);
}, function (dictApply) {
    return $foreign.traverse1Impl(Control_Apply.apply(dictApply))(Data_Functor.map(dictApply.Functor0()));
});
var eqNonEmptyArray = function (dictEq) {
    return Data_Eq.eqArray(dictEq);
};
var eq1NonEmptyArray = Data_Eq.eq1Array;
var difference$prime = function (dictEq) {
    return function (xs) {
        return Data_Array.difference(dictEq)(toArray(xs));
    };
};
var cons$prime = function (x) {
    return function (xs) {
        return unsafeFromArray(Data_Array.cons(x)(xs));
    };
};
var fromNonEmpty = function (v) {
    return cons$prime(v.value0)(v.value1);
};
var concat = function ($57) {
    return NonEmptyArray(Data_Array.concat(toArray(Data_Functor.map(functorNonEmptyArray)(toArray)($57))));
};
var bindNonEmptyArray = Control_Bind.bindArray;
var concatMap = Data_Function.flip(Control_Bind.bind(bindNonEmptyArray));
var applyNonEmptyArray = Control_Apply.applyArray;
var applicativeNonEmptyArray = Control_Applicative.applicativeArray;
var appendArray = function (xs) {
    return function (ys) {
        return unsafeFromArray(Data_Semigroup.append(Data_Semigroup.semigroupArray)(toArray(xs))(ys));
    };
};
var alterAt = function (i) {
    return function (f) {
        return function ($58) {
            return Data_Array.alterAt(i)(f)(toArray($58));
        };
    };
};
var altNonEmptyArray = Control_Alt.altArray;
var adaptMaybe = function (f) {
    return function ($59) {
        return Data_Maybe.fromJust()(f(toArray($59)));
    };
};
var head = adaptMaybe(Data_Array.head);
var init = adaptMaybe(Data_Array.init);
var last = adaptMaybe(Data_Array.last);
var tail = adaptMaybe(Data_Array.tail);
var uncons = adaptMaybe(Data_Array.uncons);
var toNonEmpty = function ($60) {
    return (function (v) {
        return new Data_NonEmpty.NonEmpty(v.head, v.tail);
    })(uncons($60));
};
var unsnoc = adaptMaybe(Data_Array.unsnoc);
var adaptAny = function (f) {
    return function ($61) {
        return f(toArray($61));
    };
};
var catMaybes = adaptAny(Data_Array.catMaybes);
var $$delete = function (dictEq) {
    return function (x) {
        return adaptAny(Data_Array["delete"](dictEq)(x));
    };
};
var deleteAt = function (i) {
    return adaptAny(Data_Array.deleteAt(i));
};
var deleteBy = function (f) {
    return function (x) {
        return adaptAny(Data_Array.deleteBy(f)(x));
    };
};
var difference = function (dictEq) {
    return function (xs) {
        return adaptAny(difference$prime(dictEq)(xs));
    };
};
var drop = function (i) {
    return adaptAny(Data_Array.drop(i));
};
var dropEnd = function (i) {
    return adaptAny(Data_Array.dropEnd(i));
};
var dropWhile = function (f) {
    return adaptAny(Data_Array.dropWhile(f));
};
var elemIndex = function (dictEq) {
    return function (x) {
        return adaptAny(Data_Array.elemIndex(dictEq)(x));
    };
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return adaptAny(Data_Array.elemLastIndex(dictEq)(x));
    };
};
var filter = function (f) {
    return adaptAny(Data_Array.filter(f));
};
var filterA = function (dictApplicative) {
    return function (f) {
        return adaptAny(Data_Array.filterA(dictApplicative)(f));
    };
};
var findIndex = function (x) {
    return adaptAny(Data_Array.findIndex(x));
};
var findLastIndex = function (x) {
    return adaptAny(Data_Array.findLastIndex(x));
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (acc) {
            return adaptAny(Data_Array.foldM(dictMonad)(f)(acc));
        };
    };
};
var foldRecM = function (dictMonadRec) {
    return function (f) {
        return function (acc) {
            return adaptAny(Data_Array.foldRecM(dictMonadRec)(f)(acc));
        };
    };
};
var index = adaptAny(Data_Array.index);
var length = adaptAny(Data_Array.length);
var mapMaybe = function (f) {
    return adaptAny(Data_Array.mapMaybe(f));
};
var partition = function (f) {
    return adaptAny(Data_Array.partition(f));
};
var slice = function (start) {
    return function (end) {
        return adaptAny(Data_Array.slice(start)(end));
    };
};
var span = function (f) {
    return adaptAny(Data_Array.span(f));
};
var take = function (i) {
    return adaptAny(Data_Array.take(i));
};
var takeEnd = function (i) {
    return adaptAny(Data_Array.takeEnd(i));
};
var takeWhile = function (f) {
    return adaptAny(Data_Array.takeWhile(f));
};
var toUnfoldable = function (dictUnfoldable) {
    return adaptAny(Data_Array.toUnfoldable(dictUnfoldable));
};
var unsafeAdapt = function (f) {
    return function ($62) {
        return NonEmptyArray(adaptAny(f)($62));
    };
};
var cons = function (x) {
    return unsafeAdapt(Data_Array.cons(x));
};
var insert = function (dictOrd) {
    return function (x) {
        return unsafeAdapt(Data_Array.insert(dictOrd)(x));
    };
};
var insertBy = function (f) {
    return function (x) {
        return unsafeAdapt(Data_Array.insertBy(f)(x));
    };
};
var modifyAtIndices = function (dictFoldable) {
    return function (is) {
        return function (f) {
            return unsafeAdapt(Data_Array.modifyAtIndices(dictFoldable)(is)(f));
        };
    };
};
var nub = function (dictEq) {
    return unsafeAdapt(Data_Array.nub(dictEq));
};
var nubBy = function (f) {
    return unsafeAdapt(Data_Array.nubBy(f));
};
var reverse = unsafeAdapt(Data_Array.reverse);
var sort = function (dictOrd) {
    return unsafeAdapt(Data_Array.sort(dictOrd));
};
var sortBy = function (f) {
    return unsafeAdapt(Data_Array.sortBy(f));
};
var sortWith = function (dictOrd) {
    return function (f) {
        return unsafeAdapt(Data_Array.sortWith(dictOrd)(f));
    };
};
var updateAtIndices = function (dictFoldable) {
    return function (pairs) {
        return unsafeAdapt(Data_Array.updateAtIndices(dictFoldable)(pairs));
    };
};
var unsafeIndex = function (dictPartial) {
    return adaptAny(Data_Array.unsafeIndex(dictPartial));
};
module.exports = {
    fromArray: fromArray,
    fromNonEmpty: fromNonEmpty,
    toArray: toArray,
    toNonEmpty: toNonEmpty,
    fromFoldable: fromFoldable,
    fromFoldable1: fromFoldable1,
    toUnfoldable: toUnfoldable,
    singleton: singleton,
    range: range,
    replicate: replicate,
    some: some,
    length: length,
    cons: cons,
    "cons'": cons$prime,
    snoc: snoc,
    "snoc'": snoc$prime,
    appendArray: appendArray,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    updateAtIndices: updateAtIndices,
    modifyAt: modifyAt,
    modifyAtIndices: modifyAtIndices,
    alterAt: alterAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    partition: partition,
    filterA: filterA,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    sort: sort,
    sortBy: sortBy,
    sortWith: sortWith,
    slice: slice,
    take: take,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    drop: drop,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    nub: nub,
    nubBy: nubBy,
    union: union,
    "union'": union$prime,
    unionBy: unionBy,
    "unionBy'": unionBy$prime,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    "difference'": difference$prime,
    intersect: intersect,
    "intersect'": intersect$prime,
    intersectBy: intersectBy,
    "intersectBy'": intersectBy$prime,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM,
    foldRecM: foldRecM,
    unsafeIndex: unsafeIndex,
    showNonEmptyArray: showNonEmptyArray,
    eqNonEmptyArray: eqNonEmptyArray,
    eq1NonEmptyArray: eq1NonEmptyArray,
    ordNonEmptyArray: ordNonEmptyArray,
    ord1NonEmptyArray: ord1NonEmptyArray,
    semigroupNonEmptyArray: semigroupNonEmptyArray,
    functorNonEmptyArray: functorNonEmptyArray,
    functorWithIndexNonEmptyArray: functorWithIndexNonEmptyArray,
    foldableNonEmptyArray: foldableNonEmptyArray,
    foldableWithIndexNonEmptyArray: foldableWithIndexNonEmptyArray,
    foldable1NonEmptyArray: foldable1NonEmptyArray,
    traversableNonEmptyArray: traversableNonEmptyArray,
    traversableWithIndexNonEmptyArray: traversableWithIndexNonEmptyArray,
    traversable1NonEmptyArray: traversable1NonEmptyArray,
    applyNonEmptyArray: applyNonEmptyArray,
    applicativeNonEmptyArray: applicativeNonEmptyArray,
    bindNonEmptyArray: bindNonEmptyArray,
    monadNonEmptyArray: monadNonEmptyArray,
    altNonEmptyArray: altNonEmptyArray
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Lazy":15,"../Control.Monad":54,"../Control.Monad.Rec.Class":47,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Bifunctor":88,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Foldable":116,"../Data.FoldableWithIndex":117,"../Data.Function":125,"../Data.Functor":130,"../Data.FunctorWithIndex":132,"../Data.Maybe":156,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Semigroup.Traversable":183,"../Data.Show":189,"../Data.Traversable":209,"../Data.TraversableWithIndex":210,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":73}],75:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Ring = require("../Data.Ring");
var Prelude = require("../Prelude");
var tail = function (dictPartial) {
    return function (xs) {
        return Data_Array.slice(1)(Data_Array.length(xs))(xs);
    };
};
var last = function (dictPartial) {
    return function (xs) {
        return xs[Data_Array.length(xs) - 1 | 0];
    };
};
var init = function (dictPartial) {
    return function (xs) {
        return Data_Array.slice(0)(Data_Array.length(xs) - 1 | 0)(xs);
    };
};
var head = function (dictPartial) {
    return function (xs) {
        return xs[0];
    };
};
module.exports = {
    head: head,
    tail: tail,
    last: last,
    init: init
};

},{"../Data.Array":80,"../Data.Ring":181,"../Prelude":263}],76:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Semiring = require("../Data.Semiring");
var Prelude = require("../Prelude");
var Iterator = (function () {
    function Iterator(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Iterator.create = function (value0) {
        return function (value1) {
            return new Iterator(value0, value1);
        };
    };
    return Iterator;
})();
var peek = function (v) {
    return function __do() {
        var v1 = Control_Monad_ST.readSTRef(v.value1)();
        return v.value0(v1);
    };
};
var next = function (v) {
    return function __do() {
        var v1 = Control_Monad_ST.readSTRef(v.value1)();
        var v2 = Control_Monad_ST.modifySTRef(v.value1)(function (v2) {
            return v2 + 1 | 0;
        })();
        return v.value0(v1);
    };
};
var pushWhile = function (p) {
    return function (iter) {
        return function (array) {
            return function __do() {
                var v = Control_Monad_ST.newSTRef(false)();
                while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                    (function __do() {
                        var v1 = peek(iter)();
                        if (v1 instanceof Data_Maybe.Just && p(v1.value0)) {
                            var v2 = Data_Array_ST.pushSTArray(array)(v1.value0)();
                            return Data_Functor["void"](Control_Monad_Eff.functorEff)(next(iter))();
                        };
                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                    })();
                };
                return {};
            };
        };
    };
};
var pushAll = pushWhile(Data_Function["const"](true));
var iterator = function (f) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Iterator.create(f))(Control_Monad_ST.newSTRef(0));
};
var iterate = function (iter) {
    return function (f) {
        return function __do() {
            var v = Control_Monad_ST.newSTRef(false)();
            while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                (function __do() {
                    var v1 = next(iter)();
                    if (v1 instanceof Data_Maybe.Just) {
                        return f(v1.value0)();
                    };
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                    };
                    throw new Error("Failed pattern match at Data.Array.ST.Iterator line 39, column 5 - line 41, column 46: " + [ v1.constructor.name ]);
                })();
            };
            return {};
        };
    };
};
var exhausted = function ($27) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.isNothing)(peek($27));
};
module.exports = {
    iterator: iterator,
    iterate: iterate,
    next: next,
    peek: peek,
    exhausted: exhausted,
    pushWhile: pushWhile,
    pushAll: pushAll
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.ST":49,"../Control.Semigroupoid":60,"../Data.Array.ST":78,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Semiring":187,"../Prelude":263}],77:[function(require,module,exports){
"use strict";

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],78:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var unsafeThaw = function ($7) {
    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($7);
};
var unsafeFreeze = function ($8) {
    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($8);
};
var thaw = $foreign.copyImpl;
var withArray = function (f) {
    return function (xs) {
        return function __do() {
            var v = thaw(xs)();
            var v1 = f(v)();
            return unsafeFreeze(v)();
        };
    };
};
var pushSTArray = function (arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([ a ]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var modifySTArray = function (xs) {
    return function (i) {
        return function (f) {
            return function __do() {
                var v = peekSTArray(xs)(i)();
                if (v instanceof Data_Maybe.Just) {
                    return $foreign.pokeSTArray(xs)(i)(f(v.value0))();
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return false;
                };
                throw new Error("Failed pattern match at Data.Array.ST line 127, column 3 - line 129, column 26: " + [ v.constructor.name ]);
            };
        };
    };
};
var freeze = $foreign.copyImpl;
module.exports = {
    withArray: withArray,
    peekSTArray: peekSTArray,
    pushSTArray: pushSTArray,
    modifySTArray: modifySTArray,
    freeze: freeze,
    thaw: thaw,
    unsafeFreeze: unsafeFreeze,
    unsafeThaw: unsafeThaw,
    runSTArray: $foreign.runSTArray,
    emptySTArray: $foreign.emptySTArray,
    pokeSTArray: $foreign.pokeSTArray,
    pushAllSTArray: $foreign.pushAllSTArray,
    spliceSTArray: $foreign.spliceSTArray,
    toAssocArray: $foreign.toAssocArray
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.ST":49,"../Control.Semigroupoid":60,"../Data.Maybe":156,"../Prelude":263,"../Unsafe.Coerce":281,"./foreign":77}],79:[function(require,module,exports){
"use strict";

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = new Array(step * (end - start) + 1);
    var i = start, n = 0;
    while (i !== end) {
      result[n++] = i;
      i += step;
    }
    result[n] = i;
    return result;
  };
};

var replicate = function (count) {
  return function (value) {
    if (count < 1) {
      return [];
    }
    var result = new Array(count);
    return result.fill(value);
  };
};

var replicatePolyfill = function (count) {
  return function (value) {
    var result = [];
    var n = 0;
    for (var i = 0; i < count; i++) {
      result[n++] = value;
    }
    return result;
  };
};

// In browsers that have Array.prototype.fill we use it, as it's faster.
exports.replicate = typeof Array.prototype.fill === "function" ?
    replicate :
    replicatePolyfill;

exports.fromFoldableImpl = (function () {
  function Cons(head, tail) {
    this.head = head;
    this.tail = tail;
  }
  var emptyList = {};

  function curryCons(head) {
    return function (tail) {
      return new Cons(head, tail);
    };
  }

  function listToArray(list) {
    var result = [];
    var count = 0;
    var xs = list;
    while (xs !== emptyList) {
      result[count++] = xs.head;
      xs = xs.tail;
    }
    return result;
  }

  return function (foldr) {
    return function (xs) {
      return listToArray(foldr(curryCons)(emptyList)(xs));
    };
  };
})();

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  if (xss.length <= 10000) {
    // This method is faster, but it crashes on big arrays.
    // So we use it when can and fallback to simple variant otherwise.
    return Array.prototype.concat.apply([], xss);
  }

  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

exports.partition = function (f) {
  return function (xs) {
    var yes = [];
    var no  = [];
    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x))
        yes.push(x);
      else
        no.push(x);
    }
    return { yes: yes, no: no };
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.take = function (n) {
  return function (l) {
    return n < 1 ? [] : l.slice(0, n);
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

//------------------------------------------------------------------------------
// Partial ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.unsafeIndexImpl = function (xs) {
  return function (n) {
    return xs[n];
  };
};

},{}],80:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Array_ST_Iterator = require("../Data.Array.ST.Iterator");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAtIndices = function (dictFoldable) {
    return function (us) {
        return function (xs) {
            return Control_Monad_ST.pureST(Data_Array_ST.withArray(function (res) {
                return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(dictFoldable)(Data_Tuple.uncurry(Data_Array_ST.pokeSTArray(res)))(us);
            })(xs));
        };
    };
};
var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeIndex = function (dictPartial) {
    return $foreign.unsafeIndexImpl;
};
var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x,
            tail: xs
        });
    };
});
var toUnfoldable = function (dictUnfoldable) {
    return function (xs) {
        var len = $foreign.length(xs);
        var f = function (i) {
            if (i < len) {
                return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
            };
            if (Data_Boolean.otherwise) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match at Data.Array line 139, column 3 - line 141, column 26: " + [ i.constructor.name ]);
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
    };
};
var takeEnd = function (n) {
    return function (xs) {
        return $foreign.drop($foreign.length(xs) - n | 0)(xs);
    };
};
var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var v = comp(x)(y);
                if (v instanceof Data_Ordering.GT) {
                    return 1;
                };
                if (v instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if (v instanceof Data_Ordering.LT) {
                    return -1 | 0;
                };
                throw new Error("Failed pattern match at Data.Array line 698, column 15 - line 703, column 1: " + [ v.constructor.name ]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sortWith = function (dictOrd) {
    return function (f) {
        return sortBy(Data_Ord.comparing(dictOrd)(f));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var $$null = function (xs) {
    return $foreign.length(xs) === 0;
};
var nubBy = function (eq) {
    return function (xs) {
        var v = uncons(xs);
        if (v instanceof Data_Maybe.Just) {
            return $foreign.cons(v.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                return !eq(v.value0.head)(y);
            })(v.value0.tail)));
        };
        if (v instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        throw new Error("Failed pattern match at Data.Array line 888, column 3 - line 890, column 18: " + [ v.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var modifyAtIndices = function (dictFoldable) {
    return function (is) {
        return function (f) {
            return function (xs) {
                return Control_Monad_ST.pureST(Data_Array_ST.withArray(function (res) {
                    return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(dictFoldable)(function (i) {
                        return Data_Array_ST.modifySTArray(res)(i)(f);
                    })(is);
                })(xs));
            };
        };
    };
};
var mapWithIndex = function (f) {
    return function (xs) {
        return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([  ]));
        };
    };
};
var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function (xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Data_Boolean.otherwise) {
        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
    };
    throw new Error("Failed pattern match at Data.Array line 319, column 1 - line 319, column 45: " + [ xs.constructor.name ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var last = function (xs) {
    return index(xs)($foreign.length(xs) - 1 | 0);
};
var unsnoc = function (xs) {
    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return function (v1) {
            return {
                init: v,
                last: v1
            };
        };
    })(init(xs)))(last(xs));
};
var modifyAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
var span = function (p) {
    return function (arr) {
        var go = function ($copy_i) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i) {
                var v = index(arr)(i);
                if (v instanceof Data_Maybe.Just) {
                    var $64 = p(v.value0);
                    if ($64) {
                        $copy_i = i + 1 | 0;
                        return;
                    };
                    $tco_done = true;
                    return new Data_Maybe.Just(i);
                };
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.Array line 830, column 5 - line 832, column 25: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_i);
            };
            return $tco_result;
        };
        var breakIndex = go(0);
        if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
            return {
                init: [  ],
                rest: arr
            };
        };
        if (breakIndex instanceof Data_Maybe.Just) {
            return {
                init: $foreign.slice(0)(breakIndex.value0)(arr),
                rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
            };
        };
        if (breakIndex instanceof Data_Maybe.Nothing) {
            return {
                init: arr,
                rest: [  ]
            };
        };
        throw new Error("Failed pattern match at Data.Array line 817, column 3 - line 823, column 30: " + [ breakIndex.constructor.name ]);
    };
};
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var unzip = function (xs) {
    return Control_Monad_ST.pureST(function __do() {
        var v = Data_Array_ST.emptySTArray();
        var v1 = Data_Array_ST.emptySTArray();
        var v2 = Data_Array_ST_Iterator.iterator(function (v2) {
            return index(xs)(v2);
        })();
        Data_Array_ST_Iterator.iterate(v2)(function (v3) {
            return function __do() {
                Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Array_ST.pushSTArray(v)(v3.value0))();
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Array_ST.pushSTArray(v1)(v3.value1))();
            };
        })();
        var v3 = Data_Array_ST.unsafeFreeze(v)();
        var v4 = Data_Array_ST.unsafeFreeze(v1)();
        return new Data_Tuple.Tuple(v3, v4);
    });
};
var head = function (xs) {
    return index(xs)(0);
};
var groupBy = function (op) {
    return function (xs) {
        return Control_Monad_ST.pureST(function __do() {
            var v = Data_Array_ST.emptySTArray();
            var v1 = Data_Array_ST_Iterator.iterator(function (v1) {
                return index(xs)(v1);
            })();
            Data_Array_ST_Iterator.iterate(v1)(function (x) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                    var v2 = Data_Array_ST.emptySTArray();
                    Data_Array_ST_Iterator.pushWhile(op(x))(v1)(v2)();
                    var v3 = Data_Array_ST.unsafeFreeze(v2)();
                    return Data_Array_ST.pushSTArray(v)(new Data_NonEmpty.NonEmpty(x, v3))();
                });
            })();
            return Data_Array_ST.unsafeFreeze(v)();
        });
    };
};
var group = function (dictEq) {
    return function (xs) {
        return groupBy(Data_Eq.eq(dictEq))(xs);
    };
};
var group$prime = function (dictOrd) {
    return function ($93) {
        return group(dictOrd.Eq0())(sort(dictOrd)($93));
    };
};
var fromFoldable = function (dictFoldable) {
    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
};
var foldRecM = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (array) {
                var go = function (res) {
                    return function (i) {
                        if (i >= $foreign.length(array)) {
                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(res));
                        };
                        if (Data_Boolean.otherwise) {
                            return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(f(res)(unsafeIndex()(array)(i)))(function (v) {
                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop({
                                    a: v,
                                    b: i + 1 | 0
                                }));
                            });
                        };
                        throw new Error("Failed pattern match at Data.Array line 1057, column 3 - line 1061, column 42: " + [ res.constructor.name, i.constructor.name ]);
                    };
                };
                return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(a)(0);
            };
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(a);
            })(function (b) {
                return function (bs) {
                    return Control_Bind.bind(dictMonad.Bind1())(f(a)(b))(function (a$prime) {
                        return foldM(dictMonad)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function (cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (v) {
                return v + 1 | 0;
            })(findLastIndex(function (y) {
                return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
            })(ys));
            return Data_Maybe.fromJust()(insertAt(i)(x)(ys));
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var dropEnd = function (n) {
    return function (xs) {
        return $foreign.take($foreign.length(xs) - n | 0)(xs);
    };
};
var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2.length === 0) {
                return [  ];
            };
            return Data_Maybe.maybe(v2)(function (i) {
                return Data_Maybe.fromJust()(deleteAt(i)(v2));
            })(findIndex(v(v1))(v2));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
var mapMaybe = function (f) {
    return concatMap(function ($94) {
        return Data_Maybe.maybe([  ])(singleton)(f($94));
    });
};
var filterA = function (dictApplicative) {
    return function (p) {
        return function ($95) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(mapMaybe(function (v) {
                if (v.value1) {
                    return new Data_Maybe.Just(v.value0);
                };
                return Data_Maybe.Nothing.value;
            }))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function (x) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.Tuple.create(x))(p(x));
            })($95));
        };
    };
};
var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
var alterAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                var v = f(x);
                if (v instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if (v instanceof Data_Maybe.Just) {
                    return updateAt(i)(v.value0)(xs);
                };
                throw new Error("Failed pattern match at Data.Array line 540, column 10 - line 542, column 32: " + [ v.constructor.name ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
module.exports = {
    fromFoldable: fromFoldable,
    toUnfoldable: toUnfoldable,
    singleton: singleton,
    some: some,
    many: many,
    "null": $$null,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    updateAtIndices: updateAtIndices,
    modifyAt: modifyAt,
    modifyAtIndices: modifyAtIndices,
    alterAt: alterAt,
    concatMap: concatMap,
    filterA: filterA,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    sortWith: sortWith,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM,
    foldRecM: foldRecM,
    unsafeIndex: unsafeIndex,
    range: $foreign.range,
    replicate: $foreign.replicate,
    length: $foreign.length,
    cons: $foreign.cons,
    snoc: $foreign.snoc,
    reverse: $foreign.reverse,
    concat: $foreign.concat,
    filter: $foreign.filter,
    partition: $foreign.partition,
    slice: $foreign.slice,
    take: $foreign.take,
    drop: $foreign.drop,
    zipWith: $foreign.zipWith
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Lazy":15,"../Control.Monad.Eff":40,"../Control.Monad.Rec.Class":47,"../Control.Monad.ST":49,"../Control.Semigroupoid":60,"../Data.Array.ST":78,"../Data.Array.ST.Iterator":76,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Traversable":209,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":79}],81:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67}],82:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown");
var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip");
var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker");
var Data_Bifunctor_Product = require("../Data.Bifunctor.Product");
var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($97) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f($97));
                })(function ($98) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(g($98));
                })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
            };
        };
    };
};
var bifor_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldableJoker = function (dictFoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (v) {
            return function (r) {
                return function (v1) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(r)(v1);
                };
            };
        };
    }, function (v) {
        return function (r) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldl(dictFoldable)(r)(u)(v1);
                };
            };
        };
    }, function (v) {
        return function (r) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldr(dictFoldable)(r)(u)(v1);
                };
            };
        };
    });
};
var bifoldableClown = function (dictFoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (l) {
            return function (v) {
                return function (v1) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(l)(v1);
                };
            };
        };
    }, function (l) {
        return function (v) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldl(dictFoldable)(l)(u)(v1);
                };
            };
        };
    }, function (l) {
        return function (v) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldr(dictFoldable)(l)(u)(v1);
                };
            };
        };
    });
};
var bifoldMapDefaultR = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($99) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f($99));
                })(function ($100) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(g($100));
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
};
var bifoldMapDefaultL = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return bifoldl(dictBifoldable)(function (m) {
                    return function (a) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(f(a));
                    };
                })(function (m) {
                    return function (b) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(g(b));
                    };
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifoldableFlip = function (dictBifoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (r) {
            return function (l) {
                return function (v) {
                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
                };
            };
        };
    }, function (r) {
        return function (l) {
            return function (u) {
                return function (v) {
                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    }, function (r) {
        return function (l) {
            return function (u) {
                return function (v) {
                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    });
};
var bifoldableWrap = function (dictBifoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (l) {
            return function (r) {
                return function (v) {
                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
                };
            };
        };
    }, function (l) {
        return function (r) {
            return function (u) {
                return function (v) {
                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    }, function (l) {
        return function (r) {
            return function (u) {
                return function (v) {
                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    });
};
var bifoldlDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($101) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($101)));
                    })(function ($102) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(g)($102)));
                    })(p)))(z);
                };
            };
        };
    };
};
var bifoldrDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($103) {
                        return Data_Monoid_Endo.Endo(f($103));
                    })(function ($104) {
                        return Data_Monoid_Endo.Endo(g($104));
                    })(p))(z);
                };
            };
        };
    };
};
var bifoldableProduct = function (dictBifoldable) {
    return function (dictBifoldable1) {
        return new Bifoldable(function (dictMonoid) {
            return function (l) {
                return function (r) {
                    return function (v) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v.value0))(bifoldMap(dictBifoldable1)(dictMonoid)(l)(r)(v.value1));
                    };
                };
            };
        }, function (l) {
            return function (r) {
                return function (u) {
                    return function (m) {
                        return bifoldlDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
                    };
                };
            };
        }, function (l) {
            return function (r) {
                return function (u) {
                    return function (m) {
                        return bifoldrDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
                    };
                };
            };
        });
    };
};
var bifold = function (dictBifoldable) {
    return function (dictMonoid) {
        return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var biany = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($105) {
                    return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($106) {
                        return Data_Monoid_Disj.Disj(p($106));
                    })(function ($107) {
                        return Data_Monoid_Disj.Disj(q($107));
                    })($105));
                };
            };
        };
    };
};
var biall = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($108) {
                    return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($109) {
                        return Data_Monoid_Conj.Conj(p($109));
                    })(function ($110) {
                        return Data_Monoid_Conj.Conj(q($110));
                    })($108));
                };
            };
        };
    };
};
module.exports = {
    bifoldMap: bifoldMap,
    bifoldl: bifoldl,
    bifoldr: bifoldr,
    Bifoldable: Bifoldable,
    bifoldrDefault: bifoldrDefault,
    bifoldlDefault: bifoldlDefault,
    bifoldMapDefaultR: bifoldMapDefaultR,
    bifoldMapDefaultL: bifoldMapDefaultL,
    bifold: bifold,
    bitraverse_: bitraverse_,
    bifor_: bifor_,
    bisequence_: bisequence_,
    biany: biany,
    biall: biall,
    bifoldableClown: bifoldableClown,
    bifoldableJoker: bifoldableJoker,
    bifoldableFlip: bifoldableFlip,
    bifoldableProduct: bifoldableProduct,
    bifoldableWrap: bifoldableWrap
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Bifunctor.Clown":83,"../Data.Bifunctor.Flip":84,"../Data.Bifunctor.Joker":85,"../Data.Bifunctor.Product":86,"../Data.Bifunctor.Wrap":87,"../Data.Foldable":116,"../Data.Function":125,"../Data.Monoid":169,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Endo":167,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Unit":220,"../Prelude":263}],83:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Clown = function (x) {
    return x;
};
var showClown = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Clown " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordClown = function (dictOrd) {
    return dictOrd;
};
var newtypeClown = new Data_Newtype.Newtype(function (n) {
    return n;
}, Clown);
var functorClown = new Data_Functor.Functor(function (v) {
    return function (v1) {
        return v1;
    };
});
var eqClown = function (dictEq) {
    return dictEq;
};
var bifunctorClown = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (v) {
            return function (v1) {
                return Data_Functor.map(dictFunctor)(f)(v1);
            };
        };
    });
};
var biapplyClown = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorClown(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Apply.apply(dictApply)(v)(v1);
        };
    });
};
var biapplicativeClown = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyClown(dictApplicative.Apply0());
    }, function (a) {
        return function (v) {
            return Control_Applicative.pure(dictApplicative)(a);
        };
    });
};
module.exports = {
    Clown: Clown,
    newtypeClown: newtypeClown,
    eqClown: eqClown,
    ordClown: ordClown,
    showClown: showClown,
    functorClown: functorClown,
    bifunctorClown: bifunctorClown,
    biapplyClown: biapplyClown,
    biapplicativeClown: biapplicativeClown
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Biapplicative":7,"../Control.Biapply":8,"../Data.Bifunctor":88,"../Data.Eq":111,"../Data.Functor":130,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],84:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Flip = function (x) {
    return x;
};
var showFlip = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Flip " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordFlip = function (dictOrd) {
    return dictOrd;
};
var newtypeFlip = new Data_Newtype.Newtype(function (n) {
    return n;
}, Flip);
var functorFlip = function (dictBifunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Bifunctor.lmap(dictBifunctor)(f)(v);
        };
    });
};
var eqFlip = function (dictEq) {
    return dictEq;
};
var bifunctorFlip = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Bifunctor.bimap(dictBifunctor)(g)(f)(v);
            };
        };
    });
};
var biapplyFlip = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorFlip(dictBiapply.Bifunctor0());
    }, function (v) {
        return function (v1) {
            return Control_Biapply.biapply(dictBiapply)(v)(v1);
        };
    });
};
var biapplicativeFlip = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyFlip(dictBiapplicative.Biapply0());
    }, function (a) {
        return function (b) {
            return Control_Biapplicative.bipure(dictBiapplicative)(b)(a);
        };
    });
};
module.exports = {
    Flip: Flip,
    newtypeFlip: newtypeFlip,
    eqFlip: eqFlip,
    ordFlip: ordFlip,
    showFlip: showFlip,
    functorFlip: functorFlip,
    bifunctorFlip: bifunctorFlip,
    biapplyFlip: biapplyFlip,
    biapplicativeFlip: biapplicativeFlip
};

},{"../Control.Biapplicative":7,"../Control.Biapply":8,"../Data.Bifunctor":88,"../Data.Eq":111,"../Data.Functor":130,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],85:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Joker = function (x) {
    return x;
};
var showJoker = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Joker " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordJoker = function (dictOrd) {
    return dictOrd;
};
var newtypeJoker = new Data_Newtype.Newtype(function (n) {
    return n;
}, Joker);
var functorJoker = function (dictFunctor) {
    return new Data_Functor.Functor(function (g) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(g)(v);
        };
    });
};
var eqJoker = function (dictEq) {
    return dictEq;
};
var bifunctorJoker = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (v) {
        return function (g) {
            return function (v1) {
                return Data_Functor.map(dictFunctor)(g)(v1);
            };
        };
    });
};
var biapplyJoker = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorJoker(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Apply.apply(dictApply)(v)(v1);
        };
    });
};
var biapplicativeJoker = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyJoker(dictApplicative.Apply0());
    }, function (v) {
        return function (b) {
            return Control_Applicative.pure(dictApplicative)(b);
        };
    });
};
module.exports = {
    Joker: Joker,
    newtypeJoker: newtypeJoker,
    eqJoker: eqJoker,
    ordJoker: ordJoker,
    showJoker: showJoker,
    functorJoker: functorJoker,
    bifunctorJoker: bifunctorJoker,
    biapplyJoker: biapplyJoker,
    biapplicativeJoker: biapplicativeJoker
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Biapplicative":7,"../Control.Biapply":8,"../Data.Bifunctor":88,"../Data.Eq":111,"../Data.Functor":130,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],86:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Product = (function () {
    function Product(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Product.create = function (value0) {
        return function (value1) {
            return new Product(value0, value1);
        };
    };
    return Product;
})();
var showProduct = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(Product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var eqProduct = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordProduct = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqProduct(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var bifunctorProduct = function (dictBifunctor) {
    return function (dictBifunctor1) {
        return new Data_Bifunctor.Bifunctor(function (f) {
            return function (g) {
                return function (v) {
                    return new Product(Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v.value0), Data_Bifunctor.bimap(dictBifunctor1)(f)(g)(v.value1));
                };
            };
        });
    };
};
var biapplyProduct = function (dictBiapply) {
    return function (dictBiapply1) {
        return new Control_Biapply.Biapply(function () {
            return bifunctorProduct(dictBiapply.Bifunctor0())(dictBiapply1.Bifunctor0());
        }, function (v) {
            return function (v1) {
                return new Product(Control_Biapply.biapply(dictBiapply)(v.value0)(v1.value0), Control_Biapply.biapply(dictBiapply1)(v.value1)(v1.value1));
            };
        });
    };
};
var biapplicativeProduct = function (dictBiapplicative) {
    return function (dictBiapplicative1) {
        return new Control_Biapplicative.Biapplicative(function () {
            return biapplyProduct(dictBiapplicative.Biapply0())(dictBiapplicative1.Biapply0());
        }, function (a) {
            return function (b) {
                return new Product(Control_Biapplicative.bipure(dictBiapplicative)(a)(b), Control_Biapplicative.bipure(dictBiapplicative1)(a)(b));
            };
        });
    };
};
module.exports = {
    Product: Product,
    eqProduct: eqProduct,
    ordProduct: ordProduct,
    showProduct: showProduct,
    bifunctorProduct: bifunctorProduct,
    biapplyProduct: biapplyProduct,
    biapplicativeProduct: biapplicativeProduct
};

},{"../Control.Biapplicative":7,"../Control.Biapply":8,"../Data.Bifunctor":88,"../Data.Eq":111,"../Data.HeytingAlgebra":141,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],87:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Wrap = function (x) {
    return x;
};
var showWrap = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Wrap " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordWrap = function (dictOrd) {
    return dictOrd;
};
var newtypeWrap = new Data_Newtype.Newtype(function (n) {
    return n;
}, Wrap);
var functorWrap = function (dictBifunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Bifunctor.rmap(dictBifunctor)(f)(v);
        };
    });
};
var eqWrap = function (dictEq) {
    return dictEq;
};
var bifunctorWrap = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v);
            };
        };
    });
};
var biapplyWrap = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorWrap(dictBiapply.Bifunctor0());
    }, function (v) {
        return function (v1) {
            return Control_Biapply.biapply(dictBiapply)(v)(v1);
        };
    });
};
var biapplicativeWrap = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyWrap(dictBiapplicative.Biapply0());
    }, function (a) {
        return function (b) {
            return Control_Biapplicative.bipure(dictBiapplicative)(a)(b);
        };
    });
};
module.exports = {
    Wrap: Wrap,
    newtypeWrap: newtypeWrap,
    eqWrap: eqWrap,
    ordWrap: ordWrap,
    showWrap: showWrap,
    functorWrap: functorWrap,
    bifunctorWrap: bifunctorWrap,
    biapplyWrap: biapplyWrap,
    biapplicativeWrap: biapplicativeWrap
};

},{"../Control.Biapplicative":7,"../Control.Biapply":8,"../Data.Bifunctor":88,"../Data.Eq":111,"../Data.Functor":130,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],88:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (dictBifunctor) {
    return function (f) {
        return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
    };
};
var rmap = function (dictBifunctor) {
    return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
};
module.exports = {
    bimap: bimap,
    Bifunctor: Bifunctor,
    lmap: lmap,
    rmap: rmap
};

},{"../Control.Category":11}],89:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown");
var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip");
var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker");
var Data_Bifunctor_Product = require("../Data.Bifunctor.Product");
var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap");
var Data_Functor = require("../Data.Functor");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Bitraversable = function (Bifoldable1, Bifunctor0, bisequence, bitraverse) {
    this.Bifoldable1 = Bifoldable1;
    this.Bifunctor0 = Bifunctor0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var lfor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative))(t);
            };
        };
    };
};
var ltraverse = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative));
        };
    };
};
var rfor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative))(f)(t);
            };
        };
    };
};
var rtraverse = function (dictBitraversable) {
    return function (dictApplicative) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative));
    };
};
var bitraversableJoker = function (dictTraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableJoker(dictTraversable.Foldable1());
    }, function () {
        return Data_Bifunctor_Joker.bifunctorJoker(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (v) {
            return function (r) {
                return function (v1) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(r)(v1));
                };
            };
        };
    });
};
var bitraversableClown = function (dictTraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableClown(dictTraversable.Foldable1());
    }, function () {
        return Data_Bifunctor_Clown.bifunctorClown(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (l) {
            return function (v) {
                return function (v1) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(l)(v1));
                };
            };
        };
    });
};
var bisequenceDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bitraversableFlip = function (dictBitraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableFlip(dictBitraversable.Bifoldable1());
    }, function () {
        return Data_Bifunctor_Flip.bifunctorFlip(dictBitraversable.Bifunctor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bisequence(dictBitraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (r) {
            return function (l) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
                };
            };
        };
    });
};
var bitraversableProduct = function (dictBitraversable) {
    return function (dictBitraversable1) {
        return new Bitraversable(function () {
            return Data_Bifoldable.bifoldableProduct(dictBitraversable.Bifoldable1())(dictBitraversable1.Bifoldable1());
        }, function () {
            return Data_Bifunctor_Product.bifunctorProduct(dictBitraversable.Bifunctor0())(dictBitraversable1.Bifunctor0());
        }, function (dictApplicative) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bisequence(dictBitraversable)(dictApplicative)(v.value0)))(bisequence(dictBitraversable1)(dictApplicative)(v.value1));
            };
        }, function (dictApplicative) {
            return function (l) {
                return function (r) {
                    return function (v) {
                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v.value0)))(bitraverse(dictBitraversable1)(dictApplicative)(l)(r)(v.value1));
                    };
                };
            };
        });
    };
};
var bitraversableWrap = function (dictBitraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableWrap(dictBitraversable.Bifoldable1());
    }, function () {
        return Data_Bifunctor_Wrap.bifunctorWrap(dictBitraversable.Bifunctor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bisequence(dictBitraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (l) {
            return function (r) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
                };
            };
        };
    });
};
var bitraverseDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return function (t) {
                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable.Bifunctor0())(f)(g)(t));
                };
            };
        };
    };
};
var bifor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable,
    bitraverse: bitraverse,
    bisequence: bisequence,
    bitraverseDefault: bitraverseDefault,
    bisequenceDefault: bisequenceDefault,
    ltraverse: ltraverse,
    rtraverse: rtraverse,
    bifor: bifor,
    lfor: lfor,
    rfor: rfor,
    bitraversableClown: bitraversableClown,
    bitraversableJoker: bitraversableJoker,
    bitraversableFlip: bitraversableFlip,
    bitraversableProduct: bitraversableProduct,
    bitraversableWrap: bitraversableWrap
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Data.Bifoldable":82,"../Data.Bifunctor":88,"../Data.Bifunctor.Clown":83,"../Data.Bifunctor.Flip":84,"../Data.Bifunctor.Joker":85,"../Data.Bifunctor.Product":86,"../Data.Bifunctor.Wrap":87,"../Data.Functor":130,"../Data.Traversable":209,"../Prelude":263}],90:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var otherwise = true;
module.exports = {
    otherwise: otherwise
};

},{}],91:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Unit = require("../Data.Unit");
var BooleanAlgebra = function (HeytingAlgebra0) {
    this.HeytingAlgebra0 = HeytingAlgebra0;
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraUnit;
});
var booleanAlgebraFn = function (dictBooleanAlgebra) {
    return new BooleanAlgebra(function () {
        return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraBoolean;
});
module.exports = {
    BooleanAlgebra: BooleanAlgebra,
    booleanAlgebraBoolean: booleanAlgebraBoolean,
    booleanAlgebraUnit: booleanAlgebraUnit,
    booleanAlgebraFn: booleanAlgebraFn
};

},{"../Data.HeytingAlgebra":141,"../Data.Unit":220}],92:[function(require,module,exports){
"use strict";

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

exports.topNumber = Number.POSITIVE_INFINITY;
exports.bottomNumber = Number.NEGATIVE_INFINITY;

},{}],93:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Unit = require("../Data.Unit");
var Bounded = function (Ord0, bottom, top) {
    this.Ord0 = Ord0;
    this.bottom = bottom;
    this.top = top;
};
var top = function (dict) {
    return dict.top;
};
var boundedUnit = new Bounded(function () {
    return Data_Ord.ordUnit;
}, Data_Unit.unit, Data_Unit.unit);
var boundedOrdering = new Bounded(function () {
    return Data_Ord.ordOrdering;
}, Data_Ordering.LT.value, Data_Ordering.GT.value);
var boundedNumber = new Bounded(function () {
    return Data_Ord.ordNumber;
}, $foreign.bottomNumber, $foreign.topNumber);
var boundedInt = new Bounded(function () {
    return Data_Ord.ordInt;
}, $foreign.bottomInt, $foreign.topInt);
var boundedChar = new Bounded(function () {
    return Data_Ord.ordChar;
}, $foreign.bottomChar, $foreign.topChar);
var boundedBoolean = new Bounded(function () {
    return Data_Ord.ordBoolean;
}, false, true);
var bottom = function (dict) {
    return dict.bottom;
};
module.exports = {
    Bounded: Bounded,
    bottom: bottom,
    top: top,
    boundedBoolean: boundedBoolean,
    boundedInt: boundedInt,
    boundedChar: boundedChar,
    boundedOrdering: boundedOrdering,
    boundedUnit: boundedUnit,
    boundedNumber: boundedNumber
};

},{"../Data.Ord":178,"../Data.Ordering":179,"../Data.Unit":220,"./foreign":92}],94:[function(require,module,exports){
/* global exports */
"use strict";

// jshint maxparams: 3
exports.parseJSONImpl = function (left, right, str) {
  try {
    return right(JSON.parse(str));
  } catch (e) {
    return left(e.toString());
  }
};
// jshint maxparams: 1

exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

exports.writeObject = function (fields) {
  var record = {};
  for (var i = 0; i < fields.length; i++) {
    record[fields[i].key] = fields[i].value;
  }
  return record;
};

},{}],95:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Int = require("../Data.Int");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Prelude = require("../Prelude");
var Prop = function (x) {
    return x;
};
var ForeignError = (function () {
    function ForeignError(value0) {
        this.value0 = value0;
    };
    ForeignError.create = function (value0) {
        return new ForeignError(value0);
    };
    return ForeignError;
})();
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var JSONError = (function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
})();
var showForeignError = new Data_Show.Show(function (v) {
    if (v instanceof ForeignError) {
        return "(ForeignError " + (v.value0 + ")");
    };
    if (v instanceof ErrorAtIndex) {
        return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof ErrorAtProperty) {
        return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof JSONError) {
        return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof TypeMismatch) {
        return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Data.CForeign line 65, column 1 - line 65, column 47: " + [ v.constructor.name ]);
});
var renderForeignError = function (v) {
    if (v instanceof ForeignError) {
        return v.value0;
    };
    if (v instanceof ErrorAtIndex) {
        return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof ErrorAtProperty) {
        return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof JSONError) {
        return "JSON error: " + v.value0;
    };
    if (v instanceof TypeMismatch) {
        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    };
    throw new Error("Failed pattern match at Data.CForeign line 75, column 1 - line 75, column 45: " + [ v.constructor.name ]);
};
var fail = function ($118) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($118));
};
var parseJSON = function (json) {
    return $foreign.parseJSONImpl(function ($119) {
        return fail(JSONError.create($119));
    }, Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), json);
};
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    };
    if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch("array", $foreign.tagOf(value)));
    };
    throw new Error("Failed pattern match at Data.CForeign line 152, column 1 - line 152, column 42: " + [ value.constructor.name ]);
};
var unsafeReadTagged = function (tag) {
    return function (value) {
        if ($foreign.tagOf(value) === tag) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
        };
        if (Data_Boolean.otherwise) {
            return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
        };
        throw new Error("Failed pattern match at Data.CForeign line 111, column 1 - line 111, column 55: " + [ tag.constructor.name, value.constructor.name ]);
    };
};
var readBoolean = unsafeReadTagged("Boolean");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
    var fromNumber = function ($120) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($120));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
};
var readString = unsafeReadTagged("String");
var readChar = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));
    var fromString = function ($121) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String.toChar($121));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
};
var eqForeignError = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return x.value0 === y.value0;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            return x.value0 === y.value0 && x.value1 === y.value1;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var ordForeignError = new Data_Ord.Ord(function () {
    return eqForeignError;
}, function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof ForeignError) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ForeignError) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
        };
        if (x instanceof TypeMismatch) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TypeMismatch) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtIndex) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtIndex) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtProperty) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        throw new Error("Failed pattern match at Data.CForeign line 63, column 8 - line 63, column 52: " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    ForeignError: ForeignError,
    TypeMismatch: TypeMismatch,
    ErrorAtIndex: ErrorAtIndex,
    ErrorAtProperty: ErrorAtProperty,
    JSONError: JSONError,
    Prop: Prop,
    renderForeignError: renderForeignError,
    parseJSON: parseJSON,
    unsafeReadTagged: unsafeReadTagged,
    readString: readString,
    readChar: readChar,
    readBoolean: readBoolean,
    readNumber: readNumber,
    readInt: readInt,
    readArray: readArray,
    fail: fail,
    eqForeignError: eqForeignError,
    ordForeignError: ordForeignError,
    showForeignError: showForeignError,
    toForeign: $foreign.toForeign,
    unsafeFromForeign: $foreign.unsafeFromForeign,
    typeOf: $foreign.typeOf,
    tagOf: $foreign.tagOf,
    isNull: $foreign.isNull,
    isUndefined: $foreign.isUndefined,
    isArray: $foreign.isArray,
    writeObject: $foreign.writeObject
};

},{"../Control.Applicative":4,"../Control.Monad.Error.Class":41,"../Control.Monad.Except":43,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.Int":146,"../Data.List.NonEmpty":149,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Prelude":263,"./foreign":94}],96:[function(require,module,exports){
"use strict";

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};

exports.toLower = function (c) {
  return c.toLowerCase();
};

exports.toUpper = function (c) {
  return c.toUpperCase();
};

},{}],97:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    fromCharCode: $foreign.fromCharCode,
    toCharCode: $foreign.toCharCode,
    toLower: $foreign.toLower,
    toUpper: $foreign.toUpper
};

},{"./foreign":96}],98:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var CommutativeRing = function (Ring0) {
    this.Ring0 = Ring0;
};
var commutativeRingUnit = new CommutativeRing(function () {
    return Data_Ring.ringUnit;
});
var commutativeRingNumber = new CommutativeRing(function () {
    return Data_Ring.ringNumber;
});
var commutativeRingInt = new CommutativeRing(function () {
    return Data_Ring.ringInt;
});
var commutativeRingFn = function (dictCommutativeRing) {
    return new CommutativeRing(function () {
        return Data_Ring.ringFn(dictCommutativeRing.Ring0());
    });
};
module.exports = {
    CommutativeRing: CommutativeRing,
    commutativeRingInt: commutativeRingInt,
    commutativeRingNumber: commutativeRingNumber,
    commutativeRingUnit: commutativeRingUnit,
    commutativeRingFn: commutativeRingFn
};

},{"../Data.Ring":181,"../Data.Semiring":187,"../Data.Unit":220}],99:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Year = function (x) {
    return x;
};
var Monday = (function () {
    function Monday() {

    };
    Monday.value = new Monday();
    return Monday;
})();
var Tuesday = (function () {
    function Tuesday() {

    };
    Tuesday.value = new Tuesday();
    return Tuesday;
})();
var Wednesday = (function () {
    function Wednesday() {

    };
    Wednesday.value = new Wednesday();
    return Wednesday;
})();
var Thursday = (function () {
    function Thursday() {

    };
    Thursday.value = new Thursday();
    return Thursday;
})();
var Friday = (function () {
    function Friday() {

    };
    Friday.value = new Friday();
    return Friday;
})();
var Saturday = (function () {
    function Saturday() {

    };
    Saturday.value = new Saturday();
    return Saturday;
})();
var Sunday = (function () {
    function Sunday() {

    };
    Sunday.value = new Sunday();
    return Sunday;
})();
var January = (function () {
    function January() {

    };
    January.value = new January();
    return January;
})();
var February = (function () {
    function February() {

    };
    February.value = new February();
    return February;
})();
var March = (function () {
    function March() {

    };
    March.value = new March();
    return March;
})();
var April = (function () {
    function April() {

    };
    April.value = new April();
    return April;
})();
var May = (function () {
    function May() {

    };
    May.value = new May();
    return May;
})();
var June = (function () {
    function June() {

    };
    June.value = new June();
    return June;
})();
var July = (function () {
    function July() {

    };
    July.value = new July();
    return July;
})();
var August = (function () {
    function August() {

    };
    August.value = new August();
    return August;
})();
var September = (function () {
    function September() {

    };
    September.value = new September();
    return September;
})();
var October = (function () {
    function October() {

    };
    October.value = new October();
    return October;
})();
var November = (function () {
    function November() {

    };
    November.value = new November();
    return November;
})();
var December = (function () {
    function December() {

    };
    December.value = new December();
    return December;
})();
var Day = function (x) {
    return x;
};
var showYear = new Data_Show.Show(function (v) {
    return "(Year " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showWeekday = new Data_Show.Show(function (v) {
    if (v instanceof Monday) {
        return "Monday";
    };
    if (v instanceof Tuesday) {
        return "Tuesday";
    };
    if (v instanceof Wednesday) {
        return "Wednesday";
    };
    if (v instanceof Thursday) {
        return "Thursday";
    };
    if (v instanceof Friday) {
        return "Friday";
    };
    if (v instanceof Saturday) {
        return "Saturday";
    };
    if (v instanceof Sunday) {
        return "Sunday";
    };
    throw new Error("Failed pattern match at Data.Date.Component line 189, column 1 - line 189, column 37: " + [ v.constructor.name ]);
});
var showMonth = new Data_Show.Show(function (v) {
    if (v instanceof January) {
        return "January";
    };
    if (v instanceof February) {
        return "February";
    };
    if (v instanceof March) {
        return "March";
    };
    if (v instanceof April) {
        return "April";
    };
    if (v instanceof May) {
        return "May";
    };
    if (v instanceof June) {
        return "June";
    };
    if (v instanceof July) {
        return "July";
    };
    if (v instanceof August) {
        return "August";
    };
    if (v instanceof September) {
        return "September";
    };
    if (v instanceof October) {
        return "October";
    };
    if (v instanceof November) {
        return "November";
    };
    if (v instanceof December) {
        return "December";
    };
    throw new Error("Failed pattern match at Data.Date.Component line 104, column 1 - line 104, column 33: " + [ v.constructor.name ]);
});
var showDay = new Data_Show.Show(function (v) {
    return "(Day " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var ordYear = Data_Ord.ordInt;
var ordDay = Data_Ord.ordInt;
var genericYear = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Year" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Year))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Year", [ {
        sigConstructor: "Data.Date.Component.Year",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Date.Component.Year", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericWeekday = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Monday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Monday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Tuesday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Tuesday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Wednesday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Wednesday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Thursday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Thursday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Friday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Friday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Saturday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Saturday.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Sunday" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Sunday.value);
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Weekday", [ {
        sigConstructor: "Data.Date.Component.Monday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Tuesday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Wednesday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Thursday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Friday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Saturday",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.Sunday",
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof Monday) {
        return new Data_Generic.SProd("Data.Date.Component.Monday", [  ]);
    };
    if (v instanceof Tuesday) {
        return new Data_Generic.SProd("Data.Date.Component.Tuesday", [  ]);
    };
    if (v instanceof Wednesday) {
        return new Data_Generic.SProd("Data.Date.Component.Wednesday", [  ]);
    };
    if (v instanceof Thursday) {
        return new Data_Generic.SProd("Data.Date.Component.Thursday", [  ]);
    };
    if (v instanceof Friday) {
        return new Data_Generic.SProd("Data.Date.Component.Friday", [  ]);
    };
    if (v instanceof Saturday) {
        return new Data_Generic.SProd("Data.Date.Component.Saturday", [  ]);
    };
    if (v instanceof Sunday) {
        return new Data_Generic.SProd("Data.Date.Component.Sunday", [  ]);
    };
    throw new Error("Failed pattern match at Data.Date.Component line 159, column 8 - line 159, column 50: " + [ v.constructor.name ]);
});
var genericMonth = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.January" && v.value1.length === 0)) {
        return new Data_Maybe.Just(January.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.February" && v.value1.length === 0)) {
        return new Data_Maybe.Just(February.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.March" && v.value1.length === 0)) {
        return new Data_Maybe.Just(March.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.April" && v.value1.length === 0)) {
        return new Data_Maybe.Just(April.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.May" && v.value1.length === 0)) {
        return new Data_Maybe.Just(May.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.June" && v.value1.length === 0)) {
        return new Data_Maybe.Just(June.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.July" && v.value1.length === 0)) {
        return new Data_Maybe.Just(July.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.August" && v.value1.length === 0)) {
        return new Data_Maybe.Just(August.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.September" && v.value1.length === 0)) {
        return new Data_Maybe.Just(September.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.October" && v.value1.length === 0)) {
        return new Data_Maybe.Just(October.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.November" && v.value1.length === 0)) {
        return new Data_Maybe.Just(November.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.December" && v.value1.length === 0)) {
        return new Data_Maybe.Just(December.value);
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Month", [ {
        sigConstructor: "Data.Date.Component.January",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.February",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.March",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.April",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.May",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.June",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.July",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.August",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.September",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.October",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.November",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Date.Component.December",
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof January) {
        return new Data_Generic.SProd("Data.Date.Component.January", [  ]);
    };
    if (v instanceof February) {
        return new Data_Generic.SProd("Data.Date.Component.February", [  ]);
    };
    if (v instanceof March) {
        return new Data_Generic.SProd("Data.Date.Component.March", [  ]);
    };
    if (v instanceof April) {
        return new Data_Generic.SProd("Data.Date.Component.April", [  ]);
    };
    if (v instanceof May) {
        return new Data_Generic.SProd("Data.Date.Component.May", [  ]);
    };
    if (v instanceof June) {
        return new Data_Generic.SProd("Data.Date.Component.June", [  ]);
    };
    if (v instanceof July) {
        return new Data_Generic.SProd("Data.Date.Component.July", [  ]);
    };
    if (v instanceof August) {
        return new Data_Generic.SProd("Data.Date.Component.August", [  ]);
    };
    if (v instanceof September) {
        return new Data_Generic.SProd("Data.Date.Component.September", [  ]);
    };
    if (v instanceof October) {
        return new Data_Generic.SProd("Data.Date.Component.October", [  ]);
    };
    if (v instanceof November) {
        return new Data_Generic.SProd("Data.Date.Component.November", [  ]);
    };
    if (v instanceof December) {
        return new Data_Generic.SProd("Data.Date.Component.December", [  ]);
    };
    throw new Error("Failed pattern match at Data.Date.Component line 64, column 8 - line 64, column 46: " + [ v.constructor.name ]);
});
var genericDay = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Component.Day" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Day))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Component.Day", [ {
        sigConstructor: "Data.Date.Component.Day",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Date.Component.Day", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var eqYear = Data_Eq.eqInt;
var eqWeekday = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Monday && y instanceof Monday) {
            return true;
        };
        if (x instanceof Tuesday && y instanceof Tuesday) {
            return true;
        };
        if (x instanceof Wednesday && y instanceof Wednesday) {
            return true;
        };
        if (x instanceof Thursday && y instanceof Thursday) {
            return true;
        };
        if (x instanceof Friday && y instanceof Friday) {
            return true;
        };
        if (x instanceof Saturday && y instanceof Saturday) {
            return true;
        };
        if (x instanceof Sunday && y instanceof Sunday) {
            return true;
        };
        return false;
    };
});
var ordWeekday = new Data_Ord.Ord(function () {
    return eqWeekday;
}, function (x) {
    return function (y) {
        if (x instanceof Monday && y instanceof Monday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Monday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Monday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Tuesday && y instanceof Tuesday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Tuesday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Tuesday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Wednesday && y instanceof Wednesday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Wednesday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Wednesday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Thursday && y instanceof Thursday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Thursday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Thursday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Friday && y instanceof Friday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Friday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Friday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Saturday && y instanceof Saturday) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Saturday) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Saturday) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Sunday && y instanceof Sunday) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Date.Component line 158, column 8 - line 158, column 42: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqMonth = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof January && y instanceof January) {
            return true;
        };
        if (x instanceof February && y instanceof February) {
            return true;
        };
        if (x instanceof March && y instanceof March) {
            return true;
        };
        if (x instanceof April && y instanceof April) {
            return true;
        };
        if (x instanceof May && y instanceof May) {
            return true;
        };
        if (x instanceof June && y instanceof June) {
            return true;
        };
        if (x instanceof July && y instanceof July) {
            return true;
        };
        if (x instanceof August && y instanceof August) {
            return true;
        };
        if (x instanceof September && y instanceof September) {
            return true;
        };
        if (x instanceof October && y instanceof October) {
            return true;
        };
        if (x instanceof November && y instanceof November) {
            return true;
        };
        if (x instanceof December && y instanceof December) {
            return true;
        };
        return false;
    };
});
var ordMonth = new Data_Ord.Ord(function () {
    return eqMonth;
}, function (x) {
    return function (y) {
        if (x instanceof January && y instanceof January) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof January) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof January) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof February && y instanceof February) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof February) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof February) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof March && y instanceof March) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof March) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof March) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof April && y instanceof April) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof April) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof April) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof May && y instanceof May) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof May) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof May) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof June && y instanceof June) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof June) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof June) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof July && y instanceof July) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof July) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof July) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof August && y instanceof August) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof August) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof August) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof September && y instanceof September) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof September) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof September) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof October && y instanceof October) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof October) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof October) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof November && y instanceof November) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof November) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof November) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof December && y instanceof December) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Date.Component line 63, column 8 - line 63, column 38: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqDay = Data_Eq.eqInt;
var boundedYear = new Data_Bounded.Bounded(function () {
    return ordYear;
}, -271820 | 0, 275759);
var boundedWeekday = new Data_Bounded.Bounded(function () {
    return ordWeekday;
}, Monday.value, Sunday.value);
var boundedMonth = new Data_Bounded.Bounded(function () {
    return ordMonth;
}, January.value, December.value);
var boundedEnumYear = new Data_Enum.BoundedEnum(function () {
    return boundedYear;
}, function () {
    return enumYear;
}, 547580, function (v) {
    return v;
}, function (n) {
    if (n >= (-271821 | 0) && n <= 275759) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 37, column 1 - line 37, column 45: " + [ n.constructor.name ]);
});
var enumYear = new Data_Enum.Enum(function () {
    return ordYear;
}, function ($110) {
    return Data_Enum.toEnum(boundedEnumYear)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumYear)($110)));
}, function ($111) {
    return Data_Enum.toEnum(boundedEnumYear)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumYear)($111)));
});
var boundedEnumWeekday = new Data_Enum.BoundedEnum(function () {
    return boundedWeekday;
}, function () {
    return enumWeekday;
}, 7, function (v) {
    if (v instanceof Monday) {
        return 1;
    };
    if (v instanceof Tuesday) {
        return 2;
    };
    if (v instanceof Wednesday) {
        return 3;
    };
    if (v instanceof Thursday) {
        return 4;
    };
    if (v instanceof Friday) {
        return 5;
    };
    if (v instanceof Saturday) {
        return 6;
    };
    if (v instanceof Sunday) {
        return 7;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 180, column 14 - line 189, column 1: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 1) {
        return new Data_Maybe.Just(Monday.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Tuesday.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(Wednesday.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(Thursday.value);
    };
    if (v === 5) {
        return new Data_Maybe.Just(Friday.value);
    };
    if (v === 6) {
        return new Data_Maybe.Just(Saturday.value);
    };
    if (v === 7) {
        return new Data_Maybe.Just(Sunday.value);
    };
    return Data_Maybe.Nothing.value;
});
var enumWeekday = new Data_Enum.Enum(function () {
    return ordWeekday;
}, function ($112) {
    return Data_Enum.toEnum(boundedEnumWeekday)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumWeekday)($112)));
}, function ($113) {
    return Data_Enum.toEnum(boundedEnumWeekday)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumWeekday)($113)));
});
var boundedEnumMonth = new Data_Enum.BoundedEnum(function () {
    return boundedMonth;
}, function () {
    return enumMonth;
}, 12, function (v) {
    if (v instanceof January) {
        return 1;
    };
    if (v instanceof February) {
        return 2;
    };
    if (v instanceof March) {
        return 3;
    };
    if (v instanceof April) {
        return 4;
    };
    if (v instanceof May) {
        return 5;
    };
    if (v instanceof June) {
        return 6;
    };
    if (v instanceof July) {
        return 7;
    };
    if (v instanceof August) {
        return 8;
    };
    if (v instanceof September) {
        return 9;
    };
    if (v instanceof October) {
        return 10;
    };
    if (v instanceof November) {
        return 11;
    };
    if (v instanceof December) {
        return 12;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 90, column 14 - line 104, column 1: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 1) {
        return new Data_Maybe.Just(January.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(February.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(March.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(April.value);
    };
    if (v === 5) {
        return new Data_Maybe.Just(May.value);
    };
    if (v === 6) {
        return new Data_Maybe.Just(June.value);
    };
    if (v === 7) {
        return new Data_Maybe.Just(July.value);
    };
    if (v === 8) {
        return new Data_Maybe.Just(August.value);
    };
    if (v === 9) {
        return new Data_Maybe.Just(September.value);
    };
    if (v === 10) {
        return new Data_Maybe.Just(October.value);
    };
    if (v === 11) {
        return new Data_Maybe.Just(November.value);
    };
    if (v === 12) {
        return new Data_Maybe.Just(December.value);
    };
    return Data_Maybe.Nothing.value;
});
var enumMonth = new Data_Enum.Enum(function () {
    return ordMonth;
}, function ($114) {
    return Data_Enum.toEnum(boundedEnumMonth)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMonth)($114)));
}, function ($115) {
    return Data_Enum.toEnum(boundedEnumMonth)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMonth)($115)));
});
var boundedDay = new Data_Bounded.Bounded(function () {
    return ordDay;
}, 1, 31);
var boundedEnumDay = new Data_Enum.BoundedEnum(function () {
    return boundedDay;
}, function () {
    return enumDay;
}, 31, function (v) {
    return v;
}, function (n) {
    if (n >= 1 && n <= 31) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Date.Component line 137, column 1 - line 137, column 43: " + [ n.constructor.name ]);
});
var enumDay = new Data_Enum.Enum(function () {
    return ordDay;
}, function ($116) {
    return Data_Enum.toEnum(boundedEnumDay)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumDay)($116)));
}, function ($117) {
    return Data_Enum.toEnum(boundedEnumDay)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumDay)($117)));
});
module.exports = {
    January: January,
    February: February,
    March: March,
    April: April,
    May: May,
    June: June,
    July: July,
    August: August,
    September: September,
    October: October,
    November: November,
    December: December,
    Monday: Monday,
    Tuesday: Tuesday,
    Wednesday: Wednesday,
    Thursday: Thursday,
    Friday: Friday,
    Saturday: Saturday,
    Sunday: Sunday,
    eqYear: eqYear,
    ordYear: ordYear,
    genericYear: genericYear,
    boundedYear: boundedYear,
    enumYear: enumYear,
    boundedEnumYear: boundedEnumYear,
    showYear: showYear,
    eqMonth: eqMonth,
    ordMonth: ordMonth,
    genericMonth: genericMonth,
    boundedMonth: boundedMonth,
    enumMonth: enumMonth,
    boundedEnumMonth: boundedEnumMonth,
    showMonth: showMonth,
    eqDay: eqDay,
    ordDay: ordDay,
    genericDay: genericDay,
    boundedDay: boundedDay,
    enumDay: enumDay,
    boundedEnumDay: boundedEnumDay,
    showDay: showDay,
    eqWeekday: eqWeekday,
    ordWeekday: ordWeekday,
    genericWeekday: genericWeekday,
    boundedWeekday: boundedWeekday,
    enumWeekday: enumWeekday,
    boundedEnumWeekday: boundedEnumWeekday,
    showWeekday: showWeekday
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.Enum":109,"../Data.Eq":111,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],100:[function(require,module,exports){
"use strict";

var createDate = function (y, m, d) {
  var date = new Date(Date.UTC(y, m, d));
  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }
  return date;
};

exports.canonicalDateImpl = function (ctor, y, m, d) {
  var date = createDate(y, m - 1, d);
  return ctor(date.getUTCFullYear())(date.getUTCMonth() + 1)(date.getUTCDate());
};

exports.calcWeekday = function (y, m, d) {
  return createDate(y, m - 1, d).getUTCDay();
};

exports.calcDiff = function (y1, m1, d1, y2, m2, d2) {
  var dt1 = createDate(y1, m1 - 1, d1);
  var dt2 = createDate(y2, m2 - 1, d2);
  return dt1.getTime() - dt2.getTime();
};

},{}],101:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Date_Component = require("../Data.Date.Component");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var $$Date = (function () {
    function $$Date(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    $$Date.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new $$Date(value0, value1, value2);
            };
        };
    };
    return $$Date;
})();
var year = function (v) {
    return v.value0;
};
var weekday = function (v) {
    var n = $foreign.calcWeekday(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2);
    var $44 = n === 0;
    if ($44) {
        return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(7));
    };
    return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(n));
};
var showDate = new Data_Show.Show(function (v) {
    return "(Date " + (Data_Show.show(Data_Date_Component.showYear)(v.value0) + (" " + (Data_Show.show(Data_Date_Component.showMonth)(v.value1) + (" " + (Data_Show.show(Data_Date_Component.showDay)(v.value2) + ")")))));
});
var month = function (v) {
    return v.value1;
};
var isLeapYear = function (y) {
    var y$prime = Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(y);
    return y$prime % 4 === 0 && (y$prime % 400 === 0 || !(y$prime % 100 === 0));
};
var lastDayOfMonth = function (y) {
    return function (m) {
        var unsafeDay = function ($98) {
            return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)($98));
        };
        if (m instanceof Data_Date_Component.January) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.February) {
            if (isLeapYear(y)) {
                return unsafeDay(29);
            };
            if (Data_Boolean.otherwise) {
                return unsafeDay(28);
            };
        };
        if (m instanceof Data_Date_Component.March) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.April) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.May) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.June) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.July) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.August) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.September) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.October) {
            return unsafeDay(31);
        };
        if (m instanceof Data_Date_Component.November) {
            return unsafeDay(30);
        };
        if (m instanceof Data_Date_Component.December) {
            return unsafeDay(31);
        };
        throw new Error("Failed pattern match at Data.Date line 89, column 22 - line 104, column 3: " + [ m.constructor.name ]);
    };
};
var genericDate = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Date.Date" && v.value1.length === 3)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just($$Date.create))(Data_Generic.fromSpine(Data_Date_Component.genericYear)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Date_Component.genericMonth)(v["value1"][1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Date_Component.genericDay)(v["value1"][2](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Date.Date", [ {
        sigConstructor: "Data.Date.Date",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date_Component.genericYear)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date_Component.genericMonth)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date_Component.genericDay)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Date.Date", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Date_Component.genericYear)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Date_Component.genericMonth)(v.value1);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Date_Component.genericDay)(v.value2);
    } ]);
});
var eqDate = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Date_Component.eqYear)(x.value0)(y.value0) && Data_Eq.eq(Data_Date_Component.eqMonth)(x.value1)(y.value1) && Data_Eq.eq(Data_Date_Component.eqDay)(x.value2)(y.value2);
    };
});
var ordDate = new Data_Ord.Ord(function () {
    return eqDate;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Date_Component.ordYear)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v1 = Data_Ord.compare(Data_Date_Component.ordMonth)(x.value1)(y.value1);
        if (v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Date_Component.ordDay)(x.value2)(y.value2);
    };
});
var diff = function (dictDuration) {
    return function (v) {
        return function (v1) {
            return Data_Time_Duration.toDuration(dictDuration)($foreign.calcDiff(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2, v1.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v1.value1), v1.value2));
        };
    };
};
var day = function (v) {
    return v.value2;
};
var canonicalDate = function (y) {
    return function (m) {
        return function (d) {
            var mkDate = function (y$prime) {
                return function (m$prime) {
                    return function (d$prime) {
                        return new $$Date(y$prime, Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)), d$prime);
                    };
                };
            };
            return $foreign.canonicalDateImpl(mkDate, y, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m), d);
        };
    };
};
var exactDate = function (y) {
    return function (m) {
        return function (d) {
            var dt = new $$Date(y, m, d);
            var $97 = Data_Eq.eq(eqDate)(canonicalDate(y)(m)(d))(dt);
            if ($97) {
                return new Data_Maybe.Just(dt);
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var boundedDate = new Data_Bounded.Bounded(function () {
    return ordDate;
}, new $$Date(Data_Bounded.bottom(Data_Date_Component.boundedYear), Data_Bounded.bottom(Data_Date_Component.boundedMonth), Data_Bounded.bottom(Data_Date_Component.boundedDay)), new $$Date(Data_Bounded.top(Data_Date_Component.boundedYear), Data_Bounded.top(Data_Date_Component.boundedMonth), Data_Bounded.top(Data_Date_Component.boundedDay)));
module.exports = {
    canonicalDate: canonicalDate,
    exactDate: exactDate,
    year: year,
    month: month,
    day: day,
    weekday: weekday,
    diff: diff,
    isLeapYear: isLeapYear,
    lastDayOfMonth: lastDayOfMonth,
    eqDate: eqDate,
    ordDate: ordDate,
    genericDate: genericDate,
    boundedDate: boundedDate,
    showDate: showDate
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.Date.Component":99,"../Data.Enum":109,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Time.Duration":204,"../Data.Unit":220,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":100}],102:[function(require,module,exports){
"use strict";

var createDateTime = function (y, m, d, h, mi, s, ms) {
  var dateTime = new Date(Date.UTC(y, m, d, h, mi, s, ms));
  if (y >= 0 && y < 100) {
    dateTime.setUTCFullYear(y);
  }
  return dateTime;
};

exports.fromDateTimeImpl = function (y, mo, d, h, mi, s, ms) {
  return createDateTime(y, mo - 1, d, h, mi, s, ms).getTime();
};

exports.toDateTimeImpl = function (ctor) {
  return function (instant) {
    var dt = new Date(instant);
    return ctor (dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
  };
};

},{}],103:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Apply = require("../Control.Apply");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Date = require("../Data.Date");
var Data_Date_Component = require("../Data.Date.Component");
var Data_DateTime = require("../Data.DateTime");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Time = require("../Data.Time");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Instant = function (x) {
    return x;
};
var unInstant = function (v) {
    return v;
};
var toDateTime = (function () {
    var mkDateTime = function (y) {
        return function (mo) {
            return function (d) {
                return function (h) {
                    return function (mi) {
                        return function (s) {
                            return function (ms) {
                                return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d), new Data_Time.Time(h, mi, s, ms));
                            };
                        };
                    };
                };
            };
        };
    };
    return $foreign.toDateTimeImpl(mkDateTime);
})();
var showInstant = new Data_Show.Show(function (v) {
    return "(Instant " + (Data_Show.show(Data_Time_Duration.showMilliseconds)(v) + ")");
});
var ordDateTime = Data_Time_Duration.ordMilliseconds;
var instant = function (v) {
    if (v >= -8.6399778816e15 && v <= 8.639977881599999e15) {
        return new Data_Maybe.Just(v);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.DateTime.Instant line 46, column 1 - line 46, column 41: " + [ v.constructor.name ]);
};
var genericDateTime = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.DateTime.Instant.Instant" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Instant))(Data_Generic.fromSpine(Data_Time_Duration.genericMilliseconds)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.DateTime.Instant.Instant", [ {
        sigConstructor: "Data.DateTime.Instant.Instant",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Duration.genericMilliseconds)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.DateTime.Instant.Instant", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Duration.genericMilliseconds)(v);
    } ]);
});
var fromDateTime = function (v) {
    return $foreign.fromDateTimeImpl(Data_Date.year(v.value0), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)), Data_Date.day(v.value0), Data_Time.hour(v.value1), Data_Time.minute(v.value1), Data_Time.second(v.value1), Data_Time.millisecond(v.value1));
};
var fromDate = function (d) {
    return $foreign.fromDateTimeImpl(Data_Date.year(d), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(d)), Data_Date.day(d), Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond));
};
var eqDateTime = Data_Time_Duration.eqMilliseconds;
var boundedInstant = new Data_Bounded.Bounded(function () {
    return ordDateTime;
}, -8.6399778816e15, 8.639977881599999e15);
module.exports = {
    instant: instant,
    unInstant: unInstant,
    fromDateTime: fromDateTime,
    fromDate: fromDate,
    toDateTime: toDateTime,
    eqDateTime: eqDateTime,
    ordDateTime: ordDateTime,
    genericDateTime: genericDateTime,
    boundedInstant: boundedInstant,
    showInstant: showInstant
};

},{"../Control.Apply":6,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.Date":101,"../Data.Date.Component":99,"../Data.DateTime":105,"../Data.Enum":109,"../Data.Eq":111,"../Data.Function.Uncurried":124,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Time":205,"../Data.Time.Component":203,"../Data.Time.Duration":204,"../Data.Unit":220,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":102}],104:[function(require,module,exports){
"use strict";

var createUTC = function (y, mo, d, h, m, s, ms) {
  var date = new Date(Date.UTC(y, mo, d, h, m, s, ms));
  if (y >= 0 && y < 100) {
    date.setUTCFullYear(y);
  }
  return date.getTime();
};

exports.calcDiff = function (rec1, rec2) {
  var msUTC1 = createUTC(rec1.year, rec1.month - 1, rec1.day, rec1.hour, rec1.minute, rec1.second, rec1.millisecond);
  var msUTC2 = createUTC(rec2.year, rec2.month - 1, rec2.day, rec2.hour, rec2.minute, rec2.second, rec2.millisecond);
  return msUTC1 - msUTC2;
};

exports.adjustImpl = function (just) {
  return function (nothing) {
    return function (offset) {
      return function (rec) {
        var msUTC = createUTC(rec.year, rec.month - 1, rec.day, rec.hour, rec.minute, rec.second, rec.millisecond);
        var dt = new Date(msUTC + offset);
        return isNaN(dt.getTime()) ? nothing : just({
          year: dt.getUTCFullYear(),
          month: dt.getUTCMonth() + 1,
          day: dt.getUTCDate(),
          hour: dt.getUTCHours(),
          minute: dt.getUTCMinutes(),
          second: dt.getUTCSeconds(),
          millisecond: dt.getUTCMilliseconds()
        });
      };
    };
  };
};

},{}],105:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Data_Bounded = require("../Data.Bounded");
var Data_Date = require("../Data.Date");
var Data_Date_Component = require("../Data.Date.Component");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Time = require("../Data.Time");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var DateTime = (function () {
    function DateTime(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    DateTime.create = function (value0) {
        return function (value1) {
            return new DateTime(value0, value1);
        };
    };
    return DateTime;
})();
var toRecord = function (v) {
    return {
        year: Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)),
        month: Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)),
        day: Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)),
        hour: Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)),
        minute: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)),
        second: Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)),
        millisecond: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))
    };
};
var time = function (v) {
    return v.value1;
};
var showDateTime = new Data_Show.Show(function (v) {
    return "(DateTime " + (Data_Show.show(Data_Date.showDate)(v.value0) + (" " + (Data_Show.show(Data_Time.showTime)(v.value1) + ")")));
});
var modifyTimeF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(DateTime.create(v.value0))(f(v.value1));
        };
    };
};
var modifyTime = function (f) {
    return function (v) {
        return new DateTime(v.value0, f(v.value1));
    };
};
var modifyDateF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(Data_Function.flip(DateTime.create)(v.value1))(f(v.value0));
        };
    };
};
var modifyDate = function (f) {
    return function (v) {
        return new DateTime(f(v.value0), v.value1);
    };
};
var genericDateTime = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.DateTime.DateTime" && v.value1.length === 2)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(DateTime.create))(Data_Generic.fromSpine(Data_Date.genericDate)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time.genericTime)(v["value1"][1](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.DateTime.DateTime", [ {
        sigConstructor: "Data.DateTime.DateTime",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Date.genericDate)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time.genericTime)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.DateTime.DateTime", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Date.genericDate)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time.genericTime)(v.value1);
    } ]);
});
var eqDateTime = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Date.eqDate)(x.value0)(y.value0) && Data_Eq.eq(Data_Time.eqTime)(x.value1)(y.value1);
    };
});
var ordDateTime = new Data_Ord.Ord(function () {
    return eqDateTime;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Date.ordDate)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Time.ordTime)(x.value1)(y.value1);
    };
});
var diff = function (dictDuration) {
    return function (dt1) {
        return function (dt2) {
            return Data_Time_Duration.toDuration(dictDuration)($foreign.calcDiff(toRecord(dt1), toRecord(dt2)));
        };
    };
};
var date = function (v) {
    return v.value0;
};
var boundedDateTime = new Data_Bounded.Bounded(function () {
    return ordDateTime;
}, new DateTime(Data_Bounded.bottom(Data_Date.boundedDate), Data_Bounded.bottom(Data_Time.boundedTime)), new DateTime(Data_Bounded.top(Data_Date.boundedDate), Data_Bounded.top(Data_Time.boundedTime)));
var adjust = function (dictDuration) {
    return function (d) {
        return function (dt) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)($foreign.adjustImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(Data_Time_Duration.fromDuration(dictDuration)(d))(toRecord(dt)))(function (rec) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(DateTime.create)(Control_Bind.join(Data_Maybe.bindMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Date.exactDate)(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(rec.year)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(rec.month)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(rec.day)))))(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Time.Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(rec.hour)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(rec.minute)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(rec.second)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(rec.millisecond)));
            });
        };
    };
};
module.exports = {
    DateTime: DateTime,
    date: date,
    modifyDate: modifyDate,
    modifyDateF: modifyDateF,
    time: time,
    modifyTime: modifyTime,
    modifyTimeF: modifyTimeF,
    adjust: adjust,
    diff: diff,
    eqDateTime: eqDateTime,
    ordDateTime: ordDateTime,
    genericDateTime: genericDateTime,
    boundedDateTime: boundedDateTime,
    showDateTime: showDateTime
};

},{"../Control.Apply":6,"../Control.Bind":10,"../Data.Bounded":93,"../Data.Date":101,"../Data.Date.Component":99,"../Data.Enum":109,"../Data.Eq":111,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Time":205,"../Data.Time.Component":203,"../Data.Time.Duration":204,"../Data.Unit":220,"../Prelude":263,"./foreign":104}],106:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var Distributive = function (Functor0, collect, distribute) {
    this.Functor0 = Functor0;
    this.collect = collect;
    this.distribute = distribute;
};
var distributiveIdentity = new Distributive(function () {
    return Data_Identity.functorIdentity;
}, function (dictFunctor) {
    return function (f) {
        return function ($11) {
            return Data_Identity.Identity(Data_Functor.map(dictFunctor)(function ($12) {
                return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(f($12));
            })($11));
        };
    };
}, function (dictFunctor) {
    return function ($13) {
        return Data_Identity.Identity(Data_Functor.map(dictFunctor)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))($13));
    };
});
var distribute = function (dict) {
    return dict.distribute;
};
var distributiveFunction = new Distributive(function () {
    return Data_Functor.functorFn;
}, function (dictFunctor) {
    return function (f) {
        return function ($14) {
            return distribute(distributiveFunction)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($14));
        };
    };
}, function (dictFunctor) {
    return function (a) {
        return function (e) {
            return Data_Functor.map(dictFunctor)(function (v) {
                return v(e);
            })(a);
        };
    };
});
var cotraverse = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($15) {
                return Data_Functor.map(dictDistributive.Functor0())(f)(distribute(dictDistributive)(dictFunctor)($15));
            };
        };
    };
};
var collectDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($16) {
                return distribute(dictDistributive)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($16));
            };
        };
    };
};
var collect = function (dict) {
    return dict.collect;
};
var distributeDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return collect(dictDistributive)(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    collect: collect,
    distribute: distribute,
    Distributive: Distributive,
    distributeDefault: distributeDefault,
    collectDefault: collectDefault,
    cotraverse: cotraverse,
    distributiveIdentity: distributiveIdentity,
    distributiveFunction: distributiveFunction
};

},{"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Functor":130,"../Data.Identity":142,"../Data.Newtype":171,"../Prelude":263}],107:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var DivisionRing = function (Ring0, recip) {
    this.Ring0 = Ring0;
    this.recip = recip;
};
var recip = function (dict) {
    return dict.recip;
};
var rightDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(a)(recip(dictDivisionRing)(b));
        };
    };
};
var leftDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(recip(dictDivisionRing)(b))(a);
        };
    };
};
var divisionringNumber = new DivisionRing(function () {
    return Data_Ring.ringNumber;
}, function (x) {
    return 1.0 / x;
});
module.exports = {
    DivisionRing: DivisionRing,
    recip: recip,
    leftDiv: leftDiv,
    rightDiv: rightDiv,
    divisionringNumber: divisionringNumber
};

},{"../Data.EuclideanRing":113,"../Data.Ring":181,"../Data.Semiring":187}],108:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Left) {
                return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Right) {
                return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Either line 160, column 1 - line 160, column 61: " + [ v.constructor.name ]);
        });
    };
};
var note$prime = function (f) {
    return Data_Maybe["maybe'"](function ($171) {
        return Left.create(f($171));
    })(Right.create);
};
var note = function (a) {
    return Data_Maybe.maybe(new Left(a))(Right.create);
};
var functorEither = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        if (v1 instanceof Right) {
            return new Right(v(v1.value0));
        };
        throw new Error("Failed pattern match at Data.Either line 36, column 1 - line 36, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));
var fromRight = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar62) {
                return $dollar62;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Right) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Either line 252, column 1 - line 252, column 52: " + [ v.constructor.name ]);
        })());
    };
};
var fromLeft = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar66) {
                return $dollar66;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Left) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Either line 247, column 1 - line 247, column 51: " + [ v.constructor.name ]);
        })());
    };
};
var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Left) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Right) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 200, column 1 - line 200, column 53: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Left) {
                return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
            };
            if (v1 instanceof Right) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 200, column 1 - line 200, column 53: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        return new Right(v(v1));
    };
});
var eqEither = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                };
                if (x instanceof Left) {
                    return Data_Ordering.LT.value;
                };
                if (y instanceof Left) {
                    return Data_Ordering.GT.value;
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 176, column 8 - line 176, column 64: " + [ x.constructor.name, y.constructor.name ]);
            };
        });
    };
};
var eq1Either = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqEither(dictEq)(dictEq1));
    });
};
var ord1Either = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Either(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));
    });
};
var either = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 229, column 1 - line 229, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
var choose = function (dictAlt) {
    return function (a) {
        return function (b) {
            return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
        };
    };
};
var boundedEither = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return new Left(v(v2.value0));
            };
            if (v2 instanceof Right) {
                return new Right(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 43, column 1 - line 43, column 45: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(z)(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(z)(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0)(z);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0)(z);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 206, column 1 - line 206, column 53: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v(v2.value0));
                };
                if (v2 instanceof Right) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v1(v2.value0));
                };
                throw new Error("Failed pattern match at Data.Either line 206, column 1 - line 206, column 53: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var applyEither = new Control_Apply.Apply(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return new Left(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map(functorEither)(v.value0)(v1);
        };
        throw new Error("Failed pattern match at Data.Either line 79, column 1 - line 79, column 41: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindEither = new Control_Bind.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (v) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
        };
    });
};
var semiringEither = function (dictSemiring) {
    return new Data_Semiring.Semiring(function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.add(dictSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.mul(dictSemiring))(x))(y);
        };
    }, new Right(Data_Semiring.one(dictSemiring)), new Right(Data_Semiring.zero(dictSemiring)));
};
var applicativeEither = new Control_Applicative.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Control_Monad.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return v1;
        };
        return v;
    };
});
module.exports = {
    Left: Left,
    Right: Right,
    either: either,
    choose: choose,
    isLeft: isLeft,
    isRight: isRight,
    fromLeft: fromLeft,
    fromRight: fromRight,
    note: note,
    "note'": note$prime,
    hush: hush,
    functorEither: functorEither,
    invariantEither: invariantEither,
    bifunctorEither: bifunctorEither,
    applyEither: applyEither,
    applicativeEither: applicativeEither,
    altEither: altEither,
    bindEither: bindEither,
    monadEither: monadEither,
    extendEither: extendEither,
    showEither: showEither,
    eqEither: eqEither,
    eq1Either: eq1Either,
    ordEither: ordEither,
    ord1Either: ord1Either,
    boundedEither: boundedEither,
    foldableEither: foldableEither,
    bifoldableEither: bifoldableEither,
    traversableEither: traversableEither,
    bitraversableEither: bitraversableEither,
    semiringEither: semiringEither,
    semigroupEither: semigroupEither
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Extend":14,"../Control.Monad":54,"../Control.Semigroupoid":60,"../Data.Bifoldable":82,"../Data.Bifunctor":88,"../Data.Bitraversable":89,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Traversable":209,"../Prelude":263}],109:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Char = require("../Data.Char");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Cardinality = function (x) {
    return x;
};
var Enum = function (Ord0, pred, succ) {
    this.Ord0 = Ord0;
    this.pred = pred;
    this.succ = succ;
};
var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
    this.Bounded0 = Bounded0;
    this.Enum1 = Enum1;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.toEnum = toEnum;
};
var toEnum = function (dict) {
    return dict.toEnum;
};
var succ = function (dict) {
    return dict.succ;
};
var pred = function (dict) {
    return dict.pred;
};
var ordCardinality = Data_Ord.ordInt;
var newtypeCardinality = new Data_Newtype.Newtype(function (n) {
    return n;
}, Cardinality);
var intStepFromTo = function (step) {
    return function (from) {
        return function (to) {
            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                var $54 = e <= to;
                if ($54) {
                    return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, e + step | 0));
                };
                return Data_Maybe.Nothing.value;
            })(from);
        };
    };
};
var fromEnum = function (dict) {
    return dict.fromEnum;
};
var toEnumWithDefaults = function (dictBoundedEnum) {
    return function (b) {
        return function (t) {
            return function (x) {
                var v = toEnum(dictBoundedEnum)(x);
                if (v instanceof Data_Maybe.Just) {
                    return v.value0;
                };
                if (v instanceof Data_Maybe.Nothing) {
                    var $57 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                    if ($57) {
                        return b;
                    };
                    return t;
                };
                throw new Error("Failed pattern match at Data.Enum line 272, column 28 - line 274, column 56: " + [ v.constructor.name ]);
            };
        };
    };
};
var eqCardinality = Data_Eq.eqInt;
var enumUnit = new Enum(function () {
    return Data_Ord.ordUnit;
}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));
var enumTuple = function (dictEnum) {
    return function (dictBoundedEnum) {
        return new Enum(function () {
            return Data_Tuple.ordTuple(dictEnum.Ord0())((dictBoundedEnum.Enum1()).Ord0());
        }, function (v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum.Bounded0())))(pred(dictEnum)(v.value0)))(function ($101) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($101));
            })(pred(dictBoundedEnum.Enum1())(v.value1));
        }, function (v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum.Bounded0())))(succ(dictEnum)(v.value0)))(function ($102) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($102));
            })(succ(dictBoundedEnum.Enum1())(v.value1));
        });
    };
};
var enumOrdering = new Enum(function () {
    return Data_Ord.ordOrdering;
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_Ordering.EQ) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v instanceof Data_Ordering.GT) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    throw new Error("Failed pattern match at Data.Enum line 84, column 1 - line 84, column 39: " + [ v.constructor.name ]);
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v instanceof Data_Ordering.EQ) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    if (v instanceof Data_Ordering.GT) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Enum line 84, column 1 - line 84, column 39: " + [ v.constructor.name ]);
});
var enumMaybe = function (dictBoundedEnum) {
    return new Enum(function () {
        return Data_Maybe.ordMaybe((dictBoundedEnum.Enum1()).Ord0());
    }, function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Maybe.Just.create(pred(dictBoundedEnum.Enum1())(v.value0));
        };
        throw new Error("Failed pattern match at Data.Enum line 92, column 1 - line 92, column 54: " + [ v.constructor.name ]);
    }, function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Just.create(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum.Bounded0())));
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum.Enum1())(v.value0));
        };
        throw new Error("Failed pattern match at Data.Enum line 92, column 1 - line 92, column 54: " + [ v.constructor.name ]);
    });
};
var enumInt = new Enum(function () {
    return Data_Ord.ordInt;
}, function (n) {
    var $70 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);
    if ($70) {
        return new Data_Maybe.Just(n - 1 | 0);
    };
    return Data_Maybe.Nothing.value;
}, function (n) {
    var $71 = n < Data_Bounded.top(Data_Bounded.boundedInt);
    if ($71) {
        return new Data_Maybe.Just(n + 1 | 0);
    };
    return Data_Maybe.Nothing.value;
});
var enumFromTo = function (dictEnum) {
    return function (dictUnfoldable) {
        return function (from) {
            return function (to) {
                var go = function (mx) {
                    return Control_Bind.bind(Data_Maybe.bindMaybe)(mx)(function (v) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Ord.lessThanOrEq(dictEnum.Ord0())(v)(to)))(function () {
                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(v, succ(dictEnum)(v)));
                        });
                    });
                };
                return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_Maybe.Just(from));
            };
        };
    };
};
var enumFromThenTo = function (dictBoundedEnum) {
    return function (a) {
        return function (b) {
            return function (c) {
                var c$prime = fromEnum(dictBoundedEnum)(c);
                var b$prime = fromEnum(dictBoundedEnum)(b);
                var a$prime = fromEnum(dictBoundedEnum)(a);
                return Data_Functor.map(Data_Functor.functorArray)(function ($103) {
                    return Data_Maybe.fromJust()(toEnum(dictBoundedEnum)($103));
                })(intStepFromTo(b$prime - a$prime | 0)(a$prime)(c$prime));
            };
        };
    };
};
var enumEither = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new Enum(function () {
            return Data_Either.ordEither((dictBoundedEnum.Enum1()).Ord0())((dictBoundedEnum1.Enum1()).Ord0());
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($104) {
                    return Data_Maybe.Just.create(Data_Either.Left.create($104));
                })(pred(dictBoundedEnum.Enum1())(v.value0));
            };
            if (v instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum.Bounded0()))))(function ($105) {
                    return Data_Maybe.Just.create(Data_Either.Right.create($105));
                })(pred(dictBoundedEnum1.Enum1())(v.value0));
            };
            throw new Error("Failed pattern match at Data.Enum line 98, column 1 - line 98, column 75: " + [ v.constructor.name ]);
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1.Bounded0()))))(function ($106) {
                    return Data_Maybe.Just.create(Data_Either.Left.create($106));
                })(succ(dictBoundedEnum.Enum1())(v.value0));
            };
            if (v instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($107) {
                    return Data_Maybe.Just.create(Data_Either.Right.create($107));
                })(succ(dictBoundedEnum1.Enum1())(v.value0));
            };
            throw new Error("Failed pattern match at Data.Enum line 98, column 1 - line 98, column 75: " + [ v.constructor.name ]);
        });
    };
};
var enumBoolean = new Enum(function () {
    return Data_Ord.ordBoolean;
}, function (v) {
    if (v) {
        return new Data_Maybe.Just(false);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    if (!v) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
});
var diag = function (a) {
    return new Data_Tuple.Tuple(a, a);
};
var downFrom = function (dictEnum) {
    return function (dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($108) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(pred(dictEnum)($108));
        });
    };
};
var upFrom = function (dictEnum) {
    return function (dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($109) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(succ(dictEnum)($109));
        });
    };
};
var upFromIncluding = function (dictEnum) {
    return function (dictUnfoldable) {
        return function (x) {
            return new Data_NonEmpty.NonEmpty(x, upFrom(dictEnum)(dictUnfoldable)(x));
        };
    };
};
var defaultToEnum = function (dictBounded) {
    return function (dictEnum) {
        return function (n) {
            if (n < 0) {
                return Data_Maybe.Nothing.value;
            };
            if (n === 0) {
                return new Data_Maybe.Just(Data_Bounded.bottom(dictBounded));
            };
            if (Data_Boolean.otherwise) {
                return Control_Bind.bind(Data_Maybe.bindMaybe)(defaultToEnum(dictBounded)(dictEnum)(n - 1 | 0))(succ(dictEnum));
            };
            throw new Error("Failed pattern match at Data.Enum line 251, column 1 - line 251, column 65: " + [ n.constructor.name ]);
        };
    };
};
var defaultSucc = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
        };
    };
};
var defaultPred = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) - 1 | 0);
        };
    };
};
var defaultFromEnum = function (dictEnum) {
    return function ($110) {
        return Data_Maybe.maybe(0)(function (prd) {
            return defaultFromEnum(dictEnum)(prd) + 1 | 0;
        })(pred(dictEnum)($110));
    };
};
var defaultCardinality = function (dictBounded) {
    return function (dictEnum) {
        var defaultCardinality$prime = function (i) {
            return function ($111) {
                return Data_Maybe.maybe(i)(defaultCardinality$prime(i + 1 | 0))(succ(dictEnum)($111));
            };
        };
        return Cardinality(defaultCardinality$prime(1)(Data_Bounded.bottom(dictBounded)));
    };
};
var charToEnum = function (v) {
    if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
        return Data_Maybe.Just.create(Data_Char.fromCharCode(v));
    };
    return Data_Maybe.Nothing.value;
};
var enumChar = new Enum(function () {
    return Data_Ord.ordChar;
}, defaultPred(charToEnum)(Data_Char.toCharCode), defaultSucc(charToEnum)(Data_Char.toCharCode));
var cardinality = function (dict) {
    return dict.cardinality;
};
var boundedEnumUnit = new BoundedEnum(function () {
    return Data_Bounded.boundedUnit;
}, function () {
    return enumUnit;
}, 1, Data_Function["const"](0), function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Data_Unit.unit);
    };
    return Data_Maybe.Nothing.value;
});
var boundedEnumTuple = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new BoundedEnum(function () {
            return Data_Tuple.boundedTuple(dictBoundedEnum.Bounded0())(dictBoundedEnum1.Bounded0());
        }, function () {
            return enumTuple(dictBoundedEnum.Enum1())(dictBoundedEnum1);
        }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) * Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum1)) | 0), (function () {
            var from = function (v) {
                return function (v1) {
                    return (fromEnum(dictBoundedEnum)(v1.value0) * v | 0) + fromEnum(dictBoundedEnum1)(v1.value1) | 0;
                };
            };
            return from(cardinality(dictBoundedEnum1));
        })(), (function () {
            var to = function (v) {
                return function (n) {
                    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(dictBoundedEnum)(n / v | 0)))(toEnum(dictBoundedEnum1)(n % v));
                };
            };
            return to(cardinality(dictBoundedEnum1));
        })());
    };
};
var boundedEnumOrdering = new BoundedEnum(function () {
    return Data_Bounded.boundedOrdering;
}, function () {
    return enumOrdering;
}, 3, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return 0;
    };
    if (v instanceof Data_Ordering.EQ) {
        return 1;
    };
    if (v instanceof Data_Ordering.GT) {
        return 2;
    };
    throw new Error("Failed pattern match at Data.Enum line 200, column 1 - line 200, column 53: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    return Data_Maybe.Nothing.value;
});
var boundedEnumMaybe = function (dictBoundedEnum) {
    return new BoundedEnum(function () {
        return Data_Maybe.boundedMaybe(dictBoundedEnum.Bounded0());
    }, function () {
        return enumMaybe(dictBoundedEnum);
    }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) + 1 | 0), function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return 0;
        };
        if (v instanceof Data_Maybe.Just) {
            return fromEnum(dictBoundedEnum)(v.value0) + 1 | 0;
        };
        throw new Error("Failed pattern match at Data.Enum line 210, column 1 - line 210, column 68: " + [ v.constructor.name ]);
    }, function (v) {
        if (v === 0) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
        };
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(toEnum(dictBoundedEnum)(v - 1 | 0));
    });
};
var boundedEnumEither = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new BoundedEnum(function () {
            return Data_Either.boundedEither(dictBoundedEnum.Bounded0())(dictBoundedEnum1.Bounded0());
        }, function () {
            return enumEither(dictBoundedEnum)(dictBoundedEnum1);
        }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) + Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum1)) | 0), function (v) {
            if (v instanceof Data_Either.Left) {
                return fromEnum(dictBoundedEnum)(v.value0);
            };
            if (v instanceof Data_Either.Right) {
                return fromEnum(dictBoundedEnum1)(v.value0) + Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) | 0;
            };
            throw new Error("Failed pattern match at Data.Enum line 217, column 1 - line 217, column 89: " + [ v.constructor.name ]);
        }, function (n) {
            var to = function (v) {
                if (n >= 0 && n < v) {
                    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(dictBoundedEnum)(n));
                };
                if (Data_Boolean.otherwise) {
                    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(dictBoundedEnum1)(n - v | 0));
                };
                throw new Error("Failed pattern match at Data.Enum line 224, column 5 - line 224, column 46: " + [ v.constructor.name ]);
            };
            return to(cardinality(dictBoundedEnum));
        });
    };
};
var boundedEnumChar = new BoundedEnum(function () {
    return Data_Bounded.boundedChar;
}, function () {
    return enumChar;
}, Data_Char.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - Data_Char.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, Data_Char.toCharCode, charToEnum);
var boundedEnumBoolean = new BoundedEnum(function () {
    return Data_Bounded.boundedBoolean;
}, function () {
    return enumBoolean;
}, 2, function (v) {
    if (!v) {
        return 0;
    };
    if (v) {
        return 1;
    };
    throw new Error("Failed pattern match at Data.Enum line 181, column 1 - line 181, column 51: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(false);
    };
    if (v === 1) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
});
module.exports = {
    Enum: Enum,
    succ: succ,
    pred: pred,
    defaultSucc: defaultSucc,
    defaultPred: defaultPred,
    enumFromTo: enumFromTo,
    enumFromThenTo: enumFromThenTo,
    upFrom: upFrom,
    upFromIncluding: upFromIncluding,
    downFrom: downFrom,
    Cardinality: Cardinality,
    BoundedEnum: BoundedEnum,
    cardinality: cardinality,
    toEnum: toEnum,
    fromEnum: fromEnum,
    toEnumWithDefaults: toEnumWithDefaults,
    defaultCardinality: defaultCardinality,
    defaultToEnum: defaultToEnum,
    defaultFromEnum: defaultFromEnum,
    newtypeCardinality: newtypeCardinality,
    eqCardinality: eqCardinality,
    ordCardinality: ordCardinality,
    enumBoolean: enumBoolean,
    enumInt: enumInt,
    enumChar: enumChar,
    enumUnit: enumUnit,
    enumOrdering: enumOrdering,
    enumMaybe: enumMaybe,
    enumEither: enumEither,
    enumTuple: enumTuple,
    boundedEnumBoolean: boundedEnumBoolean,
    boundedEnumChar: boundedEnumChar,
    boundedEnumUnit: boundedEnumUnit,
    boundedEnumOrdering: boundedEnumOrdering,
    boundedEnumMaybe: boundedEnumMaybe,
    boundedEnumEither: boundedEnumEither,
    boundedEnumTuple: boundedEnumTuple
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.Char":97,"../Data.Either":108,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Data.Unit":220,"../Partial.Unsafe":253,"../Prelude":263}],110:[function(require,module,exports){
"use strict";

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

},{}],111:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Eq = function (eq) {
    this.eq = eq;
};
var Eq1 = function (eq1) {
    this.eq1 = eq1;
};
var eqVoid = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqUnit = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqString = new Eq($foreign.refEq);
var eqNumber = new Eq($foreign.refEq);
var eqInt = new Eq($foreign.refEq);
var eqChar = new Eq($foreign.refEq);
var eqBoolean = new Eq($foreign.refEq);
var eq1 = function (dict) {
    return dict.eq1;
};
var eq = function (dict) {
    return dict.eq;
};
var eqArray = function (dictEq) {
    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
};
var eq1Array = new Eq1(function (dictEq) {
    return eq(eqArray(dictEq));
});
var notEq = function (dictEq) {
    return function (x) {
        return function (y) {
            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
        };
    };
};
var notEq1 = function (dictEq1) {
    return function (dictEq) {
        return function (x) {
            return function (y) {
                return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
            };
        };
    };
};
module.exports = {
    Eq: Eq,
    eq: eq,
    notEq: notEq,
    Eq1: Eq1,
    eq1: eq1,
    notEq1: notEq1,
    eqBoolean: eqBoolean,
    eqInt: eqInt,
    eqNumber: eqNumber,
    eqChar: eqChar,
    eqString: eqString,
    eqUnit: eqUnit,
    eqVoid: eqVoid,
    eqArray: eqArray,
    eq1Array: eq1Array
};

},{"../Data.Unit":220,"../Data.Void":225,"./foreign":110}],112:[function(require,module,exports){
"use strict";

exports.intDegree = function (x) {
  return Math.min(Math.abs(x), 2147483647);
};

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

},{}],113:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
    this.CommutativeRing0 = CommutativeRing0;
    this.degree = degree;
    this.div = div;
    this.mod = mod;
};
var mod = function (dict) {
    return dict.mod;
};
var gcd = function ($copy_dictEq) {
    return function ($copy_dictEuclideanRing) {
        return function ($copy_a) {
            return function ($copy_b) {
                var $tco_var_dictEq = $copy_dictEq;
                var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                var $tco_var_a = $copy_a;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                    var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                    if ($7) {
                        $tco_done = true;
                        return a;
                    };
                    $tco_var_dictEq = dictEq;
                    $tco_var_dictEuclideanRing = dictEuclideanRing;
                    $tco_var_a = b;
                    $copy_b = mod(dictEuclideanRing)(a)(b);
                    return;
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                };
                return $tco_result;
            };
        };
    };
};
var euclideanRingNumber = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingNumber;
}, function (v) {
    return 1;
}, $foreign.numDiv, function (v) {
    return function (v1) {
        return 0.0;
    };
});
var euclideanRingInt = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingInt;
}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
var div = function (dict) {
    return dict.div;
};
var lcm = function (dictEq) {
    return function (dictEuclideanRing) {
        return function (a) {
            return function (b) {
                var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                if ($8) {
                    return Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0());
                };
                return div(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
            };
        };
    };
};
var degree = function (dict) {
    return dict.degree;
};
module.exports = {
    EuclideanRing: EuclideanRing,
    degree: degree,
    div: div,
    mod: mod,
    gcd: gcd,
    lcm: lcm,
    euclideanRingInt: euclideanRingInt,
    euclideanRingNumber: euclideanRingNumber
};

},{"../Data.BooleanAlgebra":91,"../Data.CommutativeRing":98,"../Data.Eq":111,"../Data.HeytingAlgebra":141,"../Data.Ring":181,"../Data.Semiring":187,"./foreign":112}],114:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_DivisionRing = require("../Data.DivisionRing");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Field = function (EuclideanRing0) {
    this.EuclideanRing0 = EuclideanRing0;
};
var fieldNumber = new Field(function () {
    return Data_EuclideanRing.euclideanRingNumber;
});
module.exports = {
    Field: Field,
    fieldNumber: fieldNumber
};

},{"../Data.CommutativeRing":98,"../Data.DivisionRing":107,"../Data.EuclideanRing":113,"../Data.Ring":181,"../Data.Semiring":187}],115:[function(require,module,exports){
"use strict";

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],116:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var indexr = function (dictFoldable) {
    return function (idx) {
        var go = function (a) {
            return function (cursor) {
                if (cursor.elem instanceof Data_Maybe.Just) {
                    return cursor;
                };
                var $106 = cursor.pos === idx;
                if ($106) {
                    return {
                        elem: new Data_Maybe.Just(a),
                        pos: cursor.pos
                    };
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        return function ($193) {
            return (function (v) {
                return v.elem;
            })(foldr(dictFoldable)(go)({
                elem: Data_Maybe.Nothing.value,
                pos: 0
            })($193));
        };
    };
};
var $$null = function (dictFoldable) {
    return foldr(dictFoldable)(function (v) {
        return function (v1) {
            return false;
        };
    })(true);
};
var oneOf = function (dictFoldable) {
    return function (dictPlus) {
        return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
    };
};
var oneOfMap = function (dictFoldable) {
    return function (dictPlus) {
        return function (f) {
            return foldr(dictFoldable)(function ($194) {
                return Control_Alt.alt(dictPlus.Alt0())(f($194));
            })(Control_Plus.empty(dictPlus));
        };
    };
};
var traverse_ = function (dictApplicative) {
    return function (dictFoldable) {
        return function (f) {
            return foldr(dictFoldable)(function ($195) {
                return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var for_ = function (dictApplicative) {
    return function (dictFoldable) {
        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
    };
};
var sequence_ = function (dictApplicative) {
    return function (dictFoldable) {
        return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var indexl = function (dictFoldable) {
    return function (idx) {
        var go = function (cursor) {
            return function (a) {
                if (cursor.elem instanceof Data_Maybe.Just) {
                    return cursor;
                };
                var $109 = cursor.pos === idx;
                if ($109) {
                    return {
                        elem: new Data_Maybe.Just(a),
                        pos: cursor.pos
                    };
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        return function ($196) {
            return (function (v) {
                return v.elem;
            })(foldl(dictFoldable)(go)({
                elem: Data_Maybe.Nothing.value,
                pos: 0
            })($196));
        };
    };
};
var intercalate = function (dictFoldable) {
    return function (dictMonoid) {
        return function (sep) {
            return function (xs) {
                var go = function (v) {
                    return function (x) {
                        if (v.init) {
                            return {
                                init: false,
                                acc: x
                            };
                        };
                        return {
                            init: false,
                            acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                        };
                    };
                };
                return (foldl(dictFoldable)(go)({
                    init: true,
                    acc: Data_Monoid.mempty(dictMonoid)
                })(xs)).acc;
            };
        };
    };
};
var length = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(function (c) {
            return function (v) {
                return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
            };
        })(Data_Semiring.zero(dictSemiring));
    };
};
var maximumBy = function (dictFoldable) {
    return function (cmp) {
        var max$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $116 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
                        if ($116) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 378, column 3 - line 378, column 27: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
    };
};
var maximum = function (dictOrd) {
    return function (dictFoldable) {
        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var minimumBy = function (dictFoldable) {
    return function (cmp) {
        var min$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $120 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
                        if ($120) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 391, column 3 - line 391, column 27: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
    };
};
var minimum = function (dictOrd) {
    return function (dictFoldable) {
        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var product = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
    };
};
var sum = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
    };
};
var foldableMultiplicative = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Data_Maybe.Just) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Foldable line 131, column 1 - line 131, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableDisj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableConj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldMapDefaultR = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return foldr(dictFoldable)(function (x) {
                return function (acc) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);
var foldMapDefaultL = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return foldl(dictFoldable)(function (acc) {
                return function (x) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldableLast = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldlDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($197) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c)($197)));
                })(xs)))(u);
            };
        };
    };
};
var foldrDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($198) {
                    return Data_Monoid_Endo.Endo(c($198));
                })(xs))(u);
            };
        };
    };
};
var surroundMap = function (dictFoldable) {
    return function (dictSemigroup) {
        return function (d) {
            return function (t) {
                return function (f) {
                    var joined = function (a) {
                        return function (m) {
                            return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
                        };
                    };
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(joined)(f))(d);
                };
            };
        };
    };
};
var surround = function (dictFoldable) {
    return function (dictSemigroup) {
        return function (d) {
            return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.id(Control_Category.categoryFn));
        };
    };
};
var foldM = function (dictFoldable) {
    return function (dictMonad) {
        return function (f) {
            return function (a0) {
                return foldl(dictFoldable)(function (ma) {
                    return function (b) {
                        return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f)(b));
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
            };
        };
    };
};
var fold = function (dictFoldable) {
    return function (dictMonoid) {
        return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
    };
};
var findMap = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return p(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var find = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing && p(v1)) {
                    return new Data_Maybe.Just(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var any = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
    };
};
var elem = function (dictFoldable) {
    return function (dictEq) {
        return function ($199) {
            return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($199));
        };
    };
};
var notElem = function (dictFoldable) {
    return function (dictEq) {
        return function (x) {
            return function ($200) {
                return !elem(dictFoldable)(dictEq)(x)($200);
            };
        };
    };
};
var or = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
    };
};
var all = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
    };
};
var and = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable,
    foldr: foldr,
    foldl: foldl,
    foldMap: foldMap,
    foldrDefault: foldrDefault,
    foldlDefault: foldlDefault,
    foldMapDefaultL: foldMapDefaultL,
    foldMapDefaultR: foldMapDefaultR,
    fold: fold,
    foldM: foldM,
    traverse_: traverse_,
    for_: for_,
    sequence_: sequence_,
    oneOf: oneOf,
    oneOfMap: oneOfMap,
    intercalate: intercalate,
    surroundMap: surroundMap,
    surround: surround,
    and: and,
    or: or,
    all: all,
    any: any,
    sum: sum,
    product: product,
    elem: elem,
    notElem: notElem,
    indexl: indexl,
    indexr: indexr,
    find: find,
    findMap: findMap,
    maximum: maximum,
    maximumBy: maximumBy,
    minimum: minimum,
    minimumBy: minimumBy,
    "null": $$null,
    length: length,
    foldableArray: foldableArray,
    foldableMaybe: foldableMaybe,
    foldableFirst: foldableFirst,
    foldableLast: foldableLast,
    foldableAdditive: foldableAdditive,
    foldableDual: foldableDual,
    foldableDisj: foldableDisj,
    foldableConj: foldableConj,
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Maybe.Last":155,"../Data.Monoid":169,"../Data.Monoid.Additive":163,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Endo":167,"../Data.Monoid.Multiplicative":168,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Unit":220,"../Prelude":263,"./foreign":115}],117:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
    this.Foldable0 = Foldable0;
    this.foldMapWithIndex = foldMapWithIndex;
    this.foldlWithIndex = foldlWithIndex;
    this.foldrWithIndex = foldrWithIndex;
};
var foldrWithIndex = function (dict) {
    return dict.foldrWithIndex;
};
var traverseWithIndex_ = function (dictApplicative) {
    return function (dictFoldableWithIndex) {
        return function (f) {
            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                return function ($41) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f(i)($41));
                };
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var forWithIndex_ = function (dictApplicative) {
    return function (dictFoldableWithIndex) {
        return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
    };
};
var foldlWithIndex = function (dict) {
    return dict.foldlWithIndex;
};
var foldableWithIndexMultiplicative = new FoldableWithIndex(function () {
    return Data_Foldable.foldableMultiplicative;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
});
var foldableWithIndexMaybe = new FoldableWithIndex(function () {
    return Data_Foldable.foldableMaybe;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
});
var foldableWithIndexLast = new FoldableWithIndex(function () {
    return Data_Foldable.foldableLast;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableLast)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableLast)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableLast)(f(Data_Unit.unit));
});
var foldableWithIndexFirst = new FoldableWithIndex(function () {
    return Data_Foldable.foldableFirst;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableFirst)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
});
var foldableWithIndexDual = new FoldableWithIndex(function () {
    return Data_Foldable.foldableDual;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDual)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDual)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDual)(f(Data_Unit.unit));
});
var foldableWithIndexDisj = new FoldableWithIndex(function () {
    return Data_Foldable.foldableDisj;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDisj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
});
var foldableWithIndexConj = new FoldableWithIndex(function () {
    return Data_Foldable.foldableConj;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableConj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableConj)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableConj)(f(Data_Unit.unit));
});
var foldableWithIndexAdditive = new FoldableWithIndex(function () {
    return Data_Foldable.foldableAdditive;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableAdditive)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
});
var foldWithIndexM = function (dictFoldableWithIndex) {
    return function (dictMonad) {
        return function (f) {
            return function (a0) {
                return foldlWithIndex(dictFoldableWithIndex)(function (i) {
                    return function (ma) {
                        return function (b) {
                            return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f(i))(b));
                        };
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
            };
        };
    };
};
var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
    return function (dictMonoid) {
        return function (f) {
            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                return function (x) {
                    return function (acc) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableWithIndexArray = new FoldableWithIndex(function () {
    return Data_Foldable.foldableArray;
}, function (dictMonoid) {
    return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
}, function (f) {
    return function (z) {
        return function ($42) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
                return function (v) {
                    return f(v.value0)(y)(v.value1);
                };
            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($42));
        };
    };
}, function (f) {
    return function (z) {
        return function ($43) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
                return function (y) {
                    return f(v.value0)(v.value1)(y);
                };
            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($43));
        };
    };
});
var foldMapWithIndexDefaultL = function (dictFoldableWithIndex) {
    return function (dictMonoid) {
        return function (f) {
            return foldlWithIndex(dictFoldableWithIndex)(function (i) {
                return function (acc) {
                    return function (x) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)(x));
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMapWithIndex = function (dict) {
    return dict.foldMapWithIndex;
};
var foldlWithIndexDefault = function (dictFoldableWithIndex) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function (i) {
                    return function ($44) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c(i))($44)));
                    };
                })(xs)))(u);
            };
        };
    };
};
var foldrWithIndexDefault = function (dictFoldableWithIndex) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo)(function (i) {
                    return function ($45) {
                        return Data_Monoid_Endo.Endo(c(i)($45));
                    };
                })(xs))(u);
            };
        };
    };
};
var surroundMapWithIndex = function (dictFoldableWithIndex) {
    return function (dictSemigroup) {
        return function (d) {
            return function (t) {
                return function (f) {
                    var joined = function (i) {
                        return function (a) {
                            return function (m) {
                                return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(i)(a))(m));
                            };
                        };
                    };
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo)(joined)(f))(d);
                };
            };
        };
    };
};
var findWithIndex = function (dictFoldableWithIndex) {
    return function (p) {
        var go = function (i) {
            return function (v) {
                return function (v1) {
                    if (v instanceof Data_Maybe.Nothing && p(i)(v1)) {
                        return new Data_Maybe.Just(v1);
                    };
                    return v;
                };
            };
        };
        return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
    };
};
var anyWithIndex = function (dictFoldableWithIndex) {
    return function (dictHeytingAlgebra) {
        return function (t) {
            return function ($46) {
                return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))(function (i) {
                    return function ($47) {
                        return Data_Monoid_Disj.Disj(t(i)($47));
                    };
                })($46));
            };
        };
    };
};
var allWithIndex = function (dictFoldableWithIndex) {
    return function (dictHeytingAlgebra) {
        return function (t) {
            return function ($48) {
                return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function (i) {
                    return function ($49) {
                        return Data_Monoid_Conj.Conj(t(i)($49));
                    };
                })($48));
            };
        };
    };
};
module.exports = {
    FoldableWithIndex: FoldableWithIndex,
    foldrWithIndex: foldrWithIndex,
    foldlWithIndex: foldlWithIndex,
    foldMapWithIndex: foldMapWithIndex,
    foldrWithIndexDefault: foldrWithIndexDefault,
    foldlWithIndexDefault: foldlWithIndexDefault,
    foldMapWithIndexDefaultR: foldMapWithIndexDefaultR,
    foldMapWithIndexDefaultL: foldMapWithIndexDefaultL,
    foldWithIndexM: foldWithIndexM,
    traverseWithIndex_: traverseWithIndex_,
    forWithIndex_: forWithIndex_,
    surroundMapWithIndex: surroundMapWithIndex,
    allWithIndex: allWithIndex,
    anyWithIndex: anyWithIndex,
    findWithIndex: findWithIndex,
    foldableWithIndexArray: foldableWithIndexArray,
    foldableWithIndexMaybe: foldableWithIndexMaybe,
    foldableWithIndexFirst: foldableWithIndexFirst,
    foldableWithIndexLast: foldableWithIndexLast,
    foldableWithIndexAdditive: foldableWithIndexAdditive,
    foldableWithIndexDual: foldableWithIndexDual,
    foldableWithIndexDisj: foldableWithIndexDisj,
    foldableWithIndexConj: foldableWithIndexConj,
    foldableWithIndexMultiplicative: foldableWithIndexMultiplicative
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Foldable":116,"../Data.Function":125,"../Data.FunctorWithIndex":132,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Maybe.Last":155,"../Data.Monoid":169,"../Data.Monoid.Additive":163,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Endo":167,"../Data.Monoid.Multiplicative":168,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Unit":220,"../Prelude":263}],118:[function(require,module,exports){
"use strict";

exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};

},{}],119:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Prelude = require("../Prelude");
var Index = function (errorAt, hasOwnProperty, hasProperty, index) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.index = index;
};
var Indexable = function (ix) {
    this.ix = ix;
};
var unsafeReadProp = function (k) {
    return function (value) {
        return $foreign.unsafeReadPropImpl(Data_Foreign.fail(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
    };
};
var readProp = unsafeReadProp;
var readIndex = unsafeReadProp;
var ix = function (dict) {
    return dict.ix;
};
var index = function (dict) {
    return dict.index;
};
var indexableExceptT = new Indexable(function (dictIndex) {
    return function (f) {
        return function (i) {
            return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Function.flip(index(dictIndex))(i))(f);
        };
    };
});
var indexableForeign = new Indexable(function (dictIndex) {
    return index(dictIndex);
});
var hasPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasProperty(v, value);
        };
        return false;
    };
};
var hasProperty = function (dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasOwnProperty(v, value);
        };
        return false;
    };
};
var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readIndex));
var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));
var hasOwnProperty = function (dict) {
    return dict.hasOwnProperty;
};
var errorAt = function (dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index,
    Indexable: Indexable,
    readProp: readProp,
    readIndex: readIndex,
    ix: ix,
    index: index,
    hasProperty: hasProperty,
    hasOwnProperty: hasOwnProperty,
    errorAt: errorAt,
    indexString: indexString,
    indexInt: indexInt,
    indexableForeign: indexableForeign,
    indexableExceptT: indexableExceptT
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Except.Trans":42,"../Data.Eq":111,"../Data.Foreign":121,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.List.NonEmpty":149,"../Prelude":263,"./foreign":118}],120:[function(require,module,exports){
"use strict";

exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

},{}],121:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Int = require("../Data.Int");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Prelude = require("../Prelude");
var ForeignError = (function () {
    function ForeignError(value0) {
        this.value0 = value0;
    };
    ForeignError.create = function (value0) {
        return new ForeignError(value0);
    };
    return ForeignError;
})();
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var JSONError = (function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
})();
var showForeignError = new Data_Show.Show(function (v) {
    if (v instanceof ForeignError) {
        return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof ErrorAtIndex) {
        return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof ErrorAtProperty) {
        return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof JSONError) {
        return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof TypeMismatch) {
        return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Data.Foreign line 64, column 1 - line 64, column 47: " + [ v.constructor.name ]);
});
var renderForeignError = function (v) {
    if (v instanceof ForeignError) {
        return v.value0;
    };
    if (v instanceof ErrorAtIndex) {
        return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof ErrorAtProperty) {
        return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof JSONError) {
        return "JSON error: " + v.value0;
    };
    if (v instanceof TypeMismatch) {
        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    };
    throw new Error("Failed pattern match at Data.Foreign line 74, column 1 - line 74, column 45: " + [ v.constructor.name ]);
};
var readUndefined = function (value) {
    if ($foreign.isUndefined(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 155, column 1 - line 155, column 46: " + [ value.constructor.name ]);
};
var readNullOrUndefined = function (value) {
    if ($foreign.isNull(value) || $foreign.isUndefined(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 160, column 1 - line 160, column 52: " + [ value.constructor.name ]);
};
var readNull = function (value) {
    if ($foreign.isNull(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 150, column 1 - line 150, column 41: " + [ value.constructor.name ]);
};
var fail = function ($121) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($121));
};
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    };
    if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch("array", $foreign.tagOf(value)));
    };
    throw new Error("Failed pattern match at Data.Foreign line 145, column 1 - line 145, column 42: " + [ value.constructor.name ]);
};
var unsafeReadTagged = function (tag) {
    return function (value) {
        if ($foreign.tagOf(value) === tag) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
        };
        if (Data_Boolean.otherwise) {
            return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
        };
        throw new Error("Failed pattern match at Data.Foreign line 104, column 1 - line 104, column 55: " + [ tag.constructor.name, value.constructor.name ]);
    };
};
var readBoolean = unsafeReadTagged("Boolean");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
    var fromNumber = function ($122) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($122));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
};
var readString = unsafeReadTagged("String");
var readChar = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));
    var fromString = function ($123) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String.toChar($123));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
};
var eqForeignError = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return x.value0 === y.value0;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            return x.value0 === y.value0 && x.value1 === y.value1;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var ordForeignError = new Data_Ord.Ord(function () {
    return eqForeignError;
}, function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof ForeignError) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ForeignError) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
        };
        if (x instanceof TypeMismatch) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TypeMismatch) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtIndex) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtIndex) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtProperty) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        throw new Error("Failed pattern match at Data.Foreign line 62, column 8 - line 62, column 52: " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    ForeignError: ForeignError,
    TypeMismatch: TypeMismatch,
    ErrorAtIndex: ErrorAtIndex,
    ErrorAtProperty: ErrorAtProperty,
    JSONError: JSONError,
    renderForeignError: renderForeignError,
    unsafeReadTagged: unsafeReadTagged,
    readString: readString,
    readChar: readChar,
    readBoolean: readBoolean,
    readNumber: readNumber,
    readInt: readInt,
    readArray: readArray,
    readNull: readNull,
    readUndefined: readUndefined,
    readNullOrUndefined: readNullOrUndefined,
    fail: fail,
    eqForeignError: eqForeignError,
    ordForeignError: ordForeignError,
    showForeignError: showForeignError,
    toForeign: $foreign.toForeign,
    unsafeFromForeign: $foreign.unsafeFromForeign,
    typeOf: $foreign.typeOf,
    tagOf: $foreign.tagOf,
    isNull: $foreign.isNull,
    isUndefined: $foreign.isUndefined,
    isArray: $foreign.isArray
};

},{"../Control.Applicative":4,"../Control.Monad.Error.Class":41,"../Control.Monad.Except":43,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Function":125,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.Int":146,"../Data.List.NonEmpty":149,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Prelude":263,"./foreign":120}],122:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Global = require("../Global");
var Prelude = require("../Prelude");
var FormURLEncoded = function (x) {
    return x;
};
var toArray = function (v) {
    return v;
};
var showFormUrlEncoded = Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(Data_Maybe.showMaybe(Data_Show.showString)));
var semigroupFormUrlEncoded = Data_Semigroup.semigroupArray;
var ordFormUrlEncoded = Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(Data_Maybe.ordMaybe(Data_Ord.ordString)));
var newtypeFormUrlEncoded = new Data_Newtype.Newtype(function (n) {
    return n;
}, FormURLEncoded);
var monoidFormUrlEncoded = Data_Monoid.monoidArray;
var genericFormUrlEncoded = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.FormURLEncoded.FormURLEncoded" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(FormURLEncoded))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.FormURLEncoded.FormURLEncoded", [ {
        sigConstructor: "Data.FormURLEncoded.FormURLEncoded",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.FormURLEncoded.FormURLEncoded", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(v);
    } ]);
});
var fromArray = FormURLEncoded;
var eqFormUrlEncoded = Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Maybe.eqMaybe(Data_Eq.eqString)));
var encode = (function () {
    var encodePart = function (v) {
        if (v.value1 instanceof Data_Maybe.Nothing) {
            return Global["encodeURIComponent"](v.value0);
        };
        if (v.value1 instanceof Data_Maybe.Just) {
            return Global["encodeURIComponent"](v.value0) + ("=" + Global["encodeURIComponent"](v.value1.value0));
        };
        throw new Error("Failed pattern match at Data.FormURLEncoded line 43, column 5 - line 43, column 56: " + [ v.constructor.name ]);
    };
    return function ($21) {
        return Data_String.joinWith("&")(Data_Functor.map(Data_Functor.functorArray)(encodePart)(toArray($21)));
    };
})();
module.exports = {
    FormURLEncoded: FormURLEncoded,
    fromArray: fromArray,
    toArray: toArray,
    encode: encode,
    genericFormUrlEncoded: genericFormUrlEncoded,
    newtypeFormUrlEncoded: newtypeFormUrlEncoded,
    eqFormUrlEncoded: eqFormUrlEncoded,
    ordFormUrlEncoded: ordFormUrlEncoded,
    showFormUrlEncoded: showFormUrlEncoded,
    semigroupFormUrlEncoded: semigroupFormUrlEncoded,
    monoidFormUrlEncoded: monoidFormUrlEncoded
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Functor":130,"../Data.Generic":138,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Data.Tuple":212,"../Data.Unit":220,"../Global":229,"../Prelude":263}],123:[function(require,module,exports){
"use strict";

// module Data.Function.Uncurried

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],124:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var runFn1 = function (f) {
    return f;
};
var mkFn1 = function (f) {
    return f;
};
module.exports = {
    mkFn1: mkFn1,
    runFn1: runFn1,
    mkFn0: $foreign.mkFn0,
    mkFn2: $foreign.mkFn2,
    mkFn3: $foreign.mkFn3,
    mkFn4: $foreign.mkFn4,
    mkFn5: $foreign.mkFn5,
    mkFn6: $foreign.mkFn6,
    mkFn7: $foreign.mkFn7,
    mkFn8: $foreign.mkFn8,
    mkFn9: $foreign.mkFn9,
    mkFn10: $foreign.mkFn10,
    runFn0: $foreign.runFn0,
    runFn2: $foreign.runFn2,
    runFn3: $foreign.runFn3,
    runFn4: $foreign.runFn4,
    runFn5: $foreign.runFn5,
    runFn6: $foreign.runFn6,
    runFn7: $foreign.runFn7,
    runFn8: $foreign.runFn8,
    runFn9: $foreign.runFn9,
    runFn10: $foreign.runFn10
};

},{"../Data.Unit":220,"./foreign":123}],125:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Boolean = require("../Data.Boolean");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var $$const = function (a) {
    return function (v) {
        return a;
    };
};
var applyN = function (f) {
    var go = function ($copy_n) {
        return function ($copy_acc) {
            var $tco_var_n = $copy_n;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(n, acc) {
                if (n <= 0) {
                    $tco_done = true;
                    return acc;
                };
                if (Data_Boolean.otherwise) {
                    $tco_var_n = n - 1 | 0;
                    $copy_acc = f(acc);
                    return;
                };
                throw new Error("Failed pattern match at Data.Function line 94, column 3 - line 96, column 37: " + [ n.constructor.name, acc.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_n, $copy_acc);
            };
            return $tco_result;
        };
    };
    return go;
};
var applyFlipped = function (x) {
    return function (f) {
        return f(x);
    };
};
var apply = function (f) {
    return function (x) {
        return f(x);
    };
};
module.exports = {
    flip: flip,
    "const": $$const,
    apply: apply,
    applyFlipped: applyFlipped,
    applyN: applyN,
    on: on
};

},{"../Control.Category":11,"../Data.Boolean":90,"../Data.Ord":178,"../Data.Ring":181}],126:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var App = function (x) {
    return x;
};
var traversableApp = function (dictTraversable) {
    return dictTraversable;
};
var showApp = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(App " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupApp = function (dictApply) {
    return function (dictSemigroup) {
        return new Data_Semigroup.Semigroup(function (v) {
            return function (v1) {
                return Control_Apply.lift2(dictApply)(Data_Semigroup.append(dictSemigroup))(v)(v1);
            };
        });
    };
};
var plusApp = function (dictPlus) {
    return dictPlus;
};
var newtypeApp = new Data_Newtype.Newtype(function (n) {
    return n;
}, App);
var monoidApp = function (dictApplicative) {
    return function (dictMonoid) {
        return new Data_Monoid.Monoid(function () {
            return semigroupApp(dictApplicative.Apply0())(dictMonoid.Semigroup0());
        }, Control_Applicative.pure(dictApplicative)(Data_Monoid.mempty(dictMonoid)));
    };
};
var monadZeroApp = function (dictMonadZero) {
    return dictMonadZero;
};
var monadPlusApp = function (dictMonadPlus) {
    return dictMonadPlus;
};
var monadApp = function (dictMonad) {
    return dictMonad;
};
var lazyApp = function (dictLazy) {
    return dictLazy;
};
var hoistLowerApp = Unsafe_Coerce.unsafeCoerce;
var hoistLiftApp = Unsafe_Coerce.unsafeCoerce;
var hoistApp = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorApp = function (dictFunctor) {
    return dictFunctor;
};
var foldableApp = function (dictFoldable) {
    return dictFoldable;
};
var extendApp = function (dictExtend) {
    return dictExtend;
};
var eq1App = function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
        return function (v) {
            return function (v1) {
                return Data_Eq.eq1(dictEq1)(dictEq)(v)(v1);
            };
        };
    });
};
var eqApp = function (dictEq1) {
    return function (dictEq) {
        return new Data_Eq.Eq(Data_Eq.eq1(eq1App(dictEq1))(dictEq));
    };
};
var ord1App = function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
        return eq1App(dictOrd1.Eq10());
    }, function (dictOrd) {
        return function (v) {
            return function (v1) {
                return Data_Ord.compare1(dictOrd1)(dictOrd)(v)(v1);
            };
        };
    });
};
var ordApp = function (dictOrd1) {
    return function (dictOrd) {
        return new Data_Ord.Ord(function () {
            return eqApp(dictOrd1.Eq10())(dictOrd.Eq0());
        }, Data_Ord.compare1(ord1App(dictOrd1))(dictOrd));
    };
};
var comonadApp = function (dictComonad) {
    return dictComonad;
};
var bindApp = function (dictBind) {
    return dictBind;
};
var applyApp = function (dictApply) {
    return dictApply;
};
var applicativeApp = function (dictApplicative) {
    return dictApplicative;
};
var alternativeApp = function (dictAlternative) {
    return dictAlternative;
};
var altApp = function (dictAlt) {
    return dictAlt;
};
module.exports = {
    App: App,
    hoistApp: hoistApp,
    hoistLiftApp: hoistLiftApp,
    hoistLowerApp: hoistLowerApp,
    newtypeApp: newtypeApp,
    eqApp: eqApp,
    eq1App: eq1App,
    ordApp: ordApp,
    ord1App: ord1App,
    showApp: showApp,
    semigroupApp: semigroupApp,
    monoidApp: monoidApp,
    functorApp: functorApp,
    applyApp: applyApp,
    applicativeApp: applicativeApp,
    bindApp: bindApp,
    monadApp: monadApp,
    altApp: altApp,
    plusApp: plusApp,
    alternativeApp: alternativeApp,
    monadZeroApp: monadZeroApp,
    monadPlusApp: monadPlusApp,
    lazyApp: lazyApp,
    foldableApp: foldableApp,
    traversableApp: traversableApp,
    extendApp: extendApp,
    comonadApp: comonadApp
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Lazy":15,"../Control.Monad":54,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Traversable":209,"../Prelude":263,"../Unsafe.Coerce":281}],127:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_App = require("../Data.Functor.App");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Compose = function (x) {
    return x;
};
var showCompose = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Compose " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var newtypeCompose = new Data_Newtype.Newtype(function (n) {
    return n;
}, Compose);
var functorCompose = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Data_Functor.Functor(function (f) {
            return function (v) {
                return Compose(Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v));
            };
        });
    };
};
var foldableCompose = function (dictFoldable) {
    return function (dictFoldable1) {
        return new Data_Foldable.Foldable(function (dictMonoid) {
            return function (f) {
                return function (v) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f))(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_Foldable.foldl(dictFoldable)(Data_Foldable.foldl(dictFoldable1)(f))(i)(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(Data_Foldable.foldr(dictFoldable1)(f)))(i)(v);
                };
            };
        });
    };
};
var traversableCompose = function (dictTraversable) {
    return function (dictTraversable1) {
        return new Data_Traversable.Traversable(function () {
            return foldableCompose(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
        }, function () {
            return functorCompose(dictTraversable.Functor0())(dictTraversable1.Functor0());
        }, function (dictApplicative) {
            return Data_Traversable.traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
        }, function (dictApplicative) {
            return function (f) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Compose)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f))(v));
                };
            };
        });
    };
};
var eq1Compose = function (dictEq1) {
    return function (dictEq11) {
        return new Data_Eq.Eq1(function (dictEq) {
            return function (v) {
                return function (v1) {
                    return Data_Eq.eq1(dictEq1)(Data_Functor_App.eqApp(dictEq11)(dictEq))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
                };
            };
        });
    };
};
var eqCompose = function (dictEq1) {
    return function (dictEq11) {
        return function (dictEq) {
            return new Data_Eq.Eq(Data_Eq.eq1(eq1Compose(dictEq1)(dictEq11))(dictEq));
        };
    };
};
var ord1Compose = function (dictOrd1) {
    return function (dictOrd11) {
        return new Data_Ord.Ord1(function () {
            return eq1Compose(dictOrd1.Eq10())(dictOrd11.Eq10());
        }, function (dictOrd) {
            return function (v) {
                return function (v1) {
                    return Data_Ord.compare1(dictOrd1)(Data_Functor_App.ordApp(dictOrd11)(dictOrd))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
                };
            };
        });
    };
};
var ordCompose = function (dictOrd1) {
    return function (dictOrd11) {
        return function (dictOrd) {
            return new Data_Ord.Ord(function () {
                return eqCompose(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
            }, Data_Ord.compare1(ord1Compose(dictOrd1)(dictOrd11))(dictOrd));
        };
    };
};
var bihoistCompose = function (dictFunctor) {
    return function (natF) {
        return function (natG) {
            return function (v) {
                return natF(Data_Functor.map(dictFunctor)(natG)(v));
            };
        };
    };
};
var applyCompose = function (dictApply) {
    return function (dictApply1) {
        return new Control_Apply.Apply(function () {
            return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
        }, function (v) {
            return function (v1) {
                return Compose(Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1));
            };
        });
    };
};
var applicativeCompose = function (dictApplicative) {
    return function (dictApplicative1) {
        return new Control_Applicative.Applicative(function () {
            return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
        }, function ($75) {
            return Compose(Control_Applicative.pure(dictApplicative)(Control_Applicative.pure(dictApplicative1)($75)));
        });
    };
};
var altCompose = function (dictAlt) {
    return function (dictFunctor) {
        return new Control_Alt.Alt(function () {
            return functorCompose(dictAlt.Functor0())(dictFunctor);
        }, function (v) {
            return function (v1) {
                return Compose(Control_Alt.alt(dictAlt)(v)(v1));
            };
        });
    };
};
var plusCompose = function (dictPlus) {
    return function (dictFunctor) {
        return new Control_Plus.Plus(function () {
            return altCompose(dictPlus.Alt0())(dictFunctor);
        }, Control_Plus.empty(dictPlus));
    };
};
var alternativeCompose = function (dictAlternative) {
    return function (dictApplicative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeCompose(dictAlternative.Applicative0())(dictApplicative);
        }, function () {
            return plusCompose(dictAlternative.Plus1())((dictApplicative.Apply0()).Functor0());
        });
    };
};
module.exports = {
    Compose: Compose,
    bihoistCompose: bihoistCompose,
    newtypeCompose: newtypeCompose,
    eq1Compose: eq1Compose,
    eqCompose: eqCompose,
    ord1Compose: ord1Compose,
    ordCompose: ordCompose,
    showCompose: showCompose,
    functorCompose: functorCompose,
    applyCompose: applyCompose,
    applicativeCompose: applicativeCompose,
    foldableCompose: foldableCompose,
    traversableCompose: traversableCompose,
    altCompose: altCompose,
    plusCompose: plusCompose,
    alternativeCompose: alternativeCompose
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Functor.App":126,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Traversable":209,"../Prelude":263}],128:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Functor = require("../Data.Functor");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(f);
        };
    };
};
var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
var invariantFn = new Invariant(imapF(Data_Functor.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    imap: imap,
    Invariant: Invariant,
    imapF: imapF,
    invariantFn: invariantFn,
    invariantArray: invariantArray
};

},{"../Data.Functor":130}],129:[function(require,module,exports){
"use strict";

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

},{}],130:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Unit = require("../Data.Unit");
var Functor = function (map) {
    this.map = map;
};
var map = function (dict) {
    return dict.map;
};
var mapFlipped = function (dictFunctor) {
    return function (fa) {
        return function (f) {
            return map(dictFunctor)(f)(fa);
        };
    };
};
var $$void = function (dictFunctor) {
    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};
var voidLeft = function (dictFunctor) {
    return function (f) {
        return function (x) {
            return map(dictFunctor)(Data_Function["const"](x))(f);
        };
    };
};
var voidRight = function (dictFunctor) {
    return function (x) {
        return map(dictFunctor)(Data_Function["const"](x));
    };
};
var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var functorArray = new Functor($foreign.arrayMap);
var flap = function (dictFunctor) {
    return function (ff) {
        return function (x) {
            return map(dictFunctor)(function (f) {
                return f(x);
            })(ff);
        };
    };
};
module.exports = {
    Functor: Functor,
    map: map,
    mapFlipped: mapFlipped,
    "void": $$void,
    voidRight: voidRight,
    voidLeft: voidLeft,
    flap: flap,
    functorFn: functorFn,
    functorArray: functorArray
};

},{"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Unit":220,"./foreign":129}],131:[function(require,module,exports){
"use strict";

exports.mapWithIndexArray = function (f) {
  return function (xs) {
    var l = xs.length;
    var result = Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(i)(xs[i]);
    }
    return result;
  };
};

},{}],132:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var FunctorWithIndex = function (Functor0, mapWithIndex) {
    this.Functor0 = Functor0;
    this.mapWithIndex = mapWithIndex;
};
var mapWithIndex = function (dict) {
    return dict.mapWithIndex;
};
var functorWithIndexMultiplicative = new FunctorWithIndex(function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative)(f(Data_Unit.unit));
});
var functorWithIndexMaybe = new FunctorWithIndex(function () {
    return Data_Maybe.functorMaybe;
}, function (f) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(f(Data_Unit.unit));
});
var functorWithIndexLast = new FunctorWithIndex(function () {
    return Data_Maybe_Last.functorLast;
}, function (f) {
    return Data_Functor.map(Data_Maybe_Last.functorLast)(f(Data_Unit.unit));
});
var functorWithIndexFirst = new FunctorWithIndex(function () {
    return Data_Maybe_First.functorFirst;
}, function (f) {
    return Data_Functor.map(Data_Maybe_First.functorFirst)(f(Data_Unit.unit));
});
var functorWithIndexDual = new FunctorWithIndex(function () {
    return Data_Monoid_Dual.functorDual;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Dual.functorDual)(f(Data_Unit.unit));
});
var functorWithIndexDisj = new FunctorWithIndex(function () {
    return Data_Monoid_Disj.functorDisj;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Disj.functorDisj)(f(Data_Unit.unit));
});
var functorWithIndexConj = new FunctorWithIndex(function () {
    return Data_Monoid_Conj.functorConj;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Conj.functorConj)(f(Data_Unit.unit));
});
var functorWithIndexArray = new FunctorWithIndex(function () {
    return Data_Functor.functorArray;
}, $foreign.mapWithIndexArray);
var functorWithIndexAdditive = new FunctorWithIndex(function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Additive.functorAdditive)(f(Data_Unit.unit));
});
module.exports = {
    FunctorWithIndex: FunctorWithIndex,
    mapWithIndex: mapWithIndex,
    functorWithIndexArray: functorWithIndexArray,
    functorWithIndexMaybe: functorWithIndexMaybe,
    functorWithIndexFirst: functorWithIndexFirst,
    functorWithIndexLast: functorWithIndexLast,
    functorWithIndexAdditive: functorWithIndexAdditive,
    functorWithIndexDual: functorWithIndexDual,
    functorWithIndexConj: functorWithIndexConj,
    functorWithIndexDisj: functorWithIndexDisj,
    functorWithIndexMultiplicative: functorWithIndexMultiplicative
};

},{"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Maybe.Last":155,"../Data.Monoid.Additive":163,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Multiplicative":168,"../Data.Unit":220,"../Prelude":263,"./foreign":131}],133:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Prelude = require("../Prelude");
var GenericEq = function (genericEq$prime) {
    this["genericEq'"] = genericEq$prime;
};
var genericEqNoConstructors = new GenericEq(function (v) {
    return function (v1) {
        return true;
    };
});
var genericEqNoArguments = new GenericEq(function (v) {
    return function (v1) {
        return true;
    };
});
var genericEqField = function (dictEq) {
    return new GenericEq(function (v) {
        return function (v1) {
            return Data_Eq.eq(dictEq)(v)(v1);
        };
    });
};
var genericEqArgument = function (dictEq) {
    return new GenericEq(function (v) {
        return function (v1) {
            return Data_Eq.eq(dictEq)(v)(v1);
        };
    });
};
var genericEq$prime = function (dict) {
    return dict["genericEq'"];
};
var genericEqConstructor = function (dictGenericEq) {
    return new GenericEq(function (v) {
        return function (v1) {
            return genericEq$prime(dictGenericEq)(v)(v1);
        };
    });
};
var genericEqProduct = function (dictGenericEq) {
    return function (dictGenericEq1) {
        return new GenericEq(function (v) {
            return function (v1) {
                return genericEq$prime(dictGenericEq)(v.value0)(v1.value0) && genericEq$prime(dictGenericEq1)(v.value1)(v1.value1);
            };
        });
    };
};
var genericEqRec = function (dictGenericEq) {
    return new GenericEq(function (v) {
        return function (v1) {
            return genericEq$prime(dictGenericEq)(v)(v1);
        };
    });
};
var genericEqSum = function (dictGenericEq) {
    return function (dictGenericEq1) {
        return new GenericEq(function (v) {
            return function (v1) {
                if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                    return genericEq$prime(dictGenericEq)(v.value0)(v1.value0);
                };
                if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                    return genericEq$prime(dictGenericEq1)(v.value0)(v1.value0);
                };
                return false;
            };
        });
    };
};
var genericEq = function (dictGeneric) {
    return function (dictGenericEq) {
        return function (x) {
            return function (y) {
                return genericEq$prime(dictGenericEq)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
            };
        };
    };
};
module.exports = {
    GenericEq: GenericEq,
    "genericEq'": genericEq$prime,
    genericEq: genericEq,
    genericEqNoConstructors: genericEqNoConstructors,
    genericEqNoArguments: genericEqNoArguments,
    genericEqSum: genericEqSum,
    genericEqProduct: genericEqProduct,
    genericEqConstructor: genericEqConstructor,
    genericEqArgument: genericEqArgument,
    genericEqRec: genericEqRec,
    genericEqField: genericEqField
};

},{"../Data.Eq":111,"../Data.Generic.Rep":136,"../Data.HeytingAlgebra":141,"../Prelude":263}],134:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Prelude = require("../Prelude");
var GenericOrd = function (genericCompare$prime) {
    this["genericCompare'"] = genericCompare$prime;
};
var genericOrdNoConstructors = new GenericOrd(function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var genericOrdNoArguments = new GenericOrd(function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var genericOrdField = function (dictOrd) {
    return new GenericOrd(function (v) {
        return function (v1) {
            return Data_Ord.compare(dictOrd)(v)(v1);
        };
    });
};
var genericOrdArgument = function (dictOrd) {
    return new GenericOrd(function (v) {
        return function (v1) {
            return Data_Ord.compare(dictOrd)(v)(v1);
        };
    });
};
var genericCompare$prime = function (dict) {
    return dict["genericCompare'"];
};
var genericOrdConstructor = function (dictGenericOrd) {
    return new GenericOrd(function (v) {
        return function (v1) {
            return genericCompare$prime(dictGenericOrd)(v)(v1);
        };
    });
};
var genericOrdProduct = function (dictGenericOrd) {
    return function (dictGenericOrd1) {
        return new GenericOrd(function (v) {
            return function (v1) {
                var v2 = genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                if (v2 instanceof Data_Ordering.EQ) {
                    return genericCompare$prime(dictGenericOrd1)(v.value1)(v1.value1);
                };
                return v2;
            };
        });
    };
};
var genericOrdRec = function (dictGenericOrd) {
    return new GenericOrd(function (v) {
        return function (v1) {
            return genericCompare$prime(dictGenericOrd)(v)(v1);
        };
    });
};
var genericOrdSum = function (dictGenericOrd) {
    return function (dictGenericOrd1) {
        return new GenericOrd(function (v) {
            return function (v1) {
                if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                    return genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                };
                if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                    return genericCompare$prime(dictGenericOrd1)(v.value0)(v1.value0);
                };
                if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inr) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inl) {
                    return Data_Ordering.GT.value;
                };
                throw new Error("Failed pattern match at Data.Generic.Rep.Ord line 19, column 1 - line 19, column 79: " + [ v.constructor.name, v1.constructor.name ]);
            };
        });
    };
};
var genericCompare = function (dictGeneric) {
    return function (dictGenericOrd) {
        return function (x) {
            return function (y) {
                return genericCompare$prime(dictGenericOrd)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
            };
        };
    };
};
module.exports = {
    GenericOrd: GenericOrd,
    "genericCompare'": genericCompare$prime,
    genericCompare: genericCompare,
    genericOrdNoConstructors: genericOrdNoConstructors,
    genericOrdNoArguments: genericOrdNoArguments,
    genericOrdSum: genericOrdSum,
    genericOrdProduct: genericOrdProduct,
    genericOrdConstructor: genericOrdConstructor,
    genericOrdArgument: genericOrdArgument,
    genericOrdRec: genericOrdRec,
    genericOrdField: genericOrdField
};

},{"../Data.Generic.Rep":136,"../Data.Ord":178,"../Data.Ordering":179,"../Prelude":263}],135:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Foldable = require("../Data.Foldable");
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Symbol = require("../Data.Symbol");
var Prelude = require("../Prelude");
var GenericShow = function (genericShow$prime) {
    this["genericShow'"] = genericShow$prime;
};
var GenericShowArgs = function (genericShowArgs) {
    this.genericShowArgs = genericShowArgs;
};
var GenericShowFields = function (genericShowFields) {
    this.genericShowFields = genericShowFields;
};
var genericShowFieldsNoArguments = new GenericShowFields(function (v) {
    return [  ];
});
var genericShowFieldsField = function (dictShow) {
    return function (dictIsSymbol) {
        return new GenericShowFields(function (v) {
            return [ Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value) + (": " + Data_Show.show(dictShow)(v)) ];
        });
    };
};
var genericShowFields = function (dict) {
    return dict.genericShowFields;
};
var genericShowFieldsProduct = function (dictGenericShowFields) {
    return function (dictGenericShowFields1) {
        return new GenericShowFields(function (v) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowFields(dictGenericShowFields)(v.value0))(genericShowFields(dictGenericShowFields1)(v.value1));
        });
    };
};
var genericShowArgsRec = function (dictGenericShowFields) {
    return new GenericShowArgs(function (v) {
        return [ "{ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(genericShowFields(dictGenericShowFields)(v)) + " }") ];
    });
};
var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
    return [  ];
});
var genericShowArgsArgument = function (dictShow) {
    return new GenericShowArgs(function (v) {
        return [ Data_Show.show(dictShow)(v) ];
    });
};
var genericShowArgs = function (dict) {
    return dict.genericShowArgs;
};
var genericShowArgsProduct = function (dictGenericShowArgs) {
    return function (dictGenericShowArgs1) {
        return new GenericShowArgs(function (v) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowArgs(dictGenericShowArgs)(v.value0))(genericShowArgs(dictGenericShowArgs1)(v.value1));
        });
    };
};
var genericShowConstructor = function (dictGenericShowArgs) {
    return function (dictIsSymbol) {
        return new GenericShow(function (v) {
            var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var v1 = genericShowArgs(dictGenericShowArgs)(v);
            if (v1.length === 0) {
                return ctor;
            };
            return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
        });
    };
};
var genericShow$prime = function (dict) {
    return dict["genericShow'"];
};
var genericShowNoConstructors = new GenericShow(function (a) {
    return genericShow$prime(genericShowNoConstructors)(a);
});
var genericShowSum = function (dictGenericShow) {
    return function (dictGenericShow1) {
        return new GenericShow(function (v) {
            if (v instanceof Data_Generic_Rep.Inl) {
                return genericShow$prime(dictGenericShow)(v.value0);
            };
            if (v instanceof Data_Generic_Rep.Inr) {
                return genericShow$prime(dictGenericShow1)(v.value0);
            };
            throw new Error("Failed pattern match at Data.Generic.Rep.Show line 31, column 1 - line 31, column 83: " + [ v.constructor.name ]);
        });
    };
};
var genericShow = function (dictGeneric) {
    return function (dictGenericShow) {
        return function (x) {
            return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
        };
    };
};
module.exports = {
    GenericShow: GenericShow,
    "genericShow'": genericShow$prime,
    genericShow: genericShow,
    GenericShowArgs: GenericShowArgs,
    genericShowArgs: genericShowArgs,
    GenericShowFields: GenericShowFields,
    genericShowFields: genericShowFields,
    genericShowNoConstructors: genericShowNoConstructors,
    genericShowArgsNoArguments: genericShowArgsNoArguments,
    genericShowSum: genericShowSum,
    genericShowArgsProduct: genericShowArgsProduct,
    genericShowFieldsProduct: genericShowFieldsProduct,
    genericShowConstructor: genericShowConstructor,
    genericShowArgsArgument: genericShowArgsArgument,
    genericShowArgsRec: genericShowArgsRec,
    genericShowFieldsField: genericShowFieldsField,
    genericShowFieldsNoArguments: genericShowFieldsNoArguments
};

},{"../Data.Foldable":116,"../Data.Generic.Rep":136,"../Data.Monoid":169,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Symbol":202,"../Prelude":263}],136:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Maybe = require("../Data.Maybe");
var Inl = (function () {
    function Inl(value0) {
        this.value0 = value0;
    };
    Inl.create = function (value0) {
        return new Inl(value0);
    };
    return Inl;
})();
var Inr = (function () {
    function Inr(value0) {
        this.value0 = value0;
    };
    Inr.create = function (value0) {
        return new Inr(value0);
    };
    return Inr;
})();
var Rec = function (x) {
    return x;
};
var Product = (function () {
    function Product(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Product.create = function (value0) {
        return function (value1) {
            return new Product(value0, value1);
        };
    };
    return Product;
})();
var NoArguments = (function () {
    function NoArguments() {

    };
    NoArguments.value = new NoArguments();
    return NoArguments;
})();
var Field = function (x) {
    return x;
};
var Constructor = function (x) {
    return x;
};
var Argument = function (x) {
    return x;
};
var Generic = function (from, to) {
    this.from = from;
    this.to = to;
};
var to = function (dict) {
    return dict.to;
};
var genericMaybe = new Generic(function (v) {
    if (v instanceof Data_Maybe.Nothing) {
        return new Inl(NoArguments.value);
    };
    if (v instanceof Data_Maybe.Just) {
        return new Inr(v.value0);
    };
    throw new Error("Failed pattern match at Data.Generic.Rep line 49, column 1 - line 51, column 63: " + [ v.constructor.name ]);
}, function (v) {
    if (v instanceof Inl) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Inr) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.Generic.Rep line 49, column 1 - line 51, column 63: " + [ v.constructor.name ]);
});
var from = function (dict) {
    return dict.from;
};
module.exports = {
    Generic: Generic,
    to: to,
    from: from,
    NoArguments: NoArguments,
    Inl: Inl,
    Inr: Inr,
    Product: Product,
    Constructor: Constructor,
    Argument: Argument,
    Rec: Rec,
    Field: Field,
    genericMaybe: genericMaybe
};

},{"../Data.Maybe":156}],137:[function(require,module,exports){
"use strict";

// module Data.Generic

exports.zipAll = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      for (var i = 0; i < l; i++) {
        if (!f(xs[i])(ys[i])) {
          return false;
        }
      }
      return true;
    };
  };
};

exports.zipCompare = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var o = f(xs[i])(ys[i]);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

},{}],138:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Prelude = require("../Prelude");
var Type_Proxy = require("../Type.Proxy");
var SProd = (function () {
    function SProd(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SProd.create = function (value0) {
        return function (value1) {
            return new SProd(value0, value1);
        };
    };
    return SProd;
})();
var SRecord = (function () {
    function SRecord(value0) {
        this.value0 = value0;
    };
    SRecord.create = function (value0) {
        return new SRecord(value0);
    };
    return SRecord;
})();
var SNumber = (function () {
    function SNumber(value0) {
        this.value0 = value0;
    };
    SNumber.create = function (value0) {
        return new SNumber(value0);
    };
    return SNumber;
})();
var SBoolean = (function () {
    function SBoolean(value0) {
        this.value0 = value0;
    };
    SBoolean.create = function (value0) {
        return new SBoolean(value0);
    };
    return SBoolean;
})();
var SInt = (function () {
    function SInt(value0) {
        this.value0 = value0;
    };
    SInt.create = function (value0) {
        return new SInt(value0);
    };
    return SInt;
})();
var SString = (function () {
    function SString(value0) {
        this.value0 = value0;
    };
    SString.create = function (value0) {
        return new SString(value0);
    };
    return SString;
})();
var SChar = (function () {
    function SChar(value0) {
        this.value0 = value0;
    };
    SChar.create = function (value0) {
        return new SChar(value0);
    };
    return SChar;
})();
var SArray = (function () {
    function SArray(value0) {
        this.value0 = value0;
    };
    SArray.create = function (value0) {
        return new SArray(value0);
    };
    return SArray;
})();
var SUnit = (function () {
    function SUnit() {

    };
    SUnit.value = new SUnit();
    return SUnit;
})();
var SigProd = (function () {
    function SigProd(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SigProd.create = function (value0) {
        return function (value1) {
            return new SigProd(value0, value1);
        };
    };
    return SigProd;
})();
var SigRecord = (function () {
    function SigRecord(value0) {
        this.value0 = value0;
    };
    SigRecord.create = function (value0) {
        return new SigRecord(value0);
    };
    return SigRecord;
})();
var SigNumber = (function () {
    function SigNumber() {

    };
    SigNumber.value = new SigNumber();
    return SigNumber;
})();
var SigBoolean = (function () {
    function SigBoolean() {

    };
    SigBoolean.value = new SigBoolean();
    return SigBoolean;
})();
var SigInt = (function () {
    function SigInt() {

    };
    SigInt.value = new SigInt();
    return SigInt;
})();
var SigString = (function () {
    function SigString() {

    };
    SigString.value = new SigString();
    return SigString;
})();
var SigChar = (function () {
    function SigChar() {

    };
    SigChar.value = new SigChar();
    return SigChar;
})();
var SigArray = (function () {
    function SigArray(value0) {
        this.value0 = value0;
    };
    SigArray.create = function (value0) {
        return new SigArray(value0);
    };
    return SigArray;
})();
var SigUnit = (function () {
    function SigUnit() {

    };
    SigUnit.value = new SigUnit();
    return SigUnit;
})();
var Generic = function (fromSpine, toSignature, toSpine) {
    this.fromSpine = fromSpine;
    this.toSignature = toSignature;
    this.toSpine = toSpine;
};
var toSpine = function (dict) {
    return dict.toSpine;
};
var toSignature = function (dict) {
    return dict.toSignature;
};
var showSuspended = function (dictShow) {
    return function (e) {
        return "\\_ -> " + Data_Show.show(dictShow)(e(Data_Unit.unit));
    };
};
var showArray = function (v) {
    return function (v1) {
        if (v1.length === 0) {
            return "[]";
        };
        return "[ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(v)(v1)) + " ]");
    };
};
var showGenericSpine = new Data_Show.Show(function (v) {
    if (v instanceof SUnit) {
        return "SUnit";
    };
    if (v instanceof SChar) {
        return "SChar " + Data_Show.show(Data_Show.showChar)(v.value0);
    };
    if (v instanceof SString) {
        return "SString " + Data_Show.show(Data_Show.showString)(v.value0);
    };
    if (v instanceof SBoolean) {
        return "SBoolean " + Data_Show.show(Data_Show.showBoolean)(v.value0);
    };
    if (v instanceof SNumber) {
        return "SNumber " + Data_Show.show(Data_Show.showNumber)(v.value0);
    };
    if (v instanceof SInt) {
        return "SInt " + Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof SArray) {
        return "SArray " + showArray(showSuspended(showGenericSpine))(v.value0);
    };
    if (v instanceof SProd) {
        return "SProd " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + showArray(showSuspended(showGenericSpine))(v.value1)));
    };
    if (v instanceof SRecord) {
        var showElt = function (v1) {
            return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ "{ recLabel: ", Data_Show.show(Data_Show.showString)(v1.recLabel), ", recValue: ", showSuspended(showGenericSpine)(v1.recValue), " }" ]);
        };
        return "SRecord " + showArray(showElt)(v.value0);
    };
    throw new Error("Failed pattern match at Data.Generic line 270, column 1 - line 270, column 47: " + [ v.constructor.name ]);
});
var orderingToInt = function (v) {
    if (v instanceof Data_Ordering.EQ) {
        return 0;
    };
    if (v instanceof Data_Ordering.LT) {
        return 1;
    };
    if (v instanceof Data_Ordering.GT) {
        return -1 | 0;
    };
    throw new Error("Failed pattern match at Data.Generic line 538, column 17 - line 541, column 10: " + [ v.constructor.name ]);
};
var genericVoid = new Generic(function (v) {
    return Data_Maybe.Nothing.value;
}, function (v) {
    return new SigProd("Data.Void.Void", [  ]);
}, Data_Void.absurd);
var genericUnit = new Generic(function (v) {
    if (v instanceof SUnit) {
        return new Data_Maybe.Just(Data_Unit.unit);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigUnit.value;
}, function (v) {
    return SUnit.value;
});
var genericString = new Generic(function (v) {
    if (v instanceof SString) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigString.value;
}, SString.create);
var genericOrdering = new Generic(function (v) {
    if (v instanceof SProd && (v.value0 === "Data.Ordering.LT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v instanceof SProd && (v.value0 === "Data.Ordering.EQ" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v instanceof SProd && (v.value0 === "Data.Ordering.GT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return new SigProd("Data.Ordering.Ordering", [ {
        sigConstructor: "Data.Ordering.LT",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Ordering.EQ",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Ordering.GT",
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return new SProd("Data.Ordering.LT", [  ]);
    };
    if (v instanceof Data_Ordering.EQ) {
        return new SProd("Data.Ordering.EQ", [  ]);
    };
    if (v instanceof Data_Ordering.GT) {
        return new SProd("Data.Ordering.GT", [  ]);
    };
    throw new Error("Failed pattern match at Data.Generic line 218, column 13 - line 221, column 38: " + [ v.constructor.name ]);
});
var genericNumber = new Generic(function (v) {
    if (v instanceof SNumber) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigNumber.value;
}, SNumber.create);
var genericInt = new Generic(function (v) {
    if (v instanceof SInt) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigInt.value;
}, SInt.create);
var genericChar = new Generic(function (v) {
    if (v instanceof SChar) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigChar.value;
}, SChar.create);
var genericBool = new Generic(function (v) {
    if (v instanceof SBoolean) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigBoolean.value;
}, SBoolean.create);
var fromSpine = function (dict) {
    return dict.fromSpine;
};
var force = function (f) {
    return f(Data_Unit.unit);
};
var genericArray = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SArray) {
            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function ($310) {
                return fromSpine(dictGeneric)(force($310));
            })(v.value0);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var lowerProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigArray(function (v) {
            return toSignature(dictGeneric)(lowerProxy(x));
        });
    }, function ($311) {
        return SArray.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
            return function (v) {
                return toSpine(dictGeneric)(x);
            };
        })($311));
    });
};
var genericEither = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.Either.Left" && v.value1.length === 1)) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(fromSpine(dictGeneric)(force(v["value1"][0])));
            };
            if (v instanceof SProd && (v.value0 === "Data.Either.Right" && v.value1.length === 1)) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(fromSpine(dictGeneric1)(force(v["value1"][0])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var rproxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            var lproxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            return new SigProd("Data.Either.Either", [ {
                sigConstructor: "Data.Either.Left",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric)(lproxy(x));
                } ]
            }, {
                sigConstructor: "Data.Either.Right",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric1)(rproxy(x));
                } ]
            } ]);
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return new SProd("Data.Either.Left", [ function (v1) {
                    return toSpine(dictGeneric)(v.value0);
                } ]);
            };
            if (v instanceof Data_Either.Right) {
                return new SProd("Data.Either.Right", [ function (v1) {
                    return toSpine(dictGeneric1)(v.value0);
                } ]);
            };
            throw new Error("Failed pattern match at Data.Generic line 180, column 1 - line 180, column 73: " + [ v.constructor.name ]);
        });
    };
};
var genericIdentity = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.Identity.Identity" && v.value1.length === 1)) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Identity.Identity)(fromSpine(dictGeneric)(force(v["value1"][0])));
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var iproxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.Identity.Identity", [ {
            sigConstructor: "Data.Identity.Identity",
            sigValues: [ function (v) {
                return toSignature(dictGeneric)(iproxy(x));
            } ]
        } ]);
    }, function (v) {
        return new SProd("Data.Identity.Identity", [ function (v1) {
            return toSpine(dictGeneric)(v);
        } ]);
    });
};
var genericList = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.List.Types.Cons" && v.value1.length === 2)) {
            return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Types.Cons.create)(fromSpine(dictGeneric)(force(v["value1"][0]))))(fromSpine(genericList(dictGeneric))(force(v["value1"][1])));
        };
        if (v instanceof SProd && (v.value0 === "Data.List.Types.Nil" && v.value1.length === 0)) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_List_Types.Nil.value);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var headProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.List.Types.List", [ {
            sigConstructor: "Data.List.Types.Cons",
            sigValues: [ function (v) {
                return toSignature(dictGeneric)(headProxy(x));
            }, function (v) {
                return toSignature(genericList(dictGeneric))(x);
            } ]
        }, {
            sigConstructor: "Data.List.Types.Nil",
            sigValues: [  ]
        } ]);
    }, function (v) {
        if (v instanceof Data_List_Types.Cons) {
            return new SProd("Data.List.Types.Cons", [ function (v1) {
                return toSpine(dictGeneric)(v.value0);
            }, function (v1) {
                return toSpine(genericList(dictGeneric))(v.value1);
            } ]);
        };
        if (v instanceof Data_List_Types.Nil) {
            return new SProd("Data.List.Types.Nil", [  ]);
        };
        throw new Error("Failed pattern match at Data.Generic line 116, column 1 - line 116, column 58: " + [ v.constructor.name ]);
    });
};
var genericMaybe = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.Maybe.Just" && v.value1.length === 1)) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(dictGeneric)(force(v["value1"][0])));
        };
        if (v instanceof SProd && (v.value0 === "Data.Maybe.Nothing" && v.value1.length === 0)) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var mbProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.Maybe.Maybe", [ {
            sigConstructor: "Data.Maybe.Just",
            sigValues: [ function (v) {
                return toSignature(dictGeneric)(mbProxy(x));
            } ]
        }, {
            sigConstructor: "Data.Maybe.Nothing",
            sigValues: [  ]
        } ]);
    }, function (v) {
        if (v instanceof Data_Maybe.Just) {
            return new SProd("Data.Maybe.Just", [ function (v1) {
                return toSpine(dictGeneric)(v.value0);
            } ]);
        };
        if (v instanceof Data_Maybe.Nothing) {
            return new SProd("Data.Maybe.Nothing", [  ]);
        };
        throw new Error("Failed pattern match at Data.Generic line 160, column 1 - line 160, column 56: " + [ v.constructor.name ]);
    });
};
var genericNonEmpty = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.NonEmpty.NonEmpty" && v.value1.length === 2)) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_NonEmpty.NonEmpty.create)(fromSpine(dictGeneric1)(force(v["value1"][0]))))(fromSpine(dictGeneric)(force(v["value1"][1])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var tailProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            var headProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            return new SigProd("Data.NonEmpty.NonEmpty", [ {
                sigConstructor: "Data.NonEmpty.NonEmpty",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric1)(headProxy(x));
                }, function (v) {
                    return toSignature(dictGeneric)(tailProxy(x));
                } ]
            } ]);
        }, function (v) {
            return new SProd("Data.NonEmpty.NonEmpty", [ function (v1) {
                return toSpine(dictGeneric1)(v.value0);
            }, function (v1) {
                return toSpine(dictGeneric)(v.value1);
            } ]);
        });
    };
};
var genericNonEmptyList = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.List.Types.NonEmptyList" && v.value1.length === 1)) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Types.NonEmptyList)(fromSpine(genericNonEmpty(genericList(dictGeneric))(dictGeneric))(force(v["value1"][0])));
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var listProxy = function (v) {
            return Type_Proxy["Proxy"].value;
        };
        return new SigProd("Data.List.Types.NonEmptyList", [ {
            sigConstructor: "Data.List.Types.NonEmptyList",
            sigValues: [ function (v) {
                return toSignature(genericList(dictGeneric))(listProxy(x));
            } ]
        } ]);
    }, function (v) {
        return new SProd("Data.List.Types.NonEmptyList", [ function (v1) {
            return toSpine(genericNonEmpty(genericList(dictGeneric))(dictGeneric))(v);
        } ]);
    });
};
var genericShowPrec = function (v) {
    return function (v1) {
        if (v1 instanceof SProd) {
            if (Data_Array["null"](v1.value1)) {
                return v1.value0;
            };
            if (Data_Boolean.otherwise) {
                var showParen = function (v2) {
                    return function (x) {
                        if (!v2) {
                            return x;
                        };
                        if (v2) {
                            return "(" + (x + ")");
                        };
                        throw new Error("Failed pattern match at Data.Generic line 467, column 7 - line 467, column 28: " + [ v2.constructor.name, x.constructor.name ]);
                    };
                };
                return showParen(v > 10)(v1.value0 + (" " + Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                    return genericShowPrec(11)(force(x));
                })(v1.value1))));
            };
        };
        if (v1 instanceof SRecord) {
            var showLabelPart = function (x) {
                return x.recLabel + (": " + genericShowPrec(0)(force(x.recValue)));
            };
            return "{" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showLabelPart)(v1.value0)) + "}");
        };
        if (v1 instanceof SBoolean) {
            return Data_Show.show(Data_Show.showBoolean)(v1.value0);
        };
        if (v1 instanceof SInt) {
            return Data_Show.show(Data_Show.showInt)(v1.value0);
        };
        if (v1 instanceof SNumber) {
            return Data_Show.show(Data_Show.showNumber)(v1.value0);
        };
        if (v1 instanceof SString) {
            return Data_Show.show(Data_Show.showString)(v1.value0);
        };
        if (v1 instanceof SChar) {
            return Data_Show.show(Data_Show.showChar)(v1.value0);
        };
        if (v1 instanceof SArray) {
            return "[" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                return genericShowPrec(0)(force(x));
            })(v1.value0)) + "]");
        };
        if (v1 instanceof SUnit) {
            return "unit";
        };
        throw new Error("Failed pattern match at Data.Generic line 460, column 1 - line 460, column 49: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var gShow = function (dictGeneric) {
    return function ($312) {
        return genericShowPrec(0)(toSpine(dictGeneric)($312));
    };
};
var genericTuple = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.Tuple.Tuple" && v.value1.length === 2)) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromSpine(dictGeneric)(force(v["value1"][0]))))(fromSpine(dictGeneric1)(force(v["value1"][1])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var sndProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            var fstProxy = function (v) {
                return Type_Proxy["Proxy"].value;
            };
            return new SigProd("Data.Tuple.Tuple", [ {
                sigConstructor: "Data.Tuple.Tuple",
                sigValues: [ function (v) {
                    return toSignature(dictGeneric)(fstProxy(x));
                }, function (v) {
                    return toSignature(dictGeneric1)(sndProxy(x));
                } ]
            } ]);
        }, function (v) {
            return new SProd("Data.Tuple.Tuple", [ function (v1) {
                return toSpine(dictGeneric)(v.value0);
            }, function (v1) {
                return toSpine(dictGeneric1)(v.value1);
            } ]);
        });
    };
};
var isValidSpine = function (v) {
    return function (v1) {
        if (v instanceof SigBoolean && v1 instanceof SBoolean) {
            return true;
        };
        if (v instanceof SigNumber && v1 instanceof SNumber) {
            return true;
        };
        if (v instanceof SigInt && v1 instanceof SInt) {
            return true;
        };
        if (v instanceof SigString && v1 instanceof SString) {
            return true;
        };
        if (v instanceof SigChar && v1 instanceof SChar) {
            return true;
        };
        if (v instanceof SigArray && v1 instanceof SArray) {
            return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($313) {
                return isValidSpine(force(v.value0))(force($313));
            })(v1.value0);
        };
        if (v instanceof SigProd && v1 instanceof SProd) {
            var v2 = Data_Foldable.find(Data_Foldable.foldableArray)(function (alt) {
                return alt.sigConstructor === v1.value0;
            })(v.value1);
            if (v2 instanceof Data_Maybe.Nothing) {
                return false;
            };
            if (v2 instanceof Data_Maybe.Just) {
                return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
                    return function (spine) {
                        return isValidSpine(force(sig))(force(spine));
                    };
                })(v2.value0.sigValues)(v1.value1));
            };
            throw new Error("Failed pattern match at Data.Generic line 438, column 3 - line 444, column 15: " + [ v2.constructor.name ]);
        };
        if (v instanceof SigRecord && v1 instanceof SRecord) {
            return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
                return function (val) {
                    return isValidSpine(force(sig.recValue))(force(val.recValue));
                };
            })(Data_Array.sortBy(function (a) {
                return function (b) {
                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
                };
            })(v.value0))(Data_Array.sortBy(function (a) {
                return function (b) {
                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
                };
            })(v1.value0)));
        };
        if (v instanceof SigUnit && v1 instanceof SUnit) {
            return true;
        };
        return false;
    };
};
var showSignature = function (sig) {
    var needsParen = function (s) {
        if (s instanceof SigProd) {
            return true;
        };
        if (s instanceof SigRecord) {
            return true;
        };
        if (s instanceof SigNumber) {
            return false;
        };
        if (s instanceof SigBoolean) {
            return false;
        };
        if (s instanceof SigInt) {
            return false;
        };
        if (s instanceof SigString) {
            return false;
        };
        if (s instanceof SigChar) {
            return false;
        };
        if (s instanceof SigArray) {
            return true;
        };
        if (s instanceof SigUnit) {
            return false;
        };
        throw new Error("Failed pattern match at Data.Generic line 403, column 18 - line 412, column 21: " + [ s.constructor.name ]);
    };
    var paren = function (s) {
        if (needsParen(s)) {
            return "(" + (showSignature(s) + ")");
        };
        if (Data_Boolean.otherwise) {
            return showSignature(s);
        };
        throw new Error("Failed pattern match at Data.Generic line 399, column 3 - line 401, column 34: " + [ s.constructor.name ]);
    };
    return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)((function () {
        if (sig instanceof SigProd) {
            return [ "SigProd ", Data_Show.show(Data_Show.showString)(sig.value0), " ", showArray(showDataConstructor)(sig.value1) ];
        };
        if (sig instanceof SigRecord) {
            return [ "SigRecord ", showArray(showLabel)(sig.value0) ];
        };
        if (sig instanceof SigNumber) {
            return [ "SigNumber" ];
        };
        if (sig instanceof SigBoolean) {
            return [ "SigBoolean" ];
        };
        if (sig instanceof SigInt) {
            return [ "SigInt" ];
        };
        if (sig instanceof SigString) {
            return [ "SigString" ];
        };
        if (sig instanceof SigChar) {
            return [ "SigChar" ];
        };
        if (sig instanceof SigArray) {
            return [ "SigArray ", paren(force(sig.value0)) ];
        };
        if (sig instanceof SigUnit) {
            return [ "SigUnit" ];
        };
        throw new Error("Failed pattern match at Data.Generic line 386, column 10 - line 396, column 27: " + [ sig.constructor.name ]);
    })());
};
var showLabel = function (l) {
    return "{ recLabel: " + (Data_Show.show(Data_Show.showString)(l.recLabel) + (", recValue: " + (showSignature(force(l.recValue)) + " }")));
};
var showDataConstructor = function (dc) {
    return "{ sigConstructor: " + (Data_Show.show(Data_Show.showString)(dc.sigConstructor) + (", sigValues: " + (showArray(function ($314) {
        return showSignature(force($314));
    })(dc.sigValues) + " }")));
};
var showGenericSignature = new Data_Show.Show(showSignature);
var eqThunk = function (dictEq) {
    return function (x) {
        return function (y) {
            return Data_Eq.eq(dictEq)(force(x))(force(y));
        };
    };
};
var eqRecordSigs = function (dictEq) {
    return function (arr1) {
        return function (arr2) {
            var labelCompare = function (r1) {
                return function (r2) {
                    return Data_Ord.compare(Data_Ord.ordString)(r1.recLabel)(r2.recLabel);
                };
            };
            var sorted1 = Data_Array.sortBy(labelCompare)(arr1);
            var sorted2 = Data_Array.sortBy(labelCompare)(arr2);
            var doCmp = function (x) {
                return function (y) {
                    return x.recLabel === y.recLabel && Data_Eq.eq(dictEq)(force(x.recValue))(force(y.recValue));
                };
            };
            return Data_Array.length(arr1) === Data_Array.length(arr2) && $foreign.zipAll(doCmp)(sorted1)(sorted2);
        };
    };
};
var eqGenericSpine = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof SProd && v1 instanceof SProd) {
            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value1)(v1.value1));
        };
        if (v instanceof SRecord && v1 instanceof SRecord) {
            return eqRecordSigs(eqGenericSpine)(v.value0)(v1.value0);
        };
        if (v instanceof SNumber && v1 instanceof SNumber) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SBoolean && v1 instanceof SBoolean) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SInt && v1 instanceof SInt) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SString && v1 instanceof SString) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SChar && v1 instanceof SChar) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SArray && v1 instanceof SArray) {
            return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value0)(v1.value0);
        };
        if (v instanceof SUnit && v1 instanceof SUnit) {
            return true;
        };
        return false;
    };
});
var gEq = function (dictGeneric) {
    return function (x) {
        return function (y) {
            return Data_Eq.eq(eqGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
        };
    };
};
var eqGenericSignature = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof SigProd && v1 instanceof SigProd) {
            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqDataConstructor)(v.value1)(v1.value1));
        };
        if (v instanceof SigRecord && v1 instanceof SigRecord) {
            return eqRecordSigs(eqGenericSignature)(v.value0)(v1.value0);
        };
        if (v instanceof SigNumber && v1 instanceof SigNumber) {
            return true;
        };
        if (v instanceof SigBoolean && v1 instanceof SigBoolean) {
            return true;
        };
        if (v instanceof SigInt && v1 instanceof SigInt) {
            return true;
        };
        if (v instanceof SigString && v1 instanceof SigString) {
            return true;
        };
        if (v instanceof SigChar && v1 instanceof SigChar) {
            return true;
        };
        if (v instanceof SigArray && v1 instanceof SigArray) {
            return eqThunk(eqGenericSignature)(v.value0)(v1.value0);
        };
        if (v instanceof SigUnit && v1 instanceof SigUnit) {
            return true;
        };
        return false;
    };
});
var eqDataConstructor = function (p1) {
    return function (p2) {
        return p1.sigConstructor === p2.sigConstructor && $foreign.zipAll(eqThunk(eqGenericSignature))(p1.sigValues)(p2.sigValues);
    };
};
var compareThunk = function (dictOrd) {
    return function (x) {
        return function (y) {
            return orderingToInt(Data_Ord.compare(dictOrd)(force(x))(force(y)));
        };
    };
};
var ordGenericSpine = new Data_Ord.Ord(function () {
    return eqGenericSpine;
}, function (v) {
    return function (v1) {
        if (v instanceof SProd && v1 instanceof SProd) {
            var v2 = Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
            if (v2 instanceof Data_Ordering.EQ) {
                return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value1)(v1.value1));
            };
            return v2;
        };
        if (v instanceof SProd) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SProd) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SRecord && v1 instanceof SRecord) {
            var go = function (x) {
                return function (y) {
                    var v2 = Data_Ord.compare(Data_Ord.ordString)(x.recLabel)(y.recLabel);
                    if (v2 instanceof Data_Ordering.EQ) {
                        return orderingToInt(Data_Ord.compare(ordGenericSpine)(force(x.recValue))(force(y.recValue)));
                    };
                    return orderingToInt(v2);
                };
            };
            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(go)(v.value0)(v1.value0));
        };
        if (v instanceof SRecord) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SRecord) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SInt && v1 instanceof SInt) {
            return Data_Ord.compare(Data_Ord.ordInt)(v.value0)(v1.value0);
        };
        if (v instanceof SInt) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SInt) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SBoolean && v1 instanceof SBoolean) {
            return Data_Ord.compare(Data_Ord.ordBoolean)(v.value0)(v1.value0);
        };
        if (v instanceof SBoolean) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SBoolean) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SNumber && v1 instanceof SNumber) {
            return Data_Ord.compare(Data_Ord.ordNumber)(v.value0)(v1.value0);
        };
        if (v instanceof SNumber) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SNumber) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SString && v1 instanceof SString) {
            return Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
        };
        if (v instanceof SString) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SString) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SChar && v1 instanceof SChar) {
            return Data_Ord.compare(Data_Ord.ordChar)(v.value0)(v1.value0);
        };
        if (v instanceof SChar) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SChar) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SArray && v1 instanceof SArray) {
            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value0)(v1.value0));
        };
        if (v instanceof SArray) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SArray) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SUnit && v1 instanceof SUnit) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Generic line 303, column 1 - line 303, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var gCompare = function (dictGeneric) {
    return function (x) {
        return function (y) {
            return Data_Ord.compare(ordGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
        };
    };
};
module.exports = {
    Generic: Generic,
    toSpine: toSpine,
    toSignature: toSignature,
    fromSpine: fromSpine,
    SProd: SProd,
    SRecord: SRecord,
    SNumber: SNumber,
    SBoolean: SBoolean,
    SInt: SInt,
    SString: SString,
    SChar: SChar,
    SArray: SArray,
    SUnit: SUnit,
    SigProd: SigProd,
    SigRecord: SigRecord,
    SigNumber: SigNumber,
    SigBoolean: SigBoolean,
    SigInt: SigInt,
    SigString: SigString,
    SigChar: SigChar,
    SigArray: SigArray,
    SigUnit: SigUnit,
    showDataConstructor: showDataConstructor,
    showSignature: showSignature,
    isValidSpine: isValidSpine,
    gShow: gShow,
    gEq: gEq,
    gCompare: gCompare,
    genericNumber: genericNumber,
    genericInt: genericInt,
    genericString: genericString,
    genericChar: genericChar,
    genericBool: genericBool,
    genericArray: genericArray,
    genericUnit: genericUnit,
    genericVoid: genericVoid,
    genericTuple: genericTuple,
    genericList: genericList,
    genericNonEmptyList: genericNonEmptyList,
    genericMaybe: genericMaybe,
    genericEither: genericEither,
    genericIdentity: genericIdentity,
    genericOrdering: genericOrdering,
    genericNonEmpty: genericNonEmpty,
    showGenericSpine: showGenericSpine,
    eqGenericSpine: eqGenericSpine,
    ordGenericSpine: ordGenericSpine,
    eqGenericSignature: eqGenericSignature,
    showGenericSignature: showGenericSignature
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Data.Traversable":209,"../Data.Tuple":212,"../Data.Unit":220,"../Data.Void":225,"../Prelude":263,"../Type.Proxy":279,"./foreign":137}],139:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var OPTIONS = (function () {
    function OPTIONS() {

    };
    OPTIONS.value = new OPTIONS();
    return OPTIONS;
})();
var GET = (function () {
    function GET() {

    };
    GET.value = new GET();
    return GET;
})();
var HEAD = (function () {
    function HEAD() {

    };
    HEAD.value = new HEAD();
    return HEAD;
})();
var POST = (function () {
    function POST() {

    };
    POST.value = new POST();
    return POST;
})();
var PUT = (function () {
    function PUT() {

    };
    PUT.value = new PUT();
    return PUT;
})();
var DELETE = (function () {
    function DELETE() {

    };
    DELETE.value = new DELETE();
    return DELETE;
})();
var TRACE = (function () {
    function TRACE() {

    };
    TRACE.value = new TRACE();
    return TRACE;
})();
var CONNECT = (function () {
    function CONNECT() {

    };
    CONNECT.value = new CONNECT();
    return CONNECT;
})();
var PROPFIND = (function () {
    function PROPFIND() {

    };
    PROPFIND.value = new PROPFIND();
    return PROPFIND;
})();
var PROPPATCH = (function () {
    function PROPPATCH() {

    };
    PROPPATCH.value = new PROPPATCH();
    return PROPPATCH;
})();
var MKCOL = (function () {
    function MKCOL() {

    };
    MKCOL.value = new MKCOL();
    return MKCOL;
})();
var COPY = (function () {
    function COPY() {

    };
    COPY.value = new COPY();
    return COPY;
})();
var MOVE = (function () {
    function MOVE() {

    };
    MOVE.value = new MOVE();
    return MOVE;
})();
var LOCK = (function () {
    function LOCK() {

    };
    LOCK.value = new LOCK();
    return LOCK;
})();
var UNLOCK = (function () {
    function UNLOCK() {

    };
    UNLOCK.value = new UNLOCK();
    return UNLOCK;
})();
var PATCH = (function () {
    function PATCH() {

    };
    PATCH.value = new PATCH();
    return PATCH;
})();
var CustomMethod = function (x) {
    return x;
};
var unCustomMethod = function (v) {
    return v;
};
var showMethod = new Data_Show.Show(function (v) {
    if (v instanceof OPTIONS) {
        return "OPTIONS";
    };
    if (v instanceof GET) {
        return "GET";
    };
    if (v instanceof HEAD) {
        return "HEAD";
    };
    if (v instanceof POST) {
        return "POST";
    };
    if (v instanceof PUT) {
        return "PUT";
    };
    if (v instanceof DELETE) {
        return "DELETE";
    };
    if (v instanceof TRACE) {
        return "TRACE";
    };
    if (v instanceof CONNECT) {
        return "CONNECT";
    };
    if (v instanceof PROPFIND) {
        return "PROPFIND";
    };
    if (v instanceof PROPPATCH) {
        return "PROPPATCH";
    };
    if (v instanceof MKCOL) {
        return "MKCOL";
    };
    if (v instanceof COPY) {
        return "COPY";
    };
    if (v instanceof MOVE) {
        return "MOVE";
    };
    if (v instanceof LOCK) {
        return "LOCK";
    };
    if (v instanceof UNLOCK) {
        return "UNLOCK";
    };
    if (v instanceof PATCH) {
        return "PATCH";
    };
    throw new Error("Failed pattern match at Data.HTTP.Method line 42, column 1 - line 42, column 35: " + [ v.constructor.name ]);
});
var showCustomMethod = new Data_Show.Show(function (v) {
    return "(CustomMethod " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);
var genericMethod = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.OPTIONS" && v.value1.length === 0)) {
        return new Data_Maybe.Just(OPTIONS.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.GET" && v.value1.length === 0)) {
        return new Data_Maybe.Just(GET.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.HEAD" && v.value1.length === 0)) {
        return new Data_Maybe.Just(HEAD.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.POST" && v.value1.length === 0)) {
        return new Data_Maybe.Just(POST.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.PUT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(PUT.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.DELETE" && v.value1.length === 0)) {
        return new Data_Maybe.Just(DELETE.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.TRACE" && v.value1.length === 0)) {
        return new Data_Maybe.Just(TRACE.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.CONNECT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(CONNECT.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.PROPFIND" && v.value1.length === 0)) {
        return new Data_Maybe.Just(PROPFIND.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.PROPPATCH" && v.value1.length === 0)) {
        return new Data_Maybe.Just(PROPPATCH.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.MKCOL" && v.value1.length === 0)) {
        return new Data_Maybe.Just(MKCOL.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.COPY" && v.value1.length === 0)) {
        return new Data_Maybe.Just(COPY.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.MOVE" && v.value1.length === 0)) {
        return new Data_Maybe.Just(MOVE.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.LOCK" && v.value1.length === 0)) {
        return new Data_Maybe.Just(LOCK.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.UNLOCK" && v.value1.length === 0)) {
        return new Data_Maybe.Just(UNLOCK.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.PATCH" && v.value1.length === 0)) {
        return new Data_Maybe.Just(PATCH.value);
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.HTTP.Method.Method", [ {
        sigConstructor: "Data.HTTP.Method.OPTIONS",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.GET",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.HEAD",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.POST",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.PUT",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.DELETE",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.TRACE",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.CONNECT",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.PROPFIND",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.PROPPATCH",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.MKCOL",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.COPY",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.MOVE",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.LOCK",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.UNLOCK",
        sigValues: [  ]
    }, {
        sigConstructor: "Data.HTTP.Method.PATCH",
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof OPTIONS) {
        return new Data_Generic.SProd("Data.HTTP.Method.OPTIONS", [  ]);
    };
    if (v instanceof GET) {
        return new Data_Generic.SProd("Data.HTTP.Method.GET", [  ]);
    };
    if (v instanceof HEAD) {
        return new Data_Generic.SProd("Data.HTTP.Method.HEAD", [  ]);
    };
    if (v instanceof POST) {
        return new Data_Generic.SProd("Data.HTTP.Method.POST", [  ]);
    };
    if (v instanceof PUT) {
        return new Data_Generic.SProd("Data.HTTP.Method.PUT", [  ]);
    };
    if (v instanceof DELETE) {
        return new Data_Generic.SProd("Data.HTTP.Method.DELETE", [  ]);
    };
    if (v instanceof TRACE) {
        return new Data_Generic.SProd("Data.HTTP.Method.TRACE", [  ]);
    };
    if (v instanceof CONNECT) {
        return new Data_Generic.SProd("Data.HTTP.Method.CONNECT", [  ]);
    };
    if (v instanceof PROPFIND) {
        return new Data_Generic.SProd("Data.HTTP.Method.PROPFIND", [  ]);
    };
    if (v instanceof PROPPATCH) {
        return new Data_Generic.SProd("Data.HTTP.Method.PROPPATCH", [  ]);
    };
    if (v instanceof MKCOL) {
        return new Data_Generic.SProd("Data.HTTP.Method.MKCOL", [  ]);
    };
    if (v instanceof COPY) {
        return new Data_Generic.SProd("Data.HTTP.Method.COPY", [  ]);
    };
    if (v instanceof MOVE) {
        return new Data_Generic.SProd("Data.HTTP.Method.MOVE", [  ]);
    };
    if (v instanceof LOCK) {
        return new Data_Generic.SProd("Data.HTTP.Method.LOCK", [  ]);
    };
    if (v instanceof UNLOCK) {
        return new Data_Generic.SProd("Data.HTTP.Method.UNLOCK", [  ]);
    };
    if (v instanceof PATCH) {
        return new Data_Generic.SProd("Data.HTTP.Method.PATCH", [  ]);
    };
    throw new Error("Failed pattern match at Data.HTTP.Method line 40, column 8 - line 40, column 48: " + [ v.constructor.name ]);
});
var genericCustomMethod = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.HTTP.Method.CustomMethod" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(CustomMethod))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.HTTP.Method.CustomMethod", [ {
        sigConstructor: "Data.HTTP.Method.CustomMethod",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.HTTP.Method.CustomMethod", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var fromString = function (s) {
    var v = Data_String.toUpper(s);
    if (v === "OPTIONS") {
        return new Data_Either.Left(OPTIONS.value);
    };
    if (v === "GET") {
        return new Data_Either.Left(GET.value);
    };
    if (v === "HEAD") {
        return new Data_Either.Left(HEAD.value);
    };
    if (v === "POST") {
        return new Data_Either.Left(POST.value);
    };
    if (v === "PUT") {
        return new Data_Either.Left(PUT.value);
    };
    if (v === "DELETE") {
        return new Data_Either.Left(DELETE.value);
    };
    if (v === "TRACE") {
        return new Data_Either.Left(TRACE.value);
    };
    if (v === "CONNECT") {
        return new Data_Either.Left(CONNECT.value);
    };
    if (v === "PROPFIND") {
        return new Data_Either.Left(PROPFIND.value);
    };
    if (v === "PROPPATCH") {
        return new Data_Either.Left(PROPPATCH.value);
    };
    if (v === "MKCOL") {
        return new Data_Either.Left(MKCOL.value);
    };
    if (v === "COPY") {
        return new Data_Either.Left(COPY.value);
    };
    if (v === "MOVE") {
        return new Data_Either.Left(MOVE.value);
    };
    if (v === "LOCK") {
        return new Data_Either.Left(LOCK.value);
    };
    if (v === "UNLOCK") {
        return new Data_Either.Left(UNLOCK.value);
    };
    return new Data_Either.Right(v);
};
var eqMethod = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof OPTIONS && y instanceof OPTIONS) {
            return true;
        };
        if (x instanceof GET && y instanceof GET) {
            return true;
        };
        if (x instanceof HEAD && y instanceof HEAD) {
            return true;
        };
        if (x instanceof POST && y instanceof POST) {
            return true;
        };
        if (x instanceof PUT && y instanceof PUT) {
            return true;
        };
        if (x instanceof DELETE && y instanceof DELETE) {
            return true;
        };
        if (x instanceof TRACE && y instanceof TRACE) {
            return true;
        };
        if (x instanceof CONNECT && y instanceof CONNECT) {
            return true;
        };
        if (x instanceof PROPFIND && y instanceof PROPFIND) {
            return true;
        };
        if (x instanceof PROPPATCH && y instanceof PROPPATCH) {
            return true;
        };
        if (x instanceof MKCOL && y instanceof MKCOL) {
            return true;
        };
        if (x instanceof COPY && y instanceof COPY) {
            return true;
        };
        if (x instanceof MOVE && y instanceof MOVE) {
            return true;
        };
        if (x instanceof LOCK && y instanceof LOCK) {
            return true;
        };
        if (x instanceof UNLOCK && y instanceof UNLOCK) {
            return true;
        };
        if (x instanceof PATCH && y instanceof PATCH) {
            return true;
        };
        return false;
    };
});
var ordMethod = new Data_Ord.Ord(function () {
    return eqMethod;
}, function (x) {
    return function (y) {
        if (x instanceof OPTIONS && y instanceof OPTIONS) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof OPTIONS) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof OPTIONS) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof GET && y instanceof GET) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof GET) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof GET) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof HEAD && y instanceof HEAD) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof HEAD) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof HEAD) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof POST && y instanceof POST) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof POST) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof POST) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PUT && y instanceof PUT) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PUT) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PUT) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof DELETE && y instanceof DELETE) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof DELETE) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof DELETE) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TRACE && y instanceof TRACE) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof TRACE) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TRACE) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof CONNECT && y instanceof CONNECT) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof CONNECT) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof CONNECT) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PROPFIND && y instanceof PROPFIND) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PROPFIND) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PROPFIND) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PROPPATCH && y instanceof PROPPATCH) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof PROPPATCH) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof PROPPATCH) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MKCOL && y instanceof MKCOL) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MKCOL) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MKCOL) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof COPY && y instanceof COPY) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof COPY) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof COPY) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof MOVE && y instanceof MOVE) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof MOVE) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof MOVE) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof LOCK && y instanceof LOCK) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof LOCK) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof LOCK) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof UNLOCK && y instanceof UNLOCK) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof UNLOCK) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof UNLOCK) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof PATCH && y instanceof PATCH) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.HTTP.Method line 39, column 8 - line 39, column 40: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqCustomMethod = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordCustomMethod = new Data_Ord.Ord(function () {
    return eqCustomMethod;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
module.exports = {
    OPTIONS: OPTIONS,
    GET: GET,
    HEAD: HEAD,
    POST: POST,
    PUT: PUT,
    DELETE: DELETE,
    TRACE: TRACE,
    CONNECT: CONNECT,
    PROPFIND: PROPFIND,
    PROPPATCH: PROPPATCH,
    MKCOL: MKCOL,
    COPY: COPY,
    MOVE: MOVE,
    LOCK: LOCK,
    UNLOCK: UNLOCK,
    PATCH: PATCH,
    unCustomMethod: unCustomMethod,
    fromString: fromString,
    print: print,
    eqMethod: eqMethod,
    ordMethod: ordMethod,
    genericMethod: genericMethod,
    showMethod: showMethod,
    eqCustomMethod: eqCustomMethod,
    ordCustomMethod: ordCustomMethod,
    genericCustomMethod: genericCustomMethod,
    showCustomMethod: showCustomMethod
};

},{"../Control.Apply":6,"../Data.Either":108,"../Data.Eq":111,"../Data.Generic":138,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Data.Unit":220,"../Prelude":263}],140:[function(require,module,exports){
"use strict";

exports.boolConj = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolDisj = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

},{}],141:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
    this.conj = conj;
    this.disj = disj;
    this.ff = ff;
    this.implies = implies;
    this.not = not;
    this.tt = tt;
};
var tt = function (dict) {
    return dict.tt;
};
var not = function (dict) {
    return dict.not;
};
var implies = function (dict) {
    return dict.implies;
};
var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return Data_Unit.unit;
}, Data_Unit.unit);
var ff = function (dict) {
    return dict.ff;
};
var disj = function (dict) {
    return dict.disj;
};
var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
    return function (b) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
}, $foreign.boolNot, true);
var conj = function (dict) {
    return dict.conj;
};
var heytingAlgebraFunction = function (dictHeytingAlgebra) {
    return new HeytingAlgebra(function (f) {
        return function (g) {
            return function (a) {
                return conj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (g) {
            return function (a) {
                return disj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (v) {
        return ff(dictHeytingAlgebra);
    }, function (f) {
        return function (g) {
            return function (a) {
                return implies(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (a) {
            return not(dictHeytingAlgebra)(f(a));
        };
    }, function (v) {
        return tt(dictHeytingAlgebra);
    });
};
module.exports = {
    HeytingAlgebra: HeytingAlgebra,
    tt: tt,
    ff: ff,
    implies: implies,
    conj: conj,
    disj: disj,
    not: not,
    heytingAlgebraBoolean: heytingAlgebraBoolean,
    heytingAlgebraUnit: heytingAlgebraUnit,
    heytingAlgebraFunction: heytingAlgebraFunction
};

},{"../Data.Unit":220,"./foreign":140}],142:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Identity = function (x) {
    return x;
};
var showIdentity = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringIdentity = function (dictSemiring) {
    return dictSemiring;
};
var semigroupIdenity = function (dictSemigroup) {
    return dictSemigroup;
};
var ringIdentity = function (dictRing) {
    return dictRing;
};
var ordIdentity = function (dictOrd) {
    return dictOrd;
};
var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
    return n;
}, Identity);
var monoidIdentity = function (dictMonoid) {
    return dictMonoid;
};
var lazyIdentity = function (dictLazy) {
    return dictLazy;
};
var heytingAlgebraIdentity = function (dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorIdentity = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(f(v));
        };
    };
});
var fieldIdentity = function (dictField) {
    return dictField;
};
var extendIdentity = new Control_Extend.Extend(function () {
    return functorIdentity;
}, function (f) {
    return function (m) {
        return f(m);
    };
});
var euclideanRingIdentity = function (dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqIdentity = function (dictEq) {
    return dictEq;
};
var eq1Identity = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqIdentity(dictEq));
});
var ord1Identity = new Data_Ord.Ord1(function () {
    return eq1Identity;
}, function (dictOrd) {
    return Data_Ord.compare(ordIdentity(dictOrd));
});
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (v) {
    return v;
});
var commutativeRingIdentity = function (dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedIdentity = function (dictBounded) {
    return dictBounded;
};
var booleanAlgebraIdentity = function (dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyIdentity = new Control_Apply.Apply(function () {
    return functorIdentity;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindIdentity = new Control_Bind.Bind(function () {
    return applyIdentity;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeIdentity = new Control_Applicative.Applicative(function () {
    return applyIdentity;
}, Identity);
var monadIdentity = new Control_Monad.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
var altIdentity = new Control_Alt.Alt(function () {
    return functorIdentity;
}, function (x) {
    return function (v) {
        return x;
    };
});
module.exports = {
    Identity: Identity,
    newtypeIdentity: newtypeIdentity,
    eqIdentity: eqIdentity,
    ordIdentity: ordIdentity,
    boundedIdentity: boundedIdentity,
    heytingAlgebraIdentity: heytingAlgebraIdentity,
    booleanAlgebraIdentity: booleanAlgebraIdentity,
    semigroupIdenity: semigroupIdenity,
    monoidIdentity: monoidIdentity,
    semiringIdentity: semiringIdentity,
    euclideanRingIdentity: euclideanRingIdentity,
    ringIdentity: ringIdentity,
    commutativeRingIdentity: commutativeRingIdentity,
    fieldIdentity: fieldIdentity,
    lazyIdentity: lazyIdentity,
    showIdentity: showIdentity,
    eq1Identity: eq1Identity,
    ord1Identity: ord1Identity,
    functorIdentity: functorIdentity,
    invariantIdentity: invariantIdentity,
    altIdentity: altIdentity,
    applyIdentity: applyIdentity,
    applicativeIdentity: applicativeIdentity,
    bindIdentity: bindIdentity,
    monadIdentity: monadIdentity,
    extendIdentity: extendIdentity,
    comonadIdentity: comonadIdentity,
    foldableIdentity: foldableIdentity,
    traversableIdentity: traversableIdentity
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Lazy":15,"../Control.Monad":54,"../Data.BooleanAlgebra":91,"../Data.Bounded":93,"../Data.CommutativeRing":98,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Field":114,"../Data.Foldable":116,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.HeytingAlgebra":141,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Traversable":209,"../Prelude":263}],143:[function(require,module,exports){
"use strict";

// module Data.Int.Bits

exports.and = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.or = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xor = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],144:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    and: $foreign.and,
    or: $foreign.or,
    xor: $foreign.xor,
    shl: $foreign.shl,
    shr: $foreign.shr,
    zshr: $foreign.zshr,
    complement: $foreign.complement
};

},{"./foreign":143}],145:[function(require,module,exports){
"use strict";

// module Data.Int

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringAsImpl = function (just) {
  return function (nothing) {
    return function (radix) {
      var digits;
      if (radix < 11) {
        digits = "[0-" + (radix - 1).toString() + "]";
      } else if (radix === 11) {
        digits = "[0-9a]";
      } else {
        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
      }
      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

      return function (s) {
        /* jshint bitwise: false */
        if (pattern.test(s)) {
          var i = parseInt(s, radix);
          return (i | 0) === i ? just(i) : nothing;
        } else {
          return nothing;
        }
      };
    };
  };
};

exports.toStringAs = function (radix) {
  return function (i) {
    return i.toString(radix);
  };
};

exports.pow = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return Math.pow(x,y) | 0;
  };
};

},{}],146:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_DivisionRing = require("../Data.DivisionRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Global = require("../Global");
var $$Math = require("../Math");
var Prelude = require("../Prelude");
var Radix = function (x) {
    return x;
};
var Even = (function () {
    function Even() {

    };
    Even.value = new Even();
    return Even;
})();
var Odd = (function () {
    function Odd() {

    };
    Odd.value = new Odd();
    return Odd;
})();
var showParity = new Data_Show.Show(function (v) {
    if (v instanceof Even) {
        return "Even";
    };
    if (v instanceof Odd) {
        return "Odd";
    };
    throw new Error("Failed pattern match at Data.Int line 110, column 1 - line 110, column 35: " + [ v.constructor.name ]);
});
var radix = function (n) {
    if (n >= 2 && n <= 36) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Int line 193, column 1 - line 193, column 28: " + [ n.constructor.name ]);
};
var odd = function (x) {
    return (x & 1) !== 0;
};
var octal = 8;
var hexadecimal = 16;
var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromStringAs(10);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function (x) {
    if (x === Global.infinity) {
        return 0;
    };
    if (x === -Global.infinity) {
        return 0;
    };
    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
        return Data_Bounded.top(Data_Bounded.boundedInt);
    };
    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
        return Data_Bounded.bottom(Data_Bounded.boundedInt);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.fromMaybe(0)(fromNumber(x));
    };
    throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 64, column 29: " + [ x.constructor.name ]);
};
var round = function ($23) {
    return unsafeClamp($$Math.round($23));
};
var floor = function ($24) {
    return unsafeClamp($$Math.floor($24));
};
var even = function (x) {
    return (x & 1) === 0;
};
var parity = function (n) {
    var $14 = even(n);
    if ($14) {
        return Even.value;
    };
    return Odd.value;
};
var eqParity = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Even && y instanceof Even) {
            return true;
        };
        if (x instanceof Odd && y instanceof Odd) {
            return true;
        };
        return false;
    };
});
var ordParity = new Data_Ord.Ord(function () {
    return eqParity;
}, function (x) {
    return function (y) {
        if (x instanceof Even && y instanceof Even) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Even) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Even) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Odd && y instanceof Odd) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Int line 108, column 8 - line 108, column 40: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var semiringParity = new Data_Semiring.Semiring(function (x) {
    return function (y) {
        var $19 = Data_Eq.eq(eqParity)(x)(y);
        if ($19) {
            return Even.value;
        };
        return Odd.value;
    };
}, function (v) {
    return function (v1) {
        if (v instanceof Odd && v1 instanceof Odd) {
            return Odd.value;
        };
        return Even.value;
    };
}, Odd.value, Even.value);
var ringParity = new Data_Ring.Ring(function () {
    return semiringParity;
}, Data_Semiring.add(semiringParity));
var divisionRingParity = new Data_DivisionRing.DivisionRing(function () {
    return ringParity;
}, Control_Category.id(Control_Category.categoryFn));
var decimal = 10;
var commutativeRingParity = new Data_CommutativeRing.CommutativeRing(function () {
    return ringParity;
});
var euclideanRingParity = new Data_EuclideanRing.EuclideanRing(function () {
    return commutativeRingParity;
}, function (v) {
    if (v instanceof Even) {
        return 0;
    };
    if (v instanceof Odd) {
        return 1;
    };
    throw new Error("Failed pattern match at Data.Int line 130, column 1 - line 130, column 53: " + [ v.constructor.name ]);
}, function (x) {
    return function (v) {
        return x;
    };
}, function (v) {
    return function (v1) {
        return Even.value;
    };
});
var fieldParity = new Data_Field.Field(function () {
    return euclideanRingParity;
});
var ceil = function ($25) {
    return unsafeClamp($$Math.ceil($25));
};
var boundedParity = new Data_Bounded.Bounded(function () {
    return ordParity;
}, Even.value, Odd.value);
var binary = 2;
var base36 = 36;
module.exports = {
    fromNumber: fromNumber,
    ceil: ceil,
    floor: floor,
    round: round,
    fromString: fromString,
    radix: radix,
    binary: binary,
    octal: octal,
    decimal: decimal,
    hexadecimal: hexadecimal,
    base36: base36,
    fromStringAs: fromStringAs,
    Even: Even,
    Odd: Odd,
    parity: parity,
    even: even,
    odd: odd,
    eqParity: eqParity,
    ordParity: ordParity,
    showParity: showParity,
    boundedParity: boundedParity,
    semiringParity: semiringParity,
    ringParity: ringParity,
    commutativeRingParity: commutativeRingParity,
    euclideanRingParity: euclideanRingParity,
    divisionRingParity: divisionRingParity,
    fieldParity: fieldParity,
    toNumber: $foreign.toNumber,
    toStringAs: $foreign.toStringAs,
    pow: $foreign.pow
};

},{"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.CommutativeRing":98,"../Data.DivisionRing":107,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Field":114,"../Data.HeytingAlgebra":141,"../Data.Int.Bits":144,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Show":189,"../Global":229,"../Math":244,"../Prelude":263,"./foreign":145}],147:[function(require,module,exports){
/* global exports */
"use strict";

exports.isValid = function (date) {
  return !isNaN(date.getTime());
};

exports.toInstantImpl = function (just) {
  return function (nothing) {
    return function (date) {
      var t = date.getTime();
      return isNaN(t) ? nothing : just(t);
    };
  };
};

exports.jsdate = function (parts) {
  var t = Date.UTC(parts.year, parts.month, parts.day, parts.hour, parts.minute, parts.second, parts.millisecond);
  return new Date(t);
};

exports.jsdateLocal = function (parts) {
  return function () {
    return new Date(parts.year, parts.month, parts.day, parts.hour, parts.minute, parts.second, parts.millisecond);
  };
};

exports.dateMethod = function (method, date) {
  return date[method]();
};

exports.dateMethodEff = function (method, date) {
  return function () {
    return date[method]();
  };
};

exports.parse = function (dateString) {
  return function () {
    return new Date(dateString);
  };
};

},{}],148:[function(require,module,exports){

// | A module providing a type and operations for the native JavaScript `Date`
// | object.
// |
// | The `JSDate` type and associated functions are provided for interop
// | purposes with JavaScript, but for working with dates in PureScript it is
// | recommended that `DateTime` representation is used instead - `DateTime`
// | offers greater type safety, a more PureScript-friendly interface, and has
// | a `Generic` instance.
"use strict";
var $foreign = require("./foreign");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Date = require("../Data.Date");
var Data_Date_Component = require("../Data.Date.Component");
var Data_DateTime = require("../Data.DateTime");
var Data_DateTime_Instant = require("../Data.DateTime.Instant");
var Data_Enum = require("../Data.Enum");
var Data_Foreign = require("../Data.Foreign");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Ring = require("../Data.Ring");
var Data_Time = require("../Data.Time");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Prelude = require("../Prelude");

// | Returns the date as a string using the UTC timezone.
var toUTCString = function (dt) {
    return $foreign.dateMethod("toUTCString", dt);
};

// | Returns the time portion of a date value as a human-readable string.
var toTimeString = function (dt) {
    return $foreign.dateMethod("toTimeString", dt);
};

// | Returns a string representing for a date value.
var toString = function (dt) {
    return $foreign.dateMethod("toString", dt);
};

// | Attempts to construct an `Instant` for a `JSDate`. `Nothing` is returned
// | only when the date value is an invalid date.
var toInstant = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(function ($4) {
    return Data_DateTime_Instant.instant(Data_Time_Duration.Milliseconds($4));
})($foreign.toInstantImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value));

// | Converts a date value to an ISO 8601 Extended format date string.
var toISOString = function (dt) {
    return $foreign.dateMethodEff("toISOString", dt);
};

// | Attempts to construct a `DateTime` value for a `JSDate`. `Nothing` is
// | returned only when the date value is an invalid date.
var toDateTime = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime))(toInstant);

// | Returns the date portion of a date value as a human-readable string.
var toDateString = function (dt) {
    return $foreign.dateMethod("toDateString", dt);
};

// | Attempts to construct a `Date` value for a `JSDate`, ignoring any time
// | component of the `JSDate`. `Nothing` is returned only when the date value
// | is an invalid date.
var toDate = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime.date))(toDateTime);

// | Attempts to read a `Foreign` value as a `JSDate`.
var readDate = Data_Foreign.unsafeReadTagged("Date");

// | Returns the seconds for a date, according to UTC.
var getUTCSeconds = function (dt) {
    return $foreign.dateMethod("getUTCSeconds", dt);
};

// | Returns the month for a date, according to UTC.
var getUTCMonth = function (dt) {
    return $foreign.dateMethod("getUTCMonth", dt);
};

// | Returns the minutes for a date, according to UTC.
var getUTCMinutes = function (dt) {
    return $foreign.dateMethod("getUTCMinutes", dt);
};

// | Returns the milliseconds for a date, according to UTC.
var getUTCMilliseconds = function (dt) {
    return $foreign.dateMethod("getUTCMilliseconds", dt);
};

// | Returns the hours for a date, according to UTC.
var getUTCHours = function (dt) {
    return $foreign.dateMethod("getUTCHours", dt);
};

// | Returns the year for a date, according to UTC.
var getUTCFullYear = function (dt) {
    return $foreign.dateMethod("getUTCFullYear", dt);
};

// | Returns the day of the week for a date, according to UTC.
var getUTCDay = function (dt) {
    return $foreign.dateMethod("getUTCDay", dt);
};

// | Returns the day of the month for a date, according to UTC.
var getUTCDate = function (dt) {
    return $foreign.dateMethod("getUTCDate", dt);
};

// | Returns the time-zone offset for a date, according to the current machine's
// | date/time locale.
var getTimezoneOffset = function (dt) {
    return $foreign.dateMethodEff("getTimezoneOffset", dt);
};

// | Returns the date as a number of milliseconds since 1970-01-01 00:00:00 UTC.
var getTime = function (dt) {
    return $foreign.dateMethod("getTime", dt);
};

// | Returns the seconds for a date, according to the current machine's
// | date/time locale.
var getSeconds = function (dt) {
    return $foreign.dateMethodEff("getSeconds", dt);
};

// | Returns the month for a date, according to the current machine's
// | date/time locale.
var getMonth = function (dt) {
    return $foreign.dateMethodEff("getMonth", dt);
};

// | Returns the minutes for a date, according to the current machine's
// | date/time locale.
var getMinutes = function (dt) {
    return $foreign.dateMethodEff("getMinutes", dt);
};

// | Returns the milliseconds for a date, according to the current machine's
// | date/time locale.
var getMilliseconds = function (dt) {
    return $foreign.dateMethodEff("getMilliseconds", dt);
};

// | Returns the hour for a date, according to the current machine's date/time
// | locale.
var getHours = function (dt) {
    return $foreign.dateMethodEff("getHours", dt);
};

// | Returns the year for a date, according to the current machine's date/time
// | locale.
var getFullYear = function (dt) {
    return $foreign.dateMethodEff("getFullYear", dt);
};

// | Returns the day of the week for a date, according to the current
// | machine's date/time locale.
var getDay = function (dt) {
    return $foreign.dateMethodEff("getDay", dt);
};

// | Returns the day of the month for a date, according to the current
// | machine's date/time locale.
var getDate = function (dt) {
    return $foreign.dateMethodEff("getDate", dt);
};

// | Converts a `DateTime` value into a native JavaScript date object. The
// | resulting date value is guaranteed to be valid.
var fromDateTime = function (v) {
    return $foreign.jsdate({
        year: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0))),
        month: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)) - 1 | 0),
        day: Data_Int.toNumber(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0))),
        hour: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1))),
        minute: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1))),
        second: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1))),
        millisecond: Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1)))
    });
};
module.exports = {
    readDate: readDate,
    fromDateTime: fromDateTime,
    toDateTime: toDateTime,
    toDate: toDate,
    toInstant: toInstant,
    getTime: getTime,
    getUTCDate: getUTCDate,
    getUTCDay: getUTCDay,
    getUTCFullYear: getUTCFullYear,
    getUTCHours: getUTCHours,
    getUTCMilliseconds: getUTCMilliseconds,
    getUTCMinutes: getUTCMinutes,
    getUTCMonth: getUTCMonth,
    getUTCSeconds: getUTCSeconds,
    getDate: getDate,
    getDay: getDay,
    getFullYear: getFullYear,
    getHours: getHours,
    getMilliseconds: getMilliseconds,
    getMinutes: getMinutes,
    getMonth: getMonth,
    getSeconds: getSeconds,
    getTimezoneOffset: getTimezoneOffset,
    toDateString: toDateString,
    toISOString: toISOString,
    toString: toString,
    toTimeString: toTimeString,
    toUTCString: toUTCString,
    isValid: $foreign.isValid,
    jsdate: $foreign.jsdate,
    jsdateLocal: $foreign.jsdateLocal,
    parse: $foreign.parse
};

},{"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Exception":28,"../Control.Semigroupoid":60,"../Data.Date":101,"../Data.Date.Component":99,"../Data.DateTime":105,"../Data.DateTime.Instant":103,"../Data.Enum":109,"../Data.Foreign":121,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.Int":146,"../Data.Maybe":156,"../Data.Ring":181,"../Data.Time":205,"../Data.Time.Component":203,"../Data.Time.Duration":204,"../Prelude":263,"./foreign":147}],149:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var zipWith = function (f) {
    return function (v) {
        return function (v1) {
            return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));
        };
    };
};
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList)(dictApplicative.Apply0())(zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var wrappedOperation2 = function (name) {
    return function (f) {
        return function (v) {
            return function (v1) {
                var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));
                if (v2 instanceof Data_List_Types.Cons) {
                    return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);
                };
                if (v2 instanceof Data_List_Types.Nil) {
                    return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
                };
                throw new Error("Failed pattern match at Data.List.NonEmpty line 101, column 3 - line 103, column 81: " + [ v2.constructor.name ]);
            };
        };
    };
};
var wrappedOperation = function (name) {
    return function (f) {
        return function (v) {
            var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));
            if (v1 instanceof Data_List_Types.Cons) {
                return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 88, column 3 - line 90, column 81: " + [ v1.constructor.name ]);
        };
    };
};
var updateAt = function (i) {
    return function (a) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($156) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($156));
                })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 187, column 1 - line 187, column 75: " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
        };
    };
};
var unzip = function (ts) {
    return new Data_Tuple.Tuple(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.fst)(ts), Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.snd)(ts));
};
var unsnoc = function (v) {
    var v1 = Data_List.unsnoc(v.value1);
    if (v1 instanceof Data_Maybe.Nothing) {
        return {
            init: Data_List_Types.Nil.value,
            last: v.value0
        };
    };
    if (v1 instanceof Data_Maybe.Just) {
        return {
            init: new Data_List_Types.Cons(v.value0, v1.value0.init),
            last: v1.value0.last
        };
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty line 149, column 35 - line 151, column 50: " + [ v1.constructor.name ]);
};
var unionBy = function ($157) {
    return wrappedOperation2("unionBy")(Data_List.unionBy($157));
};
var union = function (dictEq) {
    return wrappedOperation2("union")(Data_List.union(dictEq));
};
var uncons = function (v) {
    return {
        head: v.value0,
        tail: v.value1
    };
};
var toList = function (v) {
    return new Data_List_Types.Cons(v.value0, v.value1);
};
var toUnfoldable = function (dictUnfoldable) {
    return function ($158) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
                return new Data_Tuple.Tuple(rec.head, rec.tail);
            })(Data_List.uncons(xs));
        })(toList($158));
    };
};
var tail = function (v) {
    return v.value1;
};
var sortBy = function ($159) {
    return wrappedOperation("sortBy")(Data_List.sortBy($159));
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var snoc = function (v) {
    return function (y) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
    };
};
var singleton = function ($160) {
    return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($160));
};
var reverse = wrappedOperation("reverse")(Data_List.reverse);
var nubBy = function ($161) {
    return wrappedOperation("nubBy")(Data_List.nubBy($161));
};
var nub = function (dictEq) {
    return wrappedOperation("nub")(Data_List.nub(dictEq));
};
var modifyAt = function (i) {
    return function (f) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($162) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($162));
                })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 192, column 1 - line 192, column 82: " + [ i.constructor.name, f.constructor.name, v.constructor.name ]);
        };
    };
};
var mapWithIndex = function ($163) {
    return wrappedOperation("mapWithIndex")(Data_List.mapWithIndex($163));
};
var lift = function (f) {
    return function (v) {
        return f(new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var mapMaybe = function ($164) {
    return lift(Data_List.mapMaybe($164));
};
var partition = function ($165) {
    return lift(Data_List.partition($165));
};
var span = function ($166) {
    return lift(Data_List.span($166));
};
var take = function ($167) {
    return lift(Data_List.take($167));
};
var takeWhile = function ($168) {
    return lift(Data_List.takeWhile($168));
};
var length = function (v) {
    return 1 + Data_List.length(v.value1) | 0;
};
var last = function (v) {
    return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));
};
var intersectBy = function ($169) {
    return wrappedOperation2("intersectBy")(Data_List.intersectBy($169));
};
var intersect = function (dictEq) {
    return wrappedOperation2("intersect")(Data_List.intersect(dictEq));
};
var insertAt = function (i) {
    return function (a) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($170) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($170));
                })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 182, column 1 - line 182, column 75: " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
        };
    };
};
var init = function (v) {
    return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {
        return new Data_List_Types.Cons(v.value0, v1);
    })(Data_List.init(v.value1));
};
var index = function (v) {
    return function (i) {
        if (i === 0) {
            return new Data_Maybe.Just(v.value0);
        };
        if (Data_Boolean.otherwise) {
            return Data_List.index(v.value1)(i - 1 | 0);
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 156, column 1 - line 156, column 52: " + [ v.constructor.name, i.constructor.name ]);
    };
};
var head = function (v) {
    return v.value0;
};
var groupBy = function ($171) {
    return wrappedOperation("groupBy")(Data_List.groupBy($171));
};
var group$prime = function (dictOrd) {
    return wrappedOperation("group'")(Data_List["group'"](dictOrd));
};
var group = function (dictEq) {
    return wrappedOperation("group")(Data_List.group(dictEq));
};
var fromList = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty line 117, column 1 - line 117, column 57: " + [ v.constructor.name ]);
};
var fromFoldable = function (dictFoldable) {
    return function ($172) {
        return fromList(Data_List.fromFoldable(dictFoldable)($172));
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return function (v) {
                return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0))(function (a$prime) {
                    return Data_List.foldM(dictMonad)(f)(a$prime)(v.value1);
                });
            };
        };
    };
};
var findLastIndex = function (f) {
    return function (v) {
        var v1 = Data_List.findLastIndex(f)(v.value1);
        if (v1 instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v1.value0 + 1 | 0);
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            if (f(v.value0)) {
                return new Data_Maybe.Just(0);
            };
            if (Data_Boolean.otherwise) {
                return Data_Maybe.Nothing.value;
            };
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 176, column 3 - line 180, column 29: " + [ v1.constructor.name ]);
    };
};
var findIndex = function (f) {
    return function (v) {
        if (f(v.value0)) {
            return new Data_Maybe.Just(0);
        };
        if (Data_Boolean.otherwise) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                return v1 + 1 | 0;
            })(Data_List.findIndex(f)(v.value1));
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 169, column 1 - line 169, column 69: " + [ f.constructor.name, v.constructor.name ]);
    };
};
var filterM = function (dictMonad) {
    return function ($173) {
        return lift(Data_List.filterM(dictMonad)($173));
    };
};
var filter = function ($174) {
    return lift(Data_List.filter($174));
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function ($175) {
    return lift(Data_List.dropWhile($175));
};
var drop = function ($176) {
    return lift(Data_List.drop($176));
};
var cons = function (y) {
    return function (v) {
        return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindNonEmptyList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Types.bindNonEmptyList)(v)(Control_Category.id(Control_Category.categoryFn));
};
var catMaybes = lift(Data_List.catMaybes);
var appendFoldable = function (dictFoldable) {
    return function (v) {
        return function (ys) {
            return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value1)(Data_List.fromFoldable(dictFoldable)(ys)));
        };
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    fromList: fromList,
    toList: toList,
    singleton: singleton,
    length: length,
    cons: cons,
    snoc: snoc,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    appendFoldable: appendFoldable,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    take: take,
    takeWhile: takeWhile,
    drop: drop,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    foldM: foldM
};

},{"../Control.Bind":10,"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.List":151,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Semigroup.Traversable":183,"../Data.Semiring":187,"../Data.Traversable":209,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Partial.Unsafe":253,"../Prelude":263}],150:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Prelude = require("../Prelude");
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var NonEmptyList = function (x) {
    return x;
};
var toList = function (v) {
    return new Cons(v.value0, v.value1);
};
var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
    return n;
}, NonEmptyList);
var nelCons = function (a) {
    return function (v) {
        return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));
    };
};
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return function ($158) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($158));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    var go = function ($copy_b) {
        return function ($copy_v) {
            var $tco_var_b = $copy_b;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(b, v) {
                if (v instanceof Nil) {
                    $tco_done = true;
                    return b;
                };
                if (v instanceof Cons) {
                    $tco_var_b = f(b)(v.value0);
                    $copy_v = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List.Types line 81, column 12 - line 83, column 30: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_b, $copy_v);
            };
            return $tco_result;
        };
    };
    return go;
}, function (f) {
    return function (b) {
        var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
        return function ($159) {
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($159));
        };
    };
});
var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableList;
}, function (dictMonoid) {
    return function (f) {
        return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
            return function (acc) {
                return function ($160) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)($160));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    return function (acc) {
        return function ($161) {
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v) {
                return function (a) {
                    return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
                };
            })(new Data_Tuple.Tuple(0, acc))($161));
        };
    };
}, function (f) {
    return function (b) {
        return function (xs) {
            var v = (function () {
                var rev = Data_Foldable.foldl(foldableList)(function (v1) {
                    return function (a) {
                        return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
                    };
                });
                return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
            })();
            return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
                return function (a) {
                    return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
                };
            })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
        };
    };
});
var functorList = new Data_Functor.Functor(function (f) {
    return Data_Foldable.foldr(foldableList)(function (x) {
        return function (acc) {
            return new Cons(f(x), acc);
        };
    })(Nil.value);
});
var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorList;
}, function (f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
        return function (x) {
            return function (acc) {
                return new Cons(f(i)(x), acc);
            };
        };
    })(Nil.value);
});
var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
    return function (ys) {
        return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
    };
});
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
    return function (as$prime) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
    };
});
var showList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Nil) {
            return "Nil";
        };
        return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
    });
};
var showNonEmptyList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
    });
};
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function (f) {
        return function ($162) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($163) {
                    return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f($163));
                };
            })(Control_Applicative.pure(dictApplicative)(Nil.value))($162));
        };
    };
});
var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexList;
}, function () {
    return functorWithIndexList;
}, function () {
    return traversableList;
}, function (dictApplicative) {
    return function (f) {
        var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
        return function ($164) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(rev)(Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
                return function (acc) {
                    return function ($165) {
                        return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f(i)($165));
                    };
                };
            })(Control_Applicative.pure(dictApplicative)(Nil.value))($164));
        };
    };
});
var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function ($copy_source) {
            return function ($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value0.value1;
                        $copy_memo = new Cons(v.value0.value0, memo);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List.Types line 105, column 22 - line 107, column 52: " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
                };
                return $tco_result;
            };
        };
        return go(b)(Nil.value);
    };
});
var foldable1NonEmptyList = new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableNonEmptyList;
}, function (dictSemigroup) {
    return function (v) {
        return Data_Foldable.foldl(foldableList)(Data_Semigroup.append(dictSemigroup))(v.value0)(v.value1);
    };
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($166) {
                    return Data_Semigroup.append(dictSemigroup)(acc)(f($166));
                };
            })(f(v.value0))(v.value1);
        };
    };
});
var extendNonEmptyList = new Control_Extend.Extend(function () {
    return functorNonEmptyList;
}, function (f) {
    return function (v) {
        var go = function (a) {
            return function (v1) {
                return {
                    val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),
                    acc: new Cons(a, v1.acc)
                };
            };
        };
        return new Data_NonEmpty.NonEmpty(f(v), (Data_Foldable.foldr(foldableList)(go)({
            val: Nil.value,
            acc: Nil.value
        })(v.value1)).val);
    };
});
var extendList = new Control_Extend.Extend(function () {
    return functorList;
}, function (f) {
    return function (v) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            var go = function (a$prime) {
                return function (v1) {
                    var acc$prime = new Cons(a$prime, v1.acc);
                    return {
                        val: new Cons(f(acc$prime), v1.val),
                        acc: acc$prime
                    };
                };
            };
            return new Cons(f(v), (Data_Foldable.foldr(foldableList)(go)({
                val: Nil.value,
                acc: Nil.value
            })(v.value1)).val);
        };
        throw new Error("Failed pattern match at Data.List.Types line 145, column 1 - line 145, column 35: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    return function ($copy_v2) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, v2) {
                            if (!v2) {
                                $tco_done = true;
                                return false;
                            };
                            if (v instanceof Nil && v1 instanceof Nil) {
                                $tco_done = true;
                                return v2;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                                return;
                            };
                            $tco_done = true;
                            return false;
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                        };
                        return $tco_result;
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    };
});
var eqList = function (dictEq) {
    return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};
var eqNonEmptyList = function (dictEq) {
    return Data_NonEmpty.eqNonEmpty(eq1List)(dictEq);
};
var ord1List = new Data_Ord.Ord1(function () {
    return eq1List;
}, function (dictOrd) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.EQ.value;
                        };
                        if (v instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.LT.value;
                        };
                        if (v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.GT.value;
                        };
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_var_v = v.value1;
                                $copy_v1 = v1.value1;
                                return;
                            };
                            $tco_done = true;
                            return v2;
                        };
                        throw new Error("Failed pattern match at Data.List.Types line 55, column 5 - line 55, column 20: " + [ v.constructor.name, v1.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v, $copy_v1);
                    };
                    return $tco_result;
                };
            };
            return go(xs)(ys);
        };
    };
});
var ordList = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqList(dictOrd.Eq0());
    }, Data_Ord.compare1(ord1List)(dictOrd));
};
var ordNonEmptyList = function (dictOrd) {
    return Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd);
};
var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
    return extendNonEmptyList;
}, function (v) {
    return v.value0;
});
var applyList = new Control_Apply.Apply(function () {
    return functorList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types line 120, column 1 - line 120, column 33: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
    return functorNonEmptyList;
}, function (v) {
    return function (v1) {
        return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
    };
});
var bindList = new Control_Bind.Bind(function () {
    return applyList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types line 127, column 1 - line 127, column 31: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
    return applyNonEmptyList;
}, function (v) {
    return function (f) {
        var v1 = f(v.value0);
        return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(Control_Bind.bind(bindList)(v.value1)(function ($167) {
            return toList(f($167));
        })));
    };
});
var applicativeList = new Control_Applicative.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Control_Monad.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var altNonEmptyList = new Control_Alt.Alt(function () {
    return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return applicativeList;
}, function () {
    return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
    return alternativeList;
}, function () {
    return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
    return applyNonEmptyList;
}, function ($168) {
    return NonEmptyList(Data_NonEmpty.singleton(plusList)($168));
});
var monadNonEmptyList = new Control_Monad.Monad(function () {
    return applicativeNonEmptyList;
}, function () {
    return bindNonEmptyList;
});
var traversable1NonEmptyList = new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1NonEmptyList;
}, function () {
    return traversableNonEmptyList;
}, function (dictApply) {
    return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApply) {
    return function (f) {
        return function (v) {
            return Data_Functor.mapFlipped(dictApply.Functor0())(Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($169) {
                    return Control_Apply.lift2(dictApply)(Data_Function.flip(nelCons))(acc)(f($169));
                };
            })(Data_Functor.map(dictApply.Functor0())(Control_Applicative.pure(applicativeNonEmptyList))(f(v.value0)))(v.value1))(function (v1) {
                return Data_Foldable.foldl(foldableList)(Data_Function.flip(nelCons))(Control_Applicative.pure(applicativeNonEmptyList)(v1.value0))(v1.value1);
            });
        };
    };
});
module.exports = {
    Nil: Nil,
    Cons: Cons,
    NonEmptyList: NonEmptyList,
    toList: toList,
    nelCons: nelCons,
    showList: showList,
    eqList: eqList,
    eq1List: eq1List,
    ordList: ordList,
    ord1List: ord1List,
    semigroupList: semigroupList,
    monoidList: monoidList,
    functorList: functorList,
    functorWithIndexList: functorWithIndexList,
    foldableList: foldableList,
    foldableWithIndexList: foldableWithIndexList,
    unfoldableList: unfoldableList,
    traversableList: traversableList,
    traversableWithIndexList: traversableWithIndexList,
    applyList: applyList,
    applicativeList: applicativeList,
    bindList: bindList,
    monadList: monadList,
    altList: altList,
    plusList: plusList,
    alternativeList: alternativeList,
    monadZeroList: monadZeroList,
    monadPlusList: monadPlusList,
    extendList: extendList,
    newtypeNonEmptyList: newtypeNonEmptyList,
    eqNonEmptyList: eqNonEmptyList,
    ordNonEmptyList: ordNonEmptyList,
    showNonEmptyList: showNonEmptyList,
    functorNonEmptyList: functorNonEmptyList,
    applyNonEmptyList: applyNonEmptyList,
    applicativeNonEmptyList: applicativeNonEmptyList,
    bindNonEmptyList: bindNonEmptyList,
    monadNonEmptyList: monadNonEmptyList,
    altNonEmptyList: altNonEmptyList,
    extendNonEmptyList: extendNonEmptyList,
    comonadNonEmptyList: comonadNonEmptyList,
    semigroupNonEmptyList: semigroupNonEmptyList,
    foldableNonEmptyList: foldableNonEmptyList,
    traversableNonEmptyList: traversableNonEmptyList,
    foldable1NonEmptyList: foldable1NonEmptyList,
    traversable1NonEmptyList: traversable1NonEmptyList
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Foldable":116,"../Data.FoldableWithIndex":117,"../Data.Function":125,"../Data.Functor":130,"../Data.FunctorWithIndex":132,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Semigroup.Traversable":183,"../Data.Semiring":187,"../Data.Show":189,"../Data.Traversable":209,"../Data.TraversableWithIndex":210,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Prelude":263}],151:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Pattern = function (x) {
    return x;
};
var updateAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(updateAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
    return function (v1) {
        return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
    };
})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));
var uncons = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just({
            head: v.value0,
            tail: v.value1
        });
    };
    throw new Error("Failed pattern match at Data.List line 259, column 1 - line 259, column 66: " + [ v.constructor.name ]);
};
var toUnfoldable = function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value1);
    };
    throw new Error("Failed pattern match at Data.List line 245, column 1 - line 245, column 43: " + [ v.constructor.name ]);
};
var stripPrefix = function (dictEq) {
    return function (v) {
        return function (s) {
            var go = function (prefix) {
                return function (input) {
                    if (prefix instanceof Data_List_Types.Cons && (input instanceof Data_List_Types.Cons && Data_Eq.eq(dictEq)(prefix.value0)(input.value0))) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
                            a: prefix.value1,
                            b: input.value1
                        }));
                    };
                    if (prefix instanceof Data_List_Types.Nil) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
                    };
                    return Data_Maybe.Nothing.value;
                };
            };
            return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
        };
    };
};
var span = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
            var v2 = span(v)(v1.value1);
            return {
                init: new Data_List_Types.Cons(v1.value0, v2.init),
                rest: v2.rest
            };
        };
        return {
            init: Data_List_Types.Nil.value,
            rest: v1
        };
    };
};
var snoc = function (xs) {
    return function (x) {
        return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
    };
};
var singleton = function (a) {
    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
};
var sortBy = function (cmp) {
    var merge = function (v) {
        return function (v1) {
            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
                    return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
                };
                if (Data_Boolean.otherwise) {
                    return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
                };
            };
            if (v instanceof Data_List_Types.Nil) {
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return v;
            };
            throw new Error("Failed pattern match at Data.List line 473, column 3 - line 473, column 38: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
    var mergePairs = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
        };
        return v;
    };
    var mergeAll = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return v.value0;
            };
            $copy_v = mergePairs(v);
            return;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    var sequences = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
            };
            if (Data_Boolean.otherwise) {
                return ascending(v.value1.value0)(function (v1) {
                    return new Data_List_Types.Cons(v.value0, v1);
                })(v.value1.value1);
            };
        };
        return singleton(v);
    };
    var descending = function ($copy_a) {
        return function ($copy_as) {
            return function ($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = new Data_List_Types.Cons(a, as);
                        $copy_v = v.value1;
                        return;
                    };
                    $tco_done = true;
                    return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                };
                return $tco_result;
            };
        };
    };
    var ascending = function ($copy_a) {
        return function ($copy_as) {
            return function ($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = function (ys) {
                            return as(new Data_List_Types.Cons(a, ys));
                        };
                        $copy_v = v.value1;
                        return;
                    };
                    $tco_done = true;
                    return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                };
                return $tco_result;
            };
        };
    };
    return function ($333) {
        return mergeAll(sequences($333));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var showPattern = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Pattern " + (Data_Show.show(Data_List_Types.showList(dictShow))(v) + ")");
    });
};
var reverse = (function () {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return acc;
                };
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List line 368, column 3 - line 368, column 19: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var take = (function () {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            return function ($copy_v1) {
                var $tco_var_acc = $copy_acc;
                var $tco_var_v = $copy_v;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(acc, v, v1) {
                    if (v < 1) {
                        $tco_done = true;
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Cons) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $tco_var_v = v - 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List line 520, column 3 - line 520, column 35: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
                };
                return $tco_result;
            };
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var takeWhile = function (p) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                };
                $tco_done = true;
                return reverse(acc);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var unsnoc = function (lst) {
    var go = function ($copy_v) {
        return function ($copy_acc) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, acc) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return new Data_Maybe.Just({
                        revInit: acc,
                        last: v.value0
                    });
                };
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_v = v.value1;
                    $copy_acc = new Data_List_Types.Cons(v.value0, acc);
                    return;
                };
                throw new Error("Failed pattern match at Data.List line 270, column 3 - line 270, column 23: " + [ v.constructor.name, acc.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_acc);
            };
            return $tco_result;
        };
    };
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
        return {
            init: reverse(h.revInit),
            last: h.last
        };
    })(go(lst)(Data_List_Types.Nil.value));
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    return function ($copy_acc) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, acc) {
                            if (v instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            };
                            if (v1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            };
                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                                return;
                            };
                            throw new Error("Failed pattern match at Data.List line 708, column 3 - line 708, column 21: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
                        };
                        return $tco_result;
                    };
                };
            };
            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var range = function (start) {
    return function (end) {
        if (start === end) {
            return singleton(start);
        };
        if (Data_Boolean.otherwise) {
            var go = function ($copy_s) {
                return function ($copy_e) {
                    return function ($copy_step) {
                        return function ($copy_rest) {
                            var $tco_var_s = $copy_s;
                            var $tco_var_e = $copy_e;
                            var $tco_var_step = $copy_step;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(s, e, step, rest) {
                                if (s === e) {
                                    $tco_done = true;
                                    return new Data_List_Types.Cons(s, rest);
                                };
                                if (Data_Boolean.otherwise) {
                                    $tco_var_s = s + step | 0;
                                    $tco_var_e = e;
                                    $tco_var_step = step;
                                    $copy_rest = new Data_List_Types.Cons(s, rest);
                                    return;
                                };
                                throw new Error("Failed pattern match at Data.List line 148, column 3 - line 149, column 65: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                            };
                            while (!$tco_done) {
                                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
                            };
                            return $tco_result;
                        };
                    };
                };
            };
            return go(end)(start)((function () {
                var $219 = start > end;
                if ($219) {
                    return 1;
                };
                return -1 | 0;
            })())(Data_List_Types.Nil.value);
        };
        throw new Error("Failed pattern match at Data.List line 144, column 1 - line 144, column 32: " + [ start.constructor.name, end.constructor.name ]);
    };
};
var partition = function (p) {
    return function (xs) {
        var select = function (x) {
            return function (v) {
                var $222 = p(x);
                if ($222) {
                    return {
                        no: v.no,
                        yes: new Data_List_Types.Cons(x, v.yes)
                    };
                };
                return {
                    no: new Data_List_Types.Cons(x, v.no),
                    yes: v.yes
                };
            };
        };
        return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
            no: Data_List_Types.Nil.value,
            yes: Data_List_Types.Nil.value
        })(xs);
    };
};
var $$null = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return true;
    };
    return false;
};
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexList);
var mapMaybe = function (f) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    var v1 = f(v.value0);
                    if (v1 instanceof Data_Maybe.Nothing) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    };
                    if (v1 instanceof Data_Maybe.Just) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $copy_v = v.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List line 419, column 5 - line 421, column 32: " + [ v1.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.List line 417, column 3 - line 417, column 27: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var manyRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (p) {
            var go = function (acc) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
                    return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
                        return new Data_List_Types.Cons(v1, acc);
                    })(function (v1) {
                        return reverse(acc);
                    })(v));
                });
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
        };
    };
};
var someRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
        };
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
        };
    };
};
var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
    return function (v) {
        return acc + 1 | 0;
    };
})(0);
var last = function ($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value0);
        };
        if (v instanceof Data_List_Types.Cons) {
            $copy_v = v.value1;
            return;
        };
        $tco_done = true;
        return Data_Maybe.Nothing.value;
    };
    while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
    };
    return $tco_result;
};
var insertBy = function (v) {
    return function (x) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return singleton(x);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                var v2 = v(x)(v1.value0);
                if (v2 instanceof Data_Ordering.GT) {
                    return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
                };
                return new Data_List_Types.Cons(x, v1);
            };
            throw new Error("Failed pattern match at Data.List line 216, column 1 - line 216, column 68: " + [ v.constructor.name, x.constructor.name, v1.constructor.name ]);
        };
    };
};
var insertAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(insertAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var init = function (lst) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return v.init;
    })(unsnoc(lst));
};
var index = function ($copy_v) {
    return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Data_List_Types.Cons && v1 === 0) {
                $tco_done = true;
                return new Data_Maybe.Just(v.value0);
            };
            if (v instanceof Data_List_Types.Cons) {
                $tco_var_v = v.value1;
                $copy_v1 = v1 - 1 | 0;
                return;
            };
            throw new Error("Failed pattern match at Data.List line 281, column 1 - line 281, column 44: " + [ v.constructor.name, v1.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
        };
        return $tco_result;
    };
};
var head = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.List line 230, column 1 - line 230, column 22: " + [ v.constructor.name ]);
};
var transpose = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
        return transpose(v.value1);
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
    };
    throw new Error("Failed pattern match at Data.List line 742, column 1 - line 742, column 54: " + [ v.constructor.name ]);
};
var groupBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            var v2 = span(v(v1.value0))(v1.value1);
            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
        };
        throw new Error("Failed pattern match at Data.List line 605, column 1 - line 605, column 80: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var group = function (dictEq) {
    return groupBy(Data_Eq.eq(dictEq));
};
var group$prime = function (dictOrd) {
    return function ($334) {
        return group(dictOrd.Eq0())(sort(dictOrd)($334));
    };
};
var fromFoldable = function (dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};
var foldM = function (dictMonad) {
    return function (v) {
        return function (a) {
            return function (v1) {
                if (v1 instanceof Data_List_Types.Nil) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(a);
                };
                if (v1 instanceof Data_List_Types.Cons) {
                    return Control_Bind.bind(dictMonad.Bind1())(v(a)(v1.value0))(function (a$prime) {
                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
                    });
                };
                throw new Error("Failed pattern match at Data.List line 753, column 1 - line 753, column 72: " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Data_List_Types.Cons) {
                    if (fn(v1.value0)) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v);
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_v = v + 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    };
                };
                if (v1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List line 301, column 3 - line 301, column 35: " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
            return (length(xs) - 1 | 0) - v | 0;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                return Control_Bind.bind(dictMonad.Bind1())(v(v1.value0))(function (v2) {
                    return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
                        return Control_Applicative.pure(dictMonad.Applicative0())((function () {
                            if (v2) {
                                return new Data_List_Types.Cons(v1.value0, v3);
                            };
                            return v3;
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List line 403, column 1 - line 403, column 75: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (p(v.value0)) {
                        $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                        $copy_v = v.value1;
                        return;
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    };
                };
                throw new Error("Failed pattern match at Data.List line 390, column 3 - line 390, column 27: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var intersectBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
            })(v1);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var nubBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(v1.value0, nubBy(v)(filter(function (y) {
                return !v(v1.value0)(y);
            })(v1.value1)));
        };
        throw new Error("Failed pattern match at Data.List line 634, column 1 - line 634, column 59: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var eqPattern = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(Data_List_Types.eqList(dictEq))(x)(y);
        };
    });
};
var ordPattern = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqPattern(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(x)(y);
        };
    });
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                $copy_v = v.value1;
                return;
            };
            $tco_done = true;
            return v;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return go;
};
var dropEnd = function (n) {
    return function (xs) {
        return take(length(xs) - n | 0)(xs);
    };
};
var drop = function ($copy_v) {
    return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v < 1) {
                $tco_done = true;
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_List_Types.Nil.value;
            };
            if (v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v - 1 | 0;
                $copy_v1 = v1.value1;
                return;
            };
            throw new Error("Failed pattern match at Data.List line 543, column 1 - line 543, column 42: " + [ v.constructor.name, v1.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
        };
        return $tco_result;
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start | 0)(drop(start)(xs));
        };
    };
};
var takeEnd = function (n) {
    return function (xs) {
        return drop(length(xs) - n | 0)(xs);
    };
};
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
                return v2.value1;
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
            };
            throw new Error("Failed pattern match at Data.List line 661, column 1 - line 661, column 67: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var deleteAt = function (v) {
    return function (v1) {
        if (v === 0 && v1 instanceof Data_List_Types.Cons) {
            return new Data_Maybe.Just(v1.value1);
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                return new Data_List_Types.Cons(v1.value0, v2);
            })(deleteAt(v - 1 | 0)(v1.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.id(Control_Category.categoryFn));
};
var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
var alterAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return Data_Maybe.Just.create((function () {
                    var v3 = v1(v2.value0);
                    if (v3 instanceof Data_Maybe.Nothing) {
                        return v2.value1;
                    };
                    if (v3 instanceof Data_Maybe.Just) {
                        return new Data_List_Types.Cons(v3.value0, v2.value1);
                    };
                    throw new Error("Failed pattern match at Data.List line 352, column 3 - line 354, column 23: " + [ v3.constructor.name ]);
                })());
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(alterAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function ($335) {
            return Data_Maybe.Just.create(f($335));
        });
    };
};
module.exports = {
    toUnfoldable: toUnfoldable,
    fromFoldable: fromFoldable,
    singleton: singleton,
    range: range,
    some: some,
    someRec: someRec,
    many: many,
    manyRec: manyRec,
    "null": $$null,
    length: length,
    snoc: snoc,
    insert: insert,
    insertBy: insertBy,
    head: head,
    last: last,
    tail: tail,
    init: init,
    uncons: uncons,
    unsnoc: unsnoc,
    index: index,
    elemIndex: elemIndex,
    elemLastIndex: elemLastIndex,
    findIndex: findIndex,
    findLastIndex: findLastIndex,
    insertAt: insertAt,
    deleteAt: deleteAt,
    updateAt: updateAt,
    modifyAt: modifyAt,
    alterAt: alterAt,
    reverse: reverse,
    concat: concat,
    concatMap: concatMap,
    filter: filter,
    filterM: filterM,
    mapMaybe: mapMaybe,
    catMaybes: catMaybes,
    mapWithIndex: mapWithIndex,
    sort: sort,
    sortBy: sortBy,
    Pattern: Pattern,
    stripPrefix: stripPrefix,
    slice: slice,
    take: take,
    takeEnd: takeEnd,
    takeWhile: takeWhile,
    drop: drop,
    dropEnd: dropEnd,
    dropWhile: dropWhile,
    span: span,
    group: group,
    "group'": group$prime,
    groupBy: groupBy,
    partition: partition,
    nub: nub,
    nubBy: nubBy,
    union: union,
    unionBy: unionBy,
    "delete": $$delete,
    deleteBy: deleteBy,
    difference: difference,
    intersect: intersect,
    intersectBy: intersectBy,
    zipWith: zipWith,
    zipWithA: zipWithA,
    zip: zip,
    unzip: unzip,
    transpose: transpose,
    foldM: foldM,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Lazy":15,"../Control.Monad.Rec.Class":47,"../Control.Semigroupoid":60,"../Data.Bifunctor":88,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.FunctorWithIndex":132,"../Data.HeytingAlgebra":141,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.NonEmpty":172,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Traversable":209,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Data.Unit":220,"../Prelude":263}],152:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_TypeNat = require("../Data.TypeNat");
var Extensions = require("../Extensions");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Type_Proxy = require("../Type.Proxy");
var Mat = function (x) {
    return x;
};
var toArray = function (v) {
    return v;
};
var getElem = function (dictSized) {
    return function (i) {
        return function (j) {
            return function (v) {
                return Data_Maybe.fromJust()(Data_Array.index(v)((i * Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value) | 0) + j | 0));
            };
        };
    };
};
var generate = function (dictSized) {
    return function (f) {
        var size = Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value);
        return Mat(Data_Array.concat(Data_Functor.map(Data_Functor.functorArray)(function (col) {
            return Data_Functor.map(Data_Functor.functorArray)(function (row) {
                return f(col)(row);
            })(Data_Array.range(0)(size - 1 | 0));
        })(Data_Array.range(0)(size - 1 | 0))));
    };
};
var identity$prime = function (dictSized) {
    return generate(dictSized)(function (i) {
        return function (j) {
            var $25 = i === j;
            if ($25) {
                return 1.0;
            };
            return 0.0;
        };
    });
};
var transpose = function (dictSized) {
    return function (m) {
        return generate(dictSized)(function (i) {
            return function (j) {
                return getElem(dictSized)(j)(i)(m);
            };
        });
    };
};
var functorMat = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Data_Functor.map(Data_Functor.functorArray)(f)(v);
    };
});
var scaleMatrix = function (dictEuclideanRing) {
    return function ($34) {
        return Data_Functor.map(functorMat)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())($34));
    };
};
var fromArray = function (dictSized) {
    return function (l) {
        var size = Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value);
        var v = size * size | 0;
        if (v === Data_Array.length(l)) {
            return l;
        };
        if (Data_Boolean.otherwise) {
            return Extensions.fail("Matrix>>fromArray: Wrong array length!");
        };
        throw new Error("Failed pattern match at Data.Matrix line 108, column 6 - line 112, column 1: " + [ v.constructor.name ]);
    };
};
var eqMat = function (dictEq) {
    return new Data_Eq.Eq(function (v) {
        return function (v1) {
            return Data_Eq.eq(Data_Eq.eqArray(dictEq))(v)(v1);
        };
    });
};
var columns = function (dictSized) {
    return function (v) {
        if (Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value) === 2) {
            return [ Data_Array.slice(0)(2)(v), Data_Array.slice(2)(4)(v) ];
        };
        if (Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value) === 3) {
            return [ Data_Array.slice(0)(3)(v), Data_Array.slice(3)(6)(v), Data_Array.slice(6)(9)(v) ];
        };
        if (Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value) === 4) {
            return [ Data_Array.slice(0)(4)(v), Data_Array.slice(4)(8)(v), Data_Array.slice(8)(12)(v), Data_Array.slice(12)(16)(v) ];
        };
        if (Data_Boolean.otherwise) {
            return Extensions.fail("Matrix>>columns: Proxy size not supprted!");
        };
        throw new Error("Failed pattern match at Data.Matrix line 50, column 1 - line 50, column 64: " + [ v.constructor.name ]);
    };
};
var showMat2 = function (dictShow) {
    return new Data_Show.Show(function (m) {
        return "Mat2x2 " + Data_Show.show(Data_Show.showArray(Data_Show.showArray(dictShow)))(columns(Data_TypeNat.s2)(m));
    });
};
var showMat3 = function (dictShow) {
    return new Data_Show.Show(function (m) {
        return "Mat3x3 " + Data_Show.show(Data_Show.showArray(Data_Show.showArray(dictShow)))(columns(Data_TypeNat.s3)(m));
    });
};
var showMat4 = function (dictShow) {
    return new Data_Show.Show(function (m) {
        return "Mat4x4 " + Data_Show.show(Data_Show.showArray(Data_Show.showArray(dictShow)))(columns(Data_TypeNat.s4)(m));
    });
};
var applyMat = new Control_Apply.Apply(function () {
    return functorMat;
}, function (v) {
    return function (v1) {
        return Data_Array.zipWith(function (f$prime) {
            return function (a$prime) {
                return f$prime(a$prime);
            };
        })(v)(v1);
    };
});
module.exports = {
    Mat: Mat,
    generate: generate,
    columns: columns,
    "identity'": identity$prime,
    getElem: getElem,
    scaleMatrix: scaleMatrix,
    fromArray: fromArray,
    toArray: toArray,
    transpose: transpose,
    showMat2: showMat2,
    showMat3: showMat3,
    showMat4: showMat4,
    eqMat: eqMat,
    functorMat: functorMat,
    applyMat: applyMat
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.TypeNat":213,"../Extensions":227,"../Partial.Unsafe":253,"../Prelude":263,"../Type.Proxy":279}],153:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Matrix = require("../Data.Matrix");
var Data_Maybe = require("../Data.Maybe");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_TypeNat = require("../Data.TypeNat");
var Data_Vector = require("../Data.Vector");
var Data_Vector3 = require("../Data.Vector3");
var Data_Vector4 = require("../Data.Vector4");
var Extensions = require("../Extensions");
var $$Math = require("../Math");
var Prelude = require("../Prelude");
var translate3 = function (x) {
    return function (y) {
        return function (z) {
            return function (v) {
                if (v.length === 16) {
                    return [ v[0], v[1], v[2], v[3], v[4], v[5], v[6], v[7], v[8], v[9], v[10], v[11], v[0] * x + v[4] * y + v[8] * z + v[12], v[1] * x + v[5] * y + v[9] * z + v[13], v[2] * x + v[6] * y + v[10] * z + v[14], v[3] * x + v[7] * y + v[11] * z + v[15] ];
                };
                return Extensions.fail("Matrix3>>translate3: Impossible!");
            };
        };
    };
};
var translate = function (v) {
    return function (v1) {
        if (v.length === 3) {
            return translate3(v[0])(v[1])(v[2])(v1);
        };
        return Extensions.fail("Matrix3>>translate: Impossible!");
    };
};
var transform = function (v) {
    return function (v1) {
        if (v.length === 16) {
            var t4 = [ v[3], v[7], v[11] ];
            var w = Data_Vector.dot(v1)(t4) + v[15];
            var t3 = [ v[2], v[6], v[10] ];
            var t2 = [ v[1], v[5], v[9] ];
            var t1 = [ v[0], v[4], v[8] ];
            return [ (Data_Vector.dot(v1)(t1) + v[12]) / w, (Data_Vector.dot(v1)(t2) + v[13]) / w, (Data_Vector.dot(v1)(t3) + v[14]) / w ];
        };
        return Extensions.fail("Matrix4>>transform: Impossible!");
    };
};
var scale3 = function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                if (v3.length === 16) {
                    return [ v3[0] * v, v3[1] * v, v3[2] * v, v3[3] * v, v3[4] * v1, v3[5] * v1, v3[6] * v1, v3[7] * v1, v3[8] * v2, v3[9] * v2, v3[10] * v2, v3[11] * v2, v3[12], v3[13], v3[14], v3[15] ];
                };
                return Extensions.fail("Matrix4>>scale3: Impossible!");
            };
        };
    };
};
var scale = function (v) {
    if (v.length === 3) {
        return scale3(v[0])(v[1])(v[2]);
    };
    return Extensions.fail("Matrix4>>scale: Impossible!");
};
var rotate = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1.length === 3 && v2.length === 16) {
                var s = $$Math.sin(v);
                var l = $$Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]);
                var im = 1.0 / l;
                var x = v1[0] * im;
                var xs = x * s;
                var y = v1[1] * im;
                var ys = y * s;
                var z = v1[2] * im;
                var zs = z * s;
                var c = $$Math.cos(v);
                var c1 = 1.0 - c;
                var xyc1 = x * y * c1;
                var t12 = xyc1 - zs;
                var t21 = xyc1 + zs;
                var xzc1 = x * z * c1;
                var t13 = xzc1 + ys;
                var t31 = xzc1 - ys;
                var yzc1 = y * z * c1;
                var t23 = yzc1 - xs;
                var t32 = yzc1 + xs;
                var t11 = x * x * c1 + c;
                var t22 = y * y * c1 + c;
                var t33 = z * z * c1 + c;
                return [ v2[0] * t11 + v2[4] * t21 + v2[8] * t31, v2[1] * t11 + v2[5] * t21 + v2[9] * t31, v2[2] * t11 + v2[6] * t21 + v2[10] * t31, v2[3] * t11 + v2[7] * t21 + v2[11] * t31, v2[0] * t12 + v2[4] * t22 + v2[8] * t32, v2[1] * t12 + v2[5] * t22 + v2[9] * t32, v2[2] * t12 + v2[6] * t22 + v2[10] * t32, v2[3] * t12 + v2[7] * t22 + v2[11] * t32, v2[0] * t13 + v2[4] * t23 + v2[8] * t33, v2[1] * t13 + v2[5] * t23 + v2[9] * t33, v2[2] * t13 + v2[6] * t23 + v2[10] * t33, v2[3] * t13 + v2[7] * t23 + v2[11] * t33, v2[12], v2[13], v2[14], v2[15] ];
            };
            return Extensions.fail("Matrix4>>rotate: Impossible!");
        };
    };
};
var project = function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                if (v.length === 3 && (v1.length === 16 && (v2.length === 16 && v3.length === 4))) {
                    var temp1 = [ v1[0] * v[0] + v1[4] * v[1] + v1[8] * v[2] + v1[12], v1[1] * v[0] + v1[5] * v[1] + v1[9] * v[2] + v1[13], v1[2] * v[0] + v1[6] * v[1] + v1[10] * v[2] + v1[14], v1[3] * v[0] + v1[7] * v[1] + v1[11] * v[2] + v1[15] ];
                    if (temp1.length === 4) {
                        var temp2 = [ v2[0] * temp1[0] + v2[4] * temp1[1] + v2[8] * temp1[2] + v2[12] * temp1[3], v2[1] * temp1[0] + v2[5] * temp1[1] + v2[9] * temp1[2] + v2[13] * temp1[3], v2[2] * temp1[0] + v2[6] * temp1[1] + v2[10] * temp1[2] + v2[14] * temp1[3], -temp1[2] ];
                        if (temp2.length === 4) {
                            var $138 = temp2[3] === 0.0;
                            if ($138) {
                                return Data_Maybe.Nothing.value;
                            };
                            var gt3$prime = 1.0 / temp2[3];
                            var gt2$prime = temp2[2] * gt3$prime;
                            var gt1$prime = temp2[1] * gt3$prime;
                            var gt0$prime = temp2[0] * gt3$prime;
                            return new Data_Maybe.Just([ (gt0$prime * 0.5 + 0.5) * v3[2] + v3[0], (gt1$prime * 0.5 + 0.5) * v3[3] + v3[1], (1.0 + gt2$prime) * 0.5 ]);
                        };
                        return Extensions.fail("Matrix4>>project: Impossible!");
                    };
                    return Extensions.fail("Matrix4>>project: Impossible!");
                };
                return Extensions.fail("Matrix4>>project: Impossible!");
            };
        };
    };
};
var mulMatVect = function (v) {
    return function (v1) {
        if (v.length === 16 && v1.length === 4) {
            return [ v[0] * v1[0] + v[4] * v1[1] + v[8] * v1[2] + v[12] * v1[3], v[1] * v1[0] + v[5] * v1[1] + v[9] * v1[2] + v[13] * v1[3], v[2] * v1[0] + v[6] * v1[1] + v[10] * v1[2] + v[14] * v1[3], v[3] * v1[0] + v[7] * v1[1] + v[11] * v1[2] + v[15] * v1[3] ];
        };
        return Extensions.fail("Matrix4>>mulMatVect: Impossible!");
    };
};
var mulM = function (v) {
    return function (v1) {
        if (v.length === 16 && v1.length === 16) {
            return [ v[0] * v1[0] + v[4] * v1[1] + v[8] * v1[2] + v[12] * v1[3], v[1] * v1[0] + v[5] * v1[1] + v[9] * v1[2] + v[13] * v1[3], v[2] * v1[0] + v[6] * v1[1] + v[10] * v1[2] + v[14] * v1[3], v[3] * v1[0] + v[7] * v1[1] + v[11] * v1[2] + v[15] * v1[3], v[0] * v1[4] + v[4] * v1[5] + v[8] * v1[6] + v[12] * v1[7], v[1] * v1[4] + v[5] * v1[5] + v[9] * v1[6] + v[13] * v1[7], v[2] * v1[4] + v[6] * v1[5] + v[10] * v1[6] + v[14] * v1[7], v[3] * v1[4] + v[7] * v1[5] + v[11] * v1[6] + v[15] * v1[7], v[0] * v1[8] + v[4] * v1[9] + v[8] * v1[10] + v[12] * v1[11], v[1] * v1[8] + v[5] * v1[9] + v[9] * v1[10] + v[13] * v1[11], v[2] * v1[8] + v[6] * v1[9] + v[10] * v1[10] + v[14] * v1[11], v[3] * v1[8] + v[7] * v1[9] + v[11] * v1[10] + v[15] * v1[11], v[0] * v1[12] + v[4] * v1[13] + v[8] * v1[14] + v[12] * v1[15], v[1] * v1[12] + v[5] * v1[13] + v[9] * v1[14] + v[13] * v1[15], v[2] * v1[12] + v[6] * v1[13] + v[10] * v1[14] + v[14] * v1[15], v[3] * v1[12] + v[7] * v1[13] + v[11] * v1[14] + v[15] * v1[15] ];
        };
        return Extensions.fail("Matrix4>>mulM: Impossible!");
    };
};
var mulAffine = function (v) {
    return function (v1) {
        if (v.length === 16 && v1.length === 16) {
            return [ v[0] * v1[0] + v[1] * v1[4] + v[2] * v1[8], v[4] * v1[0] + v[5] * v1[4] + v[6] * v1[8], v[8] * v1[0] + v[9] * v1[4] + v[10] * v1[8], 0.0, v[0] * v1[1] + v[1] * v1[5] + v[2] * v1[9], v[4] * v1[1] + v[5] * v1[5] + v[6] * v1[9], v[8] * v1[1] + v[9] * v1[5] + v[10] * v1[9], 0.0, v[0] * v1[2] + v[1] * v1[6] + v[2] * v1[10], v[4] * v1[2] + v[5] * v1[6] + v[6] * v1[10], v[8] * v1[2] + v[9] * v1[6] + v[10] * v1[10], 0.0, v[0] * v1[3] + v[1] * v1[7] + v[2] * v1[11] + v[3], v[4] * v1[3] + v[5] * v1[7] + v[6] * v1[11] + v[7], v[8] * v1[3] + v[9] * v1[7] + v[10] * v1[11] + v[11], 1.0 ];
        };
        return Extensions.fail("Matrix4>>mulAffine: Impossible!");
    };
};
var mat4 = Data_Matrix.fromArray(Data_TypeNat.s4);
var makeTranslate3 = function (x) {
    return function (y) {
        return function (z) {
            return [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, x, y, z, 1.0 ];
        };
    };
};
var makeTranslate = function (v) {
    if (v.length === 3) {
        return makeTranslate3(v[0])(v[1])(v[2]);
    };
    return Extensions.fail("Matrix4>>makeTranslate: Impossible!");
};
var makeScale3 = function (x) {
    return function (y) {
        return function (z) {
            return [ x, 0.0, 0.0, 0.0, 0.0, y, 0.0, 0.0, 0.0, 0.0, z, 0.0, 0.0, 0.0, 0.0, 1.0 ];
        };
    };
};
var makeScale = function (v) {
    if (v.length === 3) {
        return makeScale3(v[0])(v[1])(v[2]);
    };
    return Extensions.fail("Matrix4>>makeScale: Impossible!");
};
var makeRotate = function (angle) {
    return function (axis) {
        var v = Data_Vector.normalize(axis);
        if (v.length === 3) {
            var s = $$Math.sin(angle);
            var c = $$Math.cos(angle);
            var c1 = 1.0 - c;
            return [ v[0] * v[0] * c1 + c, v[1] * v[0] * c1 + v[2] * s, v[2] * v[0] * c1 - v[1] * s, 0.0, v[0] * v[1] * c1 - v[2] * s, v[1] * v[1] * c1 + c, v[1] * v[2] * c1 + v[0] * s, 0.0, v[0] * v[2] * c1 + v[1] * s, v[1] * v[2] * c1 - v[0] * s, v[2] * v[2] * c1 + c, 0.0, 0.0, 0.0, 0.0, 1.0 ];
        };
        return Extensions.fail("Matrix4>>makeRotate: Impossible!");
    };
};
var makeOrtho = function (left) {
    return function (right) {
        return function (bottom) {
            return function (top) {
                return function (znear) {
                    return function (zfar) {
                        var z = -2.0 / (zfar - znear);
                        var y = 2.0 / (top - bottom);
                        var x = 2.0 / (right - left);
                        var tZ = -(zfar + znear) / (zfar - znear);
                        var tY = -(top + bottom) / (top - bottom);
                        var tX = -(right + left) / (right - left);
                        return [ x, 0.0, 0.0, 0.0, 0.0, y, 0.0, 0.0, 0.0, 0.0, z, 0.0, tX, tY, tZ, 1.0 ];
                    };
                };
            };
        };
    };
};
var makeOrtho2D = function (left) {
    return function (right) {
        return function (bottom) {
            return function (top) {
                return makeOrtho(left)(right)(bottom)(top)(-1.0)(1.0);
            };
        };
    };
};
var makeLookAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v.length === 3) {
                var v3 = Data_Vector.direction(v)(v1);
                if (v3.length === 3) {
                    var v4 = Data_Vector.normalize(Data_Vector3.cross(Data_EuclideanRing.euclideanRingNumber)(v2)(v3));
                    if (v4.length === 3) {
                        var v5 = Data_Vector.normalize(Data_Vector3.cross(Data_EuclideanRing.euclideanRingNumber)(v3)(v4));
                        if (v5.length === 3) {
                            var m2 = [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -v[0], -v[1], -v[2], 1.0 ];
                            var m1 = [ v4[0], v5[0], v3[0], 0.0, v4[1], v5[1], v3[1], 0.0, v4[2], v5[2], v3[2], 0.0, 0.0, 0.0, 0.0, 1.0 ];
                            return mulM(m1)(m2);
                        };
                        return Extensions.fail("Matrix4>>makeRotate: Impossible!");
                    };
                    return Extensions.fail("Matrix4>>makeRotate: Impossible!");
                };
                return Extensions.fail("Matrix4>>makeRotate: Impossible!");
            };
            return Extensions.fail("Matrix4>>makeLookAt: Impossible!");
        };
    };
};
var makeFrustum = function (left) {
    return function (right) {
        return function (bottom) {
            return function (top) {
                return function (znear) {
                    return function (zfar) {
                        var z = (right + left) / (right - left);
                        var y = (2.0 * znear) / (top - bottom);
                        var x = (2.0 * znear) / (right - left);
                        var d = (-2.0 * zfar * znear) / (zfar - znear);
                        var c = -(zfar + znear) / (zfar - znear);
                        var b = (top + bottom) / (top - bottom);
                        return [ (2.0 * znear) / (right - left), 0.0, 0.0, 0.0, 0.0, (2.0 * znear) / (top - bottom), 0.0, 0.0, (right + left) / (right - left), (top + bottom) / (top - bottom), -(zfar + znear) / (zfar - znear), -1.0, 0.0, 0.0, (-2.0 * zfar * znear) / (zfar - znear), 0.0 ];
                    };
                };
            };
        };
    };
};
var makePerspective = function (fovy) {
    return function (aspect) {
        return function (znear) {
            return function (zfar) {
                var ymax = znear * $$Math.tan((fovy * $$Math.pi) / 360.0);
                var ymin = -ymax;
                var xmin = ymin * aspect;
                var xmax = ymax * aspect;
                return makeFrustum(xmin)(xmax)(ymin)(ymax)(znear)(zfar);
            };
        };
    };
};
var makeBasis = function (v) {
    return function (v1) {
        return function (v2) {
            if (v.length === 3 && (v1.length === 3 && v2.length === 3)) {
                return [ v[0], v[1], v[2], 0.0, v1[0], v1[1], v1[2], 0.0, v2[0], v2[1], v2[2], 0.0, 0.0, 0.0, 0.0, 1.0 ];
            };
            return Extensions.fail("Matrix4>>makeBasis: Impossible!");
        };
    };
};
var inverseOrthonormal = function (v) {
    if (v.length === 16) {
        var v2 = Data_Matrix.transpose(Data_TypeNat.s4)(v);
        if (v2.length === 16) {
            var t = [ v[12], v[13], v[14] ];
            var r14 = -Data_Vector.dot([ v2[2], v2[6], v2[10] ])(t);
            var r13 = -Data_Vector.dot([ v2[1], v2[5], v2[9] ])(t);
            var r12 = -Data_Vector.dot([ v2[0], v2[4], v2[8] ])(t);
            return [ v2[0], v2[1], v2[2], 0.0, v2[4], v2[5], v2[6], 0.0, v2[8], v2[9], v2[10], 0.0, r12, r13, r14, v2[15] ];
        };
        return Extensions.fail("Matrix4>>inverseOrthonormal: Impossible!");
    };
    return Extensions.fail("Matrix4>>inverseOrthonormal: Impossible!");
};
var inverse = function (v) {
    if (v.length === 16) {
        var b11 = v[10] * v[15] - v[11] * v[14];
        var b10 = v[9] * v[15] - v[11] * v[13];
        var b09 = v[9] * v[14] - v[10] * v[13];
        var b08 = v[8] * v[15] - v[11] * v[12];
        var b07 = v[8] * v[14] - v[10] * v[12];
        var b06 = v[8] * v[13] - v[9] * v[12];
        var b05 = v[2] * v[7] - v[3] * v[6];
        var b04 = v[1] * v[7] - v[3] * v[5];
        var b03 = v[1] * v[6] - v[2] * v[5];
        var b02 = v[0] * v[7] - v[3] * v[4];
        var b01 = v[0] * v[6] - v[2] * v[4];
        var b00 = v[0] * v[5] - v[1] * v[4];
        var d = (((b00 * b11 - b01 * b10) + b02 * b09 + b03 * b08) - b04 * b07) + b05 * b06;
        var $353 = d === 0.0;
        if ($353) {
            return Data_Maybe.Nothing.value;
        };
        var invDet = 1.0 / d;
        return Data_Maybe.Just.create([ ((v[5] * b11 - v[6] * b10) + v[7] * b09) * invDet, ((-v[1] * b11 + v[2] * b10) - v[3] * b09) * invDet, ((v[13] * b05 - v[14] * b04) + v[15] * b03) * invDet, ((-v[9] * b05 + v[10] * b04) - v[11] * b03) * invDet, ((-v[4] * b11 + v[6] * b08) - v[7] * b07) * invDet, ((v[0] * b11 - v[2] * b08) + v[3] * b07) * invDet, ((-v[12] * b05 + v[14] * b02) - v[15] * b01) * invDet, ((v[8] * b05 - v[10] * b02) + v[11] * b01) * invDet, ((v[4] * b10 - v[5] * b08) + v[7] * b06) * invDet, ((-v[0] * b10 + v[1] * b08) - v[3] * b06) * invDet, ((v[12] * b04 - v[13] * b02) + v[15] * b00) * invDet, ((-v[8] * b04 + v[9] * b02) - v[11] * b00) * invDet, ((-v[4] * b09 + v[5] * b07) - v[6] * b06) * invDet, ((v[0] * b09 - v[1] * b07) + v[2] * b06) * invDet, ((-v[12] * b03 + v[13] * b01) - v[14] * b00) * invDet, ((v[8] * b03 - v[9] * b01) + v[10] * b00) * invDet ]);
    };
    return Extensions.fail("Matrix4>>inverse: Impossible!");
};
var unProject = function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                if (v.length === 3 && v3.length === 4) {
                    var mvProjMatrix = mulM(v2)(v1);
                    var v4 = inverse(mvProjMatrix);
                    if (v4 instanceof Data_Maybe.Nothing) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (v4 instanceof Data_Maybe.Just) {
                        var inVect = [ ((v[0] - v3[0]) / v3[2]) * 2.0 - 1.0, ((v[1] - v3[1]) / v3[3]) * 2.0 - 1.0, 2.0 * v[2] - 1.0, 1.0 ];
                        var out = mulMatVect(v4.value0)(inVect);
                        if (out.length === 4) {
                            var $376 = out[3] === 0.0;
                            if ($376) {
                                return Data_Maybe.Nothing.value;
                            };
                            var out3$prime = 1.0 / out[3];
                            return new Data_Maybe.Just([ out[0] * out3$prime, out[1] * out3$prime, out[2] * out3$prime ]);
                        };
                        return Extensions.fail("Matrix4>>unProject: Impossible!");
                    };
                    throw new Error("Failed pattern match at Data.Matrix4 line 427, column 8 - line 441, column 1: " + [ v4.constructor.name ]);
                };
                return Extensions.fail("Matrix4>>unProject: Impossible!");
            };
        };
    };
};
var identity = [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ];
module.exports = {
    mat4: mat4,
    identity: identity,
    transform: transform,
    inverseOrthonormal: inverseOrthonormal,
    inverse: inverse,
    makeFrustum: makeFrustum,
    makePerspective: makePerspective,
    makeOrtho: makeOrtho,
    makeOrtho2D: makeOrtho2D,
    mulM: mulM,
    mulAffine: mulAffine,
    makeRotate: makeRotate,
    rotate: rotate,
    makeScale3: makeScale3,
    makeScale: makeScale,
    scale3: scale3,
    scale: scale,
    makeTranslate3: makeTranslate3,
    makeTranslate: makeTranslate,
    translate3: translate3,
    translate: translate,
    makeLookAt: makeLookAt,
    makeBasis: makeBasis,
    project: project,
    unProject: unProject,
    mulMatVect: mulMatVect
};

},{"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Matrix":152,"../Data.Maybe":156,"../Data.Ring":181,"../Data.Semiring":187,"../Data.TypeNat":213,"../Data.Vector":221,"../Data.Vector3":223,"../Data.Vector4":224,"../Extensions":227,"../Math":244,"../Prelude":263}],154:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var First = function (x) {
    return x;
};
var showFirst = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Just) {
            return v;
        };
        return v1;
    };
});
var ordFirst = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1First = Data_Maybe.ord1Maybe;
var newtypeFirst = new Data_Newtype.Newtype(function (n) {
    return n;
}, First);
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var monadFirst = Data_Maybe.monadMaybe;
var invariantFirst = Data_Maybe.invariantMaybe;
var functorFirst = Data_Maybe.functorMaybe;
var extendFirst = Data_Maybe.extendMaybe;
var eqFirst = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1First = Data_Maybe.eq1Maybe;
var boundedFirst = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindFirst = Data_Maybe.bindMaybe;
var applyFirst = Data_Maybe.applyMaybe;
var applicativeFirst = Data_Maybe.applicativeMaybe;
var altFirst = new Control_Alt.Alt(function () {
    return functorFirst;
}, Data_Semigroup.append(semigroupFirst));
var plusFirst = new Control_Plus.Plus(function () {
    return altFirst;
}, Data_Monoid.mempty(monoidFirst));
var alternativeFirst = new Control_Alternative.Alternative(function () {
    return applicativeFirst;
}, function () {
    return plusFirst;
});
var monadZeroFirst = new Control_MonadZero.MonadZero(function () {
    return alternativeFirst;
}, function () {
    return monadFirst;
});
module.exports = {
    First: First,
    newtypeFirst: newtypeFirst,
    eqFirst: eqFirst,
    eq1First: eq1First,
    ordFirst: ordFirst,
    ord1First: ord1First,
    boundedFirst: boundedFirst,
    functorFirst: functorFirst,
    invariantFirst: invariantFirst,
    applyFirst: applyFirst,
    applicativeFirst: applicativeFirst,
    bindFirst: bindFirst,
    monadFirst: monadFirst,
    extendFirst: extendFirst,
    showFirst: showFirst,
    semigroupFirst: semigroupFirst,
    monoidFirst: monoidFirst,
    altFirst: altFirst,
    plusFirst: plusFirst,
    alternativeFirst: alternativeFirst,
    monadZeroFirst: monadZeroFirst
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Extend":14,"../Control.Monad":54,"../Control.MonadZero":56,"../Control.Plus":59,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],155:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Last = function (x) {
    return x;
};
var showLast = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v1 instanceof Data_Maybe.Just) {
            return v1;
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return v;
        };
        throw new Error("Failed pattern match at Data.Maybe.Last line 53, column 1 - line 53, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordLast = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1Last = Data_Maybe.ord1Maybe;
var newtypeLast = new Data_Newtype.Newtype(function (n) {
    return n;
}, Last);
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var monadLast = Data_Maybe.monadMaybe;
var invariantLast = Data_Maybe.invariantMaybe;
var functorLast = Data_Maybe.functorMaybe;
var extendLast = Data_Maybe.extendMaybe;
var eqLast = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1Last = Data_Maybe.eq1Maybe;
var boundedLast = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindLast = Data_Maybe.bindMaybe;
var applyLast = Data_Maybe.applyMaybe;
var applicativeLast = Data_Maybe.applicativeMaybe;
var altLast = new Control_Alt.Alt(function () {
    return functorLast;
}, Data_Semigroup.append(semigroupLast));
var plusLast = new Control_Plus.Plus(function () {
    return altLast;
}, Data_Monoid.mempty(monoidLast));
var alternativeLast = new Control_Alternative.Alternative(function () {
    return applicativeLast;
}, function () {
    return plusLast;
});
var monadZeroLast = new Control_MonadZero.MonadZero(function () {
    return alternativeLast;
}, function () {
    return monadLast;
});
module.exports = {
    Last: Last,
    newtypeLast: newtypeLast,
    eqLast: eqLast,
    eq1Last: eq1Last,
    ordLast: ordLast,
    ord1Last: ord1Last,
    boundedLast: boundedLast,
    functorLast: functorLast,
    invariantLast: invariantLast,
    applyLast: applyLast,
    applicativeLast: applicativeLast,
    bindLast: bindLast,
    monadLast: monadLast,
    extendLast: extendLast,
    showLast: showLast,
    semigroupLast: semigroupLast,
    monoidLast: monoidLast,
    altLast: altLast,
    plusLast: plusLast,
    alternativeLast: alternativeLast,
    monadZeroLast: monadZeroLast
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Extend":14,"../Control.Monad":54,"../Control.MonadZero":56,"../Control.Plus":59,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],156:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Just) {
            return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
        };
        if (v instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at Data.Maybe line 207, column 1 - line 207, column 47: " + [ v.constructor.name ]);
    });
};
var semigroupMaybe = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            if (v instanceof Nothing) {
                return v1;
            };
            if (v1 instanceof Nothing) {
                return v;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Maybe line 176, column 1 - line 176, column 62: " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var optional = function (dictAlternative) {
    return function (a) {
        return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Just.create)(a))(Control_Applicative.pure(dictAlternative.Applicative0())(Nothing.value));
    };
};
var monoidMaybe = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(dictSemigroup);
    }, Nothing.value);
};
var maybe$prime = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v(Data_Unit.unit);
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 232, column 1 - line 232, column 62: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var maybe = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v;
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 219, column 1 - line 219, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Data_Function["const"](false));
var isJust = maybe(false)(Data_Function["const"](true));
var functorMaybe = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Just) {
            return new Just(v(v1.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Control_Category.id(Control_Category.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Control_Category.id(Control_Category.categoryFn));
};
var fromJust = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar35) {
                return $dollar35;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Just) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Maybe line 270, column 1 - line 270, column 46: " + [ v.constructor.name ]);
        })());
    };
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(v(v1));
    };
});
var eqMaybe = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return true;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqMaybe(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Nothing) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Nothing) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 196, column 8 - line 196, column 51: " + [ x.constructor.name, y.constructor.name ]);
        };
    });
};
var eq1Maybe = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqMaybe(dictEq));
});
var ord1Maybe = new Data_Ord.Ord1(function () {
    return eq1Maybe;
}, function (dictOrd) {
    return Data_Ord.compare(ordMaybe(dictOrd));
});
var boundedMaybe = function (dictBounded) {
    return new Data_Bounded.Bounded(function () {
        return ordMaybe(dictBounded.Ord0());
    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
};
var applyMaybe = new Control_Apply.Apply(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return Data_Functor.map(functorMaybe)(v.value0)(v1);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 68, column 1 - line 68, column 35: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindMaybe = new Control_Bind.Bind(function () {
    return applyMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return v1(v.value0);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 127, column 1 - line 127, column 33: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applicativeMaybe = new Control_Applicative.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Control_Monad.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Nothing) {
            return v1;
        };
        return v;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return applicativeMaybe;
}, function () {
    return plusMaybe;
});
var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing,
    Just: Just,
    maybe: maybe,
    "maybe'": maybe$prime,
    fromMaybe: fromMaybe,
    "fromMaybe'": fromMaybe$prime,
    isJust: isJust,
    isNothing: isNothing,
    fromJust: fromJust,
    optional: optional,
    functorMaybe: functorMaybe,
    applyMaybe: applyMaybe,
    applicativeMaybe: applicativeMaybe,
    altMaybe: altMaybe,
    plusMaybe: plusMaybe,
    alternativeMaybe: alternativeMaybe,
    bindMaybe: bindMaybe,
    monadMaybe: monadMaybe,
    monadZeroMaybe: monadZeroMaybe,
    extendMaybe: extendMaybe,
    invariantMaybe: invariantMaybe,
    semigroupMaybe: semigroupMaybe,
    monoidMaybe: monoidMaybe,
    eqMaybe: eqMaybe,
    eq1Maybe: eq1Maybe,
    ordMaybe: ordMaybe,
    ord1Maybe: ord1Maybe,
    boundedMaybe: boundedMaybe,
    showMaybe: showMaybe
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Extend":14,"../Control.Monad":54,"../Control.MonadZero":56,"../Control.Plus":59,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],157:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_MediaType = require("../Data.MediaType");
var textXML = "text/xml";
var textPlain = "text/plain";
var textHTML = "text/html";
var textCSV = "text/csv";
var multipartFormData = "multipart/form-data";
var imagePNG = "image/png";
var imageJPEG = "image/jpeg";
var imageGIF = "image/gif";
var applicationXML = "application/xml";
var applicationOctetStream = "application/octet-stream";
var applicationJavascript = "application/javascript";
var applicationJSON = "application/json";
var applicationFormURLEncoded = "application/x-www-form-urlencoded";
module.exports = {
    applicationFormURLEncoded: applicationFormURLEncoded,
    applicationJSON: applicationJSON,
    applicationJavascript: applicationJavascript,
    applicationOctetStream: applicationOctetStream,
    applicationXML: applicationXML,
    imageGIF: imageGIF,
    imageJPEG: imageJPEG,
    imagePNG: imagePNG,
    multipartFormData: multipartFormData,
    textCSV: textCSV,
    textHTML: textHTML,
    textPlain: textPlain,
    textXML: textXML
};

},{"../Data.MediaType":158}],158:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var MediaType = function (x) {
    return x;
};
var showMediaType = new Data_Show.Show(function (v) {
    return "(MediaType " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
    return n;
}, MediaType);
var genericMediaType = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.MediaType.MediaType" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(MediaType))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.MediaType.MediaType", [ {
        sigConstructor: "Data.MediaType.MediaType",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.MediaType.MediaType", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var eqMediaType = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordMediaType = new Data_Ord.Ord(function () {
    return eqMediaType;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
module.exports = {
    MediaType: MediaType,
    newtypeMediaType: newtypeMediaType,
    eqMediaType: eqMediaType,
    ordMediaType: ordMediaType,
    genericMediaType: genericMediaType,
    showMediaType: showMediaType
};

},{"../Control.Apply":6,"../Data.Eq":111,"../Data.Generic":138,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],159:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Char = require("../Data.Char");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Int = require("../Data.Int");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Midi = require("../Data.Midi");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser");
var Text_Parsing_StringParser_Combinators = require("../Text.Parsing.StringParser.Combinators");
var Text_Parsing_StringParser_String = require("../Text.Parsing.StringParser.String");
var sysExTerminator = 247;
var skip = Data_Functor["void"](Text_Parsing_StringParser.functorParser);
var rest = Text_Parsing_StringParser_Combinators.many(Text_Parsing_StringParser_String.anyChar);
var notTrackEnd = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Char.toCharCode)(Text_Parsing_StringParser_String.noneOf(Data_Foldable.foldableArray)([ Data_Char.fromCharCode(47) ]));
var notSysExEnd = Text_Parsing_StringParser_String.noneOf(Data_Foldable.foldableArray)([ Data_Char.fromCharCode(sysExTerminator) ]);
var normalise = (function () {
    var f = function ($54) {
        return Data_Char.fromCharCode(255 & Data_Char.toCharCode($54));
    };
    return function ($55) {
        return Data_String.fromCharArray(Data_Functor.map(Data_Functor.functorArray)(f)(Data_String.toCharArray($55)));
    };
})();
var makeTuple = function (a) {
    return function (b) {
        return new Data_Tuple.Tuple(a, b);
    };
};
var int8 = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Char.toCharCode)(Text_Parsing_StringParser_String.anyChar);
var runningStatus = function (parent) {
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.NoteOn) {
        return Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.NoteOn.create(parent.value0.value0))(int8))(int8))("note on running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.NoteOff) {
        return Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.NoteOff.create(parent.value0.value0))(int8))(int8))("note off running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.NoteAfterTouch) {
        return Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.NoteAfterTouch.create(parent.value0.value0))(int8))(int8))("note aftertouch running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.ControlChange) {
        return Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.ControlChange.create(parent.value0.value0))(int8))(int8))("control change running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.ProgramChange) {
        return Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.ProgramChange.create(parent.value0.value0))(int8))("program change running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.ChannelAfterTouch) {
        return Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.ChannelAfterTouch.create(parent.value0.value0))(int8))("channel aftertouch running status");
    };
    if (parent instanceof Data_Maybe.Just && parent.value0 instanceof Data_Midi.PitchBend) {
        return Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.PitchBend.create(parent.value0.value0))(int8))("pitch bend running status");
    };
    if (parent instanceof Data_Maybe.Just) {
        return Text_Parsing_StringParser.fail("inappropriate parent for running status");
    };
    return Text_Parsing_StringParser.fail("no parent for running status");
};
var signedInt8 = Data_Functor.map(Text_Parsing_StringParser.functorParser)(function (i) {
    var $33 = i > 127;
    if ($33) {
        return i - 256 | 0;
    };
    return i;
})(int8);
var uint16 = (function () {
    var toInt16 = function (a) {
        return function (b) {
            return (a << 8) + b | 0;
        };
    };
    return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(toInt16)(int8))(int8);
})();
var uint24 = (function () {
    var toInt24 = function (a) {
        return function (b) {
            return function (c) {
                return ((a << 16) + (b << 8) | 0) + c | 0;
            };
        };
    };
    return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(toInt24)(int8))(int8))(int8);
})();
var uint32 = (function () {
    var toInt32 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return (((a << 24) + (b << 16) | 0) + (c << 8) | 0) + d | 0;
                };
            };
        };
    };
    return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(toInt32)(int8))(int8))(int8))(int8);
})();
var varIntHelper = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(int8)(function (n) {
    var $34 = n < 128;
    if ($34) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)([ n ]);
    };
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Array.cons(127 & n))(varIntHelper);
});
var varInt = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Foldable.foldl(Data_Foldable.foldableArray)(function (acc) {
    return function (n) {
        return (acc << 7) + n | 0;
    };
})(0))(varIntHelper);
var headerChunk = function (l) {
    return function (a) {
        return function (b) {
            return function (c) {
                var header = {
                    formatType: a,
                    trackCount: b,
                    ticksPerBeat: c
                };
                return new Data_Tuple.Tuple(l, new Data_Midi.Header(header));
            };
        };
    };
};
var count = Data_Unfoldable.replicateA(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.unfoldableList)(Data_List_Types.traversableList);
var unspecified = Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Unspecified.create)(notTrackEnd))(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(varInt)(function (l) {
    return count(l)(int8);
}));
var consumeOverspill = function (actual) {
    return function (expected) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(actual)(function (v) {
            return Data_Functor.map(Text_Parsing_StringParser.functorParser)(function (v1) {
                return v.value1;
            })(skip(count(v.value0 - expected | 0)(int8)));
        });
    };
};
var midiHeader = Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("MThd"))((function () {
    var h = Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(headerChunk)(uint32))(uint16))(uint16))(uint16);
    return Text_Parsing_StringParser_Combinators.withError(consumeOverspill(h)(6))("header");
})());
var channelBuilder3 = function (construct) {
    return function (cmd) {
        return function (x) {
            return function (y) {
                var channel = cmd & 15;
                return construct(channel)(x)(y);
            };
        };
    };
};
var channelBuilder2 = function (construct) {
    return function (cmd) {
        return function (x) {
            var channel = cmd & 15;
            return construct(channel)(x);
        };
    };
};
var catChars = function ($56) {
    return Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_Functor.map(Data_List_Types.functorList)(Data_String.singleton)($56));
};
var buildTimeSig = function (nn) {
    return function (dd) {
        return function (cc) {
            return function (bb) {
                var denom = Data_Int.pow(2)(dd);
                return new Data_Midi.TimeSignature(nn, denom, cc, bb);
            };
        };
    };
};
var buildSysEx = function (sysExType) {
    return function (bytes) {
        var flavour = (function () {
            if (sysExType === 240) {
                return Data_Midi.F0.value;
            };
            return Data_Midi.F7.value;
        })();
        return new Data_Midi.SysEx(flavour, Data_Functor.map(Data_List_Types.functorList)(Data_Char.toCharCode)(bytes));
    };
};
var buildStreamSysEx = function (sysExType) {
    return function (bytes) {
        return buildSysEx(sysExType)(Data_Semigroup.append(Data_List_Types.semigroupList)(bytes)(new Data_List_Types.Cons(Data_Char.fromCharCode(sysExTerminator), Data_List_Types.Nil.value)));
    };
};
var buildRecording = function (h) {
    return function (ts) {
        return new Data_Midi.Recording({
            header: h,
            tracks: ts
        });
    };
};
var buildProgramChange = function (cmd) {
    return function (num) {
        return channelBuilder2(Data_Midi.ProgramChange.create)(cmd)(num);
    };
};
var buildPitchBend = function (cmd) {
    return function (lsb) {
        return function (msb) {
            return channelBuilder2(Data_Midi.PitchBend.create)(cmd)(lsb + (msb << 7) | 0);
        };
    };
};
var buildNoteOff = function (cmd) {
    return function (note) {
        return function (velocity) {
            return channelBuilder3(Data_Midi.NoteOff.create)(cmd)(note)(velocity);
        };
    };
};
var buildNoteAfterTouch = function (cmd) {
    return function (note) {
        return function (pressure) {
            return channelBuilder3(Data_Midi.NoteAfterTouch.create)(cmd)(note)(pressure);
        };
    };
};
var buildNote = function (cmd) {
    return function (note) {
        return function (velocity) {
            var isOff = velocity === 0;
            var channel = cmd & 15;
            if (isOff) {
                return new Data_Midi.NoteOff(channel, note, velocity);
            };
            return new Data_Midi.NoteOn(channel, note, velocity);
        };
    };
};
var buildControlChange = function (cmd) {
    return function (num) {
        return function (value) {
            return channelBuilder3(Data_Midi.ControlChange.create)(cmd)(num)(value);
        };
    };
};
var buildChannelAfterTouch = function (cmd) {
    return function (num) {
        return channelBuilder2(Data_Midi.ChannelAfterTouch.create)(cmd)(num);
    };
};
var brange = function (l) {
    return function (r) {
        var f = function (a) {
            return Data_Char.toCharCode(a) >= l && Data_Char.toCharCode(a) <= r;
        };
        return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Char.toCharCode)(Text_Parsing_StringParser_String.satisfy(f));
    };
};
var channelAfterTouch = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildChannelAfterTouch)(brange(208)(223)))(int8))("channel after touch");
var controlChange = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildControlChange)(brange(176)(191)))(int8))(int8))("control change");
var noteAfterTouch = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildNoteAfterTouch)(brange(160)(175)))(int8))(int8))("note after touch");
var noteOff = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildNoteOff)(brange(128)(143)))(int8))(int8))("note off");
var noteOn = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildNote)(brange(144)(159)))(int8))(int8))("note on");
var pitchBend = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildPitchBend)(brange(224)(239)))(int8))(int8))("pitch bend");
var programChange = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildProgramChange)(brange(192)(207)))(int8))("program change");
var bchar = function (val) {
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Char.toCharCode)(Text_Parsing_StringParser_String["char"](Data_Char.fromCharCode(val)));
};
var bchoice = function (x) {
    return function (y) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(bchar(x))(bchar(y));
    };
};
var sysEx = Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildSysEx)(bchoice(240)(247)))(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(varInt)(function (l) {
    return count(l)(Text_Parsing_StringParser_String.anyChar);
})))("system exclusive");
var channelPrefix = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.ChannelPrefix.create)(Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(32))(bchar(1)))(int8))("channel prefix"));
var keySignature = Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(89))(bchar(2)))(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.KeySignature.create)(signedInt8))(int8));
var parseMetaInts = function (target) {
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Functor.map(Data_List_Types.functorList)(Data_Char.toCharCode))(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(target))(varInt))(function (l) {
        return count(l)(Text_Parsing_StringParser_String.anyChar);
    }));
};
var sequencerSpecific = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.SequencerSpecific.create)(parseMetaInts(127)))("sequencer specific");
var parseMetaString = function (target) {
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(catChars)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(target))(varInt))(function (l) {
        return count(l)(Text_Parsing_StringParser_String.anyChar);
    }));
};
var copyright = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Copyright.create)(parseMetaString(2)))("copyright");
var cuePoint = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.CuePoint.create)(parseMetaString(7)))("cue point");
var instrumentName = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.InstrumentName.create)(parseMetaString(4)))("instrument name");
var lyrics = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Lyrics.create)(parseMetaString(5)))("lyrics");
var marker = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Marker.create)(parseMetaString(6)))("marker");
var text = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Text.create)(parseMetaString(1)))("text");
var trackName = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.TrackName.create)(parseMetaString(3)))("track name");
var sequenceNumber = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.SequenceNumber.create)(Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(0))(bchar(2)))(uint16))("sequence number"));
var smpteOffset = Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(84))(bchar(3)))(Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.SMPTEOffset.create)(int8))(int8))(int8))(int8))(int8))("SMTPE offset"));
var streamSysEx = Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildStreamSysEx)(bchar(240)))(Text_Parsing_StringParser_Combinators.many1Till(notSysExEnd)(Text_Parsing_StringParser_String["char"](Data_Char.fromCharCode(sysExTerminator))));
var tempoChange = Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Tempo.create)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(81))(bchar(3)))(uint24)))("tempo change");
var timeSignature = Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(88))(bchar(4)))(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildTimeSig)(int8))(int8))(int8))(int8)))("time signature");
var metaEvent = Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(bchar(255))(Text_Parsing_StringParser_Combinators.choice(Data_Foldable.foldableArray)([ sequenceNumber, text, copyright, trackName, instrumentName, lyrics, marker, cuePoint, channelPrefix, tempoChange, smpteOffset, timeSignature, keySignature, sequencerSpecific, unspecified ])))("meta event");
var midiEvent = function (parent) {
    return Text_Parsing_StringParser_Combinators.withError(Text_Parsing_StringParser_Combinators.choice(Data_Foldable.foldableArray)([ metaEvent, sysEx, noteOn, noteOff, noteAfterTouch, controlChange, programChange, channelAfterTouch, pitchBend, runningStatus(parent) ]))("midi event");
};
var midiMessage = function (parent) {
    return Text_Parsing_StringParser_Combinators.withError(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Message.create)(varInt))(midiEvent(parent)))("midi message");
};
var parseMidiMessage = function (s) {
    var v = Text_Parsing_StringParser.runParser(midiMessage(Data_Maybe.Nothing.value))(s);
    if (v instanceof Data_Either.Right) {
        return new Data_Either.Right(v.value0);
    };
    if (v instanceof Data_Either.Left) {
        return Data_Either.Left.create(Data_Show.show(Text_Parsing_StringParser.showParseError)(v.value0));
    };
    throw new Error("Failed pattern match at Data.Midi.Parser line 655, column 3 - line 660, column 19: " + [ v.constructor.name ]);
};
var midiStreamEvent = Text_Parsing_StringParser_Combinators.withError(Text_Parsing_StringParser_Combinators.choice(Data_Foldable.foldableArray)([ metaEvent, streamSysEx, noteOn, noteOff, noteAfterTouch, controlChange, programChange, channelAfterTouch, pitchBend ]))("midi stream event");
var parseMidiEvent = function (s) {
    var v = Text_Parsing_StringParser.runParser(midiStreamEvent)(s);
    if (v instanceof Data_Either.Right) {
        return new Data_Either.Right(v.value0);
    };
    if (v instanceof Data_Either.Left) {
        return Data_Either.Left.create(Data_Show.show(Text_Parsing_StringParser.showParseError)(v.value0));
    };
    throw new Error("Failed pattern match at Data.Midi.Parser line 621, column 3 - line 627, column 20: " + [ v.constructor.name ]);
};
var trackEndMessage = Text_Parsing_StringParser["try"](Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(varInt)(bchar(255)))(bchar(47)))(bchar(0)))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit)))("track end"));
var endOfTrack = Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Data_List_Types.Nil.value)(trackEndMessage);
var moreMessages = function (lastMessage) {
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_Types.Cons.create(lastMessage))(midiMessages(new Data_Maybe.Just(lastMessage.value1)));
};
var midiMessages = function (parent) {
    return Control_Alt.alt(Text_Parsing_StringParser.altParser)(endOfTrack)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(midiMessage(parent))(moreMessages));
};
var midiTrack = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Midi.Track.create)(Text_Parsing_StringParser_Combinators.withError(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("MTrk"))(uint32))(midiMessages(Data_Maybe.Nothing.value)))("midi track"));
var midiTracks = function (v) {
    return Text_Parsing_StringParser_Combinators.withError(Data_Functor.map(Text_Parsing_StringParser.functorParser)(buildRecording(new Data_Midi.Header(v.value0)))(count(v.value0.trackCount)(midiTrack)))("midi tracks");
};
var midi = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(midiHeader)(midiTracks);
var parse = function (s) {
    var v = Text_Parsing_StringParser.runParser(midi)(s);
    if (v instanceof Data_Either.Right) {
        return new Data_Either.Right(v.value0);
    };
    if (v instanceof Data_Either.Left) {
        return Data_Either.Left.create(Data_Show.show(Text_Parsing_StringParser.showParseError)(v.value0));
    };
    throw new Error("Failed pattern match at Data.Midi.Parser line 632, column 3 - line 637, column 20: " + [ v.constructor.name ]);
};
module.exports = {
    normalise: normalise,
    parse: parse,
    parseMidiEvent: parseMidiEvent,
    parseMidiMessage: parseMidiMessage
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Char":97,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Int":146,"../Data.Int.Bits":144,"../Data.List":151,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Midi":162,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.String":201,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Data.Unit":220,"../Prelude":263,"../Text.Parsing.StringParser":274,"../Text.Parsing.StringParser.Combinators":272,"../Text.Parsing.StringParser.String":273}],160:[function(require,module,exports){
"use strict";

var wrapper = function() {

  var messageCallback;
  var connectionCallback;

  function onMIDISuccessListen (midiAccess) {

    // console.log('onMIDISuccessListen');

    var inputs = midiAccess.inputs.values();
    // loop over any register inputs and listen for data on each
    midiAccess.inputs.forEach( function( input, id, inputMap ) {
      input.onmidimessage = onMIDIMessage;
    });
  };

  function onMIDISuccessDetect (midiAccess) {

    // console.log('onMIDISuccessDetect');

    var inputs = midiAccess.inputs.values();
    // loop over any register inputs and listen for data on each
    midiAccess.inputs.forEach( function( input, id, inputMap ) {
      registerInput(input);
    });
    // listen for connect/disconnect message
    midiAccess.onstatechange = onStateChange;
  };

  // register an input device
  function registerInput (input) {
     /*
     console.log("Input port : [ type:'" + input.type + "' id: '" + input.id +
        "' manufacturer: '" + input.manufacturer + "' name: '" + input.name +
        "' version: '" + input.version + "']");
     */
     var midiConnection = { connected : true
                          , portType : input.type
                          , id : input.id
                          , manufacturer : input.manufacturer
                          , name : input.name
                          , version : input.version };

     connectionCallback(midiConnection)();
  };

  // input connect/disconnect signal
  function onStateChange (event) {
	  // showMIDIPorts(midi);
	  var port = event.port, state = port.state, name = port.name, type = port.type, id = port.id;
	  if (port.type == "input") {
      // console.log("State change:", state);
      if (state == "connected") {
        var midiConnection = {  connected : true
                              , portType : port.type
                              , id : port.id
                              , manufacturer : port.manufacturer
                              , name : port.name
                              , version : port.version };

        port.onmidimessage = onMIDIMessage;
        connectionCallback(midiConnection)();
      }
      else if  (state == "disconnected") {
        var midiDisconnection = {  connected : false
                                 , portType : port.type
                                 , id : port.id
                                 , manufacturer : port.manufacturer
                                 , name : port.name
                                 , version : port.version };

        connectionCallback(midiDisconnection)();
        }
    }
}

  function onMIDIMessage (event) {
    // sourceId = event.srcElement.id;
    // console.log("MIDI Message");
    var encodedEvent = { timeStamp : event.timeStamp
                       , encodedBinary : encodeAsString(event.data)};
    messageCallback(encodedEvent)();
  };

  function encodeAsString (data) {
    var dataLength = data.length;
    var encoded = "";
    for (var i = 0; i < dataLength; i++) {
      encoded += String.fromCharCode(data[i]);
    }
    return encoded;
  };

  return {

    webMidiConnect: function () {
      return (navigator.requestMIDIAccess);
    },

    listenImpl: function (midiMessageCallback) {

      messageCallback = midiMessageCallback;

      return function () {
        // console.log('MIDIConnect - listen');
        // request MIDI access and then connect
        if (navigator.requestMIDIAccess) {
          navigator.requestMIDIAccess({
            sysex: false // this defaults to 'false' anyway.
          }).then(onMIDISuccessListen)
        }
      }
    },

    detectInputDevicesImpl: function (connectCallback) {

      connectionCallback = connectCallback;

      return function () {
        console.log('MIDIConnect - detect');
        // request MIDI access and then connect
        if (navigator.requestMIDIAccess) {
          navigator.requestMIDIAccess({
            sysex: false // this defaults to 'false' anyway.
          }).then(onMIDISuccessDetect)
        }
      }
    }
  }
}();

exports.webMidiConnect = wrapper.webMidiConnect;
exports.listen = wrapper.listenImpl;
exports.detectInputDevices = wrapper.detectInputDevicesImpl;

},{}],161:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Midi = require("../Data.Midi");
var Data_Midi_Parser = require("../Data.Midi.Parser");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var Signal_Channel = require("../Signal.Channel");
var timedMidiEvent = function (rme) {
    var v = Data_Midi_Parser.parseMidiEvent(rme.encodedBinary);
    if (v instanceof Data_Either.Left) {
        return {
            timeStamp: rme.timeStamp,
            event: Data_Maybe.Nothing.value
        };
    };
    if (v instanceof Data_Either.Right) {
        return {
            timeStamp: rme.timeStamp,
            event: new Data_Maybe.Just(v.value0)
        };
    };
    throw new Error("Failed pattern match at Data.Midi.WebMidi line 55, column 3 - line 65, column 8: " + [ v.constructor.name ]);
};
var sendEvent = function (chan) {
    return function (rme) {
        return Signal_Channel.send(chan)(timedMidiEvent(rme));
    };
};
var sendDevice = function (chan) {
    return function (d) {
        return Signal_Channel.send(chan)(d);
    };
};
var initialEvent = {
    timeStamp: 0.0,
    event: Data_Maybe.Nothing.value
};
var initialEventSignal = Signal.constant(initialEvent);
var initialDevice = {
    connected: false,
    portType: "",
    id: "",
    manufacturer: "",
    name: "",
    version: ""
};
var initialDeviceSignal = Signal.constant(initialDevice);
var eventSignal = function (rme) {
    return Signal.foldp(Data_Function.flip(Data_Function["const"]))(rme)(initialEventSignal);
};
var eventChannel = Signal_Channel.channel(initialEvent);
var deviceSignal = function (d) {
    return Signal.foldp(Data_Function.flip(Data_Function["const"]))(d)(initialDeviceSignal);
};
var deviceChannel = Signal_Channel.channel(initialDevice);
var createEventChannel = function __do() {
    var v = eventChannel();
    var v1 = $foreign.listen(sendEvent(v))();
    return v;
};
var createDeviceChannel = function __do() {
    var v = deviceChannel();
    var v1 = $foreign.detectInputDevices(sendDevice(v))();
    return v;
};
module.exports = {
    createDeviceChannel: createDeviceChannel,
    createEventChannel: createEventChannel,
    webMidiConnect: $foreign.webMidiConnect,
    detectInputDevices: $foreign.detectInputDevices,
    listen: $foreign.listen
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Data.Either":108,"../Data.Function":125,"../Data.Maybe":156,"../Data.Midi":162,"../Data.Midi.Parser":159,"../Prelude":263,"../Signal":271,"../Signal.Channel":265,"./foreign":160}],162:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_Generic_Rep_Eq = require("../Data.Generic.Rep.Eq");
var Data_Generic_Rep_Ord = require("../Data.Generic.Rep.Ord");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Data_Symbol = require("../Data.Symbol");
var Prelude = require("../Prelude");
var F0 = (function () {
    function F0() {

    };
    F0.value = new F0();
    return F0;
})();
var F7 = (function () {
    function F7() {

    };
    F7.value = new F7();
    return F7;
})();
var Header = (function () {
    function Header(value0) {
        this.value0 = value0;
    };
    Header.create = function (value0) {
        return new Header(value0);
    };
    return Header;
})();
var SequenceNumber = (function () {
    function SequenceNumber(value0) {
        this.value0 = value0;
    };
    SequenceNumber.create = function (value0) {
        return new SequenceNumber(value0);
    };
    return SequenceNumber;
})();
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();
var Copyright = (function () {
    function Copyright(value0) {
        this.value0 = value0;
    };
    Copyright.create = function (value0) {
        return new Copyright(value0);
    };
    return Copyright;
})();
var TrackName = (function () {
    function TrackName(value0) {
        this.value0 = value0;
    };
    TrackName.create = function (value0) {
        return new TrackName(value0);
    };
    return TrackName;
})();
var InstrumentName = (function () {
    function InstrumentName(value0) {
        this.value0 = value0;
    };
    InstrumentName.create = function (value0) {
        return new InstrumentName(value0);
    };
    return InstrumentName;
})();
var Lyrics = (function () {
    function Lyrics(value0) {
        this.value0 = value0;
    };
    Lyrics.create = function (value0) {
        return new Lyrics(value0);
    };
    return Lyrics;
})();
var Marker = (function () {
    function Marker(value0) {
        this.value0 = value0;
    };
    Marker.create = function (value0) {
        return new Marker(value0);
    };
    return Marker;
})();
var CuePoint = (function () {
    function CuePoint(value0) {
        this.value0 = value0;
    };
    CuePoint.create = function (value0) {
        return new CuePoint(value0);
    };
    return CuePoint;
})();
var ChannelPrefix = (function () {
    function ChannelPrefix(value0) {
        this.value0 = value0;
    };
    ChannelPrefix.create = function (value0) {
        return new ChannelPrefix(value0);
    };
    return ChannelPrefix;
})();
var Tempo = (function () {
    function Tempo(value0) {
        this.value0 = value0;
    };
    Tempo.create = function (value0) {
        return new Tempo(value0);
    };
    return Tempo;
})();
var SMPTEOffset = (function () {
    function SMPTEOffset(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    };
    SMPTEOffset.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return new SMPTEOffset(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return SMPTEOffset;
})();
var TimeSignature = (function () {
    function TimeSignature(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    TimeSignature.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new TimeSignature(value0, value1, value2, value3);
                };
            };
        };
    };
    return TimeSignature;
})();
var KeySignature = (function () {
    function KeySignature(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    KeySignature.create = function (value0) {
        return function (value1) {
            return new KeySignature(value0, value1);
        };
    };
    return KeySignature;
})();
var SequencerSpecific = (function () {
    function SequencerSpecific(value0) {
        this.value0 = value0;
    };
    SequencerSpecific.create = function (value0) {
        return new SequencerSpecific(value0);
    };
    return SequencerSpecific;
})();
var SysEx = (function () {
    function SysEx(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SysEx.create = function (value0) {
        return function (value1) {
            return new SysEx(value0, value1);
        };
    };
    return SysEx;
})();
var Unspecified = (function () {
    function Unspecified(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Unspecified.create = function (value0) {
        return function (value1) {
            return new Unspecified(value0, value1);
        };
    };
    return Unspecified;
})();
var NoteOn = (function () {
    function NoteOn(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    NoteOn.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new NoteOn(value0, value1, value2);
            };
        };
    };
    return NoteOn;
})();
var NoteOff = (function () {
    function NoteOff(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    NoteOff.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new NoteOff(value0, value1, value2);
            };
        };
    };
    return NoteOff;
})();
var NoteAfterTouch = (function () {
    function NoteAfterTouch(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    NoteAfterTouch.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new NoteAfterTouch(value0, value1, value2);
            };
        };
    };
    return NoteAfterTouch;
})();
var ControlChange = (function () {
    function ControlChange(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    ControlChange.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new ControlChange(value0, value1, value2);
            };
        };
    };
    return ControlChange;
})();
var ProgramChange = (function () {
    function ProgramChange(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ProgramChange.create = function (value0) {
        return function (value1) {
            return new ProgramChange(value0, value1);
        };
    };
    return ProgramChange;
})();
var ChannelAfterTouch = (function () {
    function ChannelAfterTouch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ChannelAfterTouch.create = function (value0) {
        return function (value1) {
            return new ChannelAfterTouch(value0, value1);
        };
    };
    return ChannelAfterTouch;
})();
var PitchBend = (function () {
    function PitchBend(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    PitchBend.create = function (value0) {
        return function (value1) {
            return new PitchBend(value0, value1);
        };
    };
    return PitchBend;
})();
var Message = (function () {
    function Message(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Message.create = function (value0) {
        return function (value1) {
            return new Message(value0, value1);
        };
    };
    return Message;
})();
var Track = (function () {
    function Track(value0) {
        this.value0 = value0;
    };
    Track.create = function (value0) {
        return new Track(value0);
    };
    return Track;
})();
var Recording = (function () {
    function Recording(value0) {
        this.value0 = value0;
    };
    Recording.create = function (value0) {
        return new Recording(value0);
    };
    return Recording;
})();
var TimedEvent = function (x) {
    return x;
};
var genericTrack = new Data_Generic_Rep.Generic(function (x) {
    return x.value0;
}, function (x) {
    return new Track(x);
});
var genericTimedEvent = new Data_Generic_Rep.Generic(function (x) {
    return new Data_Generic_Rep.Product(x.event, x.timeStamp);
}, function (x) {
    return {
        event: x.value0,
        timeStamp: x.value1
    };
});
var genericSysExFlavour = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof F0) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof F7) {
        return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
    };
    throw new Error("Failed pattern match at Data.Midi line 51, column 8 - line 51, column 62: " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return F0.value;
    };
    if (x instanceof Data_Generic_Rep.Inr) {
        return F7.value;
    };
    throw new Error("Failed pattern match at Data.Midi line 51, column 8 - line 51, column 62: " + [ x.constructor.name ]);
});
var showSysExFlavour = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericSysExFlavour)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "F0";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "F7";
})))));
var genericRecording = new Data_Generic_Rep.Generic(function (x) {
    return new Data_Generic_Rep.Product(x.value0.header, x.value0.tracks);
}, function (x) {
    return new Recording({
        header: x.value0,
        tracks: x.value1
    });
});
var genericMessage = new Data_Generic_Rep.Generic(function (x) {
    return new Data_Generic_Rep.Product(x.value0, x.value1);
}, function (x) {
    return new Message(x.value0, x.value1);
});
var genericHeader = new Data_Generic_Rep.Generic(function (x) {
    return new Data_Generic_Rep.Product(x.value0.formatType, new Data_Generic_Rep.Product(x.value0.ticksPerBeat, x.value0.trackCount));
}, function (x) {
    return new Header({
        formatType: x.value0,
        ticksPerBeat: x.value1.value0,
        trackCount: x.value1.value1
    });
});
var showHeader = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericHeader)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsRec(Data_Generic_Rep_Show.genericShowFieldsProduct(Data_Generic_Rep_Show.genericShowFieldsField(Data_Show.showInt)(new Data_Symbol.IsSymbol(function () {
    return "formatType";
})))(Data_Generic_Rep_Show.genericShowFieldsProduct(Data_Generic_Rep_Show.genericShowFieldsField(Data_Show.showInt)(new Data_Symbol.IsSymbol(function () {
    return "ticksPerBeat";
})))(Data_Generic_Rep_Show.genericShowFieldsField(Data_Show.showInt)(new Data_Symbol.IsSymbol(function () {
    return "trackCount";
}))))))(new Data_Symbol.IsSymbol(function () {
    return "Header";
}))));
var genericEvent = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof SequenceNumber) {
        return new Data_Generic_Rep.Inl(x.value0);
    };
    if (x instanceof Text) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
    };
    if (x instanceof Copyright) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
    };
    if (x instanceof TrackName) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
    };
    if (x instanceof InstrumentName) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
    };
    if (x instanceof Lyrics) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))));
    };
    if (x instanceof Marker) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))));
    };
    if (x instanceof CuePoint) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))));
    };
    if (x instanceof ChannelPrefix) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))));
    };
    if (x instanceof Tempo) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))));
    };
    if (x instanceof SMPTEOffset) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, new Data_Generic_Rep.Product(x.value2, new Data_Generic_Rep.Product(x.value3, x.value4)))))))))))))));
    };
    if (x instanceof TimeSignature) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, new Data_Generic_Rep.Product(x.value2, x.value3)))))))))))))));
    };
    if (x instanceof KeySignature) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))))))))))));
    };
    if (x instanceof SequencerSpecific) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))))))));
    };
    if (x instanceof SysEx) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))))))))))))));
    };
    if (x instanceof Unspecified) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))))))))))))))));
    };
    if (x instanceof NoteOn) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2)))))))))))))))))));
    };
    if (x instanceof NoteOff) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2))))))))))))))))))));
    };
    if (x instanceof NoteAfterTouch) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2)))))))))))))))))))));
    };
    if (x instanceof ControlChange) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2))))))))))))))))))))));
    };
    if (x instanceof ProgramChange) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))))))))))))))))))));
    };
    if (x instanceof ChannelAfterTouch) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))))))))))))))))))))));
    };
    if (x instanceof PitchBend) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Product(x.value0, x.value1)))))))))))))))))))))));
    };
    throw new Error("Failed pattern match at Data.Midi line 91, column 8 - line 91, column 48: " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return new SequenceNumber(x.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return new Text(x.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return new Copyright(x.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
        return new TrackName(x.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
        return new InstrumentName(x.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
        return new Lyrics(x.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
        return new Marker(x.value0.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
        return new CuePoint(x.value0.value0.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
        return new ChannelPrefix(x.value0.value0.value0.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
        return new Tempo(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))) {
        return new SMPTEOffset(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))) {
        return new TimeSignature(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))) {
        return new KeySignature(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))) {
        return new SequencerSpecific(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))) {
        return new SysEx(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))) {
        return new Unspecified(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))) {
        return new NoteOn(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))) {
        return new NoteOff(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))) {
        return new NoteAfterTouch(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))))) {
        return new ControlChange(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))))) {
        return new ProgramChange(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))))))) {
        return new ChannelAfterTouch(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr))))))))))))))))))))) {
        return new PitchBend(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
    };
    throw new Error("Failed pattern match at Data.Midi line 91, column 8 - line 91, column 48: " + [ x.constructor.name ]);
});
var showEvent = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericEvent)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
    return "SequenceNumber";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "Text";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "Copyright";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "TrackName";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "InstrumentName";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "Lyrics";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "Marker";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "CuePoint";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
    return "ChannelPrefix";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
    return "Tempo";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))))))(new Data_Symbol.IsSymbol(function () {
    return "SMPTEOffset";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt)))))(new Data_Symbol.IsSymbol(function () {
    return "TimeSignature";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt)))(new Data_Symbol.IsSymbol(function () {
    return "KeySignature";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_List_Types.showList(Data_Show.showInt)))(new Data_Symbol.IsSymbol(function () {
    return "SequencerSpecific";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(showSysExFlavour))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_List_Types.showList(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "SysEx";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_List_Types.showList(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "Unspecified";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "NoteOn";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "NoteOff";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "NoteAfterTouch";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
    return "ControlChange";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt)))(new Data_Symbol.IsSymbol(function () {
    return "ProgramChange";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt)))(new Data_Symbol.IsSymbol(function () {
    return "ChannelAfterTouch";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt)))(new Data_Symbol.IsSymbol(function () {
    return "PitchBend";
}))))))))))))))))))))))))));
var showMessage = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericMessage)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(Data_Generic_Rep_Show.genericShowArgsArgument(showEvent)))(new Data_Symbol.IsSymbol(function () {
    return "Message";
}))));
var showTrack = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericTrack)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_List_Types.showList(showMessage)))(new Data_Symbol.IsSymbol(function () {
    return "Track";
}))));
var showRecording = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericRecording)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsRec(Data_Generic_Rep_Show.genericShowFieldsProduct(Data_Generic_Rep_Show.genericShowFieldsField(showHeader)(new Data_Symbol.IsSymbol(function () {
    return "header";
})))(Data_Generic_Rep_Show.genericShowFieldsField(Data_List_Types.showList(showTrack))(new Data_Symbol.IsSymbol(function () {
    return "tracks";
})))))(new Data_Symbol.IsSymbol(function () {
    return "Recording";
}))));
var showTimedEvent = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericTimedEvent)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsRec(Data_Generic_Rep_Show.genericShowFieldsProduct(Data_Generic_Rep_Show.genericShowFieldsField(Data_Maybe.showMaybe(showEvent))(new Data_Symbol.IsSymbol(function () {
    return "event";
})))(Data_Generic_Rep_Show.genericShowFieldsField(Data_Show.showNumber)(new Data_Symbol.IsSymbol(function () {
    return "timeStamp";
})))))(new Data_Symbol.IsSymbol(function () {
    return "TimedEvent";
}))));
var eqSysExFlavour = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericSysExFlavour)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))));
var ordSysExFlavour = new Data_Ord.Ord(function () {
    return eqSysExFlavour;
}, Data_Generic_Rep_Ord.genericCompare(genericSysExFlavour)(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))));
var eqHeader = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericHeader)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqRec(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqField(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqField(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqField(Data_Eq.eqInt)))))));
var ordHeader = new Data_Ord.Ord(function () {
    return eqHeader;
}, Data_Generic_Rep_Ord.genericCompare(genericHeader)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdRec(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdField(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdField(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdField(Data_Ord.ordInt)))))));
var eqEvent = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericEvent)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqString)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_List_Types.eqList(Data_Eq.eqInt))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(eqSysExFlavour))(Data_Generic_Rep_Eq.genericEqArgument(Data_List_Types.eqList(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_List_Types.eqList(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt)))))))))))))))))))))))))));
var eqMessage = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericMessage)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqArgument(Data_Eq.eqInt))(Data_Generic_Rep_Eq.genericEqArgument(eqEvent)))));
var eqTrack = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericTrack)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqArgument(Data_List_Types.eqList(eqMessage)))));
var eqRecording = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericRecording)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqRec(Data_Generic_Rep_Eq.genericEqProduct(Data_Generic_Rep_Eq.genericEqField(eqHeader))(Data_Generic_Rep_Eq.genericEqField(Data_List_Types.eqList(eqTrack)))))));
var ordEvent = new Data_Ord.Ord(function () {
    return eqEvent;
}, Data_Generic_Rep_Ord.genericCompare(genericEvent)(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordString)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_List_Types.ordList(Data_Ord.ordInt))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(ordSysExFlavour))(Data_Generic_Rep_Ord.genericOrdArgument(Data_List_Types.ordList(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_List_Types.ordList(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))))(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt)))))))))))))))))))))))))));
var ordMessage = new Data_Ord.Ord(function () {
    return eqMessage;
}, Data_Generic_Rep_Ord.genericCompare(genericMessage)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdArgument(Data_Ord.ordInt))(Data_Generic_Rep_Ord.genericOrdArgument(ordEvent)))));
var ordTrack = new Data_Ord.Ord(function () {
    return eqTrack;
}, Data_Generic_Rep_Ord.genericCompare(genericTrack)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdArgument(Data_List_Types.ordList(ordMessage)))));
var ordRecording = new Data_Ord.Ord(function () {
    return eqRecording;
}, Data_Generic_Rep_Ord.genericCompare(genericRecording)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdRec(Data_Generic_Rep_Ord.genericOrdProduct(Data_Generic_Rep_Ord.genericOrdField(ordHeader))(Data_Generic_Rep_Ord.genericOrdField(Data_List_Types.ordList(ordTrack)))))));
module.exports = {
    Track: Track,
    Header: Header,
    SequenceNumber: SequenceNumber,
    Text: Text,
    Copyright: Copyright,
    TrackName: TrackName,
    InstrumentName: InstrumentName,
    Lyrics: Lyrics,
    Marker: Marker,
    CuePoint: CuePoint,
    ChannelPrefix: ChannelPrefix,
    Tempo: Tempo,
    SMPTEOffset: SMPTEOffset,
    TimeSignature: TimeSignature,
    KeySignature: KeySignature,
    SequencerSpecific: SequencerSpecific,
    SysEx: SysEx,
    Unspecified: Unspecified,
    NoteOn: NoteOn,
    NoteOff: NoteOff,
    NoteAfterTouch: NoteAfterTouch,
    ControlChange: ControlChange,
    ProgramChange: ProgramChange,
    ChannelAfterTouch: ChannelAfterTouch,
    PitchBend: PitchBend,
    TimedEvent: TimedEvent,
    Message: Message,
    Recording: Recording,
    F0: F0,
    F7: F7,
    genericSysExFlavour: genericSysExFlavour,
    showSysExFlavour: showSysExFlavour,
    eqSysExFlavour: eqSysExFlavour,
    ordSysExFlavour: ordSysExFlavour,
    genericEvent: genericEvent,
    showEvent: showEvent,
    eqEvent: eqEvent,
    ordEvent: ordEvent,
    genericTimedEvent: genericTimedEvent,
    showTimedEvent: showTimedEvent,
    genericMessage: genericMessage,
    showMessage: showMessage,
    eqMessage: eqMessage,
    ordMessage: ordMessage,
    genericTrack: genericTrack,
    showTrack: showTrack,
    eqTrack: eqTrack,
    ordTrack: ordTrack,
    genericHeader: genericHeader,
    showHeader: showHeader,
    eqHeader: eqHeader,
    ordHeader: ordHeader,
    genericRecording: genericRecording,
    showRecording: showRecording,
    eqRecording: eqRecording,
    ordRecording: ordRecording
};

},{"../Data.Eq":111,"../Data.Generic.Rep":136,"../Data.Generic.Rep.Eq":133,"../Data.Generic.Rep.Ord":134,"../Data.Generic.Rep.Show":135,"../Data.List":151,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Show":189,"../Data.Symbol":202,"../Prelude":263}],163:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Additive = function (x) {
    return x;
};
var showAdditive = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupAdditive = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.add(dictSemiring)(v)(v1);
        };
    });
};
var ordAdditive = function (dictOrd) {
    return dictOrd;
};
var newtypeAdditive = new Data_Newtype.Newtype(function (n) {
    return n;
}, Additive);
var monoidAdditive = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(dictSemiring);
    }, Data_Semiring.zero(dictSemiring));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorAdditive = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function (dictEq) {
    return dictEq;
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, Data_Newtype.unwrap(newtypeAdditive));
var boundedAdditive = function (dictBounded) {
    return dictBounded;
};
var applyAdditive = new Control_Apply.Apply(function () {
    return functorAdditive;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindAdditive = new Control_Bind.Bind(function () {
    return applyAdditive;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeAdditive = new Control_Applicative.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Control_Monad.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive,
    newtypeAdditive: newtypeAdditive,
    eqAdditive: eqAdditive,
    ordAdditive: ordAdditive,
    boundedAdditive: boundedAdditive,
    functorAdditive: functorAdditive,
    invariantAdditive: invariantAdditive,
    applyAdditive: applyAdditive,
    applicativeAdditive: applicativeAdditive,
    bindAdditive: bindAdditive,
    monadAdditive: monadAdditive,
    extendAdditive: extendAdditive,
    comonadAdditive: comonadAdditive,
    showAdditive: showAdditive,
    semigroupAdditive: semigroupAdditive,
    monoidAdditive: monoidAdditive
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Prelude":263}],164:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Conj = function (x) {
    return x;
};
var showConj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringConj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var semigroupConj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordConj = function (dictOrd) {
    return dictOrd;
};
var newtypeConj = new Data_Newtype.Newtype(function (n) {
    return n;
}, Conj);
var monoidConj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var invariantConj = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorConj = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function (dictEq) {
    return dictEq;
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, Data_Newtype.unwrap(newtypeConj));
var boundedConj = function (dictBounded) {
    return dictBounded;
};
var applyConj = new Control_Apply.Apply(function () {
    return functorConj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindConj = new Control_Bind.Bind(function () {
    return applyConj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeConj = new Control_Applicative.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Control_Monad.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj,
    newtypeConj: newtypeConj,
    eqConj: eqConj,
    ordConj: ordConj,
    boundedConj: boundedConj,
    functorConj: functorConj,
    invariantConj: invariantConj,
    applyConj: applyConj,
    applicativeConj: applicativeConj,
    bindConj: bindConj,
    monadConj: monadConj,
    extendConj: extendConj,
    comonadConj: comonadConj,
    showConj: showConj,
    semigroupConj: semigroupConj,
    monoidConj: monoidConj,
    semiringConj: semiringConj
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.HeytingAlgebra":141,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Prelude":263}],165:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Disj = function (x) {
    return x;
};
var showDisj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringDisj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var semigroupDisj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordDisj = function (dictOrd) {
    return dictOrd;
};
var newtypeDisj = new Data_Newtype.Newtype(function (n) {
    return n;
}, Disj);
var monoidDisj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var invariantDisj = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDisj = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function (dictEq) {
    return dictEq;
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, Data_Newtype.unwrap(newtypeDisj));
var boundedDisj = function (dictBounded) {
    return dictBounded;
};
var applyDisj = new Control_Apply.Apply(function () {
    return functorDisj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDisj = new Control_Bind.Bind(function () {
    return applyDisj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDisj = new Control_Applicative.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Control_Monad.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj,
    newtypeDisj: newtypeDisj,
    eqDisj: eqDisj,
    ordDisj: ordDisj,
    boundedDisj: boundedDisj,
    functorDisj: functorDisj,
    invariantDisj: invariantDisj,
    applyDisj: applyDisj,
    applicativeDisj: applicativeDisj,
    bindDisj: bindDisj,
    monadDisj: monadDisj,
    extendDisj: extendDisj,
    comonadDisj: comonadDisj,
    showDisj: showDisj,
    semigroupDisj: semigroupDisj,
    monoidDisj: monoidDisj,
    semiringDisj: semiringDisj
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.HeytingAlgebra":141,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Prelude":263}],166:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Dual = function (x) {
    return x;
};
var showDual = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupDual = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semigroup.append(dictSemigroup)(v1)(v);
        };
    });
};
var ordDual = function (dictOrd) {
    return dictOrd;
};
var newtypeDual = new Data_Newtype.Newtype(function (n) {
    return n;
}, Dual);
var monoidDual = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(dictMonoid.Semigroup0());
    }, Data_Monoid.mempty(dictMonoid));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDual = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function (dictEq) {
    return dictEq;
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, Data_Newtype.unwrap(newtypeDual));
var boundedDual = function (dictBounded) {
    return dictBounded;
};
var applyDual = new Control_Apply.Apply(function () {
    return functorDual;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDual = new Control_Bind.Bind(function () {
    return applyDual;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDual = new Control_Applicative.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Control_Monad.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual,
    newtypeDual: newtypeDual,
    eqDual: eqDual,
    ordDual: ordDual,
    boundedDual: boundedDual,
    functorDual: functorDual,
    invariantDual: invariantDual,
    applyDual: applyDual,
    applicativeDual: applicativeDual,
    bindDual: bindDual,
    monadDual: monadDual,
    extendDual: extendDual,
    comonadDual: comonadDual,
    showDual: showDual,
    semigroupDual: semigroupDual,
    monoidDual: monoidDual
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],167:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var Endo = function (x) {
    return x;
};
var semigroupEndo = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function ($11) {
            return v(v1($11));
        };
    };
});
var newtypeEndo = new Data_Newtype.Newtype(function (n) {
    return n;
}, Endo);
var monoidEndo = new Data_Monoid.Monoid(function () {
    return semigroupEndo;
}, Control_Category.id(Control_Category.categoryFn));
var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
    return function (ba) {
        return function (v) {
            return function ($12) {
                return ab(v(ba($12)));
            };
        };
    };
});
module.exports = {
    Endo: Endo,
    newtypeEndo: newtypeEndo,
    invariantEndo: invariantEndo,
    semigroupEndo: semigroupEndo,
    monoidEndo: monoidEndo
};

},{"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Functor.Invariant":128,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Prelude":263}],168:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupMultiplicative = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.mul(dictSemiring)(v)(v1);
        };
    });
};
var ordMultiplicative = function (dictOrd) {
    return dictOrd;
};
var newtypeMultiplicative = new Data_Newtype.Newtype(function (n) {
    return n;
}, Multiplicative);
var monoidMultiplicative = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(dictSemiring);
    }, Data_Semiring.one(dictSemiring));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorMultiplicative = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function (dictEq) {
    return dictEq;
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, Data_Newtype.unwrap(newtypeMultiplicative));
var boundedMultiplicative = function (dictBounded) {
    return dictBounded;
};
var applyMultiplicative = new Control_Apply.Apply(function () {
    return functorMultiplicative;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindMultiplicative = new Control_Bind.Bind(function () {
    return applyMultiplicative;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Control_Monad.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative,
    newtypeMultiplicative: newtypeMultiplicative,
    eqMultiplicative: eqMultiplicative,
    ordMultiplicative: ordMultiplicative,
    boundedMultiplicative: boundedMultiplicative,
    functorMultiplicative: functorMultiplicative,
    invariantMultiplicative: invariantMultiplicative,
    applyMultiplicative: applyMultiplicative,
    applicativeMultiplicative: applicativeMultiplicative,
    bindMultiplicative: bindMultiplicative,
    monadMultiplicative: monadMultiplicative,
    extendMultiplicative: extendMultiplicative,
    comonadMultiplicative: comonadMultiplicative,
    showMultiplicative: showMultiplicative,
    semigroupMultiplicative: semigroupMultiplicative,
    monoidMultiplicative: monoidMultiplicative
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Monad":54,"../Data.Bounded":93,"../Data.Eq":111,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Prelude":263}],169:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Monoid = function (Semigroup0, mempty) {
    this.Semigroup0 = Semigroup0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Data_Semigroup.semigroupUnit;
}, Data_Unit.unit);
var monoidString = new Monoid(function () {
    return Data_Semigroup.semigroupString;
}, "");
var monoidOrdering = new Monoid(function () {
    return Data_Ordering.semigroupOrdering;
}, Data_Ordering.EQ.value);
var monoidArray = new Monoid(function () {
    return Data_Semigroup.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (dictMonoid) {
    return new Monoid(function () {
        return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
    }, Data_Function["const"](mempty(dictMonoid)));
};
var power = function (dictMonoid) {
    return function (x) {
        var go = function (p) {
            if (p <= 0) {
                return mempty(dictMonoid);
            };
            if (p === 1) {
                return x;
            };
            if (p % 2 === 0) {
                var x$prime = go(p / 2 | 0);
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
            };
            if (Data_Boolean.otherwise) {
                var x$prime = go(p / 2 | 0);
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
            };
            throw new Error("Failed pattern match at Data.Monoid line 52, column 3 - line 52, column 17: " + [ p.constructor.name ]);
        };
        return go;
    };
};
var guard = function (dictMonoid) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return mempty(dictMonoid);
            };
            throw new Error("Failed pattern match at Data.Monoid line 60, column 1 - line 60, column 49: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
module.exports = {
    Monoid: Monoid,
    mempty: mempty,
    power: power,
    guard: guard,
    monoidUnit: monoidUnit,
    monoidOrdering: monoidOrdering,
    monoidFn: monoidFn,
    monoidString: monoidString,
    monoidArray: monoidArray
};

},{"../Data.Boolean":90,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Unit":220,"../Prelude":263}],170:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67}],171:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Prelude = require("../Prelude");
var Newtype = function (unwrap, wrap) {
    this.unwrap = unwrap;
    this.wrap = wrap;
};
var wrap = function (dict) {
    return dict.wrap;
};
var unwrap = function (dict) {
    return dict.unwrap;
};
var underF2 = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($50) {
                            return function ($51) {
                                return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(wrap(dictNewtype)))($50)($51));
                            };
                        };
                    };
                };
            };
        };
    };
};
var underF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($52) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($52)));
                        };
                    };
                };
            };
        };
    };
};
var under2 = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($53) {
                    return function ($54) {
                        return unwrap(dictNewtype1)(Data_Function.on(f)(wrap(dictNewtype))($53)($54));
                    };
                };
            };
        };
    };
};
var under = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($55) {
                    return unwrap(dictNewtype1)(f(wrap(dictNewtype)($55)));
                };
            };
        };
    };
};
var un = function (dictNewtype) {
    return function (v) {
        return unwrap(dictNewtype);
    };
};
var traverse = function (dictFunctor) {
    return function (dictNewtype) {
        return function (v) {
            return function (f) {
                return function ($56) {
                    return Data_Functor.map(dictFunctor)(wrap(dictNewtype))(f(unwrap(dictNewtype)($56)));
                };
            };
        };
    };
};
var overF2 = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($57) {
                            return function ($58) {
                                return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(unwrap(dictNewtype)))($57)($58));
                            };
                        };
                    };
                };
            };
        };
    };
};
var overF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($59) {
                            return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($59)));
                        };
                    };
                };
            };
        };
    };
};
var over2 = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($60) {
                    return function ($61) {
                        return wrap(dictNewtype1)(Data_Function.on(f)(unwrap(dictNewtype))($60)($61));
                    };
                };
            };
        };
    };
};
var over = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($62) {
                    return wrap(dictNewtype1)(f(unwrap(dictNewtype)($62)));
                };
            };
        };
    };
};
var op = function (dictNewtype) {
    return un(dictNewtype);
};
var collect = function (dictFunctor) {
    return function (dictNewtype) {
        return function (v) {
            return function (f) {
                return function ($63) {
                    return wrap(dictNewtype)(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($63)));
                };
            };
        };
    };
};
var alaF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($64) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                        };
                    };
                };
            };
        };
    };
};
var ala = function (dictFunctor) {
    return function (dictNewtype) {
        return function (dictNewtype1) {
            return function (v) {
                return function (f) {
                    return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
                };
            };
        };
    };
};
module.exports = {
    unwrap: unwrap,
    wrap: wrap,
    Newtype: Newtype,
    un: un,
    op: op,
    ala: ala,
    alaF: alaF,
    over: over,
    overF: overF,
    under: under,
    underF: underF,
    over2: over2,
    overF2: overF2,
    under2: under2,
    underF2: underF2,
    traverse: traverse,
    collect: collect
};

},{"../Control.Semigroupoid":60,"../Data.Function":125,"../Data.Functor":130,"../Prelude":263}],172:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unfoldable1 = require("../Data.Unfoldable1");
var Prelude = require("../Prelude");
var NonEmpty = (function () {
    function NonEmpty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    NonEmpty.create = function (value0) {
        return function (value1) {
            return new NonEmpty(value0, value1);
        };
    };
    return NonEmpty;
})();
var unfoldable1NonEmpty = function (dictUnfoldable) {
    return new Data_Unfoldable1.Unfoldable1(function (f) {
        return function (b) {
            return Data_Tuple.uncurry(NonEmpty.create)(Data_Functor.map(Data_Tuple.functorTuple)(Data_Unfoldable.unfoldr(dictUnfoldable)(Data_Functor.map(Data_Maybe.functorMaybe)(f)))(f(b)));
        };
    });
};
var tail = function (v) {
    return v.value1;
};
var singleton = function (dictPlus) {
    return function (a) {
        return new NonEmpty(a, Control_Plus.empty(dictPlus));
    };
};
var showNonEmpty = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var oneOf = function (dictAlternative) {
    return function (v) {
        return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
    };
};
var head = function (v) {
    return v.value0;
};
var functorNonEmpty = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return new NonEmpty(f(v.value0), Data_Functor.map(dictFunctor)(f)(v.value1));
        };
    });
};
var functorWithIndex = function (dictFunctorWithIndex) {
    return new Data_FunctorWithIndex.FunctorWithIndex(function () {
        return functorNonEmpty(dictFunctorWithIndex.Functor0());
    }, function (f) {
        return function (v) {
            return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($140) {
                return f(Data_Maybe.Just.create($140));
            })(v.value1));
        };
    });
};
var fromNonEmpty = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var foldl1 = function (dictFoldable) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
        };
    };
};
var foldableNonEmpty = function (dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
        return function (f) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
            };
        };
    });
};
var foldableWithIndexNonEmpty = function (dictFoldableWithIndex) {
    return new Data_FoldableWithIndex.FoldableWithIndex(function () {
        return foldableNonEmpty(dictFoldableWithIndex.Foldable0());
    }, function (dictMonoid) {
        return function (f) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(Data_Maybe.Nothing.value)(v.value0))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($141) {
                    return f(Data_Maybe.Just.create($141));
                })(v.value1));
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($142) {
                    return f(Data_Maybe.Just.create($142));
                })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return f(Data_Maybe.Nothing.value)(v.value0)(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function ($143) {
                    return f(Data_Maybe.Just.create($143));
                })(b)(v.value1));
            };
        };
    });
};
var traversableNonEmpty = function (dictTraversable) {
    return new Data_Traversable.Traversable(function () {
        return foldableNonEmpty(dictTraversable.Foldable1());
    }, function () {
        return functorNonEmpty(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
        };
    }, function (dictApplicative) {
        return function (f) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
            };
        };
    });
};
var traversableWithIndexNonEmpty = function (dictTraversableWithIndex) {
    return new Data_TraversableWithIndex.TraversableWithIndex(function () {
        return foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());
    }, function () {
        return functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
    }, function () {
        return traversableNonEmpty(dictTraversableWithIndex.Traversable2());
    }, function (dictApplicative) {
        return function (f) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($144) {
                    return f(Data_Maybe.Just.create($144));
                })(v.value1));
            };
        };
    });
};
var foldable1NonEmpty = function (dictFoldable) {
    return new Data_Semigroup_Foldable.Foldable1(function () {
        return foldableNonEmpty(dictFoldable);
    }, function (dictSemigroup) {
        return foldMap1(dictSemigroup)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    }, function (dictSemigroup) {
        return function (f) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(function (s) {
                    return function (a1) {
                        return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
                    };
                })(f(v.value0))(v.value1);
            };
        };
    });
};
var foldMap1 = function (dictSemigroup) {
    return function (dictFoldable) {
        return Data_Semigroup_Foldable.foldMap1(foldable1NonEmpty(dictFoldable))(dictSemigroup);
    };
};
var fold1 = function (dictSemigroup) {
    return function (dictFoldable) {
        return Data_Semigroup_Foldable.fold1(foldable1NonEmpty(dictFoldable))(dictSemigroup);
    };
};
var eq1NonEmpty = function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
        return function (v) {
            return function (v1) {
                return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq1(dictEq1)(dictEq)(v.value1)(v1.value1);
            };
        };
    });
};
var eqNonEmpty = function (dictEq1) {
    return function (dictEq) {
        return new Data_Eq.Eq(Data_Eq.eq1(eq1NonEmpty(dictEq1))(dictEq));
    };
};
var ord1NonEmpty = function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
        return eq1NonEmpty(dictOrd1.Eq10());
    }, function (dictOrd) {
        return function (v) {
            return function (v1) {
                var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                if (v2 instanceof Data_Ordering.EQ) {
                    return Data_Ord.compare1(dictOrd1)(dictOrd)(v.value1)(v1.value1);
                };
                return v2;
            };
        };
    });
};
var ordNonEmpty = function (dictOrd1) {
    return function (dictOrd) {
        return new Data_Ord.Ord(function () {
            return eqNonEmpty(dictOrd1.Eq10())(dictOrd.Eq0());
        }, Data_Ord.compare1(ord1NonEmpty(dictOrd1))(dictOrd));
    };
};
module.exports = {
    NonEmpty: NonEmpty,
    singleton: singleton,
    foldl1: foldl1,
    foldMap1: foldMap1,
    fold1: fold1,
    fromNonEmpty: fromNonEmpty,
    oneOf: oneOf,
    head: head,
    tail: tail,
    showNonEmpty: showNonEmpty,
    eqNonEmpty: eqNonEmpty,
    eq1NonEmpty: eq1NonEmpty,
    ordNonEmpty: ordNonEmpty,
    ord1NonEmpty: ord1NonEmpty,
    functorNonEmpty: functorNonEmpty,
    functorWithIndex: functorWithIndex,
    foldableNonEmpty: foldableNonEmpty,
    foldableWithIndexNonEmpty: foldableWithIndexNonEmpty,
    traversableNonEmpty: traversableNonEmpty,
    traversableWithIndexNonEmpty: traversableWithIndexNonEmpty,
    foldable1NonEmpty: foldable1NonEmpty,
    unfoldable1NonEmpty: unfoldable1NonEmpty
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Foldable":116,"../Data.FoldableWithIndex":117,"../Data.Function":125,"../Data.Functor":130,"../Data.FunctorWithIndex":132,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Show":189,"../Data.Traversable":209,"../Data.TraversableWithIndex":210,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Data.Unfoldable1":218,"../Prelude":263}],173:[function(require,module,exports){
"use strict";

exports["null"] = null;

exports.nullable = function (a, r, f) {
  return a == null ? r : f(a);
};

exports.notNull = function (x) {
  return x;
};

},{}],174:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
var toMaybe = function (n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};
var showNullable = function (dictShow) {
    return new Data_Show.Show(function ($5) {
        return Data_Maybe.maybe("null")(Data_Show.show(dictShow))(toMaybe($5));
    });
};
var eqNullable = function (dictEq) {
    return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
};
var ordNullable = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqNullable(dictOrd.Eq0());
    }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
};
var eq1Nullable = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqNullable(dictEq));
});
var ord1Nullable = new Data_Ord.Ord1(function () {
    return eq1Nullable;
}, function (dictOrd) {
    return Data_Ord.compare(ordNullable(dictOrd));
});
module.exports = {
    toMaybe: toMaybe,
    toNullable: toNullable,
    showNullable: showNullable,
    eqNullable: eqNullable,
    eq1Nullable: eq1Nullable,
    ordNullable: ordNullable,
    ord1Nullable: ord1Nullable
};

},{"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Show":189,"../Prelude":263,"./foreign":173}],175:[function(require,module,exports){
"use strict";

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x === y ? eq : gt;
        };
      };
    };
  };
};

},{}],176:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Ordering = require("../Data.Ordering");
var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
    unsafeCompare: unsafeCompare
};

},{"../Data.Ordering":179,"./foreign":175}],177:[function(require,module,exports){
"use strict";

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

},{}],178:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Eq = require("../Data.Eq");
var Data_Ord_Unsafe = require("../Data.Ord.Unsafe");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Ord = function (Eq0, compare) {
    this.Eq0 = Eq0;
    this.compare = compare;
};
var Ord1 = function (Eq10, compare1) {
    this.Eq10 = Eq10;
    this.compare1 = compare1;
};
var ordVoid = new Ord(function () {
    return Data_Eq.eqVoid;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordUnit = new Ord(function () {
    return Data_Eq.eqUnit;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordString = new Ord(function () {
    return Data_Eq.eqString;
}, Data_Ord_Unsafe.unsafeCompare);
var ordOrdering = new Ord(function () {
    return Data_Ordering.eqOrdering;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        throw new Error("Failed pattern match at Data.Ord line 67, column 1 - line 67, column 37: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordNumber = new Ord(function () {
    return Data_Eq.eqNumber;
}, Data_Ord_Unsafe.unsafeCompare);
var ordInt = new Ord(function () {
    return Data_Eq.eqInt;
}, Data_Ord_Unsafe.unsafeCompare);
var ordChar = new Ord(function () {
    return Data_Eq.eqChar;
}, Data_Ord_Unsafe.unsafeCompare);
var ordBoolean = new Ord(function () {
    return Data_Eq.eqBoolean;
}, Data_Ord_Unsafe.unsafeCompare);
var compare1 = function (dict) {
    return dict.compare1;
};
var compare = function (dict) {
    return dict.compare;
};
var comparing = function (dictOrd) {
    return function (f) {
        return function (x) {
            return function (y) {
                return compare(dictOrd)(f(x))(f(y));
            };
        };
    };
};
var greaterThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return true;
            };
            return false;
        };
    };
};
var greaterThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return false;
            };
            return true;
        };
    };
};
var signum = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $33 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($33) {
                return Data_Semiring.one(dictRing.Semiring0());
            };
            return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
        };
    };
};
var lessThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return true;
            };
            return false;
        };
    };
};
var lessThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return false;
            };
            return true;
        };
    };
};
var max = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return y;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return x;
            };
            throw new Error("Failed pattern match at Data.Ord line 122, column 3 - line 125, column 12: " + [ v.constructor.name ]);
        };
    };
};
var min = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return x;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return y;
            };
            throw new Error("Failed pattern match at Data.Ord line 113, column 3 - line 116, column 12: " + [ v.constructor.name ]);
        };
    };
};
var ordArray = function (dictOrd) {
    return new Ord(function () {
        return Data_Eq.eqArray(dictOrd.Eq0());
    }, (function () {
        var toDelta = function (x) {
            return function (y) {
                var v = compare(dictOrd)(x)(y);
                if (v instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if (v instanceof Data_Ordering.LT) {
                    return 1;
                };
                if (v instanceof Data_Ordering.GT) {
                    return -1 | 0;
                };
                throw new Error("Failed pattern match at Data.Ord line 60, column 7 - line 65, column 1: " + [ v.constructor.name ]);
            };
        };
        return function (xs) {
            return function (ys) {
                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
            };
        };
    })());
};
var ord1Array = new Ord1(function () {
    return Data_Eq.eq1Array;
}, function (dictOrd) {
    return compare(ordArray(dictOrd));
});
var clamp = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
            };
        };
    };
};
var between = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                if (lessThan(dictOrd)(x)(low)) {
                    return false;
                };
                if (greaterThan(dictOrd)(x)(hi)) {
                    return false;
                };
                return true;
            };
        };
    };
};
var abs = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $42 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($42) {
                return x;
            };
            return Data_Ring.negate(dictRing)(x);
        };
    };
};
module.exports = {
    Ord: Ord,
    compare: compare,
    Ord1: Ord1,
    compare1: compare1,
    lessThan: lessThan,
    lessThanOrEq: lessThanOrEq,
    greaterThan: greaterThan,
    greaterThanOrEq: greaterThanOrEq,
    comparing: comparing,
    min: min,
    max: max,
    clamp: clamp,
    between: between,
    abs: abs,
    signum: signum,
    ordBoolean: ordBoolean,
    ordInt: ordInt,
    ordNumber: ordNumber,
    ordString: ordString,
    ordChar: ordChar,
    ordUnit: ordUnit,
    ordVoid: ordVoid,
    ordArray: ordArray,
    ordOrdering: ordOrdering,
    ord1Array: ord1Array
};

},{"../Data.Eq":111,"../Data.Ord.Unsafe":176,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Unit":220,"../Data.Void":225,"./foreign":177}],179:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var showOrdering = new Data_Show.Show(function (v) {
    if (v instanceof LT) {
        return "LT";
    };
    if (v instanceof GT) {
        return "GT";
    };
    if (v instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Data.Ordering line 26, column 1 - line 26, column 39: " + [ v.constructor.name ]);
});
var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        if (v instanceof EQ) {
            return v1;
        };
        throw new Error("Failed pattern match at Data.Ordering line 21, column 1 - line 21, column 49: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invert = function (v) {
    if (v instanceof GT) {
        return LT.value;
    };
    if (v instanceof EQ) {
        return EQ.value;
    };
    if (v instanceof LT) {
        return GT.value;
    };
    throw new Error("Failed pattern match at Data.Ordering line 33, column 1 - line 33, column 31: " + [ v.constructor.name ]);
};
var eqOrdering = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return true;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return true;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return true;
        };
        return false;
    };
});
module.exports = {
    LT: LT,
    GT: GT,
    EQ: EQ,
    invert: invert,
    eqOrdering: eqOrdering,
    semigroupOrdering: semigroupOrdering,
    showOrdering: showOrdering
};

},{"../Data.Eq":111,"../Data.Semigroup":185,"../Data.Show":189}],180:[function(require,module,exports){
"use strict";

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

},{}],181:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Ring = function (Semiring0, sub) {
    this.Semiring0 = Semiring0;
    this.sub = sub;
};
var sub = function (dict) {
    return dict.sub;
};
var ringUnit = new Ring(function () {
    return Data_Semiring.semiringUnit;
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var ringNumber = new Ring(function () {
    return Data_Semiring.semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return Data_Semiring.semiringInt;
}, $foreign.intSub);
var ringFn = function (dictRing) {
    return new Ring(function () {
        return Data_Semiring.semiringFn(dictRing.Semiring0());
    }, function (f) {
        return function (g) {
            return function (x) {
                return sub(dictRing)(f(x))(g(x));
            };
        };
    });
};
var negate = function (dictRing) {
    return function (a) {
        return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
    };
};
module.exports = {
    Ring: Ring,
    sub: sub,
    negate: negate,
    ringInt: ringInt,
    ringNumber: ringNumber,
    ringUnit: ringUnit,
    ringFn: ringFn
};

},{"../Data.Semiring":187,"../Data.Unit":220,"./foreign":180}],182:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Act = function (x) {
    return x;
};
var Foldable1 = function (Foldable0, fold1, foldMap1) {
    this.Foldable0 = Foldable0;
    this.fold1 = fold1;
    this.foldMap1 = foldMap1;
};
var semigroupAct = function (dictApply) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Control_Apply.applySecond(dictApply)(v)(v1);
        };
    });
};
var getAct = function (v) {
    return v;
};
var foldMap1 = function (dict) {
    return dict.foldMap1;
};
var traverse1_ = function (dictFoldable1) {
    return function (dictApply) {
        return function (f) {
            return function (t) {
                return Data_Functor.voidRight(dictApply.Functor0())(Data_Unit.unit)(getAct(foldMap1(dictFoldable1)(semigroupAct(dictApply))(function ($28) {
                    return Act(f($28));
                })(t)));
            };
        };
    };
};
var for1_ = function (dictFoldable1) {
    return function (dictApply) {
        return Data_Function.flip(traverse1_(dictFoldable1)(dictApply));
    };
};
var sequence1_ = function (dictFoldable1) {
    return function (dictApply) {
        return traverse1_(dictFoldable1)(dictApply)(Control_Category.id(Control_Category.categoryFn));
    };
};
var fold1Default = function (dictFoldable1) {
    return function (dictSemigroup) {
        return foldMap1(dictFoldable1)(dictSemigroup)(Control_Category.id(Control_Category.categoryFn));
    };
};
var foldableDual = new Foldable1(function () {
    return Data_Foldable.foldableDual;
}, function (dictSemigroup) {
    return fold1Default(foldableDual)(dictSemigroup);
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
});
var foldableMultiplicative = new Foldable1(function () {
    return Data_Foldable.foldableMultiplicative;
}, function (dictSemigroup) {
    return fold1Default(foldableMultiplicative)(dictSemigroup);
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
});
var fold1 = function (dict) {
    return dict.fold1;
};
var foldMap1Default = function (dictFoldable1) {
    return function (dictFunctor) {
        return function (dictSemigroup) {
            return function (f) {
                return function ($29) {
                    return fold1(dictFoldable1)(dictSemigroup)(Data_Functor.map(dictFunctor)(f)($29));
                };
            };
        };
    };
};
module.exports = {
    Foldable1: Foldable1,
    foldMap1: foldMap1,
    fold1: fold1,
    traverse1_: traverse1_,
    for1_: for1_,
    sequence1_: sequence1_,
    foldMap1Default: foldMap1Default,
    fold1Default: fold1Default,
    foldableDual: foldableDual,
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Apply":6,"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Monoid.Dual":166,"../Data.Monoid.Multiplicative":168,"../Data.Semigroup":185,"../Data.Unit":220,"../Prelude":263}],183:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Functor = require("../Data.Functor");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Traversable1 = function (Foldable10, Traversable1, sequence1, traverse1) {
    this.Foldable10 = Foldable10;
    this.Traversable1 = Traversable1;
    this.sequence1 = sequence1;
    this.traverse1 = traverse1;
};
var traverse1 = function (dict) {
    return dict.traverse1;
};
var sequence1Default = function (dictTraversable1) {
    return function (dictApply) {
        return traverse1(dictTraversable1)(dictApply)(Control_Category.id(Control_Category.categoryFn));
    };
};
var sequence1 = function (dict) {
    return dict.sequence1;
};
var traverse1Default = function (dictTraversable1) {
    return function (dictApply) {
        return function (f) {
            return function (ta) {
                return sequence1(dictTraversable1)(dictApply)(Data_Functor.map((dictTraversable1.Traversable1()).Functor0())(f)(ta));
            };
        };
    };
};
module.exports = {
    sequence1: sequence1,
    traverse1: traverse1,
    Traversable1: Traversable1,
    traverse1Default: traverse1Default,
    sequence1Default: sequence1Default
};

},{"../Control.Category":11,"../Data.Functor":130,"../Data.Semigroup.Foldable":182,"../Data.Traversable":209,"../Prelude":263}],184:[function(require,module,exports){
"use strict";

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    if (xs.length === 0) return ys;
    if (ys.length === 0) return xs;
    return xs.concat(ys);
  };
};

},{}],185:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Semigroup = function (append) {
    this.append = append;
};
var semigroupVoid = new Semigroup(function (v) {
    return Data_Void.absurd;
});
var semigroupUnit = new Semigroup(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupArray = new Semigroup($foreign.concatArray);
var append = function (dict) {
    return dict.append;
};
var semigroupFn = function (dictSemigroup) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return append(dictSemigroup)(f(x))(g(x));
            };
        };
    });
};
module.exports = {
    Semigroup: Semigroup,
    append: append,
    semigroupString: semigroupString,
    semigroupUnit: semigroupUnit,
    semigroupVoid: semigroupVoid,
    semigroupFn: semigroupFn,
    semigroupArray: semigroupArray
};

},{"../Data.Unit":220,"../Data.Void":225,"./foreign":184}],186:[function(require,module,exports){
"use strict";

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

},{}],187:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var zero = function (dict) {
    return dict.zero;
};
var semiringUnit = new Semiring(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, Data_Unit.unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var one = function (dict) {
    return dict.one;
};
var mul = function (dict) {
    return dict.mul;
};
var add = function (dict) {
    return dict.add;
};
var semiringFn = function (dictSemiring) {
    return new Semiring(function (f) {
        return function (g) {
            return function (x) {
                return add(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (f) {
        return function (g) {
            return function (x) {
                return mul(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (v) {
        return one(dictSemiring);
    }, function (v) {
        return zero(dictSemiring);
    });
};
module.exports = {
    Semiring: Semiring,
    add: add,
    zero: zero,
    mul: mul,
    one: one,
    semiringInt: semiringInt,
    semiringNumber: semiringNumber,
    semiringFn: semiringFn,
    semiringUnit: semiringUnit
};

},{"../Data.Unit":220,"./foreign":186}],188:[function(require,module,exports){
"use strict";

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  var str = n.toString();
  return isNaN(str + ".0") ? str : str + ".0";
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);
  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07": return "'\\a'";
      case "\b": return "'\\b'";
      case "\f": return "'\\f'";
      case "\n": return "'\\n'";
      case "\r": return "'\\r'";
      case "\t": return "'\\t'";
      case "\v": return "'\\v'";
    }
    return "'\\" + code.toString(10) + "'";
  }
  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(
    /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
    function (c, i) {
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;
        case "\x07": return "\\a";
        case "\b": return "\\b";
        case "\f": return "\\f";
        case "\n": return "\\n";
        case "\r": return "\\r";
        case "\t": return "\\t";
        case "\v": return "\\v";
      }
      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }
  ) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],189:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Show = function (show) {
    this.show = show;
};
var showString = new Show($foreign.showStringImpl);
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
    if (v) {
        return "true";
    };
    if (!v) {
        return "false";
    };
    throw new Error("Failed pattern match at Data.Show line 12, column 1 - line 12, column 37: " + [ v.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
};
module.exports = {
    Show: Show,
    show: show,
    showBoolean: showBoolean,
    showInt: showInt,
    showNumber: showNumber,
    showChar: showChar,
    showString: showString,
    showArray: showArray
};

},{"./foreign":188}],190:[function(require,module,exports){
"use strict";

exports["new"] = function () {
  return {};
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (m) {
      return function (k) {
        return function () {
          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (m) {
  return function (k) {
    return function (v) {
      return function () {
        m[k] = v;
        return m;
      };
    };
  };
};

exports["delete"] = function (m) {
  return function (k) {
    return function () {
      delete m[k];
      return m;
    };
  };
};

},{}],191:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Data_Maybe = require("../Data.Maybe");
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    peek: peek,
    "new": $foreign["new"],
    poke: $foreign.poke,
    "delete": $foreign["delete"]
};

},{"../Control.Monad.Eff":40,"../Control.Monad.ST":49,"../Data.Maybe":156,"./foreign":190}],192:[function(require,module,exports){
"use strict";

exports._copyEff = function (m) {
  return function () {
    var r = {};
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r[k] = m[k];
      }
    }
    return r;
  };
};

exports.empty = {};

exports.runST = function (f) {
  return f;
};

exports._fmapStrMap = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(m0[k]);
    }
  }
  return m;
};

exports._mapWithKey = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(k)(m0[k]);
    }
  }
  return m;
};

exports._foldM = function (bind) {
  return function (f) {
    return function (mz) {
      return function (m) {
        var acc = mz;
        function g(k) {
          return function (z) {
            return f(z)(k)(m[k]);
          };
        }
        for (var k in m) {
          if (hasOwnProperty.call(m, k)) {
            acc = bind(acc)(g(k));
          }
        }
        return acc;
      };
    };
  };
};

exports._foldSCStrMap = function (m, z, f, fromMaybe) {
  var acc = z;
  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      var maybeR = f(acc)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return acc;
      else acc = r;
    }
  }
  return acc;
};

exports.all = function (f) {
  return function (m) {
    for (var k in m) {
      if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
    }
    return true;
  };
};

exports.size = function (m) {
  var s = 0;
  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      ++s;
    }
  }
  return s;
};

exports._lookup = function (no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
};

exports._unsafeDeleteStrMap = function (m, k) {
  delete m[k];
  return m;
};

exports._lookupST = function (no, yes, k, m) {
  return function () {
    return k in m ? yes(m[k]) : no;
  };
};

function toArrayWithKey(f) {
  return function (m) {
    var r = [];
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r.push(f(k)(m[k]));
      }
    }
    return r;
  };
}

exports.toArrayWithKey = toArrayWithKey;

exports.keys = Object.keys || toArrayWithKey(function (k) {
  return function () { return k; };
});

},{}],193:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_StrMap_ST = require("../Data.StrMap.ST");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Prelude = require("../Prelude");
var values = $foreign.toArrayWithKey(function (v) {
    return function (v1) {
        return v1;
    };
});
var toUnfoldable = function (dictUnfoldable) {
    return function ($46) {
        return Data_Array.toUnfoldable(dictUnfoldable)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($46));
    };
};
var toAscUnfoldable = function (dictUnfoldable) {
    return function ($47) {
        return Data_Array.toUnfoldable(dictUnfoldable)(Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($47)));
    };
};
var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
var toArray = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
var thawST = $foreign._copyEff;
var showStrMap = function (dictShow) {
    return new Data_Show.Show(function (m) {
        return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toArray(m)) + ")");
    });
};
var pureST = function (f) {
    return Control_Monad_Eff.runPure($foreign.runST(f));
};
var singleton = function (k) {
    return function (v) {
        return pureST(function __do() {
            var v1 = Data_StrMap_ST["new"]();
            return Data_StrMap_ST.poke(v1)(k)(v)();
        });
    };
};
var mutate = function (f) {
    return function (m) {
        return pureST(function __do() {
            var v = thawST(m)();
            var v1 = f(v)();
            return v;
        });
    };
};
var member = Data_Function_Uncurried.runFn4($foreign._lookup)(false)(Data_Function["const"](true));
var mapWithKey = function (f) {
    return function (m) {
        return $foreign._mapWithKey(m, f);
    };
};
var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var isSubmap = function (dictEq) {
    return function (m1) {
        return function (m2) {
            var f = function (k) {
                return function (v) {
                    return $foreign._lookup(false, Data_Eq.eq(dictEq)(v), k, m2);
                };
            };
            return $foreign.all(f)(m1);
        };
    };
};
var isEmpty = $foreign.all(function (v) {
    return function (v1) {
        return false;
    };
});
var insert = function (k) {
    return function (v) {
        return mutate(function (s) {
            return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(s)(k)(v));
        });
    };
};
var functorStrMap = new Data_Functor.Functor(function (f) {
    return function (m) {
        return $foreign._fmapStrMap(m, f);
    };
});
var functorWithIndexStrMap = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorStrMap;
}, mapWithKey);
var fromFoldableWith = function (dictFoldable) {
    return function (f) {
        return function (l) {
            return pureST(function __do() {
                var v = Data_StrMap_ST["new"]();
                Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
                    return Control_Bind.bind(Control_Monad_Eff.bindEff)($foreign._lookupST(v1.value1, f(v1.value1), v1.value0, v))(Data_StrMap_ST.poke(v)(v1.value0));
                })();
                return v;
            });
        };
    };
};
var fromFoldable = function (dictFoldable) {
    return function (l) {
        return pureST(function __do() {
            var v = Data_StrMap_ST["new"]();
            Control_Monad_Eff.foreachE(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(v)(v1.value0)(v1.value1));
            })();
            return v;
        });
    };
};
var freezeST = $foreign._copyEff;
var foldMaybe = function (f) {
    return function (z) {
        return function (m) {
            return $foreign._foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (z) {
            return $foreign._foldM(Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
        };
    };
};
var semigroupStrMap = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (m1) {
        return function (m2) {
            return mutate(function (s1) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(foldM(Control_Monad_Eff.monadEff)(function (s2) {
                    return function (k) {
                        return function (v2) {
                            return Data_StrMap_ST.poke(s2)(k)($foreign._lookup(v2, function (v1) {
                                return Data_Semigroup.append(dictSemigroup)(v1)(v2);
                            }, k, m2));
                        };
                    };
                })(s1)(m1));
            })(m2);
        };
    });
};
var monoidStrMap = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupStrMap(dictSemigroup);
    }, $foreign.empty);
};
var union = function (m) {
    return mutate(function (s) {
        return Data_Functor["void"](Control_Monad_Eff.functorEff)(foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m));
    });
};
var unions = function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);
};
var fold = $foreign._foldM(Data_Function.applyFlipped);
var foldMap = function (dictMonoid) {
    return function (f) {
        return fold(function (acc) {
            return function (k) {
                return function (v) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
};
var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return foldMap(dictMonoid)(Data_Function["const"](f));
    };
}, function (f) {
    return fold(function (z) {
        return function (v) {
            return f(z);
        };
    });
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var foldableWithIndexStrMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableStrMap;
}, function (dictMonoid) {
    return foldMap(dictMonoid);
}, function (f) {
    return fold(Data_Function.flip(f));
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
        };
    };
});
var traversableWithIndexStrMap = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexStrMap;
}, function () {
    return functorWithIndexStrMap;
}, function () {
    return traversableStrMap;
}, function (dictApplicative) {
    return function (f) {
        return function (ms) {
            return fold(function (acc) {
                return function (k) {
                    return function (v) {
                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                    };
                };
            })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
        };
    };
});
var traversableStrMap = new Data_Traversable.Traversable(function () {
    return foldableStrMap;
}, function () {
    return functorStrMap;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function ($48) {
        return Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexStrMap)(dictApplicative)(Data_Function["const"]($48));
    };
});
var filterWithKey = function (predicate) {
    return function (m) {
        var go = (function () {
            var step = function (acc) {
                return function (k) {
                    return function (v) {
                        var $42 = predicate(k)(v);
                        if ($42) {
                            return Data_StrMap_ST.poke(acc)(k)(v);
                        };
                        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(acc);
                    };
                };
            };
            return function __do() {
                var v = Data_StrMap_ST["new"]();
                return foldM(Control_Monad_Eff.monadEff)(step)(v)(m)();
            };
        })();
        return pureST(go);
    };
};
var filterKeys = function (predicate) {
    return filterWithKey(function ($49) {
        return Data_Function["const"](predicate($49));
    });
};
var filter = function (predicate) {
    return filterWithKey(Data_Function["const"](predicate));
};
var eqStrMap = function (dictEq) {
    return new Data_Eq.Eq(function (m1) {
        return function (m2) {
            return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
        };
    });
};
var ordStrMap = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqStrMap(dictOrd.Eq0());
    }, function (m1) {
        return function (m2) {
            return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(dictOrd)))(toAscArray(m1))(toAscArray(m2));
        };
    });
};
var eq1StrMap = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqStrMap(dictEq));
});
var $$delete = function (k) {
    return mutate(function (s) {
        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST["delete"](s)(k));
    });
};
var pop = function (k) {
    return function (m) {
        return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(lookup(k)(m))(function (a) {
            return new Data_Tuple.Tuple(a, $$delete(k)(m));
        });
    };
};
var alter = function (f) {
    return function (k) {
        return function (m) {
            var v = f(lookup(k)(m));
            if (v instanceof Data_Maybe.Nothing) {
                return $$delete(k)(m);
            };
            if (v instanceof Data_Maybe.Just) {
                return insert(k)(v.value0)(m);
            };
            throw new Error("Failed pattern match at Data.StrMap line 213, column 15 - line 215, column 25: " + [ v.constructor.name ]);
        };
    };
};
var update = function (f) {
    return function (k) {
        return function (m) {
            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
        };
    };
};
module.exports = {
    isEmpty: isEmpty,
    singleton: singleton,
    insert: insert,
    lookup: lookup,
    toUnfoldable: toUnfoldable,
    toAscUnfoldable: toAscUnfoldable,
    fromFoldable: fromFoldable,
    fromFoldableWith: fromFoldableWith,
    "delete": $$delete,
    pop: pop,
    member: member,
    alter: alter,
    update: update,
    mapWithKey: mapWithKey,
    filterWithKey: filterWithKey,
    filterKeys: filterKeys,
    filter: filter,
    values: values,
    union: union,
    unions: unions,
    isSubmap: isSubmap,
    fold: fold,
    foldMap: foldMap,
    foldM: foldM,
    foldMaybe: foldMaybe,
    thawST: thawST,
    freezeST: freezeST,
    pureST: pureST,
    functorStrMap: functorStrMap,
    functorWithIndexStrMap: functorWithIndexStrMap,
    foldableStrMap: foldableStrMap,
    foldableWithIndexStrMap: foldableWithIndexStrMap,
    traversableStrMap: traversableStrMap,
    traversableWithIndexStrMap: traversableWithIndexStrMap,
    eqStrMap: eqStrMap,
    eq1StrMap: eq1StrMap,
    ordStrMap: ordStrMap,
    showStrMap: showStrMap,
    semigroupStrMap: semigroupStrMap,
    monoidStrMap: monoidStrMap,
    empty: $foreign.empty,
    size: $foreign.size,
    keys: $foreign.keys,
    all: $foreign.all,
    runST: $foreign.runST,
    toArrayWithKey: $foreign.toArrayWithKey
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Monad.Eff":40,"../Control.Monad.ST":49,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Eq":111,"../Data.Foldable":116,"../Data.FoldableWithIndex":117,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.FunctorWithIndex":132,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.StrMap.ST":191,"../Data.Traversable":209,"../Data.TraversableWithIndex":210,"../Data.Tuple":212,"../Data.Unfoldable":217,"../Prelude":263,"./foreign":192}],194:[function(require,module,exports){

// | Non-empty strings.
// |
// | Please note that the examples in this documentation use a notation like
// | `NonEmptyString "..."` for demonstration purposes, `NonEmptyString` cannot
// | be created directly like that, as we can't prove the string is non-empty to
// | the compiler at compile-time.
"use strict";
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_String_Unsafe = require("../Data.String.Unsafe");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");

// | A string that is known not to be empty.
var NonEmptyString = function (x) {
    return x;
};

// | A newtype used in cases to specify a non-empty replacement for a pattern.
var NonEmptyReplacement = function (x) {
    return x;
};

// | Returns the argument converted to uppercase.
// |
// | ```purescript
// | toUpper (NonEmptyString "Hello") == NonEmptyString "HELLO"
// | ```
var toUpper = function (v) {
    return Data_String.toUpper(v);
};

// | Converts a `NonEmptyString` back into a standard `String`.
var toString = function (v) {
    return v;
};

// | Returns the argument converted to lowercase.
// |
// | ```purescript
// | toLower (NonEmptyString "hElLo") == NonEmptyString "hello"
// | ```
var toLower = function (v) {
    return Data_String.toLower(v);
};

// | Converts the `NonEmptyString` into an array of characters.
// |
// | ```purescript
// | toCharArray (NonEmptyString "Hello☺\n") == ['H','e','l','l','o','☺','\n']
// | ```
var toCharArray = function (v) {
    return Data_String.toCharArray(v);
};

// | Converts the `NonEmptyString` to a character, if the length of the string
// | is exactly `1`.
// |
// | ```purescript
// | toChar "H" == Just 'H'
// | toChar "Hi" == Nothing
// | ```
var toChar = function (v) {
    return Data_String.toChar(v);
};

// | Returns the last `n` characters of the string. Returns `Nothing` if `n` is
// | less than 1.
// |
// | ```purescript
// | take 5 (NonEmptyString "Hello World") == Just (NonEmptyString "World")
// | take 0 (NonEmptyString "Hello World") == Nothing
// | ```
var takeRight = function (i) {
    return function (v) {
        if (i < 1) {
            return Data_Maybe.Nothing.value;
        };
        if (Data_Boolean.otherwise) {
            return new Data_Maybe.Just(Data_String.takeRight(i)(v));
        };
        throw new Error("Failed pattern match at Data.String.NonEmpty line 367, column 1 - line 367, column 59: " + [ i.constructor.name, v.constructor.name ]);
    };
};

// | Returns the first `n` characters of the string. Returns `Nothing` if `n` is
// | less than 1.
// |
// | ```purescript
// | take 5 (NonEmptyString "Hello World") == Just (NonEmptyString "Hello")
// | take 0 (NonEmptyString "Hello World") == Nothing
// | ```
var take = function (i) {
    return function (v) {
        if (i < 1) {
            return Data_Maybe.Nothing.value;
        };
        if (Data_Boolean.otherwise) {
            return new Data_Maybe.Just(Data_String.take(i)(v));
        };
        throw new Error("Failed pattern match at Data.String.NonEmpty line 355, column 1 - line 355, column 54: " + [ i.constructor.name, v.constructor.name ]);
    };
};

// | Creates a `NonEmptyString` from a string by appending a character.
// |
// | ```purescript
// | snoc 'c' "ab" = NonEmptyString "abc"
// | snoc 'a' "" = NonEmptyString "a"
// | ```
var snoc = function (c) {
    return function (s) {
        return s + Data_String.singleton(c);
    };
};

// | Creates a `NonEmptyString` from a character.
var singleton = function ($74) {
    return NonEmptyString(Data_String.singleton($74));
};
var showNonEmptyString = new Data_Show.Show(function (v) {
    return "(NonEmptyString.unsafeFromString " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var showNonEmptyReplacement = new Data_Show.Show(function (v) {
    return "(NonEmptyReplacement " + (Data_Show.show(showNonEmptyString)(v) + ")");
});
var semigroupNonEmptyString = Data_Semigroup.semigroupString;
var semigroupNonEmptyReplacement = semigroupNonEmptyString;

// | Replaces all occurences of the pattern with the replacement string.
// |
// | ```purescript
// | replaceAll (Pattern "<=") (NonEmptyReplacement "≤") (NonEmptyString "a <= b <= c") == NonEmptyString "a ≤ b ≤ c"
// | ```
var replaceAll = function (pat) {
    return function (v) {
        return function (v1) {
            return Data_String.replaceAll(pat)(v)(v1);
        };
    };
};

// | Replaces the first occurence of the pattern with the replacement string.
// |
// | ```purescript
// | replace (Pattern "<=") (NonEmptyReplacement "≤") (NonEmptyString "a <= b <= c") == NonEmptyString "a ≤ b <= c"
// | ```
var replace = function (pat) {
    return function (v) {
        return function (v1) {
            return Data_String.replace(pat)(v)(v1);
        };
    };
};

// | Prepends a string to this non-empty string. Since one of the strings is
// | non-empty we know the result will be too.
// |
// | ```purescript
// | prependString "be" (NonEmptyString "fore") == NonEmptyString "before"
// | prependString "" (NonEmptyString "fore") == NonEmptyString "fore"
// | ```
var prependString = function (s1) {
    return function (v) {
        return s1 + v;
    };
};
var ordNonEmptyString = Data_Ord.ordString;
var ordNonEmptyReplacement = ordNonEmptyString;

// | Compare two strings in a locale-aware fashion. This is in contrast to
// | the `Ord` instance on `String` which treats strings as arrays of code
// | units:
// |
// | ```purescript
// | NonEmptyString "ä" `localeCompare` NonEmptyString "b" == LT
// | NonEmptyString "ä" `compare` NonEmptyString "b" == GT
// | ```
var localeCompare = function (v) {
    return function (v1) {
        return Data_String.localeCompare(v)(v1);
    };
};
var liftS = function (f) {
    return function (v) {
        return f(v);
    };
};

// | Returns the number of characters the string is composed of.
// |
// | ```purescript
// | length (NonEmptyString "Hello World") == 11
// | ```
var length = function (v) {
    return Data_String.length(v);
};

// | Returns the index of the last occurrence of the pattern in the
// | given string, starting at the specified index
// | and searching backwards towards the beginning of the string.
// | Returns `Nothing` if there is no match.
// |
// | ```purescript
// | lastIndexOf' (Pattern "a") 1 (NonEmptyString "ababa") == Just 0
// | lastIndexOf' (Pattern "a") 3 (NonEmptyString "ababa") == Just 2
// | lastIndexOf' (Pattern "a") 4 (NonEmptyString "ababa") == Just 4
// | ```
var lastIndexOf$prime = function (pat) {
    return function ($75) {
        return liftS(Data_String["lastIndexOf'"](pat)($75));
    };
};

// | Returns the index of the last occurrence of the pattern in the
// | given string. Returns `Nothing` if there is no match.
// |
// | ```purescript
// | lastIndexOf (Pattern "c") (NonEmptyString "abcdc") == Just 4
// | lastIndexOf (Pattern "c") (NonEmptyString "aaa") == Nothing
// | ```
var lastIndexOf = function ($76) {
    return liftS(Data_String.lastIndexOf($76));
};

// | Joins possibly empty strings in a non-empty container together as a new
// | non-empty string, inserting a non-empty string as a separator between them.
// | The result is guaranteed to be non-empty.
// |
// | ```purescript
// | -- array syntax is used for demonstration here, it would need to be a real `Foldable1`
// | joinWith1 (NonEmptyString ", ") ["apple", "banana"] == NonEmptyString "apple, banana"
// | joinWith1 (NonEmptyString "/") ["a", "b", "", "c", ""] == NonEmptyString "a/b//c/"
// | ```
var joinWith1 = function (dictFoldable1) {
    return function (v) {
        return function ($77) {
            return NonEmptyString(Data_Foldable.intercalate(dictFoldable1.Foldable0())(Data_Monoid.monoidString)(v)($77));
        };
    };
};

// | Joins the strings in a container together as a new string, inserting the
// | first argument as separator between them. The result is not guaranteed to
// | be non-empty.
// |
// | ```purescript
// | joinWith ", " [NonEmptyString "apple", NonEmptyString "banana"] == "apple, banana"
// | joinWith ", " [] == ""
// | ```
var joinWith = function (dictFoldable) {
    return function (splice) {
        return function ($78) {
            return Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)(splice)($78);
        };
    };
};

// | Joins non-empty strings in a non-empty container together as a new
// | non-empty string, inserting a possibly empty string as separator between
// | them. The result is guaranteed to be non-empty.
// |
// | ```purescript
// | -- array syntax is used for demonstration here, it would need to be a real `Foldable1`
// | join1With ", " [NonEmptyString "apple", NonEmptyString "banana"] == NonEmptyString "apple, banana"
// | join1With "" [NonEmptyString "apple", NonEmptyString "banana"] == NonEmptyString "applebanana"
// | ```
var join1With = function (dictFoldable1) {
    return function (splice) {
        return function ($79) {
            return NonEmptyString(joinWith(dictFoldable1.Foldable0())(splice)($79));
        };
    };
};

// | Returns the index of the first occurrence of the pattern in the
// | given string, starting at the specified index. Returns `Nothing` if there is
// | no match.
// |
// | ```purescript
// | indexOf' (Pattern "a") 2 (NonEmptyString "ababa") == Just 2
// | indexOf' (Pattern "a") 3 (NonEmptyString "ababa") == Just 4
// | ```
var indexOf$prime = function (pat) {
    return function ($80) {
        return liftS(Data_String["indexOf'"](pat)($80));
    };
};

// | Returns the index of the first occurrence of the pattern in the
// | given string. Returns `Nothing` if there is no match.
// |
// | ```purescript
// | indexOf (Pattern "c") (NonEmptyString "abcdc") == Just 2
// | indexOf (Pattern "c") (NonEmptyString "aaa") == Nothing
// | ```
var indexOf = function ($81) {
    return liftS(Data_String.indexOf($81));
};

// | Creates a `NonEmptyString` from a `String`, returning `Nothing` if the
// | input is empty.
// |
// | ```purescript
// | fromString "" = Nothing
// | fromString "hello" = Just (NonEmptyString "hello")
// | ```
var fromString = function (v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just(v);
};

// | Returns the substrings of a split at the given index, if the index is
// | within bounds.
// |
// | ```purescript
// | splitAt 2 (NonEmptyString "Hello World") == Just { before: Just (NonEmptyString "He"), after: Just (NonEmptyString "llo World") }
// | splitAt 10 (NonEmptyString "Hi") == Nothing
// | ```
var splitAt = function (i) {
    return function (v) {
        var v1 = Data_String.splitAt(i)(v);
        if (v1 instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just({
                before: fromString(v1.value0.before),
                after: fromString(v1.value0.after)
            });
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        throw new Error("Failed pattern match at Data.String.NonEmpty line 416, column 32 - line 420, column 12: " + [ v1.constructor.name ]);
    };
};

// | If the string starts with the given prefix, return the portion of the
// | string left after removing it. If the prefix does not match or there is no
// | remainder, the result will be `Nothing`.
// |
// | ```purescript
// | stripPrefix (Pattern "http:") (NonEmptyString "http://purescript.org") == Just (NonEmptyString "//purescript.org")
// | stripPrefix (Pattern "http:") (NonEmptyString "https://purescript.org") == Nothing
// | stripPrefix (Pattern "Hello!") (NonEmptyString "Hello!") == Nothing
// | ```
var stripPrefix = function (pat) {
    return Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(fromString)(liftS(Data_String.stripPrefix(pat)));
};

// | If the string ends with the given suffix, return the portion of the
// | string left after removing it. If the suffix does not match or there is no
// | remainder, the result will be `Nothing`.
// |
// | ```purescript
// | stripSuffix (Pattern ".exe") (NonEmptyString "purs.exe") == Just (NonEmptyString "purs")
// | stripSuffix (Pattern ".exe") (NonEmptyString "purs") == Nothing
// | stripSuffix (Pattern "Hello!") (NonEmptyString "Hello!") == Nothing
// | ```
var stripSuffix = function (pat) {
    return Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(fromString)(liftS(Data_String.stripSuffix(pat)));
};

// | Returns the longest prefix of characters that satisfy the predicate.
// | `Nothing` is returned if there is no matching prefix.
// |
// | ```purescript
// | takeWhile (_ /= ':') (NonEmptyString "http://purescript.org") == Just (NonEmptyString "http")
// | takeWhile (_ == 'a') (NonEmptyString "xyz") == Nothing
// | ```
var takeWhile = function (f) {
    return function ($82) {
        return fromString(liftS(Data_String.takeWhile(f))($82));
    };
};

// | Removes whitespace from the beginning and end of a string, including
// | [whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)
// | and [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).
// | If the string is entirely made up of whitespace the result will be Nothing.
// |
// | ```purescript
// | trim (NonEmptyString "   Hello  \n World\n\t    ") == Just (NonEmptyString "Hello  \n World")
// | trim (NonEmptyString "   \n") == Nothing
// | ```
var trim = function (v) {
    return fromString(Data_String.trim(v));
};

// | Returns the first character and the rest of the string.
// |
// | ```purescript
// | uncons "a" == { head: 'a', tail: Nothing }
// | uncons "Hello World" == { head: 'H', tail: Just (NonEmptyString "ello World") }
// | ```
var uncons = function (v) {
    return {
        head: Data_String_Unsafe.charAt(0)(v),
        tail: fromString(Data_String.drop(1)(v))
    };
};

// | A partial version of `fromString`.
var unsafeFromString = function (dictPartial) {
    return function ($83) {
        return Data_Maybe.fromJust(dictPartial)(fromString($83));
    };
};

// | Creates a `NonEmptyString` from a `Foldable1` container carrying
// | characters.
var fromFoldable1 = function (dictFoldable1) {
    return function ($84) {
        return Data_Semigroup_Foldable.fold1(dictFoldable1)(semigroupNonEmptyString)($84);
    };
};

// | Creates a `NonEmptyString` from a character array `String`, returning
// | `Nothing` if the input is empty.
// |
// | ```purescript
// | fromCharArray [] = Nothing
// | fromCharArray ['a', 'b', 'c'] = Just (NonEmptyString "abc")
// | ```
var fromCharArray = function (v) {
    if (v.length === 0) {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just(Data_String.fromCharArray(v));
};
var eqNonEmptyString = Data_Eq.eqString;
var eqNonEmptyReplacement = eqNonEmptyString;

// | Returns the suffix remaining after `takeWhile`.
// |
// | ```purescript
// | dropWhile (_ /= '.') (NonEmptyString "Test.purs") == Just (NonEmptyString ".purs")
// | ```
var dropWhile = function (f) {
    return function ($85) {
        return fromString(liftS(Data_String.dropWhile(f))($85));
    };
};

// | Returns the string without the last `n` characters. Returns `Nothing` if
// | more characters are dropped than the string is long.
// |
// | ```purescript
// | dropRight 6 (NonEmptyString "Hello World") == Just (NonEmptyString "Hello")
// | dropRight 20 (NonEmptyString "Hello World") == Nothing
// | ```
var dropRight = function (i) {
    return function (v) {
        if (i >= Data_String.length(v)) {
            return Data_Maybe.Nothing.value;
        };
        if (Data_Boolean.otherwise) {
            return new Data_Maybe.Just(Data_String.dropRight(i)(v));
        };
        throw new Error("Failed pattern match at Data.String.NonEmpty line 391, column 1 - line 391, column 59: " + [ i.constructor.name, v.constructor.name ]);
    };
};

// | Returns the string without the first `n` characters. Returns `Nothing` if
// | more characters are dropped than the string is long.
// |
// | ```purescript
// | drop 6 (NonEmptyString "Hello World") == Just (NonEmptyString "World")
// | drop 20 (NonEmptyString "Hello World") == Nothing
// | ```
var drop = function (i) {
    return function (v) {
        if (i >= Data_String.length(v)) {
            return Data_Maybe.Nothing.value;
        };
        if (Data_Boolean.otherwise) {
            return new Data_Maybe.Just(Data_String.drop(i)(v));
        };
        throw new Error("Failed pattern match at Data.String.NonEmpty line 379, column 1 - line 379, column 54: " + [ i.constructor.name, v.constructor.name ]);
    };
};

// | Returns the number of contiguous characters at the beginning of the string
// | for which the predicate holds.
// |
// | ```purescript
// | count (_ /= 'o') (NonEmptyString "Hello World") == 4
// | ```
var count = function ($86) {
    return liftS(Data_String.count($86));
};

// | Checks whether the pattern appears in the given string.
// |
// | ```purescript
// | contains (Pattern "needle") (NonEmptyString "haystack with needle") == true
// | contains (Pattern "needle") (NonEmptyString "haystack") == false
// | ```
var contains = function ($87) {
    return liftS(Data_String.contains($87));
};

// | Creates a `NonEmptyString` from a string by prepending a character.
// |
// | ```purescript
// | cons 'a' "bc" = NonEmptyString "abc"
// | cons 'a' "" = NonEmptyString "a"
// | ```
var cons = function (c) {
    return function (s) {
        return Data_String.singleton(c) + s;
    };
};

// | Returns the numeric Unicode value of the character at the given index,
// | if the index is within bounds.
// |
// | ```purescript
// | charCodeAt 2 (NonEmptyString "5 €") == Just 0x20AC
// | charCodeAt 10 (NonEmptyString "5 €") == Nothing
// | ```
var charCodeAt = function ($88) {
    return liftS(Data_String.charCodeAt($88));
};

// | Returns the character at the given index, if the index is within bounds.
// |
// | ```purescript
// | charAt 2 (NonEmptyString "Hello") == Just 'l'
// | charAt 10 (NonEmptyString "Hello") == Nothing
// | ```
var charAt = function ($89) {
    return liftS(Data_String.charAt($89));
};

// | Appends a string to this non-empty string. Since one of the strings is
// | non-empty we know the result will be too.
// |
// | ```purescript
// | appendString (NonEmptyString "Hello") " world" == NonEmptyString "Hello world"
// | appendString (NonEmptyString "Hello") "" == NonEmptyString "Hello"
// | ```
var appendString = function (v) {
    return function (s2) {
        return v + s2;
    };
};
module.exports = {
    NonEmptyReplacement: NonEmptyReplacement,
    fromString: fromString,
    unsafeFromString: unsafeFromString,
    fromCharArray: fromCharArray,
    singleton: singleton,
    cons: cons,
    snoc: snoc,
    fromFoldable1: fromFoldable1,
    toString: toString,
    toCharArray: toCharArray,
    charAt: charAt,
    charCodeAt: charCodeAt,
    toChar: toChar,
    appendString: appendString,
    prependString: prependString,
    contains: contains,
    indexOf: indexOf,
    "indexOf'": indexOf$prime,
    lastIndexOf: lastIndexOf,
    "lastIndexOf'": lastIndexOf$prime,
    uncons: uncons,
    length: length,
    localeCompare: localeCompare,
    replace: replace,
    replaceAll: replaceAll,
    take: take,
    takeRight: takeRight,
    takeWhile: takeWhile,
    drop: drop,
    dropRight: dropRight,
    dropWhile: dropWhile,
    stripPrefix: stripPrefix,
    stripSuffix: stripSuffix,
    count: count,
    splitAt: splitAt,
    toLower: toLower,
    toUpper: toUpper,
    trim: trim,
    joinWith: joinWith,
    join1With: join1With,
    joinWith1: joinWith1,
    eqNonEmptyString: eqNonEmptyString,
    ordNonEmptyString: ordNonEmptyString,
    semigroupNonEmptyString: semigroupNonEmptyString,
    showNonEmptyString: showNonEmptyString,
    eqNonEmptyReplacement: eqNonEmptyReplacement,
    ordNonEmptyReplacement: ordNonEmptyReplacement,
    semigroupNonEmptyReplacement: semigroupNonEmptyReplacement,
    showNonEmptyReplacement: showNonEmptyReplacement
};

},{"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Show":189,"../Data.String":201,"../Data.String.Unsafe":199,"../Prelude":263,"../Unsafe.Coerce":281}],195:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Prelude = require("../Prelude");
var RegexFlags = (function () {
    function RegexFlags(value0) {
        this.value0 = value0;
    };
    RegexFlags.create = function (value0) {
        return new RegexFlags(value0);
    };
    return RegexFlags;
})();
var unicode = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: false,
    sticky: false,
    unicode: true
});
var sticky = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: false,
    sticky: true,
    unicode: false
});
var showRegexFlags = new Data_Show.Show(function (v) {
    var usedFlags = Data_Semigroup.append(Data_Semigroup.semigroupArray)([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.global))("global"))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.ignoreCase))("ignoreCase"))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.multiline))("multiline"))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.sticky))("sticky"))(Data_Functor.voidLeft(Data_Functor.functorArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(v.value0.unicode))("unicode"))))));
    var $6 = Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(usedFlags)([  ]);
    if ($6) {
        return "noFlags";
    };
    return "(" + (Data_String.joinWith(" <> ")(usedFlags) + ")");
});
var semigroupRegexFlags = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return new RegexFlags({
            global: v.value0.global || v1.value0.global,
            ignoreCase: v.value0.ignoreCase || v1.value0.ignoreCase,
            multiline: v.value0.multiline || v1.value0.multiline,
            sticky: v.value0.sticky || v1.value0.sticky,
            unicode: v.value0.unicode || v1.value0.unicode
        });
    };
});
var noFlags = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: false,
    sticky: false,
    unicode: false
});
var multiline = new RegexFlags({
    global: false,
    ignoreCase: false,
    multiline: true,
    sticky: false,
    unicode: false
});
var monoidRegexFlags = new Data_Monoid.Monoid(function () {
    return semigroupRegexFlags;
}, noFlags);
var ignoreCase = new RegexFlags({
    global: false,
    ignoreCase: true,
    multiline: false,
    sticky: false,
    unicode: false
});
var global = new RegexFlags({
    global: true,
    ignoreCase: false,
    multiline: false,
    sticky: false,
    unicode: false
});
var eqRegexFlags = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v.value0.global === v1.value0.global && (v.value0.ignoreCase === v1.value0.ignoreCase && (v.value0.multiline === v1.value0.multiline && (v.value0.sticky === v1.value0.sticky && v.value0.unicode === v1.value0.unicode)));
    };
});
module.exports = {
    RegexFlags: RegexFlags,
    noFlags: noFlags,
    global: global,
    ignoreCase: ignoreCase,
    multiline: multiline,
    sticky: sticky,
    unicode: unicode,
    semigroupRegexFlags: semigroupRegexFlags,
    monoidRegexFlags: monoidRegexFlags,
    eqRegexFlags: eqRegexFlags,
    showRegexFlags: showRegexFlags
};

},{"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Data.Eq":111,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Monoid":169,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Prelude":263}],196:[function(require,module,exports){
"use strict";

exports["showRegex'"] = function (r) {
  return "" + r;
};

exports["regex'"] = function (left) {
  return function (right) {
    return function (s1) {
      return function (s2) {
        try {
          return right(new RegExp(s1, s2));
        } catch (e) {
          return left(e.message);
        }
      };
    };
  };
};

exports.source = function (r) {
  return r.source;
};

exports["flags'"] = function (r) {
  return {
    multiline: r.multiline,
    ignoreCase: r.ignoreCase,
    global: r.global,
    sticky: !!r.sticky,
    unicode: !!r.unicode
  };
};

exports.test = function (r) {
  return function (s) {
    var lastIndex = r.lastIndex;
    var result = r.test(s);
    r.lastIndex = lastIndex;
    return result;
  };
};

exports._match = function (just) {
  return function (nothing) {
    return function (r) {
      return function (s) {
        var m = s.match(r);
        if (m == null) {
          return nothing;
        } else {
          for (var i = 0; i < m.length; i++) {
            m[i] = m[i] == null ? nothing : just(m[i]);
          }
          return just(m);
        }
      };
    };
  };
};

exports.replace = function (r) {
  return function (s1) {
    return function (s2) {
      return s2.replace(r, s1);
    };
  };
};

exports["replace'"] = function (r) {
  return function (f) {
    return function (s2) {
      return s2.replace(r, function (match) {
        return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
      });
    };
  };
};

exports._search = function (just) {
  return function (nothing) {
    return function (r) {
      return function (s) {
        var result = s.search(r);
        return result === -1 ? nothing : just(result);
      };
    };
  };
};

exports.split = function (r) {
  return function (s) {
    return s.split(r);
  };
};

},{}],197:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_String_Regex_Flags = require("../Data.String.Regex.Flags");
var Prelude = require("../Prelude");
var showRegex = new Data_Show.Show($foreign["showRegex'"]);
var search = $foreign._search(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var renderFlags = function (v) {
    return (function () {
        if (v.value0.global) {
            return "g";
        };
        return "";
    })() + ((function () {
        if (v.value0.ignoreCase) {
            return "i";
        };
        return "";
    })() + ((function () {
        if (v.value0.multiline) {
            return "m";
        };
        return "";
    })() + ((function () {
        if (v.value0.sticky) {
            return "y";
        };
        return "";
    })() + (function () {
        if (v.value0.unicode) {
            return "u";
        };
        return "";
    })())));
};
var regex = function (s) {
    return function (f) {
        return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
    };
};
var parseFlags = function (s) {
    return new Data_String_Regex_Flags.RegexFlags({
        global: Data_String.contains("g")(s),
        ignoreCase: Data_String.contains("i")(s),
        multiline: Data_String.contains("m")(s),
        sticky: Data_String.contains("y")(s),
        unicode: Data_String.contains("u")(s)
    });
};
var match = $foreign._match(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var flags = function ($8) {
    return Data_String_Regex_Flags.RegexFlags.create($foreign["flags'"]($8));
};
module.exports = {
    regex: regex,
    flags: flags,
    renderFlags: renderFlags,
    parseFlags: parseFlags,
    match: match,
    search: search,
    showRegex: showRegex,
    source: $foreign.source,
    test: $foreign.test,
    replace: $foreign.replace,
    "replace'": $foreign["replace'"],
    split: $foreign.split
};

},{"../Control.Semigroupoid":60,"../Data.Either":108,"../Data.Function":125,"../Data.Maybe":156,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String":201,"../Data.String.Regex.Flags":195,"../Prelude":263,"./foreign":196}],198:[function(require,module,exports){
"use strict";

exports.charCodeAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charCodeAt(i);
    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
  };
};

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],199:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    "char": $foreign["char"],
    charAt: $foreign.charAt,
    charCodeAt: $foreign.charCodeAt
};

},{"./foreign":198}],200:[function(require,module,exports){
"use strict";

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports.singleton = function (c) {
  return c;
};

exports._charCodeAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.fromCharArray = function (a) {
  return a.join("");
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.replaceAll = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substring(n);
  };
};

exports.count = function (p) {
  return function (s) {
    var i = 0;
    while (i < s.length && p(s.charAt(i))) i++;
    return i;
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports._splitAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ?
               just({ before: s.substring(0, i), after: s.substring(i) }) :
               nothing;
      };
    };
  };
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],201:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String_Unsafe = require("../Data.String.Unsafe");
var Prelude = require("../Prelude");
var Replacement = function (x) {
    return x;
};
var Pattern = function (x) {
    return x;
};
var uncons = function (v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(v),
        tail: $foreign.drop(1)(v)
    });
};
var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function (p) {
    return function (s) {
        return $foreign.take($foreign.count(p)(s))(s);
    };
};
var takeRight = function (i) {
    return function (s) {
        return $foreign.drop($foreign.length(s) - i | 0)(s);
    };
};
var splitAt = $foreign._splitAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showReplacement = new Data_Show.Show(function (v) {
    return "(Replacement " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var showPattern = new Data_Show.Show(function (v) {
    return "(Pattern " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var $$null = function (s) {
    return s === "";
};
var newtypeReplacement = new Data_Newtype.Newtype(function (n) {
    return n;
}, Replacement);
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var localeCompare = $foreign._localeCompare(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function (v) {
    return function (str) {
        var v1 = lastIndexOf(v)(str);
        if (v1 instanceof Data_Maybe.Just && v1.value0 === ($foreign.length(str) - $foreign.length(v) | 0)) {
            return Data_Maybe.Just.create($foreign.take(v1.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function (v) {
    return function (str) {
        var v1 = indexOf(v)(str);
        if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var eqReplacement = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordReplacement = new Data_Ord.Ord(function () {
    return eqReplacement;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var eqPattern = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordPattern = new Data_Ord.Ord(function () {
    return eqPattern;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var dropWhile = function (p) {
    return function (s) {
        return $foreign.drop($foreign.count(p)(s))(s);
    };
};
var dropRight = function (i) {
    return function (s) {
        return $foreign.take($foreign.length(s) - i | 0)(s);
    };
};
var contains = function (pat) {
    return function ($48) {
        return Data_Maybe.isJust(indexOf(pat)($48));
    };
};
var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    Pattern: Pattern,
    Replacement: Replacement,
    charAt: charAt,
    charCodeAt: charCodeAt,
    toChar: toChar,
    contains: contains,
    indexOf: indexOf,
    "indexOf'": indexOf$prime,
    lastIndexOf: lastIndexOf,
    "lastIndexOf'": lastIndexOf$prime,
    "null": $$null,
    uncons: uncons,
    localeCompare: localeCompare,
    takeRight: takeRight,
    takeWhile: takeWhile,
    dropRight: dropRight,
    dropWhile: dropWhile,
    stripPrefix: stripPrefix,
    stripSuffix: stripSuffix,
    splitAt: splitAt,
    eqPattern: eqPattern,
    ordPattern: ordPattern,
    newtypePattern: newtypePattern,
    showPattern: showPattern,
    eqReplacement: eqReplacement,
    ordReplacement: ordReplacement,
    newtypeReplacement: newtypeReplacement,
    showReplacement: showReplacement,
    fromCharArray: $foreign.fromCharArray,
    length: $foreign.length,
    singleton: $foreign.singleton,
    replace: $foreign.replace,
    replaceAll: $foreign.replaceAll,
    take: $foreign.take,
    drop: $foreign.drop,
    count: $foreign.count,
    split: $foreign.split,
    toCharArray: $foreign.toCharArray,
    toLower: $foreign.toLower,
    toUpper: $foreign.toUpper,
    trim: $foreign.trim,
    joinWith: $foreign.joinWith
};

},{"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Function":125,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.String.Unsafe":199,"../Prelude":263,"./foreign":200}],202:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var SProxy = (function () {
    function SProxy() {

    };
    SProxy.value = new SProxy();
    return SProxy;
})();
var IsSymbol = function (reflectSymbol) {
    this.reflectSymbol = reflectSymbol;
};
var reifySymbol = function (s) {
    return function (f) {
        return (function (dictIsSymbol) {
            return f(dictIsSymbol);
        })({
            reflectSymbol: function (v) {
                return s;
            }
        })(SProxy.value);
    };
};
var reflectSymbol = function (dict) {
    return dict.reflectSymbol;
};
var isSymbolTypeConcat = function (dictIsSymbol) {
    return function (dictIsSymbol1) {
        return new IsSymbol(function (v) {
            return reflectSymbol(dictIsSymbol)(SProxy.value) + reflectSymbol(dictIsSymbol1)(SProxy.value);
        });
    };
};
module.exports = {
    IsSymbol: IsSymbol,
    reflectSymbol: reflectSymbol,
    reifySymbol: reifySymbol,
    SProxy: SProxy,
    isSymbolTypeConcat: isSymbolTypeConcat
};

},{"../Data.Semigroup":185,"../Prelude":263,"../Unsafe.Coerce":281}],203:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Second = function (x) {
    return x;
};
var Minute = function (x) {
    return x;
};
var Millisecond = function (x) {
    return x;
};
var Hour = function (x) {
    return x;
};
var showSecond = new Data_Show.Show(function (v) {
    return "(Second " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showMinute = new Data_Show.Show(function (v) {
    return "(Minute " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showMillisecond = new Data_Show.Show(function (v) {
    return "(Millisecond " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var showHour = new Data_Show.Show(function (v) {
    return "(Hour " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var ordSecond = Data_Ord.ordInt;
var ordMinute = Data_Ord.ordInt;
var ordMillisecond = Data_Ord.ordInt;
var ordHour = Data_Ord.ordInt;
var genericSecond = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Second" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Second))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Second", [ {
        sigConstructor: "Data.Time.Component.Second",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Second", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericMinute = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Minute" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Minute))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Minute", [ {
        sigConstructor: "Data.Time.Component.Minute",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Minute", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericMillisecond = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Millisecond" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Millisecond))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Millisecond", [ {
        sigConstructor: "Data.Time.Component.Millisecond",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Millisecond", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var genericHour = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Component.Hour" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Hour))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Component.Hour", [ {
        sigConstructor: "Data.Time.Component.Hour",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Component.Hour", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var eqSecond = Data_Eq.eqInt;
var eqMinute = Data_Eq.eqInt;
var eqMillisecond = Data_Eq.eqInt;
var eqHour = Data_Eq.eqInt;
var boundedSecond = new Data_Bounded.Bounded(function () {
    return ordSecond;
}, 0, 59);
var boundedMinute = new Data_Bounded.Bounded(function () {
    return ordMinute;
}, 0, 59);
var boundedMillisecond = new Data_Bounded.Bounded(function () {
    return ordMillisecond;
}, 0, 999);
var boundedHour = new Data_Bounded.Bounded(function () {
    return ordHour;
}, 0, 23);
var boundedEnumSecond = new Data_Enum.BoundedEnum(function () {
    return boundedSecond;
}, function () {
    return enumSecond;
}, 60, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 59) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 94, column 1 - line 94, column 49: " + [ n.constructor.name ]);
});
var enumSecond = new Data_Enum.Enum(function () {
    return ordSecond;
}, function ($64) {
    return Data_Enum.toEnum(boundedEnumSecond)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumSecond)($64)));
}, function ($65) {
    return Data_Enum.toEnum(boundedEnumSecond)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumSecond)($65)));
});
var boundedEnumMinute = new Data_Enum.BoundedEnum(function () {
    return boundedMinute;
}, function () {
    return enumMinute;
}, 60, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 59) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 64, column 1 - line 64, column 49: " + [ n.constructor.name ]);
});
var enumMinute = new Data_Enum.Enum(function () {
    return ordMinute;
}, function ($66) {
    return Data_Enum.toEnum(boundedEnumMinute)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMinute)($66)));
}, function ($67) {
    return Data_Enum.toEnum(boundedEnumMinute)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMinute)($67)));
});
var boundedEnumMillisecond = new Data_Enum.BoundedEnum(function () {
    return boundedMillisecond;
}, function () {
    return enumMillisecond;
}, 1000, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 999) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 125, column 1 - line 125, column 59: " + [ n.constructor.name ]);
});
var enumMillisecond = new Data_Enum.Enum(function () {
    return ordMillisecond;
}, function ($68) {
    return Data_Enum.toEnum(boundedEnumMillisecond)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMillisecond)($68)));
}, function ($69) {
    return Data_Enum.toEnum(boundedEnumMillisecond)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumMillisecond)($69)));
});
var boundedEnumHour = new Data_Enum.BoundedEnum(function () {
    return boundedHour;
}, function () {
    return enumHour;
}, 24, function (v) {
    return v;
}, function (n) {
    if (n >= 0 && n <= 23) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Time.Component line 34, column 1 - line 34, column 45: " + [ n.constructor.name ]);
});
var enumHour = new Data_Enum.Enum(function () {
    return ordHour;
}, function ($70) {
    return Data_Enum.toEnum(boundedEnumHour)((function (v) {
        return v - 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumHour)($70)));
}, function ($71) {
    return Data_Enum.toEnum(boundedEnumHour)((function (v) {
        return v + 1 | 0;
    })(Data_Enum.fromEnum(boundedEnumHour)($71)));
});
module.exports = {
    eqHour: eqHour,
    ordHour: ordHour,
    genericHour: genericHour,
    boundedHour: boundedHour,
    enumHour: enumHour,
    boundedEnumHour: boundedEnumHour,
    showHour: showHour,
    eqMinute: eqMinute,
    ordMinute: ordMinute,
    genericMinute: genericMinute,
    boundedMinute: boundedMinute,
    enumMinute: enumMinute,
    boundedEnumMinute: boundedEnumMinute,
    showMinute: showMinute,
    eqSecond: eqSecond,
    ordSecond: ordSecond,
    genericSecond: genericSecond,
    boundedSecond: boundedSecond,
    enumSecond: enumSecond,
    boundedEnumSecond: boundedEnumSecond,
    showSecond: showSecond,
    eqMillisecond: eqMillisecond,
    ordMillisecond: ordMillisecond,
    genericMillisecond: genericMillisecond,
    boundedMillisecond: boundedMillisecond,
    enumMillisecond: enumMillisecond,
    boundedEnumMillisecond: boundedEnumMillisecond,
    showMillisecond: showMillisecond
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Bounded":93,"../Data.Enum":109,"../Data.Eq":111,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],204:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Seconds = function (x) {
    return x;
};
var Minutes = function (x) {
    return x;
};
var Milliseconds = function (x) {
    return x;
};
var Hours = function (x) {
    return x;
};
var Days = function (x) {
    return x;
};
var Duration = function (fromDuration, toDuration) {
    this.fromDuration = fromDuration;
    this.toDuration = toDuration;
};
var toDuration = function (dict) {
    return dict.toDuration;
};
var showSeconds = new Data_Show.Show(function (v) {
    return "(Seconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMinutes = new Data_Show.Show(function (v) {
    return "(Minutes " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMilliseconds = new Data_Show.Show(function (v) {
    return "(Milliseconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showHours = new Data_Show.Show(function (v) {
    return "(Hours " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showDays = new Data_Show.Show(function (v) {
    return "(Days " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var semiringSeconds = Data_Semiring.semiringNumber;
var semiringMinutes = Data_Semiring.semiringNumber;
var semiringMilliseconds = Data_Semiring.semiringNumber;
var semiringHours = Data_Semiring.semiringNumber;
var semiringDays = Data_Semiring.semiringNumber;
var ringSeconds = Data_Ring.ringNumber;
var ringMinutes = Data_Ring.ringNumber;
var ringMilliseconds = Data_Ring.ringNumber;
var ringHours = Data_Ring.ringNumber;
var ringDays = Data_Ring.ringNumber;
var ordSeconds = Data_Ord.ordNumber;
var ordMinutes = Data_Ord.ordNumber;
var ordMilliseconds = Data_Ord.ordNumber;
var ordHours = Data_Ord.ordNumber;
var ordDays = Data_Ord.ordNumber;
var newtypeSeconds = new Data_Newtype.Newtype(function (n) {
    return n;
}, Seconds);
var newtypeMinutes = new Data_Newtype.Newtype(function (n) {
    return n;
}, Minutes);
var newtypeMilliseconds = new Data_Newtype.Newtype(function (n) {
    return n;
}, Milliseconds);
var newtypeHours = new Data_Newtype.Newtype(function (n) {
    return n;
}, Hours);
var newtypeDays = new Data_Newtype.Newtype(function (n) {
    return n;
}, Days);
var genericSeconds = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Seconds" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Seconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Seconds", [ {
        sigConstructor: "Data.Time.Duration.Seconds",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Seconds", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericMinutes = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Minutes" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Minutes))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Minutes", [ {
        sigConstructor: "Data.Time.Duration.Minutes",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Minutes", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericMilliseconds = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Milliseconds" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Milliseconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Milliseconds", [ {
        sigConstructor: "Data.Time.Duration.Milliseconds",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Milliseconds", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericHours = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Hours" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Hours))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Hours", [ {
        sigConstructor: "Data.Time.Duration.Hours",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Hours", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericDays = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Days" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Days))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Days", [ {
        sigConstructor: "Data.Time.Duration.Days",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Days", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var fromDuration = function (dict) {
    return dict.fromDuration;
};
var eqSeconds = Data_Eq.eqNumber;
var eqMinutes = Data_Eq.eqNumber;
var eqMilliseconds = Data_Eq.eqNumber;
var eqHours = Data_Eq.eqNumber;
var eqDays = Data_Eq.eqNumber;
var durationSeconds = new Duration(Data_Newtype.over(newtypeSeconds)(newtypeMilliseconds)(Seconds)(function (v) {
    return v * 1000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeSeconds)(Milliseconds)(function (v) {
    return v / 1000.0;
}));
var durationMinutes = new Duration(Data_Newtype.over(newtypeMinutes)(newtypeMilliseconds)(Minutes)(function (v) {
    return v * 60000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeMinutes)(Milliseconds)(function (v) {
    return v / 60000.0;
}));
var durationMilliseconds = new Duration(Control_Category.id(Control_Category.categoryFn), Control_Category.id(Control_Category.categoryFn));
var durationHours = new Duration(Data_Newtype.over(newtypeHours)(newtypeMilliseconds)(Hours)(function (v) {
    return v * 3600000.0;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeHours)(Milliseconds)(function (v) {
    return v / 3600000.0;
}));
var durationDays = new Duration(Data_Newtype.over(newtypeDays)(newtypeMilliseconds)(Days)(function (v) {
    return v * 8.64e7;
}), Data_Newtype.over(newtypeMilliseconds)(newtypeDays)(Milliseconds)(function (v) {
    return v / 8.64e7;
}));
var convertDuration = function (dictDuration) {
    return function (dictDuration1) {
        return function ($80) {
            return toDuration(dictDuration1)(fromDuration(dictDuration)($80));
        };
    };
};
module.exports = {
    fromDuration: fromDuration,
    toDuration: toDuration,
    Milliseconds: Milliseconds,
    Seconds: Seconds,
    Minutes: Minutes,
    Hours: Hours,
    Days: Days,
    Duration: Duration,
    convertDuration: convertDuration,
    newtypeMilliseconds: newtypeMilliseconds,
    genericMilliseconds: genericMilliseconds,
    eqMilliseconds: eqMilliseconds,
    ordMilliseconds: ordMilliseconds,
    semiringMilliseconds: semiringMilliseconds,
    ringMilliseconds: ringMilliseconds,
    showMilliseconds: showMilliseconds,
    newtypeSeconds: newtypeSeconds,
    genericSeconds: genericSeconds,
    eqSeconds: eqSeconds,
    ordSeconds: ordSeconds,
    semiringSeconds: semiringSeconds,
    ringSeconds: ringSeconds,
    showSeconds: showSeconds,
    newtypeMinutes: newtypeMinutes,
    genericMinutes: genericMinutes,
    eqMinutes: eqMinutes,
    ordMinutes: ordMinutes,
    semiringMinutes: semiringMinutes,
    ringMinutes: ringMinutes,
    showMinutes: showMinutes,
    newtypeHours: newtypeHours,
    genericHours: genericHours,
    eqHours: eqHours,
    ordHours: ordHours,
    semiringHours: semiringHours,
    ringHours: ringHours,
    showHours: showHours,
    newtypeDays: newtypeDays,
    genericDays: genericDays,
    eqDays: eqDays,
    ordDays: ordDays,
    semiringDays: semiringDays,
    ringDays: ringDays,
    showDays: showDays,
    durationMilliseconds: durationMilliseconds,
    durationSeconds: durationSeconds,
    durationMinutes: durationMinutes,
    durationHours: durationHours,
    durationDays: durationDays
};

},{"../Control.Apply":6,"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Generic":138,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],205:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Bounded = require("../Data.Bounded");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Time_Component = require("../Data.Time.Component");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var $$Math = require("../Math");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Time = (function () {
    function Time(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Time.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Time(value0, value1, value2, value3);
                };
            };
        };
    };
    return Time;
})();
var showTime = new Data_Show.Show(function (v) {
    return "(Time " + (Data_Show.show(Data_Time_Component.showHour)(v.value0) + (" " + (Data_Show.show(Data_Time_Component.showMinute)(v.value1) + (" " + (Data_Show.show(Data_Time_Component.showSecond)(v.value2) + (" " + (Data_Show.show(Data_Time_Component.showMillisecond)(v.value3) + ")")))))));
});
var setSecond = function (s) {
    return function (v) {
        return new Time(v.value0, v.value1, s, v.value3);
    };
};
var setMinute = function (m) {
    return function (v) {
        return new Time(v.value0, m, v.value2, v.value3);
    };
};
var setMillisecond = function (ms) {
    return function (v) {
        return new Time(v.value0, v.value1, v.value2, ms);
    };
};
var setHour = function (h) {
    return function (v) {
        return new Time(h, v.value1, v.value2, v.value3);
    };
};
var second = function (v) {
    return v.value2;
};
var minute = function (v) {
    return v.value1;
};
var millisecond = function (v) {
    return v.value3;
};
var millisToTime = function (v) {
    var hours = $$Math.floor(v / 3600000.0);
    var minutes = $$Math.floor((v - hours * 3600000.0) / 60000.0);
    var seconds = $$Math.floor((v - (hours * 3600000.0 + minutes * 60000.0)) / 1000.0);
    var milliseconds = v - (hours * 3600000.0 + minutes * 60000.0 + seconds * 1000.0);
    return Data_Maybe.fromJust()(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(Data_Int.floor(hours))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(Data_Int.floor(minutes))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(Data_Int.floor(seconds))))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Int.floor(milliseconds))));
};
var hour = function (v) {
    return v.value0;
};
var timeToMillis = function (t) {
    return Data_Time_Duration.Milliseconds(3600000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(hour(t))) + 60000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(minute(t))) + 1000.0 * Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(second(t))) + Data_Int.toNumber(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(millisecond(t))));
};
var genericTime = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Time" && v.value1.length === 4)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Time.create))(Data_Generic.fromSpine(Data_Time_Component.genericHour)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericMinute)(v["value1"][1](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericSecond)(v["value1"][2](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Time_Component.genericMillisecond)(v["value1"][3](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Time", [ {
        sigConstructor: "Data.Time.Time",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericHour)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericMinute)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericSecond)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Time_Component.genericMillisecond)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Time", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericHour)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericMinute)(v.value1);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericSecond)(v.value2);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Time_Component.genericMillisecond)(v.value3);
    } ]);
});
var eqTime = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Time_Component.eqHour)(x.value0)(y.value0) && Data_Eq.eq(Data_Time_Component.eqMinute)(x.value1)(y.value1) && Data_Eq.eq(Data_Time_Component.eqSecond)(x.value2)(y.value2) && Data_Eq.eq(Data_Time_Component.eqMillisecond)(x.value3)(y.value3);
    };
});
var ordTime = new Data_Ord.Ord(function () {
    return eqTime;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Time_Component.ordHour)(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v1 = Data_Ord.compare(Data_Time_Component.ordMinute)(x.value1)(y.value1);
        if (v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        var v2 = Data_Ord.compare(Data_Time_Component.ordSecond)(x.value2)(y.value2);
        if (v2 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v2 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Time_Component.ordMillisecond)(x.value3)(y.value3);
    };
});
var diff = function (dictDuration) {
    return function (t1) {
        return function (t2) {
            return Data_Time_Duration.toDuration(dictDuration)(Data_Ring.sub(Data_Time_Duration.ringMilliseconds)(timeToMillis(t1))(timeToMillis(t2)));
        };
    };
};
var boundedTime = new Data_Bounded.Bounded(function () {
    return ordTime;
}, new Time(Data_Bounded.bottom(Data_Time_Component.boundedHour), Data_Bounded.bottom(Data_Time_Component.boundedMinute), Data_Bounded.bottom(Data_Time_Component.boundedSecond), Data_Bounded.bottom(Data_Time_Component.boundedMillisecond)), new Time(Data_Bounded.top(Data_Time_Component.boundedHour), Data_Bounded.top(Data_Time_Component.boundedMinute), Data_Bounded.top(Data_Time_Component.boundedSecond), Data_Bounded.top(Data_Time_Component.boundedMillisecond)));
var maxTime = timeToMillis(Data_Bounded.top(boundedTime));
var adjust = function (dictDuration) {
    return function (d) {
        return function (t) {
            var tLength = timeToMillis(t);
            var d$prime = Data_Time_Duration.fromDuration(dictDuration)(d);
            var wholeDays = Data_Time_Duration.Days($$Math.floor(Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(d$prime) / 8.64e7));
            var msAdjust = Data_Ring.sub(Data_Time_Duration.ringMilliseconds)(d$prime)(Data_Time_Duration.fromDuration(Data_Time_Duration.durationDays)(wholeDays));
            var msAdjusted = Data_Semiring.add(Data_Time_Duration.semiringMilliseconds)(tLength)(msAdjust);
            var wrap = (function () {
                var $134 = Data_Ord.greaterThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(maxTime);
                if ($134) {
                    return 1.0;
                };
                var $135 = Data_Ord.lessThan(Data_Time_Duration.ordMilliseconds)(msAdjusted)(Data_Ring.negate(Data_Time_Duration.ringMilliseconds)(maxTime));
                if ($135) {
                    return -1.0;
                };
                return 0.0;
            })();
            return new Data_Tuple.Tuple(Data_Semiring.add(Data_Time_Duration.semiringDays)(wholeDays)(wrap), millisToTime(Data_Ring.sub(Data_Time_Duration.ringMilliseconds)(msAdjusted)(8.64e7 * wrap)));
        };
    };
};
module.exports = {
    Time: Time,
    hour: hour,
    setHour: setHour,
    minute: minute,
    setMinute: setMinute,
    second: second,
    setSecond: setSecond,
    millisecond: millisecond,
    setMillisecond: setMillisecond,
    adjust: adjust,
    diff: diff,
    eqTime: eqTime,
    ordTime: ordTime,
    genericTime: genericTime,
    boundedTime: boundedTime,
    showTime: showTime
};

},{"../Control.Apply":6,"../Data.Bounded":93,"../Data.Enum":109,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Functor":130,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Int":146,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Time.Component":203,"../Data.Time.Duration":204,"../Data.Tuple":212,"../Data.Unit":220,"../Math":244,"../Partial.Unsafe":253,"../Prelude":263}],206:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Prelude = require("../Prelude");
var StateR = function (x) {
    return x;
};
var StateL = function (x) {
    return x;
};
var stateR = function (v) {
    return v;
};
var stateL = function (v) {
    return v;
};
var functorStateR = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var v = stateR(k)(s);
            return {
                accum: v.accum,
                value: f(v.value)
            };
        };
    };
});
var functorStateL = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var v = stateL(k)(s);
            return {
                accum: v.accum,
                value: f(v.value)
            };
        };
    };
});
var applyStateR = new Control_Apply.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var v = stateR(x)(s);
            var v1 = stateR(f)(v.accum);
            return {
                accum: v1.accum,
                value: v1.value(v.value)
            };
        };
    };
});
var applyStateL = new Control_Apply.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var v = stateL(f)(s);
            var v1 = stateL(x)(v.accum);
            return {
                accum: v1.accum,
                value: v.value(v1.value)
            };
        };
    };
});
var applicativeStateR = new Control_Applicative.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s,
            value: a
        };
    };
});
var applicativeStateL = new Control_Applicative.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s,
            value: a
        };
    };
});
module.exports = {
    StateL: StateL,
    stateL: stateL,
    StateR: StateR,
    stateR: stateR,
    functorStateL: functorStateL,
    applyStateL: applyStateL,
    applicativeStateL: applicativeStateL,
    functorStateR: functorStateR,
    applyStateR: applyStateR,
    applicativeStateR: applicativeStateR
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Data.Functor":130,"../Data.Traversable.Accum":207,"../Prelude":263}],207:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67}],208:[function(require,module,exports){
"use strict";

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont(fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList(x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray(list) {
    var arr = [];
    var xs = list;
    while (xs !== emptyList) {
      arr.push(xs.head);
      xs = xs.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function (x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function (acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],209:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal");
var Prelude = require("../Prelude");
var Traversable = function (Foldable1, Functor0, sequence, traverse) {
    this.Foldable1 = Foldable1;
    this.Functor0 = Functor0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
            };
            if (v1 instanceof Data_Maybe.Just) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(f(v));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(f(v));
        };
    };
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(f(v));
        };
    };
});
var sequenceDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
    };
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Data_Functor.functorArray;
}, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
});
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traverseDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (ta) {
                return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable.Functor0())(f)(ta));
            };
        };
    };
};
var mapAccumR = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateR(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var mapAccumL = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateL(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var $$for = function (dictApplicative) {
    return function (dictTraversable) {
        return function (x) {
            return function (f) {
                return traverse(dictTraversable)(dictApplicative)(f)(x);
            };
        };
    };
};
module.exports = {
    Traversable: Traversable,
    traverse: traverse,
    sequence: sequence,
    traverseDefault: traverseDefault,
    sequenceDefault: sequenceDefault,
    "for": $$for,
    scanl: scanl,
    scanr: scanr,
    mapAccumL: mapAccumL,
    mapAccumR: mapAccumR,
    traversableArray: traversableArray,
    traversableMaybe: traversableMaybe,
    traversableFirst: traversableFirst,
    traversableLast: traversableLast,
    traversableAdditive: traversableAdditive,
    traversableDual: traversableDual,
    traversableConj: traversableConj,
    traversableDisj: traversableDisj,
    traversableMultiplicative: traversableMultiplicative
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Category":11,"../Data.Foldable":116,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Maybe.Last":155,"../Data.Monoid.Additive":163,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Multiplicative":168,"../Data.Traversable.Accum":207,"../Data.Traversable.Accum.Internal":206,"../Prelude":263,"./foreign":208}],210:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Traversable = require("../Data.Traversable");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
    this.FoldableWithIndex1 = FoldableWithIndex1;
    this.FunctorWithIndex0 = FunctorWithIndex0;
    this.Traversable2 = Traversable2;
    this.traverseWithIndex = traverseWithIndex;
};
var traverseWithIndexDefault = function (dictTraversableWithIndex) {
    return function (dictApplicative) {
        return function (f) {
            return function ($17) {
                return Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative)(Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f)($17));
            };
        };
    };
};
var traverseWithIndex = function (dict) {
    return dict.traverseWithIndex;
};
var traversableWithIndexMultiplicative = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexMultiplicative;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexMultiplicative;
}, function () {
    return Data_Traversable.traversableMultiplicative;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMultiplicative)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexMaybe = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexMaybe;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexMaybe;
}, function () {
    return Data_Traversable.traversableMaybe;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexLast = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexLast;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexLast;
}, function () {
    return Data_Traversable.traversableLast;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableLast)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexFirst = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexFirst;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexFirst;
}, function () {
    return Data_Traversable.traversableFirst;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableFirst)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexDual = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexDual;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexDual;
}, function () {
    return Data_Traversable.traversableDual;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDual)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexDisj = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexDisj;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexDisj;
}, function () {
    return Data_Traversable.traversableDisj;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDisj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexConj = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexConj;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexConj;
}, function () {
    return Data_Traversable.traversableConj;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableConj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexArray = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexArray;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexArray;
}, function () {
    return Data_Traversable.traversableArray;
}, function (dictApplicative) {
    return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
});
var traversableWithIndexAdditive = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexAdditive;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexAdditive;
}, function () {
    return Data_Traversable.traversableAdditive;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableAdditive)(dictApplicative)(f(Data_Unit.unit));
    };
});
var mapAccumRWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateR(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateR)(function (i) {
                    return function (a) {
                        return function (s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanrWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumRWithIndex(dictTraversableWithIndex)(function (i) {
                    return function (b) {
                        return function (a) {
                            var b$prime = f(i)(a)(b);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var mapAccumLWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateL(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateL)(function (i) {
                    return function (a) {
                        return function (s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanlWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumLWithIndex(dictTraversableWithIndex)(function (i) {
                    return function (b) {
                        return function (a) {
                            var b$prime = f(i)(b)(a);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var forWithIndex = function (dictApplicative) {
    return function (dictTraversableWithIndex) {
        return Data_Function.flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
    };
};
module.exports = {
    TraversableWithIndex: TraversableWithIndex,
    traverseWithIndex: traverseWithIndex,
    traverseWithIndexDefault: traverseWithIndexDefault,
    forWithIndex: forWithIndex,
    scanlWithIndex: scanlWithIndex,
    mapAccumLWithIndex: mapAccumLWithIndex,
    scanrWithIndex: scanrWithIndex,
    mapAccumRWithIndex: mapAccumRWithIndex,
    traversableWithIndexArray: traversableWithIndexArray,
    traversableWithIndexMaybe: traversableWithIndexMaybe,
    traversableWithIndexFirst: traversableWithIndexFirst,
    traversableWithIndexLast: traversableWithIndexLast,
    traversableWithIndexAdditive: traversableWithIndexAdditive,
    traversableWithIndexDual: traversableWithIndexDual,
    traversableWithIndexConj: traversableWithIndexConj,
    traversableWithIndexDisj: traversableWithIndexDisj,
    traversableWithIndexMultiplicative: traversableWithIndexMultiplicative
};

},{"../Control.Semigroupoid":60,"../Data.FoldableWithIndex":117,"../Data.Function":125,"../Data.FunctorWithIndex":132,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Maybe.Last":155,"../Data.Monoid.Additive":163,"../Data.Monoid.Conj":164,"../Data.Monoid.Disj":165,"../Data.Monoid.Dual":166,"../Data.Monoid.Multiplicative":168,"../Data.Traversable":209,"../Data.Traversable.Accum":207,"../Data.Traversable.Accum.Internal":206,"../Data.Unit":220,"../Prelude":263}],211:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var uncurry9 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry8 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry7 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry6 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry5 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0);
    };
};
var uncurry4 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0);
    };
};
var uncurry3 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0);
    };
};
var uncurry2 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0);
    };
};
var uncurry10 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry1 = function (f) {
    return function (v) {
        return f(v.value0);
    };
};
var tuple9 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, Data_Unit.unit)))))))));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple8 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, Data_Unit.unit))))))));
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple7 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, Data_Unit.unit)))))));
                        };
                    };
                };
            };
        };
    };
};
var tuple6 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, Data_Unit.unit))))));
                    };
                };
            };
        };
    };
};
var tuple5 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, Data_Unit.unit)))));
                };
            };
        };
    };
};
var tuple4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, Data_Unit.unit))));
            };
        };
    };
};
var tuple3 = function (a) {
    return function (b) {
        return function (c) {
            return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, Data_Unit.unit)));
        };
    };
};
var tuple2 = function (a) {
    return function (b) {
        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, Data_Unit.unit));
    };
};
var tuple10 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (j) {
                                        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, new Data_Tuple.Tuple(j, Data_Unit.unit))))))))));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple1 = function (a) {
    return new Data_Tuple.Tuple(a, Data_Unit.unit);
};
var over9 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1.value1)))))))));
    };
};
var over8 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1))))))));
    };
};
var over7 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1)))))));
    };
};
var over6 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1))))));
    };
};
var over5 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1)))));
    };
};
var over4 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value0), v.value1.value1.value1.value1))));
    };
};
var over3 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value0), v.value1.value1.value1)));
    };
};
var over2 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(o(v.value1.value0), v.value1.value1));
    };
};
var over10 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value1))))))))));
    };
};
var over1 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(o(v.value0), v.value1);
    };
};
var get9 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get8 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get7 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value0;
};
var get6 = function (v) {
    return v.value1.value1.value1.value1.value1.value0;
};
var get5 = function (v) {
    return v.value1.value1.value1.value1.value0;
};
var get4 = function (v) {
    return v.value1.value1.value1.value0;
};
var get3 = function (v) {
    return v.value1.value1.value0;
};
var get2 = function (v) {
    return v.value1.value0;
};
var get10 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get1 = function (v) {
    return v.value0;
};
var curry9 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return function (i) {
                                            return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, z))))))))));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry8 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, z)))))))));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry7 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, z))))))));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry6 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, z)))))));
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry5 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, z))))));
                        };
                    };
                };
            };
        };
    };
};
var curry4 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, z)))));
                    };
                };
            };
        };
    };
};
var curry3 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, z))));
                };
            };
        };
    };
};
var curry2 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, z)));
            };
        };
    };
};
var curry10 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return function (i) {
                                            return function (j) {
                                                return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, new Data_Tuple.Tuple(j, z)))))))))));
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry1 = function (z) {
    return function (f) {
        return function (a) {
            return f(new Data_Tuple.Tuple(a, z));
        };
    };
};
module.exports = {
    tuple1: tuple1,
    tuple2: tuple2,
    tuple3: tuple3,
    tuple4: tuple4,
    tuple5: tuple5,
    tuple6: tuple6,
    tuple7: tuple7,
    tuple8: tuple8,
    tuple9: tuple9,
    tuple10: tuple10,
    get1: get1,
    get2: get2,
    get3: get3,
    get4: get4,
    get5: get5,
    get6: get6,
    get7: get7,
    get8: get8,
    get9: get9,
    get10: get10,
    over1: over1,
    over2: over2,
    over3: over3,
    over4: over4,
    over5: over5,
    over6: over6,
    over7: over7,
    over8: over8,
    over9: over9,
    over10: over10,
    uncurry1: uncurry1,
    uncurry2: uncurry2,
    uncurry3: uncurry3,
    uncurry4: uncurry4,
    uncurry5: uncurry5,
    uncurry6: uncurry6,
    uncurry7: uncurry7,
    uncurry8: uncurry8,
    uncurry9: uncurry9,
    uncurry10: uncurry10,
    curry1: curry1,
    curry2: curry2,
    curry3: curry3,
    curry4: curry4,
    curry5: curry5,
    curry6: curry6,
    curry7: curry7,
    curry8: curry8,
    curry9: curry9,
    curry10: curry10
};

},{"../Data.Tuple":212,"../Data.Unit":220,"../Prelude":263}],212:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Distributive = require("../Data.Distributive");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Type_Equality = require("../Type.Equality");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function (v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function (v) {
    return v.value1;
};
var showTuple = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var semiringTuple = function (dictSemiring) {
    return function (dictSemiring1) {
        return new Data_Semiring.Semiring(function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
    };
};
var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
        return new Tuple(v1.value0, v.value1);
    };
});
var semigroupTuple = function (dictSemigroup) {
    return function (dictSemigroup1) {
        return new Data_Semigroup.Semigroup(function (v) {
            return function (v1) {
                return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
            };
        });
    };
};
var ringTuple = function (dictRing) {
    return function (dictRing1) {
        return new Data_Ring.Ring(function () {
            return semiringTuple(dictRing.Semiring0())(dictRing1.Semiring0());
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
            };
        });
    };
};
var monoidTuple = function (dictMonoid) {
    return function (dictMonoid1) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
    };
};
var lookup = function (dictFoldable) {
    return function (dictEq) {
        return function (a) {
            return function ($264) {
                return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                    var $146 = Data_Eq.eq(dictEq)(a)(v.value0);
                    if ($146) {
                        return new Data_Maybe.Just(v.value1);
                    };
                    return Data_Maybe.Nothing.value;
                })($264));
            };
        };
    };
};
var heytingAlgebraTuple = function (dictHeytingAlgebra) {
    return function (dictHeytingAlgebra1) {
        return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
        }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
    };
};
var functorTuple = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (v) {
    return v.value0;
};
var lazyTuple = function (dictLazy) {
    return function (dictLazy1) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
                return fst(f(Data_Unit.unit));
            }), Control_Lazy.defer(dictLazy1)(function (v) {
                return snd(f(Data_Unit.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v));
    };
});
var eqTuple = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordTuple = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var eq1Tuple = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqTuple(dictEq)(dictEq1));
    });
};
var ord1Tuple = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Tuple(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordTuple(dictOrd)(dictOrd1));
    });
};
var distributiveTuple = function (dictTypeEquals) {
    return new Data_Distributive.Distributive(function () {
        return functorTuple;
    }, function (dictFunctor) {
        return Data_Distributive.collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
    }, function (dictFunctor) {
        return function ($265) {
            return Tuple.create(Type_Equality.from(dictTypeEquals)(Data_Unit.unit))(Data_Functor.map(dictFunctor)(snd)($265));
        };
    });
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var commutativeRingTuple = function (dictCommutativeRing) {
    return function (dictCommutativeRing1) {
        return new Data_CommutativeRing.CommutativeRing(function () {
            return ringTuple(dictCommutativeRing.Ring0())(dictCommutativeRing1.Ring0());
        });
    };
};
var boundedTuple = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordTuple(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
    };
};
var booleanAlgebraTuple = function (dictBooleanAlgebra) {
    return function (dictBooleanAlgebra1) {
        return new Data_BooleanAlgebra.BooleanAlgebra(function () {
            return heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0())(dictBooleanAlgebra1.HeytingAlgebra0());
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Tuple(f(v.value0), g(v.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(g(v.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return g(f(z)(v.value0))(v.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return f(v.value0)(g(v.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(f(v.value0)))(g(v.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (v) {
    return function (v1) {
        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (dictSemigroup) {
    return new Control_Apply.Apply(function () {
        return functorTuple;
    }, function (v) {
        return function (v1) {
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
        };
    });
};
var bindTuple = function (dictSemigroup) {
    return new Control_Bind.Bind(function () {
        return applyTuple(dictSemigroup);
    }, function (v) {
        return function (f) {
            var v1 = f(v.value1);
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
        };
    });
};
var applicativeTuple = function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
        return applyTuple(dictMonoid.Semigroup0());
    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};
var monadTuple = function (dictMonoid) {
    return new Control_Monad.Monad(function () {
        return applicativeTuple(dictMonoid);
    }, function () {
        return bindTuple(dictMonoid.Semigroup0());
    });
};
module.exports = {
    Tuple: Tuple,
    fst: fst,
    snd: snd,
    curry: curry,
    uncurry: uncurry,
    swap: swap,
    lookup: lookup,
    showTuple: showTuple,
    eqTuple: eqTuple,
    eq1Tuple: eq1Tuple,
    ordTuple: ordTuple,
    ord1Tuple: ord1Tuple,
    boundedTuple: boundedTuple,
    semigroupoidTuple: semigroupoidTuple,
    semigroupTuple: semigroupTuple,
    monoidTuple: monoidTuple,
    semiringTuple: semiringTuple,
    ringTuple: ringTuple,
    commutativeRingTuple: commutativeRingTuple,
    heytingAlgebraTuple: heytingAlgebraTuple,
    booleanAlgebraTuple: booleanAlgebraTuple,
    functorTuple: functorTuple,
    invariantTuple: invariantTuple,
    bifunctorTuple: bifunctorTuple,
    applyTuple: applyTuple,
    biapplyTuple: biapplyTuple,
    applicativeTuple: applicativeTuple,
    biapplicativeTuple: biapplicativeTuple,
    bindTuple: bindTuple,
    monadTuple: monadTuple,
    extendTuple: extendTuple,
    comonadTuple: comonadTuple,
    lazyTuple: lazyTuple,
    foldableTuple: foldableTuple,
    bifoldableTuple: bifoldableTuple,
    traversableTuple: traversableTuple,
    bitraversableTuple: bitraversableTuple,
    distributiveTuple: distributiveTuple
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Biapplicative":7,"../Control.Biapply":8,"../Control.Bind":10,"../Control.Comonad":12,"../Control.Extend":14,"../Control.Lazy":15,"../Control.Monad":54,"../Control.Semigroupoid":60,"../Data.Bifoldable":82,"../Data.Bifunctor":88,"../Data.Bitraversable":89,"../Data.BooleanAlgebra":91,"../Data.Bounded":93,"../Data.CommutativeRing":98,"../Data.Distributive":106,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Functor.Invariant":128,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Maybe.First":154,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Traversable":209,"../Data.Unit":220,"../Prelude":263,"../Type.Equality":278}],213:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Type_Proxy = require("../Type.Proxy");
var Sized = function (sized) {
    this.sized = sized;
};
var sz = new Sized(function (v) {
    return 0;
});
var sized = function (dict) {
    return dict.sized;
};
var s4 = new Sized(function (v) {
    return 4;
});
var s3 = new Sized(function (v) {
    return 3;
});
var s2 = new Sized(function (v) {
    return 2;
});
var s1 = new Sized(function (v) {
    return 1;
});
module.exports = {
    sized: sized,
    Sized: Sized,
    sz: sz,
    s1: s1,
    s2: s2,
    s3: s3,
    s4: s4
};

},{"../Type.Proxy":279}],214:[function(require,module,exports){
/* global exports */

// module Data.TypedArray


    "use strict";

    // conversion from and to typed arrays
    exports.asInt8Array = function(array)
        {var res = new Int8Array(array);
         return res;};

    exports.asUint8Array = function (array)
        {var res = new Uint8Array(array);
         return res;};

    exports.asUint8ClampedArray = function (array)
        {var res = new Uint8ClampedArray(array);
         return res;};

    exports.asInt16Array = function (array)
        {var res = new Int16Array (array);
         return res;};

    exports.asUint16Array = function (array)
        {var res = new Uint16Array (array);
         return res;};

    exports.asInt32Array = function (array)
        {var res = new Int32Array (array);
         return res;};

    exports.asUint32Array = function (array)
        {var res = new Uint32Array (array);
         return res;};

    exports.asFloat32Array = function (array)
        {var res = new Float32Array (array);
         return res;};

    exports.asFloat64Array = function (array)
        {var res = new Float64Array (array);
         return res;};

//----------------

    exports.newInt8Array = function(length)
        {var res = new Int8Array(length);
         return res;};

    exports.newUint8Array = function (length)
        {var res = new Uint8Array(length);
         return res;};

    exports.newUint8ClampedArray = function (length)
        {var res = new Uint8ClampedArray(length);
         return res;};

    exports.newInt16Array = function (length)
        {var res = new Int16Array (length);
         return res;};

    exports.newUint16Array = function (length)
        {var res = new Uint16Array (length);
         return res;};

    exports.newInt32Array = function (length)
        {var res = new Int32Array (length);
         return res;};

    exports.newUint32Array = function (length)
        {var res = new Uint32Array (length);
         return res;};

    exports.newFloat32Array = function (length)
        {var res = new Float32Array (length);
         return res;};

    exports.newFloat64Array = function (length)
        {var res = new Float64Array (length);
         return res;};

//----------------------------


    exports.dwAsInt8Array = function(v) {
      return new Int8Array(v.buffer, v.byteOffset, v.byteLength);
    }

    exports.dwAsInt16Array = function(v) {
      return new Int16Array(v.buffer, v.byteOffset, v.byteLength >>> 1);
    }

    exports.dwAsInt32Array = function(v) {
      return new Int32Array(v.buffer, v.byteOffset, v.byteLength >>> 2);
    }

    exports.dwAsUint8Array = function(v) {
      return new Uint8Array(v.buffer, v.byteOffset, v.byteLength);
    }

    exports.dwAsUint16Array = function(v) {
      return new Uint16Array(v.buffer, v.byteOffset, v.byteLength >>> 1);
    }

    exports.dwAsUint32Array = function(v) {
      return new Uint32Array(v.buffer, v.byteOffset, v.byteLength >>> 2);
    }

    exports.dwAsUint8ClampedArray = function(v) {
      return new Uint8ClampedArray(v.buffer, v.byteOffset, v.byteLength);
    }

    exports.dwAsFloat32Array = function(v) {
      return new Float32Array(v.buffer, v.byteOffset, v.byteLength >>> 2);
    }

    exports.dwAsFloat64Array = function(v) {
      return new Float64Array(v.buffer, v.byteOffset, v.byteLength >>> 3);
    }


    exports.asArray = function (arrayBuffer)
        {var res = Array.prototype.slice.call(arrayBuffer);
         return res;};

    exports.length = function (arrayBuffer)
        {return arrayBuffer.length;};

    exports.byteLength = function (arrayBuffer)
        {return arrayBuffer.byteLength;};

    exports.insertAt = function (index) {
        return function (a) {
          return function (l) {
            var l1 = l.slice();
            l1.splice(index, 0, a);
            return l1;
          };
        };
    };

    exports.unsafeIndex = function (xs) {
        return function(n) {
          return xs[n];
        };
    };

},{}],215:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Prelude = require("../Prelude");
var index = function (xs) {
    return function (n) {
        var $0 = n < 0 || n >= $foreign.length(xs);
        if ($0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just($foreign.unsafeIndex(xs)(n));
    };
};
module.exports = {
    index: index,
    asInt8Array: $foreign.asInt8Array,
    asUint8Array: $foreign.asUint8Array,
    asUint8ClampedArray: $foreign.asUint8ClampedArray,
    asInt16Array: $foreign.asInt16Array,
    asUint16Array: $foreign.asUint16Array,
    asInt32Array: $foreign.asInt32Array,
    asUint32Array: $foreign.asUint32Array,
    asFloat32Array: $foreign.asFloat32Array,
    asFloat64Array: $foreign.asFloat64Array,
    dwAsInt8Array: $foreign.dwAsInt8Array,
    dwAsInt16Array: $foreign.dwAsInt16Array,
    dwAsInt32Array: $foreign.dwAsInt32Array,
    dwAsUint8Array: $foreign.dwAsUint8Array,
    dwAsUint16Array: $foreign.dwAsUint16Array,
    dwAsUint32Array: $foreign.dwAsUint32Array,
    dwAsUint8ClampedArray: $foreign.dwAsUint8ClampedArray,
    dwAsFloat32Array: $foreign.dwAsFloat32Array,
    dwAsFloat64Array: $foreign.dwAsFloat64Array,
    newInt8Array: $foreign.newInt8Array,
    newUint8Array: $foreign.newUint8Array,
    newUint8ClampedArray: $foreign.newUint8ClampedArray,
    newInt16Array: $foreign.newInt16Array,
    newUint16Array: $foreign.newUint16Array,
    newInt32Array: $foreign.newInt32Array,
    newUint32Array: $foreign.newUint32Array,
    newFloat32Array: $foreign.newFloat32Array,
    newFloat64Array: $foreign.newFloat64Array,
    asArray: $foreign.asArray,
    length: $foreign.length,
    byteLength: $foreign.byteLength,
    insertAt: $foreign.insertAt,
    unsafeIndex: $foreign.unsafeIndex
};

},{"../Data.ArrayBuffer.Types":81,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Prelude":263,"./foreign":214}],216:[function(require,module,exports){
"use strict";

exports.unfoldrArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;
            while (true) { // eslint-disable-line no-constant-condition
              var maybe = f(value);
              if (isNothing(maybe)) return result;
              var tuple = fromJust(maybe);
              result.push(fst(tuple));
              value = snd(tuple);
            }
          };
        };
      };
    };
  };
};

},{}],217:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
var replicate = function (dictUnfoldable) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                var $9 = i <= 0;
                if ($9) {
                    return Data_Maybe.Nothing.value;
                };
                return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
            };
            return unfoldr(dictUnfoldable)(step)(n);
        };
    };
};
var replicateA = function (dictApplicative) {
    return function (dictUnfoldable) {
        return function (dictTraversable) {
            return function (n) {
                return function (m) {
                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
                };
            };
        };
    };
};
var singleton = function (dictUnfoldable) {
    return replicate(dictUnfoldable)(1);
};
var range = function (dictUnfoldable) {
    return function (start) {
        return function (end) {
            return unfoldr(dictUnfoldable)(function (i) {
                var $10 = i <= end;
                if ($10) {
                    return new Data_Maybe.Just(Data_Tuple.Tuple.create(i)(i + 1 | 0));
                };
                return Data_Maybe.Nothing.value;
            })(start);
        };
    };
};
var none = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
};
var fromMaybe = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function (b) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
    });
};
module.exports = {
    Unfoldable: Unfoldable,
    unfoldr: unfoldr,
    replicate: replicate,
    replicateA: replicateA,
    none: none,
    singleton: singleton,
    range: range,
    fromMaybe: fromMaybe,
    unfoldableArray: unfoldableArray
};

},{"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Traversable":209,"../Data.Tuple":212,"../Data.Unit":220,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":216}],218:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Semiring = require("../Data.Semiring");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Unfoldable1 = function (unfoldr1) {
    this.unfoldr1 = unfoldr1;
};
var unfoldr1 = function (dict) {
    return dict.unfoldr1;
};
var replicate1 = function (dictUnfoldable1) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                if (i <= 0) {
                    return new Data_Tuple.Tuple(v, Data_Maybe.Nothing.value);
                };
                if (Data_Boolean.otherwise) {
                    return new Data_Tuple.Tuple(v, new Data_Maybe.Just(i - 1 | 0));
                };
                throw new Error("Failed pattern match at Data.Unfoldable1 line 33, column 5 - line 33, column 39: " + [ i.constructor.name ]);
            };
            return unfoldr1(dictUnfoldable1)(step)(n - 1 | 0);
        };
    };
};
var replicate1A = function (dictApply) {
    return function (dictUnfoldable1) {
        return function (dictTraversable1) {
            return function (n) {
                return function (m) {
                    return Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply)(replicate1(dictUnfoldable1)(n)(m));
                };
            };
        };
    };
};
var singleton = function (dictUnfoldable1) {
    return replicate1(dictUnfoldable1)(1);
};
var range = function (dictUnfoldable1) {
    return function (start) {
        return function (end) {
            var go = function (delta) {
                return function (i) {
                    var i$prime = i + delta | 0;
                    return new Data_Tuple.Tuple(i, (function () {
                        var $7 = i === end;
                        if ($7) {
                            return Data_Maybe.Nothing.value;
                        };
                        return new Data_Maybe.Just(i$prime);
                    })());
                };
            };
            var delta = (function () {
                var $8 = end >= start;
                if ($8) {
                    return 1;
                };
                return -1 | 0;
            })();
            return unfoldr1(dictUnfoldable1)(go(delta))(start);
        };
    };
};
module.exports = {
    Unfoldable1: Unfoldable1,
    unfoldr1: unfoldr1,
    replicate1: replicate1,
    replicate1A: replicate1A,
    singleton: singleton,
    range: range
};

},{"../Data.Boolean":90,"../Data.Eq":111,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup.Traversable":183,"../Data.Semiring":187,"../Data.Tuple":212,"../Prelude":263}],219:[function(require,module,exports){
"use strict";

exports.unit = {};

},{}],220:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Show = require("../Data.Show");
var showUnit = new Data_Show.Show(function (v) {
    return "unit";
});
module.exports = {
    showUnit: showUnit,
    unit: $foreign.unit
};

},{"../Data.Show":189,"./foreign":219}],221:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_TypeNat = require("../Data.TypeNat");
var Extensions = require("../Extensions");
var $$Math = require("../Math");
var Prelude = require("../Prelude");
var Type_Proxy = require("../Type.Proxy");
var Vec = function (x) {
    return x;
};
var toArray = function (v) {
    return v;
};
var showVec = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "Vec " + Data_Show.show(Data_Show.showArray(dictShow))(v);
    });
};
var functorVec = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Data_Functor.map(Data_Functor.functorArray)(f)(v);
    };
});
var scale = function (dictEuclideanRing) {
    return function (s) {
        return function (v) {
            return Data_Functor.map(functorVec)(function (e) {
                return Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(e)(s);
            })(v);
        };
    };
};
var vNegate = function (dictEuclideanRing) {
    return function (v) {
        return Data_Functor.map(functorVec)(Data_Ring.negate((dictEuclideanRing.CommutativeRing0()).Ring0()))(v);
    };
};
var fromArray = function (dictSized) {
    return function (l) {
        var v = Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value);
        if (v === Data_Array.length(l)) {
            return l;
        };
        if (Data_Boolean.otherwise) {
            return Extensions.fail("Vector>>fromArray: wrong array length!");
        };
        throw new Error("Failed pattern match at Data.Vector line 34, column 6 - line 38, column 1: " + [ v.constructor.name ]);
    };
};
var foldableVector = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (xs) {
            return Data_Foldable.foldr(foldableVector)(function (x) {
                return function (acc) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                };
            })(Data_Monoid.mempty(dictMonoid))(xs);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(v);
        };
    };
});
var vlengthSquared = function (v) {
    return Data_Foldable.foldl(foldableVector)(Data_Semiring.add(Data_Semiring.semiringNumber))(0.0)(Data_Functor.map(functorVec)(function (e) {
        return e * e;
    })(v));
};
var vlength = function ($37) {
    return $$Math.sqrt(vlengthSquared($37));
};
var normalize = function (v) {
    var im = 1.0 / vlength(v);
    return Data_Functor.map(functorVec)(function (e) {
        return e * im;
    })(v);
};
var fill = function (dictEuclideanRing) {
    return function (dictSized) {
        return function (a) {
            return Extensions.replicate(Data_TypeNat.sized(dictSized)(Type_Proxy["Proxy"].value))(a);
        };
    };
};
var eqVec = function (dictEq) {
    return new Data_Eq.Eq(function (v) {
        return function (v1) {
            return Data_Eq.eq(Data_Eq.eqArray(dictEq))(v)(v1);
        };
    });
};
var applyVec = new Control_Apply.Apply(function () {
    return functorVec;
}, function (v) {
    return function (v1) {
        return Data_Array.zipWith(function (f$prime) {
            return function (a$prime) {
                return f$prime(a$prime);
            };
        })(v)(v1);
    };
});
var vAdd = function (dictEuclideanRing) {
    return Control_Apply.lift2(applyVec)(Data_Semiring.add(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
};
var vMul = function (dictEuclideanRing) {
    return Control_Apply.lift2(applyVec)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
};
var dot = function (v1) {
    return function (v2) {
        return Data_Foldable.foldl(foldableVector)(Data_Semiring.add(Data_Semiring.semiringNumber))(0.0)(vMul(Data_EuclideanRing.euclideanRingNumber)(v1)(v2));
    };
};
var semiringVector = function (dictSized) {
    return new Data_Semiring.Semiring(vAdd(Data_EuclideanRing.euclideanRingNumber), vMul(Data_EuclideanRing.euclideanRingNumber), fill(Data_EuclideanRing.euclideanRingNumber)(dictSized)(1.0), fill(Data_EuclideanRing.euclideanRingNumber)(dictSized)(0.0));
};
var vSub = function (dictEuclideanRing) {
    return Control_Apply.lift2(applyVec)(Data_Ring.sub((dictEuclideanRing.CommutativeRing0()).Ring0()));
};
var direction = function (v1) {
    return function (v2) {
        return normalize(vSub(Data_EuclideanRing.euclideanRingNumber)(v1)(v2));
    };
};
var distanceSquared = function (v1) {
    return function (v2) {
        return Data_Foldable.foldl(foldableVector)(Data_Semiring.add(Data_Semiring.semiringNumber))(0.0)(Data_Functor.map(functorVec)(function (e) {
            return e * e;
        })(vSub(Data_EuclideanRing.euclideanRingNumber)(v1)(v2)));
    };
};
var distance = function (v1) {
    return function (v2) {
        return $$Math.sqrt(distanceSquared(v1)(v2));
    };
};
module.exports = {
    Vec: Vec,
    fill: fill,
    fromArray: fromArray,
    toArray: toArray,
    vAdd: vAdd,
    vSub: vSub,
    vMul: vMul,
    vNegate: vNegate,
    direction: direction,
    vlengthSquared: vlengthSquared,
    vlength: vlength,
    normalize: normalize,
    distanceSquared: distanceSquared,
    distance: distance,
    scale: scale,
    dot: dot,
    eqVec: eqVec,
    showVec: showVec,
    functorVec: functorVec,
    applyVec: applyVec,
    foldableVector: foldableVector,
    semiringVector: semiringVector
};

},{"../Control.Apply":6,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Boolean":90,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Foldable":116,"../Data.Functor":130,"../Data.Monoid":169,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.TypeNat":213,"../Extensions":227,"../Math":244,"../Prelude":263,"../Type.Proxy":279}],222:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_TypeNat = require("../Data.TypeNat");
var Data_Vector = require("../Data.Vector");
var Extensions = require("../Extensions");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var vec2$prime = function (array) {
    if (Data_Array.length(array) === 2) {
        return array;
    };
    if (Data_Boolean.otherwise) {
        return Extensions.fail("Vector2>>vec2': wrong array length!");
    };
    throw new Error("Failed pattern match at Data.Vector2 line 29, column 1 - line 29, column 37: " + [ array.constructor.name ]);
};
var vec2 = function (x) {
    return function (y) {
        return [ x, y ];
    };
};
var set2Y = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(1)(n)(v));
    };
};
var set2X = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(0)(n)(v));
    };
};
var j2 = [ 0.0, 1.0 ];
var i2 = [ 1.0, 0.0 ];
var get2Y = function (v) {
    return v[1];
};
var get2X = function (v) {
    return v[0];
};
module.exports = {
    vec2: vec2,
    "vec2'": vec2$prime,
    i2: i2,
    j2: j2,
    get2X: get2X,
    get2Y: get2Y,
    set2X: set2X,
    set2Y: set2Y
};

},{"../Data.Array":80,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Function":125,"../Data.Maybe":156,"../Data.TypeNat":213,"../Data.Vector":221,"../Extensions":227,"../Partial.Unsafe":253,"../Prelude":263}],223:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_TypeNat = require("../Data.TypeNat");
var Data_Vector = require("../Data.Vector");
var Extensions = require("../Extensions");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var vec3$prime = function (array) {
    if (Data_Array.length(array) === 3) {
        return array;
    };
    if (Data_Boolean.otherwise) {
        return Extensions.fail("Vector3>>vec3': wrong array length!");
    };
    throw new Error("Failed pattern match at Data.Vector3 line 30, column 1 - line 30, column 37: " + [ array.constructor.name ]);
};
var vec3 = function (x) {
    return function (y) {
        return function (z) {
            return [ x, y, z ];
        };
    };
};
var set3Z = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(2)(n)(v));
    };
};
var set3Y = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(1)(n)(v));
    };
};
var set3X = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(0)(n)(v));
    };
};
var k3 = [ 0.0, 0.0, 1.0 ];
var j3 = [ 0.0, 1.0, 0.0 ];
var i3 = [ 1.0, 0.0, 0.0 ];
var get3Z = function (v) {
    return v[2];
};
var get3Y = function (v) {
    return v[1];
};
var get3X = function (v) {
    return v[0];
};
var cross = function (dictEuclideanRing) {
    return function (v) {
        return function (v1) {
            if (v.length === 3 && v1.length === 3) {
                return [ Data_Ring.sub((dictEuclideanRing.CommutativeRing0()).Ring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[1])(v1[2]))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[2])(v1[1])), Data_Ring.sub((dictEuclideanRing.CommutativeRing0()).Ring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[2])(v1[0]))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[0])(v1[2])), Data_Ring.sub((dictEuclideanRing.CommutativeRing0()).Ring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[0])(v1[1]))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v[1])(v1[0])) ];
            };
            return Extensions.fail("Vector3>>cross: impossible!");
        };
    };
};
module.exports = {
    vec3: vec3,
    "vec3'": vec3$prime,
    i3: i3,
    j3: j3,
    k3: k3,
    get3X: get3X,
    get3Y: get3Y,
    get3Z: get3Z,
    set3X: set3X,
    set3Y: set3Y,
    set3Z: set3Z,
    cross: cross
};

},{"../Data.Array":80,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Function":125,"../Data.Maybe":156,"../Data.Ring":181,"../Data.Semiring":187,"../Data.TypeNat":213,"../Data.Vector":221,"../Extensions":227,"../Partial.Unsafe":253,"../Prelude":263}],224:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_TypeNat = require("../Data.TypeNat");
var Data_Vector = require("../Data.Vector");
var Extensions = require("../Extensions");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var vec4$prime = function (array) {
    if (Data_Array.length(array) === 4) {
        return array;
    };
    if (Data_Boolean.otherwise) {
        return Extensions.fail("Vector4>>vec4': wrong array length!");
    };
    throw new Error("Failed pattern match at Data.Vector4 line 29, column 1 - line 29, column 37: " + [ array.constructor.name ]);
};
var vec4 = function (x) {
    return function (y) {
        return function (z) {
            return function (u) {
                return [ x, y, z, u ];
            };
        };
    };
};
var set4Z = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(2)(n)(v));
    };
};
var set4Y = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(1)(n)(v));
    };
};
var set4X = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(0)(n)(v));
    };
};
var set4U = function (n) {
    return function (v) {
        return Data_Maybe.fromJust()(Data_Array.insertAt(3)(n)(v));
    };
};
var l4 = [ 0.0, 0.0, 0.0, 1.0 ];
var k4 = [ 0.0, 0.0, 1.0, 0.0 ];
var j4 = [ 0.0, 1.0, 0.0, 0.0 ];
var i4 = [ 1.0, 0.0, 0.0, 0.0 ];
var get4Z = function (v) {
    return v[2];
};
var get4Y = function (v) {
    return v[1];
};
var get4X = function (v) {
    return v[0];
};
var get4U = function (v) {
    return v[3];
};
module.exports = {
    vec4: vec4,
    "vec4'": vec4$prime,
    i4: i4,
    j4: j4,
    k4: k4,
    l4: l4,
    get4X: get4X,
    get4Y: get4Y,
    get4Z: get4Z,
    get4U: get4U,
    set4X: set4X,
    set4Y: set4Y,
    set4Z: set4Z,
    set4U: set4U
};

},{"../Data.Array":80,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Function":125,"../Data.Maybe":156,"../Data.TypeNat":213,"../Data.Vector":221,"../Extensions":227,"../Partial.Unsafe":253,"../Prelude":263}],225:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Show = require("../Data.Show");
var Void = function (x) {
    return x;
};
var absurd = function (a) {
    var spin = function ($copy_v) {
        var $tco_result;
        function $tco_loop(v) {
            $copy_v = v;
            return;
        };
        while (!false) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return spin(a);
};
var showVoid = new Data_Show.Show(absurd);
module.exports = {
    absurd: absurd,
    showVoid: showVoid
};

},{"../Data.Show":189}],226:[function(require,module,exports){
/* global exports */

// module Extensions


    "use strict";

    exports.fail = function(s) {
      throw new Error(s);
    }

    exports.undef = function() {
        throw new Error("Encountered undefined");
    }

    exports.unsafeCoerce = function(x) {
         return x;
    }

    exports.mapE = function(f) {
      return function(arr) {
        return function() {
          var res = new Array(arr.length);
          for (var i = 0; i < arr.length; i++) {
            res[i] = f(arr[i])();
          }
          return res;
        };
      };
   }

   exports.mapE_ = function(f) {
     return function(arr) {
       return function() {
         for (var i = 0; i < arr.length; i++) {
           f(arr[i])();
         }
       };
     };
  }

   exports.mapEBreak = function(f) {
       return function(b) {
       return function(arr) {
       return function() {
         var res = new Array(arr.length);
         for (var i = 0; i < arr.length; i++) {
           res[i] = f(arr[i])();
           var shouldBreak = b(i)();
           if (shouldBreak) {
               res = res.slice(0,i);
                break;
            };
        };
         return res;
       };
     };
   };
 };

  exports.mapEBreak_ = function(f) {
      return function(b) {
      return function(arr) {
      return function() {
        for (var i = 0; i < arr.length; i++) {
          f(arr[i])();
          var shouldBreak = b(i)();
          if (shouldBreak) {
               break;
           };
        };
      };
    };
  };
}

exports.replicate = function (n) {
  return function (v) {
    if (n < 1) return [];
    var r = new Array(n);
    for (var i = 0; i < n; i++) r[i] = v;
    return r;
  };
};

exports.timeout = function(millis) {
    return function(action) {
        return function() {
            setTimeout(action, millis);
        };
    };
}

exports.alert = function(msg) {
    return function() {
        window.alert(msg);
        return {};
    };
}

exports.logAny = function(level) {
    return function(text) {
        return function(k) {
            var logLevelString = level.constructor.name;
            console.log(logLevelString, ": ", text);
            if (log4js == null) {
                console.log(logLevelString, ": ", text);
            } else {
                if (logLevelString == "trace"){
                    log4js.trace(text);
                } else if (logLevelString == "debug"){
                    log4js.debug(text);
                } else if (logLevelString == "info"){
                    log4js.info(text);
                } else if (logLevelString == "warn"){
                    log4js.warn(text);
                } else if (logLevelString == "error"){
                    log4js.error(text);
                } else if (logLevelString == "fatal"){
                    log4js.fatal(text);
              }
          }
          return k({});
      }
    }
};

exports.parseDate = function (dateString) {
    return new Date(dateString);
};

exports.toISOString = function (date) {
    return date.toISOString();
};

exports.stringify = function(x) {
    return JSON.stringify(x);
};

},{}],227:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_CForeign = require("../Data.CForeign");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_JSDate = require("../Data.JSDate");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Unit = require("../Data.Unit");
var $$Math = require("../Math");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Trace = (function () {
    function Trace() {

    };
    Trace.value = new Trace();
    return Trace;
})();
var Debug = (function () {
    function Debug() {

    };
    Debug.value = new Debug();
    return Debug;
})();
var Info = (function () {
    function Info() {

    };
    Info.value = new Info();
    return Info;
})();
var Warn = (function () {
    function Warn() {

    };
    Warn.value = new Warn();
    return Warn;
})();
var $$Error = (function () {
    function $$Error() {

    };
    $$Error.value = new $$Error();
    return $$Error;
})();
var Fatal = (function () {
    function Fatal() {

    };
    Fatal.value = new Fatal();
    return Fatal;
})();
var signum = function (n) {
    if (n > 0) {
        return 1;
    };
    if (n < 0) {
        return -1 | 0;
    };
    if (Data_Boolean.otherwise) {
        return 0;
    };
    throw new Error("Failed pattern match at Extensions line 43, column 1 - line 43, column 21: " + [ n.constructor.name ]);
};
var replicateM = function (dictMonad) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Control_Applicative.pure(dictMonad.Applicative0())([  ]);
            };
            if (Data_Boolean.otherwise) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictMonad.Applicative0())($foreign.replicate(n)(m));
            };
            throw new Error("Failed pattern match at Extensions line 53, column 1 - line 53, column 63: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var modInt = function (n) {
    return function (d) {
        var r = n % d;
        var $11 = signum(r) === (-signum(d) | 0);
        if ($11) {
            return r + d | 0;
        };
        return r;
    };
};
var modFloat = function (n) {
    return function (d) {
        return n - $$Math.floor(n / d) * d;
    };
};
var mapM = function (dictMonad) {
    return function (f) {
        return function (array) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictMonad.Applicative0())(Data_Functor.map(Data_Functor.functorArray)(f)(array));
        };
    };
};
var logA$prime = function (logLevel) {
    return function (str) {
        return $foreign.logAny(logLevel)(str)(function (v) {
            return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
        });
    };
};
var logA = function (str) {
    return $foreign.logAny(Trace.value)(str)(function (v) {
        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
    });
};
var log$prime = $foreign.logAny;
var log = $foreign.logAny(Trace.value);
var listReplicate = function (n) {
    return function (value) {
        var go = function ($copy_n$prime) {
            return function ($copy_rest) {
                var $tco_var_n$prime = $copy_n$prime;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(n$prime, rest) {
                    if (n$prime <= 0) {
                        $tco_done = true;
                        return rest;
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_n$prime = n$prime - 1 | 0;
                        $copy_rest = new Data_List_Types.Cons(value, rest);
                        return;
                    };
                    throw new Error("Failed pattern match at Extensions line 62, column 3 - line 63, column 57: " + [ n$prime.constructor.name, rest.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_n$prime, $copy_rest);
                };
                return $tco_result;
            };
        };
        return go(n)(Data_List_Types.Nil.value);
    };
};
var hRange = function (a) {
    return function (b) {
        var $14 = a > b;
        if ($14) {
            return [  ];
        };
        return Data_Array.range(a)(b);
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return function (array) {
                var go = function (res) {
                    return function (i) {
                        if (i >= Data_Array.length(array)) {
                            return Control_Applicative.pure(dictMonad.Applicative0())(res);
                        };
                        if (Data_Boolean.otherwise) {
                            return Control_Bind.bind(dictMonad.Bind1())(f(res)(array[i]))(function (v) {
                                return go(v)(i + 1 | 0);
                            });
                        };
                        throw new Error("Failed pattern match at Extensions line 85, column 3 - line 89, column 24: " + [ res.constructor.name, i.constructor.name ]);
                    };
                };
                return go(a)(0);
            };
        };
    };
};
var bindConst = function (dictBind) {
    return function (x) {
        return function (y) {
            return Control_Bind.bind(dictBind)(x)(Data_Function["const"](y));
        };
    };
};
module.exports = {
    bindConst: bindConst,
    hRange: hRange,
    modInt: modInt,
    signum: signum,
    modFloat: modFloat,
    replicateM: replicateM,
    listReplicate: listReplicate,
    foldM: foldM,
    mapM: mapM,
    Trace: Trace,
    Debug: Debug,
    Info: Info,
    Warn: Warn,
    "Error": $$Error,
    Fatal: Fatal,
    logA: logA,
    log: log,
    "logA'": logA$prime,
    "log'": log$prime,
    parseDate: $foreign.parseDate,
    toISOString: $foreign.toISOString,
    timeout: $foreign.timeout,
    fail: $foreign.fail,
    undef: $foreign.undef,
    unsafeCoerce: $foreign.unsafeCoerce,
    mapE: $foreign.mapE,
    mapE_: $foreign.mapE_,
    mapEBreak: $foreign.mapEBreak,
    mapEBreak_: $foreign.mapEBreak_,
    replicate: $foreign.replicate,
    alert: $foreign.alert,
    logAny: $foreign.logAny,
    stringify: $foreign.stringify
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Data.Array":80,"../Data.Boolean":90,"../Data.CForeign":95,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Function":125,"../Data.Functor":130,"../Data.JSDate":148,"../Data.List":151,"../Data.List.Types":150,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Traversable":209,"../Data.Unit":220,"../Math":244,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":226}],228:[function(require,module,exports){
/* globals exports */
"use strict";

// module Global

exports.nan = NaN;

exports.isNaN = isNaN;

exports.infinity = Infinity;

exports.isFinite = isFinite;

exports.readInt = function (radix) {
  return function (n) {
    return parseInt(n, radix);
  };
};

exports.readFloat = parseFloat;

exports.decodeURI = decodeURI;
exports.encodeURI = encodeURI;
exports.decodeURIComponent = decodeURIComponent;
exports.encodeURIComponent = encodeURIComponent;

},{}],229:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    nan: $foreign.nan,
    "isNaN": $foreign["isNaN"],
    infinity: $foreign.infinity,
    "isFinite": $foreign["isFinite"],
    readInt: $foreign.readInt,
    readFloat: $foreign.readFloat,
    "decodeURI": $foreign["decodeURI"],
    "encodeURI": $foreign["encodeURI"],
    "decodeURIComponent": $foreign["decodeURIComponent"],
    "encodeURIComponent": $foreign["encodeURIComponent"]
};

},{"./foreign":228}],230:[function(require,module,exports){
/* global exports */
"use strict";

exports.canvasElementToImageSource = function(e) {
    return e;
};

exports.tryLoadImageImpl = function (src) {
  return function(e) {
        return function(f) {
            return function () {
                var img = new Image();
                img.src = src;
                img.addEventListener("load", function() {
                    f(img)();
                }, false);
                img.addEventListener("error", function(error) {
                    e();
                }, false);

                return {};
            }
        }
    };
};

exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
    return function() {
        var el = document.getElementById(id);
        if (el && el instanceof HTMLCanvasElement) {
            return Just(el);
        } else {
            return Nothing;
        }
    };
};

exports.getContext2D = function(c) {
    return function() {
        return c.getContext('2d');
    };
};

exports.getCanvasWidth = function(canvas) {
    return function() {
        return canvas.width;
    };
};

exports.getCanvasHeight = function(canvas) {
    return function() {
        return canvas.height;
    };
};

exports.setCanvasWidth = function(width) {
    return function(canvas) {
        return function() {
            canvas.width = width;
            return canvas;
        };
    };
};

exports.setCanvasHeight = function(height) {
    return function(canvas) {
        return function() {
            canvas.height = height;
            return canvas;
        };
    };
};

exports.canvasToDataURL = function(canvas) {
    return function() {
        return canvas.toDataURL();
    };
};

exports.setLineWidth = function(width) {
    return function(ctx) {
        return function() {
            ctx.lineWidth = width;
            return ctx;
        };
    };
};

exports.setFillStyle = function(style) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = style;
            return ctx;
        };
    };
};

exports.setStrokeStyle = function(style) {
    return function(ctx) {
        return function() {
            ctx.strokeStyle = style;
            return ctx;
        };
    };
};

exports.setShadowColor = function(color) {
    return function(ctx) {
        return function() {
            ctx.shadowColor = color;
            return ctx;
        };
    };
};

exports.setShadowBlur = function(blur) {
    return function(ctx) {
        return function() {
            ctx.shadowBlur = blur;
            return ctx;
        };
    };
};

exports.setShadowOffsetX = function(offsetX) {
    return function(ctx) {
        return function() {
            ctx.shadowOffsetX = offsetX;
            return ctx;
        };
    };
};

exports.setShadowOffsetY = function(offsetY) {
    return function(ctx) {
        return function() {
            ctx.shadowOffsetY = offsetY;
            return ctx;
        };
    };
};

exports.setMiterLimit = function(limit) {
    return function(ctx) {
        return function() {
            ctx.miterLimit = limit;
            return ctx;
        };
    };
};

exports.setLineCapImpl = function(cap) {
    return function(ctx) {
        return function() {
            ctx.lineCap = cap;
            return ctx;
        };
    };
};

exports.setLineJoinImpl = function(join) {
    return function(ctx) {
        return function() {
            ctx.lineJoin = join;
            return ctx;
        };
    };
};

exports.setGlobalCompositeOperationImpl = function(ctx) {
    return function(op) {
        return function() {
            ctx.globalCompositeOperation = op;
            return ctx;
        };
    };
};

exports.setGlobalAlpha = function(ctx) {
    return function(alpha) {
        return function() {
            ctx.globalAlpha = alpha;
            return ctx;
        };
    };
};

exports.beginPath = function(ctx) {
    return function() {
        ctx.beginPath();
        return ctx;
    };
};

exports.stroke = function(ctx) {
    return function() {
        ctx.stroke();
        return ctx;
    };
};

exports.fill = function(ctx) {
    return function() {
        ctx.fill();
        return ctx;
    };
};

exports.clip = function(ctx) {
    return function() {
        ctx.clip();
        return ctx;
    };
};

exports.lineTo = function(ctx) {
    return function(x) {
        return function(y) {
            return function() {
                ctx.lineTo(x, y);
                return ctx;
            };
        };
    };
};

exports.moveTo = function(ctx) {
    return function(x) {
        return function(y) {
            return function() {
                ctx.moveTo(x, y);
                return ctx;
            };
        };
    };
};

exports.closePath = function(ctx) {
    return function() {
        ctx.closePath();
        return ctx;
    };
};

exports.arc = function(ctx) {
    return function(a) {
        return function() {
            ctx.arc(a.x, a.y, a.r, a.start, a.end);
            return ctx;
        };
    };
};

exports.rect = function(ctx) {
    return function(r) {
        return function() {
            ctx.rect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.fillRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.fillRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.strokeRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.strokeRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.scale = function(t) {
    return function(ctx) {
        return function() {
            ctx.scale(t.scaleX, t.scaleY);
            return ctx;
        };
    };
};

exports.rotate = function(angle) {
    return function(ctx) {
        return function() {
            ctx.rotate(angle);
            return ctx;
        };
    };
};

exports.translate = function(t) {
    return function(ctx) {
        return function() {
            ctx.translate(t.translateX, t.translateY);
            return ctx;
        };
    };
};

exports.transform = function(t) {
    return function(ctx) {
        return function() {
            ctx.transform(t.m11, t.m12, t.m21, t.m22, t.m31, t.m32);
            return ctx;
        };
    };
};

exports.setTransform = function(t) {
    return function(ctx) {
        return function() {
            ctx.setTransform(t.m11, t.m12, t.m21, t.m22, t.m31, t.m32);
            return ctx;
        };
    };
};

exports.clearRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.clearRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.textAlignImpl = function(ctx) {
    return function() {
        return ctx.textAlign;
    }
};

exports.setTextAlignImpl = function(ctx) {
    return function(textAlign) {
        return function() {
            ctx.textAlign = textAlign;
            return ctx;
        }
    }
};

exports.font = function(ctx) {
    return function() {
        return ctx.font;
    };
};

exports.setFont = function(fontspec) {
    return function(ctx) {
        return function() {
            ctx.font = fontspec;
            return ctx;
        };
    };
};

exports.fillText = function(ctx) {
    return function(text) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.fillText(text, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.strokeText = function(ctx) {
    return function(text) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.strokeText(text, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.measureText = function(ctx) {
    return function(text) {
        return function() {
            return ctx.measureText(text);
        };
    };
};

exports.save = function(ctx) {
    return function() {
        ctx.save();
        return ctx;
    };
};

exports.restore = function(ctx) {
    return function() {
        ctx.restore();
        return ctx;
    };
};

exports.imageDataWidth = function(image) {
    return image.width;
};

exports.imageDataHeight = function(image) {
    return image.height;
};

exports.imageDataBuffer = function(image) {
    return image.data;
};

exports.getImageData = function(ctx) {
    return function(x) {
        return function(y) {
            return function(w) {
                return function(h) {
                    return function() {
                        return ctx.getImageData(x, y, w, h);
                    };
                };
            };
        };
    };
};

exports.putImageDataFull = function(ctx) {
    return function(image_data) {
        return function(x) {
            return function(y) {
                return function(dx) {
                    return function(dy) {
                        return function(dw) {
                            return function(dh) {
                                return function() {
                                    ctx.putImageData(image_data, x, y, dx, dy, dw, dh);
                                    return ctx;
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

exports.putImageData = function(ctx) {
    return function(image_data) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.putImageData(image_data, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.createImageData = function(ctx) {
    return function(sw) {
        return function(sh) {
            return function() {
                return ctx.createImageData(sw, sh);
            };
        };
    };
};

exports.createImageDataCopy = function(ctx) {
    return function(image_data) {
        return function() {
            return ctx.createImageData(image_data);
        };
    };
};

exports.drawImage = function(ctx) {
    return function(image_source) {
        return function(dx) {
            return function(dy) {
                return function() {
                    ctx.drawImage(image_source, dx, dy);
                    return ctx;
                };
            };
        };
    };
};

exports.drawImageScale = function(ctx) {
    return function(image_source) {
        return function(dx) {
            return function(dy) {
                return function(dWidth) {
                    return function(dHeight) {
                        return function() {
                            ctx.drawImage(image_source, dx, dy, dWidth, dHeight);
                            return ctx;
                        };
                    };
                };
            };
        };
    };
};

exports.drawImageFull = function(ctx) {
    return function(image_source) {
        return function(sx) {
            return function(sy) {
                return function(sWidth) {
                    return function(sHeight) {
                        return function(dx) {
                            return function(dy) {
                                return function(dWidth) {
                                    return function(dHeight) {
                                        return function() {
                                            ctx.drawImage(image_source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);
                                            return ctx;
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

exports.createPatternImpl = function(img) {
    return function(repeat) {
        return function(ctx) {
            return function() {
                return ctx.createPattern(img, repeat);
            };
        };
    };
};

exports.setPatternFillStyle = function(pattern) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = pattern;
            return ctx;
        };
    };
};

exports.createLinearGradient = function(linearGradient) {
    return function(ctx) {
        return function() {
            return ctx.createLinearGradient(linearGradient.x0, linearGradient.y0, linearGradient.x1, linearGradient.y1);
        };
    };
};

exports.createRadialGradient = function(radialGradient) {
    return function(ctx) {
        return function() {
            return ctx.createRadialGradient(radialGradient.x0, radialGradient.y0, radialGradient.r0, radialGradient.x1, radialGradient.y1, radialGradient.r1);
        };
    };
};

exports.addColorStop = function(stop) {
    return function(color) {
        return function(gradient) {
            return function() {
                gradient.addColorStop(stop, color);
                return gradient;
            };
        };
    };
};

exports.setGradientFillStyle = function(gradient) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = gradient;
            return ctx;
        };
    };
};

exports.quadraticCurveTo = function(qCurve) {
    return function(ctx) {
        return function() {
            ctx.quadraticCurveTo(qCurve.cpx, qCurve.cpy, qCurve.x, qCurve.y);
            return ctx;
        };
    };
};

exports.bezierCurveTo = function(bCurve) {
    return function(ctx) {
        return function() {
            ctx.bezierCurveTo(bCurve.cp1x, bCurve.cp1y, bCurve.cp2x, bCurve.cp2y, bCurve.x, bCurve.y);
            return ctx;
        };
    };
};

},{}],231:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Exception_Unsafe = require("../Control.Monad.Eff.Exception.Unsafe");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var AlignLeft = (function () {
    function AlignLeft() {

    };
    AlignLeft.value = new AlignLeft();
    return AlignLeft;
})();
var AlignRight = (function () {
    function AlignRight() {

    };
    AlignRight.value = new AlignRight();
    return AlignRight;
})();
var AlignCenter = (function () {
    function AlignCenter() {

    };
    AlignCenter.value = new AlignCenter();
    return AlignCenter;
})();
var AlignStart = (function () {
    function AlignStart() {

    };
    AlignStart.value = new AlignStart();
    return AlignStart;
})();
var AlignEnd = (function () {
    function AlignEnd() {

    };
    AlignEnd.value = new AlignEnd();
    return AlignEnd;
})();
var Repeat = (function () {
    function Repeat() {

    };
    Repeat.value = new Repeat();
    return Repeat;
})();
var RepeatX = (function () {
    function RepeatX() {

    };
    RepeatX.value = new RepeatX();
    return RepeatX;
})();
var RepeatY = (function () {
    function RepeatY() {

    };
    RepeatY.value = new RepeatY();
    return RepeatY;
})();
var NoRepeat = (function () {
    function NoRepeat() {

    };
    NoRepeat.value = new NoRepeat();
    return NoRepeat;
})();
var BevelJoin = (function () {
    function BevelJoin() {

    };
    BevelJoin.value = new BevelJoin();
    return BevelJoin;
})();
var RoundJoin = (function () {
    function RoundJoin() {

    };
    RoundJoin.value = new RoundJoin();
    return RoundJoin;
})();
var MiterJoin = (function () {
    function MiterJoin() {

    };
    MiterJoin.value = new MiterJoin();
    return MiterJoin;
})();
var Round = (function () {
    function Round() {

    };
    Round.value = new Round();
    return Round;
})();
var Square = (function () {
    function Square() {

    };
    Square.value = new Square();
    return Square;
})();
var Butt = (function () {
    function Butt() {

    };
    Butt.value = new Butt();
    return Butt;
})();
var SourceOver = (function () {
    function SourceOver() {

    };
    SourceOver.value = new SourceOver();
    return SourceOver;
})();
var SourceIn = (function () {
    function SourceIn() {

    };
    SourceIn.value = new SourceIn();
    return SourceIn;
})();
var SourceOut = (function () {
    function SourceOut() {

    };
    SourceOut.value = new SourceOut();
    return SourceOut;
})();
var SourceAtop = (function () {
    function SourceAtop() {

    };
    SourceAtop.value = new SourceAtop();
    return SourceAtop;
})();
var DestinationOver = (function () {
    function DestinationOver() {

    };
    DestinationOver.value = new DestinationOver();
    return DestinationOver;
})();
var DestinationIn = (function () {
    function DestinationIn() {

    };
    DestinationIn.value = new DestinationIn();
    return DestinationIn;
})();
var DestinationOut = (function () {
    function DestinationOut() {

    };
    DestinationOut.value = new DestinationOut();
    return DestinationOut;
})();
var DestinationAtop = (function () {
    function DestinationAtop() {

    };
    DestinationAtop.value = new DestinationAtop();
    return DestinationAtop;
})();
var Lighter = (function () {
    function Lighter() {

    };
    Lighter.value = new Lighter();
    return Lighter;
})();
var Copy = (function () {
    function Copy() {

    };
    Copy.value = new Copy();
    return Copy;
})();
var Xor = (function () {
    function Xor() {

    };
    Xor.value = new Xor();
    return Xor;
})();
var Multiply = (function () {
    function Multiply() {

    };
    Multiply.value = new Multiply();
    return Multiply;
})();
var Screen = (function () {
    function Screen() {

    };
    Screen.value = new Screen();
    return Screen;
})();
var Overlay = (function () {
    function Overlay() {

    };
    Overlay.value = new Overlay();
    return Overlay;
})();
var Darken = (function () {
    function Darken() {

    };
    Darken.value = new Darken();
    return Darken;
})();
var Lighten = (function () {
    function Lighten() {

    };
    Lighten.value = new Lighten();
    return Lighten;
})();
var ColorDodge = (function () {
    function ColorDodge() {

    };
    ColorDodge.value = new ColorDodge();
    return ColorDodge;
})();
var ColorBurn = (function () {
    function ColorBurn() {

    };
    ColorBurn.value = new ColorBurn();
    return ColorBurn;
})();
var HardLight = (function () {
    function HardLight() {

    };
    HardLight.value = new HardLight();
    return HardLight;
})();
var SoftLight = (function () {
    function SoftLight() {

    };
    SoftLight.value = new SoftLight();
    return SoftLight;
})();
var Difference = (function () {
    function Difference() {

    };
    Difference.value = new Difference();
    return Difference;
})();
var Exclusion = (function () {
    function Exclusion() {

    };
    Exclusion.value = new Exclusion();
    return Exclusion;
})();
var Hue = (function () {
    function Hue() {

    };
    Hue.value = new Hue();
    return Hue;
})();
var Saturation = (function () {
    function Saturation() {

    };
    Saturation.value = new Saturation();
    return Saturation;
})();
var Color = (function () {
    function Color() {

    };
    Color.value = new Color();
    return Color;
})();
var Luminosity = (function () {
    function Luminosity() {

    };
    Luminosity.value = new Luminosity();
    return Luminosity;
})();
var withContext = function (ctx) {
    return function (action) {
        return function __do() {
            var v = $foreign.save(ctx)();
            var v1 = action();
            var v2 = $foreign.restore(ctx)();
            return v1;
        };
    };
};
var tryLoadImage = function (path) {
    return function (k) {
        return $foreign.tryLoadImageImpl(path)(k(Data_Maybe.Nothing.value))(function ($38) {
            return k(Data_Maybe.Just.create($38));
        });
    };
};
var textAlign = function (ctx) {
    var unsafeParseTextAlign = function (v) {
        if (v === "left") {
            return AlignLeft.value;
        };
        if (v === "right") {
            return AlignRight.value;
        };
        if (v === "center") {
            return AlignCenter.value;
        };
        if (v === "start") {
            return AlignStart.value;
        };
        if (v === "end") {
            return AlignEnd.value;
        };
        return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("invalid TextAlign: " + v);
    };
    return Data_Functor.map(Control_Monad_Eff.functorEff)(unsafeParseTextAlign)($foreign.textAlignImpl(ctx));
};
var strokePath = function (ctx) {
    return function (path) {
        return function __do() {
            var v = $foreign.beginPath(ctx)();
            var v1 = path();
            var v2 = $foreign.stroke(ctx)();
            return v1;
        };
    };
};
var showTextAlign = new Data_Show.Show(function (v) {
    if (v instanceof AlignLeft) {
        return "AlignLeft";
    };
    if (v instanceof AlignRight) {
        return "AlignRight";
    };
    if (v instanceof AlignCenter) {
        return "AlignCenter";
    };
    if (v instanceof AlignStart) {
        return "AlignStart";
    };
    if (v instanceof AlignEnd) {
        return "AlignEnd";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 490, column 1 - line 490, column 41: " + [ v.constructor.name ]);
});
var showPatternRepeat = new Data_Show.Show(function (v) {
    if (v instanceof Repeat) {
        return "Repeat";
    };
    if (v instanceof RepeatX) {
        return "RepeatX";
    };
    if (v instanceof RepeatY) {
        return "RepeatY";
    };
    if (v instanceof NoRepeat) {
        return "NoRepeat";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 600, column 1 - line 600, column 49: " + [ v.constructor.name ]);
});
var showComposite = new Data_Show.Show(function (v) {
    if (v instanceof SourceOver) {
        return "SourceOver";
    };
    if (v instanceof SourceIn) {
        return "SourceIn";
    };
    if (v instanceof SourceOut) {
        return "SourceOut";
    };
    if (v instanceof SourceAtop) {
        return "SourceAtop";
    };
    if (v instanceof DestinationOver) {
        return "DestinationOver";
    };
    if (v instanceof DestinationIn) {
        return "DestinationIn";
    };
    if (v instanceof DestinationOut) {
        return "DestinationOut";
    };
    if (v instanceof DestinationAtop) {
        return "DestinationAtop";
    };
    if (v instanceof Lighter) {
        return "Lighter";
    };
    if (v instanceof Copy) {
        return "Copy";
    };
    if (v instanceof Xor) {
        return "Xor";
    };
    if (v instanceof Multiply) {
        return "Multiply";
    };
    if (v instanceof Screen) {
        return "Screen";
    };
    if (v instanceof Overlay) {
        return "Overlay";
    };
    if (v instanceof Darken) {
        return "Darken";
    };
    if (v instanceof Lighten) {
        return "Lighten";
    };
    if (v instanceof ColorDodge) {
        return "ColorDodge";
    };
    if (v instanceof ColorBurn) {
        return "ColorBurn";
    };
    if (v instanceof HardLight) {
        return "HardLight";
    };
    if (v instanceof SoftLight) {
        return "SoftLight";
    };
    if (v instanceof Difference) {
        return "Difference";
    };
    if (v instanceof Exclusion) {
        return "Exclusion";
    };
    if (v instanceof Hue) {
        return "Hue";
    };
    if (v instanceof Saturation) {
        return "Saturation";
    };
    if (v instanceof Color) {
        return "Color";
    };
    if (v instanceof Luminosity) {
        return "Luminosity";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 285, column 1 - line 285, column 41: " + [ v.constructor.name ]);
});
var setTextAlign = function (ctx) {
    return function (textalign) {
        var toString = function (v) {
            if (v instanceof AlignLeft) {
                return "left";
            };
            if (v instanceof AlignRight) {
                return "right";
            };
            if (v instanceof AlignCenter) {
                return "center";
            };
            if (v instanceof AlignStart) {
                return "start";
            };
            if (v instanceof AlignEnd) {
                return "end";
            };
            throw new Error("Failed pattern match at Graphics.Canvas line 519, column 5 - line 520, column 5: " + [ v.constructor.name ]);
        };
        return $foreign.setTextAlignImpl(ctx)(toString(textalign));
    };
};
var setLineJoin = function (v) {
    if (v instanceof BevelJoin) {
        return $foreign.setLineJoinImpl("bevel");
    };
    if (v instanceof RoundJoin) {
        return $foreign.setLineJoinImpl("round");
    };
    if (v instanceof MiterJoin) {
        return $foreign.setLineJoinImpl("miter");
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 248, column 1 - line 248, column 91: " + [ v.constructor.name ]);
};
var setLineCap = function (v) {
    if (v instanceof Round) {
        return $foreign.setLineCapImpl("round");
    };
    if (v instanceof Square) {
        return $foreign.setLineCapImpl("square");
    };
    if (v instanceof Butt) {
        return $foreign.setLineCapImpl("butt");
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 235, column 1 - line 235, column 89: " + [ v.constructor.name ]);
};
var setGlobalCompositeOperation = function (ctx) {
    return function (composite) {
        var toString = function (v) {
            if (v instanceof SourceOver) {
                return "source-over";
            };
            if (v instanceof SourceIn) {
                return "source-in";
            };
            if (v instanceof SourceOut) {
                return "source-out";
            };
            if (v instanceof SourceAtop) {
                return "source-atop";
            };
            if (v instanceof DestinationOver) {
                return "destination-over";
            };
            if (v instanceof DestinationIn) {
                return "destination-in";
            };
            if (v instanceof DestinationOut) {
                return "destination-out";
            };
            if (v instanceof DestinationAtop) {
                return "destination-atop";
            };
            if (v instanceof Lighter) {
                return "lighter";
            };
            if (v instanceof Copy) {
                return "copy";
            };
            if (v instanceof Xor) {
                return "xor";
            };
            if (v instanceof Multiply) {
                return "multiply";
            };
            if (v instanceof Screen) {
                return "screen";
            };
            if (v instanceof Overlay) {
                return "overlay";
            };
            if (v instanceof Darken) {
                return "darken";
            };
            if (v instanceof Lighten) {
                return "lighten";
            };
            if (v instanceof ColorDodge) {
                return "color-dodge";
            };
            if (v instanceof ColorBurn) {
                return "color-burn";
            };
            if (v instanceof HardLight) {
                return "hard-light";
            };
            if (v instanceof SoftLight) {
                return "soft-light";
            };
            if (v instanceof Difference) {
                return "difference";
            };
            if (v instanceof Exclusion) {
                return "exclusion";
            };
            if (v instanceof Hue) {
                return "hue";
            };
            if (v instanceof Saturation) {
                return "saturation";
            };
            if (v instanceof Color) {
                return "color";
            };
            if (v instanceof Luminosity) {
                return "luminosity";
            };
            throw new Error("Failed pattern match at Graphics.Canvas line 319, column 5 - line 320, column 5: " + [ v.constructor.name ]);
        };
        return $foreign.setGlobalCompositeOperationImpl(ctx)(toString(composite));
    };
};
var setCanvasDimensions = function (d) {
    return function (ce) {
        return Control_Bind.bind(Control_Monad_Eff.bindEff)($foreign.setCanvasHeight(d.height)(ce))($foreign.setCanvasWidth(d.width));
    };
};
var getCanvasElementById = function (elId) {
    return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
};
var getCanvasDimensions = function (ce) {
    return function __do() {
        var v = $foreign.getCanvasWidth(ce)();
        var v1 = $foreign.getCanvasHeight(ce)();
        return {
            width: v,
            height: v1
        };
    };
};
var fillPath = function (ctx) {
    return function (path) {
        return function __do() {
            var v = $foreign.beginPath(ctx)();
            var v1 = path();
            var v2 = $foreign.fill(ctx)();
            return v1;
        };
    };
};
var eqLineCap = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Round && y instanceof Round) {
            return true;
        };
        if (x instanceof Square && y instanceof Square) {
            return true;
        };
        if (x instanceof Butt && y instanceof Butt) {
            return true;
        };
        return false;
    };
});
var createPattern = function (img) {
    return function (repeat) {
        var toString = function (v) {
            if (v instanceof Repeat) {
                return "repeat";
            };
            if (v instanceof RepeatX) {
                return "repeat-x";
            };
            if (v instanceof RepeatY) {
                return "repeat-y";
            };
            if (v instanceof NoRepeat) {
                return "no-repeat";
            };
            throw new Error("Failed pattern match at Graphics.Canvas line 612, column 5 - line 613, column 5: " + [ v.constructor.name ]);
        };
        return $foreign.createPatternImpl(img)(toString(repeat));
    };
};
module.exports = {
    SourceOver: SourceOver,
    SourceIn: SourceIn,
    SourceOut: SourceOut,
    SourceAtop: SourceAtop,
    DestinationOver: DestinationOver,
    DestinationIn: DestinationIn,
    DestinationOut: DestinationOut,
    DestinationAtop: DestinationAtop,
    Lighter: Lighter,
    Copy: Copy,
    Xor: Xor,
    Multiply: Multiply,
    Screen: Screen,
    Overlay: Overlay,
    Darken: Darken,
    Lighten: Lighten,
    ColorDodge: ColorDodge,
    ColorBurn: ColorBurn,
    HardLight: HardLight,
    SoftLight: SoftLight,
    Difference: Difference,
    Exclusion: Exclusion,
    Hue: Hue,
    Saturation: Saturation,
    Color: Color,
    Luminosity: Luminosity,
    Round: Round,
    Square: Square,
    Butt: Butt,
    BevelJoin: BevelJoin,
    RoundJoin: RoundJoin,
    MiterJoin: MiterJoin,
    AlignLeft: AlignLeft,
    AlignRight: AlignRight,
    AlignCenter: AlignCenter,
    AlignStart: AlignStart,
    AlignEnd: AlignEnd,
    Repeat: Repeat,
    RepeatX: RepeatX,
    RepeatY: RepeatY,
    NoRepeat: NoRepeat,
    getCanvasElementById: getCanvasElementById,
    getCanvasDimensions: getCanvasDimensions,
    setCanvasDimensions: setCanvasDimensions,
    setLineCap: setLineCap,
    setLineJoin: setLineJoin,
    setGlobalCompositeOperation: setGlobalCompositeOperation,
    strokePath: strokePath,
    fillPath: fillPath,
    textAlign: textAlign,
    setTextAlign: setTextAlign,
    withContext: withContext,
    tryLoadImage: tryLoadImage,
    createPattern: createPattern,
    eqLineCap: eqLineCap,
    showComposite: showComposite,
    showTextAlign: showTextAlign,
    showPatternRepeat: showPatternRepeat,
    getContext2D: $foreign.getContext2D,
    getCanvasWidth: $foreign.getCanvasWidth,
    setCanvasWidth: $foreign.setCanvasWidth,
    getCanvasHeight: $foreign.getCanvasHeight,
    setCanvasHeight: $foreign.setCanvasHeight,
    canvasToDataURL: $foreign.canvasToDataURL,
    setLineWidth: $foreign.setLineWidth,
    setFillStyle: $foreign.setFillStyle,
    setStrokeStyle: $foreign.setStrokeStyle,
    setShadowBlur: $foreign.setShadowBlur,
    setShadowOffsetX: $foreign.setShadowOffsetX,
    setShadowOffsetY: $foreign.setShadowOffsetY,
    setShadowColor: $foreign.setShadowColor,
    setMiterLimit: $foreign.setMiterLimit,
    setGlobalAlpha: $foreign.setGlobalAlpha,
    beginPath: $foreign.beginPath,
    stroke: $foreign.stroke,
    fill: $foreign.fill,
    clip: $foreign.clip,
    lineTo: $foreign.lineTo,
    moveTo: $foreign.moveTo,
    closePath: $foreign.closePath,
    arc: $foreign.arc,
    rect: $foreign.rect,
    fillRect: $foreign.fillRect,
    strokeRect: $foreign.strokeRect,
    clearRect: $foreign.clearRect,
    scale: $foreign.scale,
    rotate: $foreign.rotate,
    translate: $foreign.translate,
    transform: $foreign.transform,
    setTransform: $foreign.setTransform,
    font: $foreign.font,
    setFont: $foreign.setFont,
    fillText: $foreign.fillText,
    strokeText: $foreign.strokeText,
    measureText: $foreign.measureText,
    save: $foreign.save,
    restore: $foreign.restore,
    getImageData: $foreign.getImageData,
    putImageData: $foreign.putImageData,
    putImageDataFull: $foreign.putImageDataFull,
    createImageData: $foreign.createImageData,
    createImageDataCopy: $foreign.createImageDataCopy,
    imageDataWidth: $foreign.imageDataWidth,
    imageDataHeight: $foreign.imageDataHeight,
    imageDataBuffer: $foreign.imageDataBuffer,
    canvasElementToImageSource: $foreign.canvasElementToImageSource,
    drawImage: $foreign.drawImage,
    drawImageScale: $foreign.drawImageScale,
    drawImageFull: $foreign.drawImageFull,
    setPatternFillStyle: $foreign.setPatternFillStyle,
    createLinearGradient: $foreign.createLinearGradient,
    createRadialGradient: $foreign.createRadialGradient,
    addColorStop: $foreign.addColorStop,
    setGradientFillStyle: $foreign.setGradientFillStyle,
    quadraticCurveTo: $foreign.quadraticCurveTo,
    bezierCurveTo: $foreign.bezierCurveTo
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Exception.Unsafe":26,"../Control.Semigroupoid":60,"../Data.ArrayBuffer.Types":81,"../Data.Eq":111,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263,"./foreign":230}],232:[function(require,module,exports){
/* global exports */

// module Graphics.WebGL

    "use strict";

    exports.shaderBindings_ = function (program) {
          return function() {
            var bindings = {};
            var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);
            for (var i = 0; i < numUniforms; i += 1) {
                var uniform = gl.getActiveUniform(program, i);
                var uniformLocation = gl.getUniformLocation(program, uniform.name);
                var newUniform = {};
                newUniform.uLocation=uniformLocation;
                newUniform.uName=uniform.name;
                newUniform.uType=uniform.type;
                bindings[uniform.name]=newUniform;
              }
            var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);
            for (var i2 = 0; i2 < numAttributes; i2 += 1) {
                var attribute = gl.getActiveAttrib(program, i2);
                var attribLocation = gl.getAttribLocation(program, attribute.name);
                gl.enableVertexAttribArray(attribLocation);
                var newAttr = {};
                newAttr.aLocation=attribLocation;
                newAttr.aName=attribute.name;
                newAttr.aItemType=attribute.type;
                switch (attribute.type) {
                  case gl.FLOAT_VEC2:
                    newAttr.aItemSize=2;
                    break;
                  case gl.FLOAT_VEC3:
                    newAttr.aItemSize=3;
                    break;
                  case gl.FLOAT_VEC4:
                    newAttr.aItemSize=4;
                    break;
                  default:
                    LOG("Unsupported attribute type: " + attribute.type);
                    newAttr.aItemSize=1;
                    break;
                }
                bindings[attribute.name]=newAttr;
            }
            return bindings;
        };};


    exports.initGL_ = function (canvasId) {
            return function(attr) {
                return function() {
                  var canvas = document.getElementById(canvasId);
                  try {
                    gl = canvas.getContext("webgl", attr) || canvas.getContext("experimental-webgl", attr);
                  }
                  catch(e) {return false;}
                  if (!gl)
                  {
                    gl = null;
                    return false;
                  }
                  return true;
          };
      };
  };

        exports.getCanvasWidth_ = function(canvasId) {
          return function() {
            var canvas = document.getElementById(canvasId);
            return canvas.width;
            };
        };

        exports.getCanvasHeight_ = function(canvasId) {
          return function() {
            var canvas = document.getElementById(canvasId);
            return canvas.height;
            };
        };

        exports.requestAnimationFrame_ = function(x){
            if (typeof rAF === 'undefined') {
               var rAF = (function(){
                  return  window.requestAnimationFrame       ||
                          window.webkitRequestAnimationFrame ||
                          window.mozRequestAnimationFrame    ||
                          function( callback ){
                            window.setTimeout(callback, 1000 / 60);
                          };
                      })();
            }
            return function(){
              return rAF(x);
            };
        };

      exports.bufferData__ = function(target) {
          return function(data) {
              return function(usage) {
                  return function()
                    {gl.bufferData(target,data,usage);};
                };
            };
        };

      exports.bufferSubData__ = function(target) {
          return function(offset) {
              return function(data) {
                  return function()
                    {gl.bufferSubData(target,offset,data);};
                };
            };
        };

},{}],233:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_WebGL = require("../Control.Monad.Eff.WebGL");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Array_Partial = require("../Data.Array.Partial");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_TypedArray = require("../Data.TypedArray");
var Data_Unit = require("../Data.Unit");
var Extensions = require("../Extensions");
var Graphics_WebGLRaw = require("../Graphics.WebGLRaw");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var WebGLProg = function (x) {
    return x;
};
var Uniform = function (x) {
    return x;
};
var Shaders = (function () {
    function Shaders(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Shaders.create = function (value0) {
        return function (value1) {
            return new Shaders(value0, value1);
        };
    };
    return Shaders;
})();
var FragmentShader = (function () {
    function FragmentShader() {

    };
    FragmentShader.value = new FragmentShader();
    return FragmentShader;
})();
var VertexShader = (function () {
    function VertexShader() {

    };
    VertexShader.value = new VertexShader();
    return VertexShader;
})();
var POINTS = (function () {
    function POINTS() {

    };
    POINTS.value = new POINTS();
    return POINTS;
})();
var LINES = (function () {
    function LINES() {

    };
    LINES.value = new LINES();
    return LINES;
})();
var LINE_STRIP = (function () {
    function LINE_STRIP() {

    };
    LINE_STRIP.value = new LINE_STRIP();
    return LINE_STRIP;
})();
var LINE_LOOP = (function () {
    function LINE_LOOP() {

    };
    LINE_LOOP.value = new LINE_LOOP();
    return LINE_LOOP;
})();
var TRIANGLES = (function () {
    function TRIANGLES() {

    };
    TRIANGLES.value = new TRIANGLES();
    return TRIANGLES;
})();
var TRIANGLE_STRIP = (function () {
    function TRIANGLE_STRIP() {

    };
    TRIANGLE_STRIP.value = new TRIANGLE_STRIP();
    return TRIANGLE_STRIP;
})();
var TRIANGLE_FAN = (function () {
    function TRIANGLE_FAN() {

    };
    TRIANGLE_FAN.value = new TRIANGLE_FAN();
    return TRIANGLE_FAN;
})();
var DEPTH_BUFFER_BIT = (function () {
    function DEPTH_BUFFER_BIT() {

    };
    DEPTH_BUFFER_BIT.value = new DEPTH_BUFFER_BIT();
    return DEPTH_BUFFER_BIT;
})();
var STENCIL_BUFFER_BIT = (function () {
    function STENCIL_BUFFER_BIT() {

    };
    STENCIL_BUFFER_BIT.value = new STENCIL_BUFFER_BIT();
    return STENCIL_BUFFER_BIT;
})();
var COLOR_BUFFER_BIT = (function () {
    function COLOR_BUFFER_BIT() {

    };
    COLOR_BUFFER_BIT.value = new COLOR_BUFFER_BIT();
    return COLOR_BUFFER_BIT;
})();
var NEVER = (function () {
    function NEVER() {

    };
    NEVER.value = new NEVER();
    return NEVER;
})();
var ALWAYS = (function () {
    function ALWAYS() {

    };
    ALWAYS.value = new ALWAYS();
    return ALWAYS;
})();
var LESS = (function () {
    function LESS() {

    };
    LESS.value = new LESS();
    return LESS;
})();
var EQUAL = (function () {
    function EQUAL() {

    };
    EQUAL.value = new EQUAL();
    return EQUAL;
})();
var LEQUAL = (function () {
    function LEQUAL() {

    };
    LEQUAL.value = new LEQUAL();
    return LEQUAL;
})();
var GREATER = (function () {
    function GREATER() {

    };
    GREATER.value = new GREATER();
    return GREATER;
})();
var GEQUAL = (function () {
    function GEQUAL() {

    };
    GEQUAL.value = new GEQUAL();
    return GEQUAL;
})();
var NOTEQUAL = (function () {
    function NOTEQUAL() {

    };
    NOTEQUAL.value = new NOTEQUAL();
    return NOTEQUAL;
})();
var BLEND = (function () {
    function BLEND() {

    };
    BLEND.value = new BLEND();
    return BLEND;
})();
var DEPTH_TEST = (function () {
    function DEPTH_TEST() {

    };
    DEPTH_TEST.value = new DEPTH_TEST();
    return DEPTH_TEST;
})();
var CULL_FACE = (function () {
    function CULL_FACE() {

    };
    CULL_FACE.value = new CULL_FACE();
    return CULL_FACE;
})();
var POLYGON_OFFSET_FILL = (function () {
    function POLYGON_OFFSET_FILL() {

    };
    POLYGON_OFFSET_FILL.value = new POLYGON_OFFSET_FILL();
    return POLYGON_OFFSET_FILL;
})();
var SCISSOR_TEST = (function () {
    function SCISSOR_TEST() {

    };
    SCISSOR_TEST.value = new SCISSOR_TEST();
    return SCISSOR_TEST;
})();
var ARRAY_BUFFER = (function () {
    function ARRAY_BUFFER() {

    };
    ARRAY_BUFFER.value = new ARRAY_BUFFER();
    return ARRAY_BUFFER;
})();
var ELEMENT_ARRAY_BUFFER = (function () {
    function ELEMENT_ARRAY_BUFFER() {

    };
    ELEMENT_ARRAY_BUFFER.value = new ELEMENT_ARRAY_BUFFER();
    return ELEMENT_ARRAY_BUFFER;
})();
var ZERO = (function () {
    function ZERO() {

    };
    ZERO.value = new ZERO();
    return ZERO;
})();
var ONE = (function () {
    function ONE() {

    };
    ONE.value = new ONE();
    return ONE;
})();
var SRC_COLOR = (function () {
    function SRC_COLOR() {

    };
    SRC_COLOR.value = new SRC_COLOR();
    return SRC_COLOR;
})();
var ONE_MINUS_SRC_COLOR = (function () {
    function ONE_MINUS_SRC_COLOR() {

    };
    ONE_MINUS_SRC_COLOR.value = new ONE_MINUS_SRC_COLOR();
    return ONE_MINUS_SRC_COLOR;
})();
var DST_COLOR = (function () {
    function DST_COLOR() {

    };
    DST_COLOR.value = new DST_COLOR();
    return DST_COLOR;
})();
var ONE_MINUS_DST_COLOR = (function () {
    function ONE_MINUS_DST_COLOR() {

    };
    ONE_MINUS_DST_COLOR.value = new ONE_MINUS_DST_COLOR();
    return ONE_MINUS_DST_COLOR;
})();
var SRC_ALPHA = (function () {
    function SRC_ALPHA() {

    };
    SRC_ALPHA.value = new SRC_ALPHA();
    return SRC_ALPHA;
})();
var ONE_MINUS_SRC_ALPHA = (function () {
    function ONE_MINUS_SRC_ALPHA() {

    };
    ONE_MINUS_SRC_ALPHA.value = new ONE_MINUS_SRC_ALPHA();
    return ONE_MINUS_SRC_ALPHA;
})();
var DST_ALPHA = (function () {
    function DST_ALPHA() {

    };
    DST_ALPHA.value = new DST_ALPHA();
    return DST_ALPHA;
})();
var ONE_MINUS_DST_ALPHA = (function () {
    function ONE_MINUS_DST_ALPHA() {

    };
    ONE_MINUS_DST_ALPHA.value = new ONE_MINUS_DST_ALPHA();
    return ONE_MINUS_DST_ALPHA;
})();
var SRC_ALPHA_SATURATE = (function () {
    function SRC_ALPHA_SATURATE() {

    };
    SRC_ALPHA_SATURATE.value = new SRC_ALPHA_SATURATE();
    return SRC_ALPHA_SATURATE;
})();
var BLEND_DST_RGB = (function () {
    function BLEND_DST_RGB() {

    };
    BLEND_DST_RGB.value = new BLEND_DST_RGB();
    return BLEND_DST_RGB;
})();
var BLEND_SRC_RGB = (function () {
    function BLEND_SRC_RGB() {

    };
    BLEND_SRC_RGB.value = new BLEND_SRC_RGB();
    return BLEND_SRC_RGB;
})();
var BLEND_DST_ALPHA = (function () {
    function BLEND_DST_ALPHA() {

    };
    BLEND_DST_ALPHA.value = new BLEND_DST_ALPHA();
    return BLEND_DST_ALPHA;
})();
var BLEND_SRC_ALPHA = (function () {
    function BLEND_SRC_ALPHA() {

    };
    BLEND_SRC_ALPHA.value = new BLEND_SRC_ALPHA();
    return BLEND_SRC_ALPHA;
})();
var CONSTANT_COLOR = (function () {
    function CONSTANT_COLOR() {

    };
    CONSTANT_COLOR.value = new CONSTANT_COLOR();
    return CONSTANT_COLOR;
})();
var ONE_MINUS_CONSTANT_COLOR = (function () {
    function ONE_MINUS_CONSTANT_COLOR() {

    };
    ONE_MINUS_CONSTANT_COLOR.value = new ONE_MINUS_CONSTANT_COLOR();
    return ONE_MINUS_CONSTANT_COLOR;
})();
var CONSTANT_ALPHA = (function () {
    function CONSTANT_ALPHA() {

    };
    CONSTANT_ALPHA.value = new CONSTANT_ALPHA();
    return CONSTANT_ALPHA;
})();
var ONE_MINUS_CONSTANT_ALPHA = (function () {
    function ONE_MINUS_CONSTANT_ALPHA() {

    };
    ONE_MINUS_CONSTANT_ALPHA.value = new ONE_MINUS_CONSTANT_ALPHA();
    return ONE_MINUS_CONSTANT_ALPHA;
})();
var BLEND_COLOR = (function () {
    function BLEND_COLOR() {

    };
    BLEND_COLOR.value = new BLEND_COLOR();
    return BLEND_COLOR;
})();
var FUNC_ADD = (function () {
    function FUNC_ADD() {

    };
    FUNC_ADD.value = new FUNC_ADD();
    return FUNC_ADD;
})();
var BLEND_EQUATION = (function () {
    function BLEND_EQUATION() {

    };
    BLEND_EQUATION.value = new BLEND_EQUATION();
    return BLEND_EQUATION;
})();
var BLEND_EQUATION_RGB = (function () {
    function BLEND_EQUATION_RGB() {

    };
    BLEND_EQUATION_RGB.value = new BLEND_EQUATION_RGB();
    return BLEND_EQUATION_RGB;
})();
var BLEND_EQUATION_ALPHA = (function () {
    function BLEND_EQUATION_ALPHA() {

    };
    BLEND_EQUATION_ALPHA.value = new BLEND_EQUATION_ALPHA();
    return BLEND_EQUATION_ALPHA;
})();
var FUNC_SUBTRACT = (function () {
    function FUNC_SUBTRACT() {

    };
    FUNC_SUBTRACT.value = new FUNC_SUBTRACT();
    return FUNC_SUBTRACT;
})();
var FUNC_REVERSE_SUBTRACT = (function () {
    function FUNC_REVERSE_SUBTRACT() {

    };
    FUNC_REVERSE_SUBTRACT.value = new FUNC_REVERSE_SUBTRACT();
    return FUNC_REVERSE_SUBTRACT;
})();
var Attribute = function (x) {
    return x;
};
var viewport = Graphics_WebGLRaw.viewport_;
var vertexPointer = function (v) {
    return Graphics_WebGLRaw.vertexAttribPointer_(v.aLocation)(v.aItemSize)(Graphics_WebGLRaw._FLOAT)(false)(0)(0);
};
var setUniformBoolean = function (v) {
    return function (value) {
        if (v.uType === Graphics_WebGLRaw._BOOL) {
            var toNumber = function (v1) {
                if (v1) {
                    return 1;
                };
                if (!v1) {
                    return 0;
                };
                throw new Error("Failed pattern match at Graphics.WebGL line 322, column 7 - line 323, column 7: " + [ v1.constructor.name ]);
            };
            return Graphics_WebGLRaw.uniform1i_(v.uLocation)(toNumber(value));
        };
        if (Data_Boolean.otherwise) {
            return Extensions.fail("WebGL>>setUniformBoolean: Called for not boolean uniform!");
        };
        throw new Error("Failed pattern match at Graphics.WebGL line 318, column 1 - line 318, column 81: " + [ v.constructor.name, value.constructor.name ]);
    };
};
var runWebGLAttr = function (canvasId) {
    return function (attr) {
        return function (failure) {
            return function (success) {
                var makeContext = {
                    canvasName: canvasId
                };
                return function __do() {
                    var v = $foreign.initGL_(canvasId)(attr)();
                    if (v) {
                        return Control_Monad_Eff_WebGL.runWebGl_(success(makeContext))();
                    };
                    return failure("Unable to initialize WebGL. Your browser may not support it.")();
                };
            };
        };
    };
};
var requestAnimationFrame = $foreign.requestAnimationFrame_;
var modeToConst = function (v) {
    if (v instanceof POINTS) {
        return Graphics_WebGLRaw._POINTS;
    };
    if (v instanceof LINES) {
        return Graphics_WebGLRaw._LINES;
    };
    if (v instanceof LINE_STRIP) {
        return Graphics_WebGLRaw._LINE_STRIP;
    };
    if (v instanceof LINE_LOOP) {
        return Graphics_WebGLRaw._LINE_LOOP;
    };
    if (v instanceof TRIANGLES) {
        return Graphics_WebGLRaw._TRIANGLES;
    };
    if (v instanceof TRIANGLE_STRIP) {
        return Graphics_WebGLRaw._TRIANGLE_STRIP;
    };
    if (v instanceof TRIANGLE_FAN) {
        return Graphics_WebGLRaw._TRIANGLE_FAN;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 518, column 1 - line 518, column 27: " + [ v.constructor.name ]);
};
var maskToConst = function (v) {
    if (v instanceof DEPTH_BUFFER_BIT) {
        return Graphics_WebGLRaw._DEPTH_BUFFER_BIT;
    };
    if (v instanceof STENCIL_BUFFER_BIT) {
        return Graphics_WebGLRaw._STENCIL_BUFFER_BIT;
    };
    if (v instanceof COLOR_BUFFER_BIT) {
        return Graphics_WebGLRaw._COLOR_BUFFER_BIT;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 497, column 1 - line 497, column 27: " + [ v.constructor.name ]);
};
var makeShader = function (shaderType) {
    return function (shaderSrc) {
        var shaderTypeConst = (function () {
            if (shaderType instanceof FragmentShader) {
                return Graphics_WebGLRaw._FRAGMENT_SHADER;
            };
            if (shaderType instanceof VertexShader) {
                return Graphics_WebGLRaw._VERTEX_SHADER;
            };
            throw new Error("Failed pattern match at Graphics.WebGL line 441, column 25 - line 443, column 57: " + [ shaderType.constructor.name ]);
        })();
        return function __do() {
            var v = Graphics_WebGLRaw.createShader_(shaderTypeConst)();
            Graphics_WebGLRaw.shaderSource_(v)(shaderSrc)();
            Graphics_WebGLRaw.compileShader_(v)();
            var v1 = Graphics_WebGLRaw.getShaderParameter_(v)(Graphics_WebGLRaw._COMPILE_STATUS)();
            if (v1) {
                return new Data_Either.Left(v);
            };
            var v2 = Graphics_WebGLRaw.getShaderInfoLog_(v)();
            return new Data_Either.Right(v2);
        };
    };
};
var makeBufferFloat$prime = function (vertices) {
    return function (flag) {
        return function __do() {
            var v = Graphics_WebGLRaw.createBuffer_();
            Graphics_WebGLRaw.bindBuffer_(Graphics_WebGLRaw._ARRAY_BUFFER)(v)();
            var typedArray = Data_TypedArray.asFloat32Array(vertices);
            $foreign.bufferData__(Graphics_WebGLRaw._ARRAY_BUFFER)(typedArray)(flag)();
            return {
                webGLBuffer: v,
                bufferType: Graphics_WebGLRaw._ARRAY_BUFFER,
                bufferSize: Data_Array.length(vertices)
            };
        };
    };
};
var makeBufferFloatDyn = function (vertices) {
    return makeBufferFloat$prime(vertices)(Graphics_WebGLRaw._DYNAMIC_DRAW);
};
var makeBufferFloat = function (vertices) {
    return makeBufferFloat$prime(vertices)(Graphics_WebGLRaw._STATIC_DRAW);
};
var isContextLost = Graphics_WebGLRaw.isContextLost_;
var initShaders = function (fragmentShader) {
    return function (vertexShader) {
        return function __do() {
            var v = Graphics_WebGLRaw.createProgram_();
            Graphics_WebGLRaw.attachShader_(v)(vertexShader)();
            Graphics_WebGLRaw.attachShader_(v)(fragmentShader)();
            Graphics_WebGLRaw.linkProgram_(v)();
            var v1 = Graphics_WebGLRaw.getProgramParameter_(v)(Graphics_WebGLRaw._LINK_STATUS)();
            if (v1) {
                Graphics_WebGLRaw.useProgram_(v)();
                return new Data_Maybe.Just(v);
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var withShaders = function (v) {
    return function (failure) {
        return function (success) {
            return function __do() {
                var v1 = makeShader(FragmentShader.value)(v.value0)();
                if (v1 instanceof Data_Either.Right) {
                    return failure("Can't compile fragment shader: " + v1.value0)();
                };
                if (v1 instanceof Data_Either.Left) {
                    var v2 = makeShader(VertexShader.value)(v.value1)();
                    if (v2 instanceof Data_Either.Right) {
                        return failure("Can't compile vertex shader: " + v2.value0)();
                    };
                    if (v2 instanceof Data_Either.Left) {
                        var v3 = initShaders(v1.value0)(v2.value0)();
                        if (v3 instanceof Data_Maybe.Nothing) {
                            return failure("Can't init shaders")();
                        };
                        if (v3 instanceof Data_Maybe.Just) {
                            var v4 = $foreign.shaderBindings_(v3.value0)();
                            return success((function () {
                                var $65 = {};
                                for (var $66 in v4) {
                                    if ({}.hasOwnProperty.call(v4, $66)) {
                                        $65[$66] = v4[$66];
                                    };
                                };
                                $65.webGLProgram = v3.value0;
                                return $65;
                            })())();
                        };
                        throw new Error("Failed pattern match at Graphics.WebGL line 218, column 13 - line 224, column 69: " + [ v3.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Graphics.WebGL line 214, column 7 - line 224, column 69: " + [ v2.constructor.name ]);
                };
                throw new Error("Failed pattern match at Graphics.WebGL line 210, column 3 - line 224, column 69: " + [ v1.constructor.name ]);
            };
        };
    };
};
var getCanvasWidth = function (context) {
    return $foreign.getCanvasWidth_(context.canvasName);
};
var getCanvasHeight = function (context) {
    return $foreign.getCanvasHeight_(context.canvasName);
};
var funcToConst = function (v) {
    if (v instanceof NEVER) {
        return Graphics_WebGLRaw._NEVER;
    };
    if (v instanceof ALWAYS) {
        return Graphics_WebGLRaw._ALWAYS;
    };
    if (v instanceof LESS) {
        return Graphics_WebGLRaw._LESS;
    };
    if (v instanceof EQUAL) {
        return Graphics_WebGLRaw._EQUAL;
    };
    if (v instanceof LEQUAL) {
        return Graphics_WebGLRaw._LEQUAL;
    };
    if (v instanceof GREATER) {
        return Graphics_WebGLRaw._GREATER;
    };
    if (v instanceof GEQUAL) {
        return Graphics_WebGLRaw._GEQUAL;
    };
    if (v instanceof NOTEQUAL) {
        return Graphics_WebGLRaw._NOTEQUAL;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 377, column 1 - line 377, column 27: " + [ v.constructor.name ]);
};
var fillBuffer = function (buffer) {
    return function (offset) {
        return function (vertices) {
            return function __do() {
                Graphics_WebGLRaw.bindBuffer_(buffer.bufferType)(buffer.webGLBuffer)();
                var typedArray = Data_TypedArray.asFloat32Array(vertices);
                $foreign.bufferSubData__(buffer.bufferType)(offset)(typedArray)();
                return Data_Unit.unit;
            };
        };
    };
};
var enableVertexAttribArray = function (v) {
    return Graphics_WebGLRaw.enableVertexAttribArray_(v.aLocation);
};
var drawElements = function (mode) {
    return function (count) {
        return Graphics_WebGLRaw.drawElements_(modeToConst(mode))(count)(Graphics_WebGLRaw._UNSIGNED_SHORT)(0);
    };
};
var disableVertexAttribArray = function (v) {
    return Graphics_WebGLRaw.disableVertexAttribArray_(v.aLocation);
};
var depthFunc = function ($93) {
    return Graphics_WebGLRaw.depthFunc_(funcToConst($93));
};
var defContextAttributes = {
    alpha: true,
    depth: true,
    stencil: false,
    antialias: true,
    premultipliedAlpha: true,
    preserveDrawingBuffer: false,
    preferLowPowerToHighPerformance: false,
    failIfMajorPerformanceCaveat: false
};
var runWebGL = function (canvasId) {
    return function (failure) {
        return function (success) {
            var makeContext = {
                canvasName: canvasId
            };
            return function __do() {
                var v = $foreign.initGL_(canvasId)(defContextAttributes)();
                if (v) {
                    return Control_Monad_Eff_WebGL.runWebGl_(success(makeContext))();
                };
                return failure("Unable to initialize WebGL. Your browser may not support it.")();
            };
        };
    };
};
var colorMask = Graphics_WebGLRaw.colorMask_;
var clearStencil = Graphics_WebGLRaw.clearStencil_;
var clearDepth = Graphics_WebGLRaw.clearDepth_;
var clearColor = Graphics_WebGLRaw.clearColor_;
var clear = function (masks) {
    return Graphics_WebGLRaw.clear_(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Int_Bits.or)(0)(Data_Functor.map(Data_Functor.functorArray)(maskToConst)(masks)));
};
var capacityToConst = function (v) {
    if (v instanceof BLEND) {
        return Graphics_WebGLRaw._BLEND;
    };
    if (v instanceof DEPTH_TEST) {
        return Graphics_WebGLRaw._DEPTH_TEST;
    };
    if (v instanceof CULL_FACE) {
        return Graphics_WebGLRaw._CULL_FACE;
    };
    if (v instanceof POLYGON_OFFSET_FILL) {
        return Graphics_WebGLRaw._POLYGON_OFFSET_FILL;
    };
    if (v instanceof SCISSOR_TEST) {
        return Graphics_WebGLRaw._SCISSOR_TEST;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 482, column 1 - line 482, column 35: " + [ v.constructor.name ]);
};
var disable = function ($94) {
    return Graphics_WebGLRaw.disable_(capacityToConst($94));
};
var enable = function ($95) {
    return Graphics_WebGLRaw.enable_(capacityToConst($95));
};
var isEnabled = function ($96) {
    return Graphics_WebGLRaw.isEnabled_(capacityToConst($96));
};
var bufferTargetToConst = function (v) {
    if (v instanceof ARRAY_BUFFER) {
        return Graphics_WebGLRaw._ARRAY_BUFFER;
    };
    if (v instanceof ELEMENT_ARRAY_BUFFER) {
        return Graphics_WebGLRaw._ELEMENT_ARRAY_BUFFER;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 531, column 1 - line 531, column 43: " + [ v.constructor.name ]);
};
var makeBuffer$prime = function (dictEuclideanRing) {
    return function (bufferTarget) {
        return function (conversion) {
            return function (vertices) {
                return function (flag) {
                    var targetConst = bufferTargetToConst(bufferTarget);
                    return function __do() {
                        var v = Graphics_WebGLRaw.createBuffer_();
                        Graphics_WebGLRaw.bindBuffer_(targetConst)(v)();
                        var typedArray = conversion(vertices);
                        $foreign.bufferData__(targetConst)(typedArray)(flag)();
                        return {
                            webGLBuffer: v,
                            bufferType: targetConst,
                            bufferSize: Data_Array.length(vertices)
                        };
                    };
                };
            };
        };
    };
};
var makeBuffer = function (dictEuclideanRing) {
    return function (bufferTarget) {
        return function (conversion) {
            return function (vertices) {
                return makeBuffer$prime(dictEuclideanRing)(bufferTarget)(conversion)(vertices)(Graphics_WebGLRaw._STATIC_DRAW);
            };
        };
    };
};
var makeBufferDyn = function (dictEuclideanRing) {
    return function (bufferTarget) {
        return function (conversion) {
            return function (vertices) {
                return makeBuffer$prime(dictEuclideanRing)(bufferTarget)(conversion)(vertices)(Graphics_WebGLRaw._DYNAMIC_DRAW);
            };
        };
    };
};
var makeBufferPrim = function (bufferTarget) {
    return function (typedArray) {
        var targetConst = bufferTargetToConst(bufferTarget);
        return function __do() {
            var v = Graphics_WebGLRaw.createBuffer_();
            Graphics_WebGLRaw.bindBuffer_(targetConst)(v)();
            $foreign.bufferData__(targetConst)(typedArray)(Graphics_WebGLRaw._STATIC_DRAW)();
            return {
                webGLBuffer: v,
                bufferType: targetConst,
                bufferSize: Data_TypedArray.length(typedArray)
            };
        };
    };
};
var makeBufferPrimDyn = function (bufferTarget) {
    return function (typedArray) {
        var targetConst = bufferTargetToConst(bufferTarget);
        return function __do() {
            var v = Graphics_WebGLRaw.createBuffer_();
            Graphics_WebGLRaw.bindBuffer_(targetConst)(v)();
            $foreign.bufferData__(targetConst)(typedArray)(Graphics_WebGLRaw._DYNAMIC_DRAW)();
            return {
                webGLBuffer: v,
                bufferType: targetConst,
                bufferSize: Data_TypedArray.length(typedArray)
            };
        };
    };
};
var blendingFactorToConst = function (v) {
    if (v instanceof ZERO) {
        return Graphics_WebGLRaw._ZERO;
    };
    if (v instanceof ONE) {
        return Graphics_WebGLRaw._ONE;
    };
    if (v instanceof SRC_COLOR) {
        return Graphics_WebGLRaw._SRC_COLOR;
    };
    if (v instanceof ONE_MINUS_SRC_COLOR) {
        return Graphics_WebGLRaw._ONE_MINUS_SRC_COLOR;
    };
    if (v instanceof DST_COLOR) {
        return Graphics_WebGLRaw._DST_COLOR;
    };
    if (v instanceof ONE_MINUS_DST_COLOR) {
        return Graphics_WebGLRaw._ONE_MINUS_DST_COLOR;
    };
    if (v instanceof SRC_ALPHA) {
        return Graphics_WebGLRaw._SRC_ALPHA;
    };
    if (v instanceof ONE_MINUS_SRC_ALPHA) {
        return Graphics_WebGLRaw._ONE_MINUS_SRC_ALPHA;
    };
    if (v instanceof DST_ALPHA) {
        return Graphics_WebGLRaw._DST_ALPHA;
    };
    if (v instanceof ONE_MINUS_DST_ALPHA) {
        return Graphics_WebGLRaw._ONE_MINUS_DST_ALPHA;
    };
    if (v instanceof CONSTANT_COLOR) {
        return Graphics_WebGLRaw._CONSTANT_COLOR;
    };
    if (v instanceof ONE_MINUS_CONSTANT_COLOR) {
        return Graphics_WebGLRaw._ONE_MINUS_CONSTANT_COLOR;
    };
    if (v instanceof CONSTANT_ALPHA) {
        return Graphics_WebGLRaw._CONSTANT_ALPHA;
    };
    if (v instanceof ONE_MINUS_CONSTANT_ALPHA) {
        return Graphics_WebGLRaw._ONE_MINUS_CONSTANT_ALPHA;
    };
    if (v instanceof SRC_ALPHA_SATURATE) {
        return Graphics_WebGLRaw._SRC_ALPHA_SATURATE;
    };
    if (v instanceof BLEND_COLOR) {
        return Graphics_WebGLRaw._BLEND_COLOR;
    };
    if (v instanceof BLEND_DST_RGB) {
        return Graphics_WebGLRaw._BLEND_DST_RGB;
    };
    if (v instanceof BLEND_SRC_RGB) {
        return Graphics_WebGLRaw._BLEND_SRC_RGB;
    };
    if (v instanceof BLEND_DST_ALPHA) {
        return Graphics_WebGLRaw._BLEND_DST_ALPHA;
    };
    if (v instanceof BLEND_SRC_ALPHA) {
        return Graphics_WebGLRaw._BLEND_SRC_ALPHA;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 559, column 1 - line 559, column 47: " + [ v.constructor.name ]);
};
var blendFuncSeparate = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                var d$prime = blendingFactorToConst(d);
                var c$prime = blendingFactorToConst(c);
                var b$prime = blendingFactorToConst(b);
                var a$prime = blendingFactorToConst(a);
                return Graphics_WebGLRaw.blendFuncSeparate_(a$prime)(b$prime)(c$prime)(d$prime);
            };
        };
    };
};
var blendFunc = function (a) {
    return function (b) {
        return Graphics_WebGLRaw.blendFunc_(blendingFactorToConst(a))(blendingFactorToConst(b));
    };
};
var blendEquationToConst = function (v) {
    if (v instanceof FUNC_ADD) {
        return Graphics_WebGLRaw._FUNC_ADD;
    };
    if (v instanceof BLEND_EQUATION) {
        return Graphics_WebGLRaw._BLEND_EQUATION;
    };
    if (v instanceof BLEND_EQUATION_RGB) {
        return Graphics_WebGLRaw._BLEND_EQUATION_RGB;
    };
    if (v instanceof BLEND_EQUATION_ALPHA) {
        return Graphics_WebGLRaw._BLEND_EQUATION_ALPHA;
    };
    if (v instanceof FUNC_SUBTRACT) {
        return Graphics_WebGLRaw._FUNC_SUBTRACT;
    };
    if (v instanceof FUNC_REVERSE_SUBTRACT) {
        return Graphics_WebGLRaw._FUNC_REVERSE_SUBTRACT;
    };
    throw new Error("Failed pattern match at Graphics.WebGL line 590, column 1 - line 590, column 45: " + [ v.constructor.name ]);
};
var blendEquationSeparate = function (a) {
    return function (b) {
        return Graphics_WebGLRaw.blendEquationSeparate_(blendEquationToConst(a))(blendEquationToConst(b));
    };
};
var blendEquation = function ($97) {
    return Graphics_WebGLRaw.blendEquation_(blendEquationToConst($97));
};
var blendColor = Graphics_WebGLRaw.blendColor_;
var bindBufAndSetVertexAttr = function (buffer) {
    return function (attr) {
        return function __do() {
            Graphics_WebGLRaw.bindBuffer_(buffer.bufferType)(buffer.webGLBuffer)();
            return vertexPointer(attr)();
        };
    };
};
var drawArr = function (mode) {
    return function (buffer) {
        return function (v) {
            return function __do() {
                bindBufAndSetVertexAttr(buffer)(v)();
                return Graphics_WebGLRaw.drawArrays_(modeToConst(mode))(0)(buffer.bufferSize / v.aItemSize | 0)();
            };
        };
    };
};
var bindBuf = function (buffer) {
    return Graphics_WebGLRaw.bindBuffer_(buffer.bufferType)(buffer.webGLBuffer);
};
var bindAttribLocation = function (v) {
    return function (i) {
        return function (s) {
            return Graphics_WebGLRaw.bindAttribLocation_(v)(i)(s);
        };
    };
};
var asArrayBuffer = Data_TypedArray.asFloat32Array;
var setUniformFloats = function (v) {
    return function (value) {
        if (v.uType === Graphics_WebGLRaw._FLOAT) {
            return Graphics_WebGLRaw.uniform1f_(v.uLocation)(Data_Array_Partial.head()(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_MAT4) {
            return Graphics_WebGLRaw.uniformMatrix4fv_(v.uLocation)(false)(asArrayBuffer(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_MAT3) {
            return Graphics_WebGLRaw.uniformMatrix3fv_(v.uLocation)(false)(asArrayBuffer(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_MAT2) {
            return Graphics_WebGLRaw.uniformMatrix2fv_(v.uLocation)(false)(asArrayBuffer(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_VEC4) {
            return Graphics_WebGLRaw.uniform4fv_(v.uLocation)(asArrayBuffer(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_VEC3) {
            return Graphics_WebGLRaw.uniform3fv_(v.uLocation)(asArrayBuffer(value));
        };
        if (v.uType === Graphics_WebGLRaw._FLOAT_VEC2) {
            return Graphics_WebGLRaw.uniform2fv_(v.uLocation)(asArrayBuffer(value));
        };
        if (Data_Boolean.otherwise) {
            return Extensions.fail("WebGL>>setUniformFloats: Called for non float uniform!");
        };
        throw new Error("Failed pattern match at Graphics.WebGL line 307, column 1 - line 307, column 85: " + [ v.constructor.name, value.constructor.name ]);
    };
};
module.exports = {
    defContextAttributes: defContextAttributes,
    runWebGL: runWebGL,
    runWebGLAttr: runWebGLAttr,
    Uniform: Uniform,
    Attribute: Attribute,
    Shaders: Shaders,
    withShaders: withShaders,
    ARRAY_BUFFER: ARRAY_BUFFER,
    ELEMENT_ARRAY_BUFFER: ELEMENT_ARRAY_BUFFER,
    makeBuffer: makeBuffer,
    makeBufferDyn: makeBufferDyn,
    makeBufferFloat: makeBufferFloat,
    makeBufferFloatDyn: makeBufferFloatDyn,
    makeBufferPrim: makeBufferPrim,
    makeBufferPrimDyn: makeBufferPrimDyn,
    fillBuffer: fillBuffer,
    setUniformFloats: setUniformFloats,
    setUniformBoolean: setUniformBoolean,
    bindBufAndSetVertexAttr: bindBufAndSetVertexAttr,
    bindBuf: bindBuf,
    bindAttribLocation: bindAttribLocation,
    vertexPointer: vertexPointer,
    enableVertexAttribArray: enableVertexAttribArray,
    disableVertexAttribArray: disableVertexAttribArray,
    drawArr: drawArr,
    drawElements: drawElements,
    depthFunc: depthFunc,
    NEVER: NEVER,
    ALWAYS: ALWAYS,
    LESS: LESS,
    EQUAL: EQUAL,
    LEQUAL: LEQUAL,
    GREATER: GREATER,
    GEQUAL: GEQUAL,
    NOTEQUAL: NOTEQUAL,
    DEPTH_BUFFER_BIT: DEPTH_BUFFER_BIT,
    STENCIL_BUFFER_BIT: STENCIL_BUFFER_BIT,
    COLOR_BUFFER_BIT: COLOR_BUFFER_BIT,
    POINTS: POINTS,
    LINES: LINES,
    LINE_STRIP: LINE_STRIP,
    LINE_LOOP: LINE_LOOP,
    TRIANGLES: TRIANGLES,
    TRIANGLE_STRIP: TRIANGLE_STRIP,
    TRIANGLE_FAN: TRIANGLE_FAN,
    blendColor: blendColor,
    blendFunc: blendFunc,
    blendFuncSeparate: blendFuncSeparate,
    blendEquation: blendEquation,
    blendEquationSeparate: blendEquationSeparate,
    FUNC_ADD: FUNC_ADD,
    BLEND_EQUATION: BLEND_EQUATION,
    BLEND_EQUATION_RGB: BLEND_EQUATION_RGB,
    BLEND_EQUATION_ALPHA: BLEND_EQUATION_ALPHA,
    FUNC_SUBTRACT: FUNC_SUBTRACT,
    FUNC_REVERSE_SUBTRACT: FUNC_REVERSE_SUBTRACT,
    ZERO: ZERO,
    ONE: ONE,
    SRC_COLOR: SRC_COLOR,
    ONE_MINUS_SRC_COLOR: ONE_MINUS_SRC_COLOR,
    DST_COLOR: DST_COLOR,
    ONE_MINUS_DST_COLOR: ONE_MINUS_DST_COLOR,
    SRC_ALPHA: SRC_ALPHA,
    ONE_MINUS_SRC_ALPHA: ONE_MINUS_SRC_ALPHA,
    DST_ALPHA: DST_ALPHA,
    ONE_MINUS_DST_ALPHA: ONE_MINUS_DST_ALPHA,
    SRC_ALPHA_SATURATE: SRC_ALPHA_SATURATE,
    BLEND_DST_RGB: BLEND_DST_RGB,
    BLEND_SRC_RGB: BLEND_SRC_RGB,
    BLEND_DST_ALPHA: BLEND_DST_ALPHA,
    BLEND_SRC_ALPHA: BLEND_SRC_ALPHA,
    CONSTANT_COLOR: CONSTANT_COLOR,
    ONE_MINUS_CONSTANT_COLOR: ONE_MINUS_CONSTANT_COLOR,
    CONSTANT_ALPHA: CONSTANT_ALPHA,
    ONE_MINUS_CONSTANT_ALPHA: ONE_MINUS_CONSTANT_ALPHA,
    BLEND_COLOR: BLEND_COLOR,
    viewport: viewport,
    getCanvasWidth: getCanvasWidth,
    getCanvasHeight: getCanvasHeight,
    disable: disable,
    enable: enable,
    isEnabled: isEnabled,
    BLEND: BLEND,
    DEPTH_TEST: DEPTH_TEST,
    CULL_FACE: CULL_FACE,
    POLYGON_OFFSET_FILL: POLYGON_OFFSET_FILL,
    SCISSOR_TEST: SCISSOR_TEST,
    clear: clear,
    clearColor: clearColor,
    clearDepth: clearDepth,
    clearStencil: clearStencil,
    colorMask: colorMask,
    isContextLost: isContextLost,
    requestAnimationFrame: requestAnimationFrame
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.WebGL":38,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Array.Partial":75,"../Data.ArrayBuffer.Types":81,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Int.Bits":144,"../Data.Maybe":156,"../Data.Semigroup":185,"../Data.TypedArray":215,"../Data.Unit":220,"../Extensions":227,"../Graphics.WebGLRaw":238,"../Partial.Unsafe":253,"../Prelude":263,"./foreign":232}],234:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Monad_Eff_WebGL = require("../Control.Monad.Eff.WebGL");
var Graphics_WebGL = require("../Graphics.WebGL");
var Graphics_WebGLFramebuffer = require("../Graphics.WebGLFramebuffer");
var Graphics_WebGLTexture = require("../Graphics.WebGLTexture");
module.exports = {};

},{"../Control.Monad.Eff.WebGL":38,"../Graphics.WebGL":233,"../Graphics.WebGLFramebuffer":236,"../Graphics.WebGLTexture":240}],235:[function(require,module,exports){
/* global exports */

// module Graphics.WebGLFramebuffer

"use strict";

exports.unbindRenderbuffer_ = function(target)
    {return function()
     {gl.bindRenderbuffer(target,null);};};

exports.unbindFramebuffer_ = function(target)
{return function()
 {gl.bindFramebuffer(target,null);};};

    exports.readPixels__ = function (x)
    {return function(y)
     {return function(width)
      {return function(height)
       {return function(format)
        {return function(type)
         {return function(pixels)
          {return function()
           {gl.readPixels(x,y,width,height,format,type,pixels);}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;

},{}],236:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_WebGL = require("../Control.Monad.Eff.WebGL");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_TypedArray = require("../Data.TypedArray");
var Graphics_WebGLRaw = require("../Graphics.WebGLRaw");
var Graphics_WebGLTexture = require("../Graphics.WebGLTexture");
var Prelude = require("../Prelude");
var WebGLRendBuf = function (x) {
    return x;
};
var WebGLBuf = function (x) {
    return x;
};
var RGBA4 = (function () {
    function RGBA4() {

    };
    RGBA4.value = new RGBA4();
    return RGBA4;
})();
var RGB565 = (function () {
    function RGB565() {

    };
    RGB565.value = new RGB565();
    return RGB565;
})();
var RGB5_A1 = (function () {
    function RGB5_A1() {

    };
    RGB5_A1.value = new RGB5_A1();
    return RGB5_A1;
})();
var DEPTH_COMPONENT16 = (function () {
    function DEPTH_COMPONENT16() {

    };
    DEPTH_COMPONENT16.value = new DEPTH_COMPONENT16();
    return DEPTH_COMPONENT16;
})();
var FRAMEBUFFER_COMPLETE = (function () {
    function FRAMEBUFFER_COMPLETE() {

    };
    FRAMEBUFFER_COMPLETE.value = new FRAMEBUFFER_COMPLETE();
    return FRAMEBUFFER_COMPLETE;
})();
var FRAMEBUFFER_INCOMPLETE_ATTACHMENT = (function () {
    function FRAMEBUFFER_INCOMPLETE_ATTACHMENT() {

    };
    FRAMEBUFFER_INCOMPLETE_ATTACHMENT.value = new FRAMEBUFFER_INCOMPLETE_ATTACHMENT();
    return FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
})();
var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = (function () {
    function FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT() {

    };
    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT.value = new FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT();
    return FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
})();
var FRAMEBUFFER_INCOMPLETE_DIMENSIONS = (function () {
    function FRAMEBUFFER_INCOMPLETE_DIMENSIONS() {

    };
    FRAMEBUFFER_INCOMPLETE_DIMENSIONS.value = new FRAMEBUFFER_INCOMPLETE_DIMENSIONS();
    return FRAMEBUFFER_INCOMPLETE_DIMENSIONS;
})();
var FRAMEBUFFER_UNSUPPORTED = (function () {
    function FRAMEBUFFER_UNSUPPORTED() {

    };
    FRAMEBUFFER_UNSUPPORTED.value = new FRAMEBUFFER_UNSUPPORTED();
    return FRAMEBUFFER_UNSUPPORTED;
})();
var COLOR_ATTACHMENT0 = (function () {
    function COLOR_ATTACHMENT0() {

    };
    COLOR_ATTACHMENT0.value = new COLOR_ATTACHMENT0();
    return COLOR_ATTACHMENT0;
})();
var DEPTH_ATTACHMENT = (function () {
    function DEPTH_ATTACHMENT() {

    };
    DEPTH_ATTACHMENT.value = new DEPTH_ATTACHMENT();
    return DEPTH_ATTACHMENT;
})();
var STENCIL_ATTACHMENT = (function () {
    function STENCIL_ATTACHMENT() {

    };
    STENCIL_ATTACHMENT.value = new STENCIL_ATTACHMENT();
    return STENCIL_ATTACHMENT;
})();
var DEPTH_STENCIL_ATTACHMENT = (function () {
    function DEPTH_STENCIL_ATTACHMENT() {

    };
    DEPTH_STENCIL_ATTACHMENT.value = new DEPTH_STENCIL_ATTACHMENT();
    return DEPTH_STENCIL_ATTACHMENT;
})();
var unbindRenderbuffer = $foreign.unbindRenderbuffer_(Graphics_WebGLRaw._RENDERBUFFER);
var unbindFramebuffer = $foreign.unbindFramebuffer_(Graphics_WebGLRaw._FRAMEBUFFER);
var renderbufferFormatToConst = function (v) {
    if (v instanceof RGBA4) {
        return Graphics_WebGLRaw._RGBA4;
    };
    if (v instanceof RGB565) {
        return Graphics_WebGLRaw._RGB565;
    };
    if (v instanceof RGB5_A1) {
        return Graphics_WebGLRaw._RGB5_A1;
    };
    if (v instanceof DEPTH_COMPONENT16) {
        return Graphics_WebGLRaw._DEPTH_COMPONENT16;
    };
    throw new Error("Failed pattern match at Graphics.WebGLFramebuffer line 52, column 1 - line 52, column 58: " + [ v.constructor.name ]);
};
var renderbufferStorage = function (renderbufferFormat) {
    return function (width) {
        return function (height) {
            return Graphics_WebGLRaw.renderbufferStorage_(Graphics_WebGLRaw._RENDERBUFFER)(renderbufferFormatToConst(renderbufferFormat))(width)(height);
        };
    };
};
var readPixels = function (x) {
    return function (y) {
        return function (width) {
            return function (height) {
                return function (uint8Array) {
                    var copiedArray = Data_TypedArray.asUint8Array(Data_TypedArray.asArray(uint8Array));
                    return function __do() {
                        $foreign.readPixels__(x)(y)(width)(height)(Graphics_WebGLRaw._RGBA)(Graphics_WebGLRaw._UNSIGNED_BYTE)(copiedArray)();
                        return copiedArray;
                    };
                };
            };
        };
    };
};
var createRenderbuffer = function __do() {
    var v = Graphics_WebGLRaw.createRenderbuffer_();
    return v;
};
var createFramebuffer = function __do() {
    var v = Graphics_WebGLRaw.createFramebuffer_();
    return v;
};
var checkFramebufferStatus = Graphics_WebGLRaw.checkFramebufferStatus_;
var bindRenderbuffer = function (v) {
    return Graphics_WebGLRaw.bindRenderbuffer_(Graphics_WebGLRaw._RENDERBUFFER)(v);
};
var bindFramebuffer = function (v) {
    return Graphics_WebGLRaw.bindFramebuffer_(Graphics_WebGLRaw._FRAMEBUFFER)(v);
};
var attachementPointToConst = function (v) {
    if (v instanceof COLOR_ATTACHMENT0) {
        return Graphics_WebGLRaw._COLOR_ATTACHMENT0;
    };
    if (v instanceof DEPTH_ATTACHMENT) {
        return Graphics_WebGLRaw._DEPTH_ATTACHMENT;
    };
    if (v instanceof STENCIL_ATTACHMENT) {
        return Graphics_WebGLRaw._STENCIL_ATTACHMENT;
    };
    if (v instanceof DEPTH_STENCIL_ATTACHMENT) {
        return Graphics_WebGLRaw._DEPTH_STENCIL_ATTACHMENT;
    };
    throw new Error("Failed pattern match at Graphics.WebGLFramebuffer line 60, column 1 - line 60, column 54: " + [ v.constructor.name ]);
};
var framebufferRenderbuffer = function (attachementPoint) {
    return function (v) {
        return Graphics_WebGLRaw.framebufferRenderbuffer_(Graphics_WebGLRaw._FRAMEBUFFER)(attachementPointToConst(attachementPoint))(Graphics_WebGLRaw._RENDERBUFFER)(v);
    };
};
var framebufferTexture2D = function (attachementPoint) {
    return function (targetType) {
        return function (v) {
            return Graphics_WebGLRaw.framebufferTexture2D_(Graphics_WebGLRaw._FRAMEBUFFER)(attachementPointToConst(attachementPoint))(Graphics_WebGLTexture.targetTypeToConst(targetType))(v)(0);
        };
    };
};
var _FRAMEBUFFER_UNSUPPORTED = 36061;
var _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
var _FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
var _FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
var _FRAMEBUFFER_COMPLETE = 36053;
var frameBufferCodeToConst = function (v) {
    if (v instanceof FRAMEBUFFER_COMPLETE) {
        return _FRAMEBUFFER_COMPLETE;
    };
    if (v instanceof FRAMEBUFFER_INCOMPLETE_ATTACHMENT) {
        return _FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
    };
    if (v instanceof FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT) {
        return _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
    };
    if (v instanceof FRAMEBUFFER_INCOMPLETE_DIMENSIONS) {
        return _FRAMEBUFFER_INCOMPLETE_DIMENSIONS;
    };
    if (v instanceof FRAMEBUFFER_UNSUPPORTED) {
        return _FRAMEBUFFER_UNSUPPORTED;
    };
    throw new Error("Failed pattern match at Graphics.WebGLFramebuffer line 69, column 1 - line 69, column 52: " + [ v.constructor.name ]);
};
module.exports = {
    WebGLBuf: WebGLBuf,
    createFramebuffer: createFramebuffer,
    checkFramebufferStatus: checkFramebufferStatus,
    bindFramebuffer: bindFramebuffer,
    unbindFramebuffer: unbindFramebuffer,
    WebGLRendBuf: WebGLRendBuf,
    createRenderbuffer: createRenderbuffer,
    bindRenderbuffer: bindRenderbuffer,
    unbindRenderbuffer: unbindRenderbuffer,
    RGBA4: RGBA4,
    RGB565: RGB565,
    RGB5_A1: RGB5_A1,
    DEPTH_COMPONENT16: DEPTH_COMPONENT16,
    renderbufferStorage: renderbufferStorage,
    COLOR_ATTACHMENT0: COLOR_ATTACHMENT0,
    DEPTH_ATTACHMENT: DEPTH_ATTACHMENT,
    STENCIL_ATTACHMENT: STENCIL_ATTACHMENT,
    DEPTH_STENCIL_ATTACHMENT: DEPTH_STENCIL_ATTACHMENT,
    framebufferRenderbuffer: framebufferRenderbuffer,
    framebufferTexture2D: framebufferTexture2D,
    FRAMEBUFFER_COMPLETE: FRAMEBUFFER_COMPLETE,
    FRAMEBUFFER_INCOMPLETE_ATTACHMENT: FRAMEBUFFER_INCOMPLETE_ATTACHMENT,
    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,
    FRAMEBUFFER_INCOMPLETE_DIMENSIONS: FRAMEBUFFER_INCOMPLETE_DIMENSIONS,
    FRAMEBUFFER_UNSUPPORTED: FRAMEBUFFER_UNSUPPORTED,
    frameBufferCodeToConst: frameBufferCodeToConst,
    readPixels: readPixels
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.WebGL":38,"../Data.ArrayBuffer.Types":81,"../Data.TypedArray":215,"../Graphics.WebGLRaw":238,"../Graphics.WebGLTexture":240,"../Prelude":263,"./foreign":235}],237:[function(require,module,exports){
// Auto generated: don't change manually, use purescript-webgl-generator to modify!!
/* global exports */

// module Graphics.WebGLRaw

  "use strict";

    exports.getContextAttributes_ = function ()
    {var res = gl.getContextAttributes();
     if (res === undefined){
       throw "Undefined in  getContextAttributes"};
     return res;}
    ;
    exports.isContextLost_ = function ()
    {var res = gl.isContextLost();
     if (res === undefined){
       throw "Undefined in  isContextLost"};
     return res;}
    ;
    exports.getSupportedExtensions_ = function ()
    {var res = gl.getSupportedExtensions();
     if (res === undefined){
       throw "Undefined in  getSupportedExtensions"};
     return res;}
    ;
    exports.getExtension_ = function (name)
    {return function()
     {var res = gl.getExtension(name);
      if (res === undefined){
        throw "Undefined in  getExtension"};
      return res;}
     ;}
    ;
    exports.activeTexture_ = function (texture)
    {return function()
     {gl.activeTexture(texture);}
     ;}
    ;
    exports.attachShader_ = function (program)
    {return function(shader)
     {return function()
      {gl.attachShader(program,shader);}
      ;}
     ;}
    ;
    exports.bindAttribLocation_ = function (program)
    {return function(index)
     {return function(name)
      {return function()
       {gl.bindAttribLocation(program,index,name);}
       ;}
      ;}
     ;}
    ;
    exports.bindBuffer_ = function (target)
    {return function(buffer)
     {return function()
      {gl.bindBuffer(target,buffer);}
      ;}
     ;}
    ;
    exports.bindFramebuffer_ = function (target)
    {return function(framebuffer)
     {return function()
      {gl.bindFramebuffer(target,framebuffer);}
      ;}
     ;}
    ;
    exports.bindRenderbuffer_ = function (target)
    {return function(renderbuffer)
     {return function()
      {gl.bindRenderbuffer(target,renderbuffer);}
      ;}
     ;}
    ;
    exports.bindTexture_ = function (target)
    {return function(texture)
     {return function()
      {gl.bindTexture(target,texture);}
      ;}
     ;}
    ;
    exports.blendColor_ = function (red)
    {return function(green)
     {return function(blue)
      {return function(alpha)
       {return function()
        {gl.blendColor(red,green,blue,alpha);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.blendEquation_ = function (mode)
    {return function()
     {gl.blendEquation(mode);}
     ;}
    ;
    exports.blendEquationSeparate_ = function (modeRGB)
    {return function(modeAlpha)
     {return function()
      {gl.blendEquationSeparate(modeRGB,modeAlpha);}
      ;}
     ;}
    ;
    exports.blendFunc_ = function (sfactor)
    {return function(dfactor)
     {return function()
      {gl.blendFunc(sfactor,dfactor);}
      ;}
     ;}
    ;
    exports.blendFuncSeparate_ = function (srcRGB)
    {return function(dstRGB)
     {return function(srcAlpha)
      {return function(dstAlpha)
       {return function()
        {gl.blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.bufferData_ = function (target)
    {return function(data)
     {return function(usage)
      {return function()
       {gl.bufferData(target,data,usage);}
       ;}
      ;}
     ;}
    ;
    exports.bufferSubData_ = function (target)
    {return function(offset)
     {return function(data)
      {return function()
       {gl.bufferSubData(target,offset,data);}
       ;}
      ;}
     ;}
    ;
    exports.checkFramebufferStatus_ = function (target)
    {return function()
     {var res = gl.checkFramebufferStatus(target);
      if (res === undefined){
        throw "Undefined in  checkFramebufferStatus"};
      return res;}
     ;}
    ;
    exports.clear_ = function (mask)
    {return function()
     {gl.clear(mask);}
     ;}
    ;
    exports.clearColor_ = function (red)
    {return function(green)
     {return function(blue)
      {return function(alpha)
       {return function()
        {gl.clearColor(red,green,blue,alpha);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.clearDepth_ = function (depth)
    {return function()
     {gl.clearDepth(depth);}
     ;}
    ;
    exports.clearStencil_ = function (s)
    {return function()
     {gl.clearStencil(s);}
     ;}
    ;
    exports.colorMask_ = function (red)
    {return function(green)
     {return function(blue)
      {return function(alpha)
       {return function()
        {gl.colorMask(red,green,blue,alpha);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.compileShader_ = function (shader)
    {return function()
     {gl.compileShader(shader);}
     ;}
    ;
    exports.copyTexImage2D_ = function (target)
    {return function(level)
     {return function(internalformat)
      {return function(x)
       {return function(y)
        {return function(width)
         {return function(height)
          {return function(border)
           {return function()
            {gl.copyTexImage2D(target,level,internalformat,x,y,width,height,border);}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.copyTexSubImage2D_ = function (target)
    {return function(level)
     {return function(xoffset)
      {return function(yoffset)
       {return function(x)
        {return function(y)
         {return function(width)
          {return function(height)
           {return function()
            {gl.copyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height);}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.createBuffer_ = function ()
    {var res = gl.createBuffer();
     if (res === undefined){
       throw "Undefined in  createBuffer"};
     return res;}
    ;
    exports.createFramebuffer_ = function ()
    {var res = gl.createFramebuffer();
     if (res === undefined){
       throw "Undefined in  createFramebuffer"};
     return res;}
    ;
    exports.createProgram_ = function ()
    {var res = gl.createProgram();
     if (res === undefined){
       throw "Undefined in  createProgram"};
     return res;}
    ;
    exports.createRenderbuffer_ = function ()
    {var res = gl.createRenderbuffer();
     if (res === undefined){
       throw "Undefined in  createRenderbuffer"};
     return res;}
    ;
    exports.createShader_ = function (type)
    {return function()
     {var res = gl.createShader(type);
      if (res === undefined){
        throw "Undefined in  createShader"};
      return res;}
     ;}
    ;
    exports.createTexture_ = function ()
    {var res = gl.createTexture();
     if (res === undefined){
       throw "Undefined in  createTexture"};
     return res;}
    ;
    exports.cullFace_ = function (mode)
    {return function()
     {gl.cullFace(mode);}
     ;}
    ;
    exports.deleteBuffer_ = function (buffer)
    {return function()
     {gl.deleteBuffer(buffer);}
     ;}
    ;
    exports.deleteFramebuffer_ = function (framebuffer)
    {return function()
     {gl.deleteFramebuffer(framebuffer);}
     ;}
    ;
    exports.deleteProgram_ = function (program)
    {return function()
     {gl.deleteProgram(program);}
     ;}
    ;
    exports.deleteRenderbuffer_ = function (renderbuffer)
    {return function()
     {gl.deleteRenderbuffer(renderbuffer);}
     ;}
    ;
    exports.deleteShader_ = function (shader)
    {return function()
     {gl.deleteShader(shader);}
     ;}
    ;
    exports.deleteTexture_ = function (texture)
    {return function()
     {gl.deleteTexture(texture);}
     ;}
    ;
    exports.depthFunc_ = function (func)
    {return function()
     {gl.depthFunc(func);}
     ;}
    ;
    exports.depthMask_ = function (flag)
    {return function()
     {gl.depthMask(flag);}
     ;}
    ;
    exports.depthRange_ = function (zNear)
    {return function(zFar)
     {return function()
      {gl.depthRange(zNear,zFar);}
      ;}
     ;}
    ;
    exports.detachShader_ = function (program)
    {return function(shader)
     {return function()
      {gl.detachShader(program,shader);}
      ;}
     ;}
    ;
    exports.disable_ = function (cap)
    {return function()
     {gl.disable(cap);}
     ;}
    ;
    exports.disableVertexAttribArray_ = function (index)
    {return function()
     {gl.disableVertexAttribArray(index);}
     ;}
    ;
    exports.drawArrays_ = function (mode)
    {return function(first)
     {return function(count)
      {return function()
       {gl.drawArrays(mode,first,count);}
       ;}
      ;}
     ;}
    ;
    exports.drawElements_ = function (mode)
    {return function(count)
     {return function(type)
      {return function(offset)
       {return function()
        {gl.drawElements(mode,count,type,offset);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.enable_ = function (cap)
    {return function()
     {gl.enable(cap);}
     ;}
    ;
    exports.enableVertexAttribArray_ = function (index)
    {return function()
     {gl.enableVertexAttribArray(index);}
     ;}
    ;
    exports.finish_ = function ()
    {gl.finish();}
    ;
    exports.flush_ = function ()
    {gl.flush();}
    ;
    exports.framebufferRenderbuffer_ = function (target)
    {return function(attachment)
     {return function(renderbuffertarget)
      {return function(renderbuffer)
       {return function()
        {gl.framebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.framebufferTexture2D_ = function (target)
    {return function(attachment)
     {return function(textarget)
      {return function(texture)
       {return function(level)
        {return function()
         {gl.framebufferTexture2D(target,attachment,textarget,texture,level);}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.frontFace_ = function (mode)
    {return function()
     {gl.frontFace(mode);}
     ;}
    ;
    exports.generateMipmap_ = function (target)
    {return function()
     {gl.generateMipmap(target);}
     ;}
    ;
    exports.getActiveAttrib_ = function (program)
    {return function(index)
     {return function()
      {var res = gl.getActiveAttrib(program,index);
       if (res === undefined){
         throw "Undefined in  getActiveAttrib"};
       return res;}
      ;}
     ;}
    ;
    exports.getActiveUniform_ = function (program)
    {return function(index)
     {return function()
      {var res = gl.getActiveUniform(program,index);
       if (res === undefined){
         throw "Undefined in  getActiveUniform"};
       return res;}
      ;}
     ;}
    ;
    exports.getAttachedShaders_ = function (program)
    {return function()
     {var res = gl.getAttachedShaders(program);
      if (res === undefined){
        throw "Undefined in  getAttachedShaders"};
      return res;}
     ;}
    ;
    exports.getAttribLocation_ = function (program)
    {return function(name)
     {return function()
      {var res = gl.getAttribLocation(program,name);
       if (res === undefined){
         throw "Undefined in  getAttribLocation"};
       return res;}
      ;}
     ;}
    ;
    exports.getParameter_ = function (pname)
    {return function()
     {var res = gl.getParameter(pname);
      if (res === undefined){
        throw "Undefined in  getParameter"};
      return res;}
     ;}
    ;
    exports.getBufferParameter_ = function (target)
    {return function(pname)
     {return function()
      {var res = gl.getBufferParameter(target,pname);
       if (res === undefined){
         throw "Undefined in  getBufferParameter"};
       return res;}
      ;}
     ;}
    ;
    exports.getError_ = function ()
    {var res = gl.getError();
     if (res === undefined){
       throw "Undefined in  getError"};
     return res;}
    ;
    exports.getFramebufferAttachmentParameter_ = function (target)
    {return function(attachment)
     {return function(pname)
      {return function()
       {var res = gl.getFramebufferAttachmentParameter(target,attachment,pname);
        if (res === undefined){
          throw "Undefined in  getFramebufferAttachmentParameter"};
        return res;}
       ;}
      ;}
     ;}
    ;
    exports.getProgramParameter_ = function (program)
    {return function(pname)
     {return function()
      {var res = gl.getProgramParameter(program,pname);
       if (res === undefined){
         throw "Undefined in  getProgramParameter"};
       return res;}
      ;}
     ;}
    ;
    exports.getProgramInfoLog_ = function (program)
    {return function()
     {var res = gl.getProgramInfoLog(program);
      if (res === undefined){
        throw "Undefined in  getProgramInfoLog"};
      return res;}
     ;}
    ;
    exports.getRenderbufferParameter_ = function (target)
    {return function(pname)
     {return function()
      {var res = gl.getRenderbufferParameter(target,pname);
       if (res === undefined){
         throw "Undefined in  getRenderbufferParameter"};
       return res;}
      ;}
     ;}
    ;
    exports.getShaderParameter_ = function (shader)
    {return function(pname)
     {return function()
      {var res = gl.getShaderParameter(shader,pname);
       if (res === undefined){
         throw "Undefined in  getShaderParameter"};
       return res;}
      ;}
     ;}
    ;
    exports.getShaderInfoLog_ = function (shader)
    {return function()
     {var res = gl.getShaderInfoLog(shader);
      if (res === undefined){
        throw "Undefined in  getShaderInfoLog"};
      return res;}
     ;}
    ;
    exports.getShaderSource_ = function (shader)
    {return function()
     {var res = gl.getShaderSource(shader);
      if (res === undefined){
        throw "Undefined in  getShaderSource"};
      return res;}
     ;}
    ;
    exports.getTexParameter_ = function (target)
    {return function(pname)
     {return function()
      {var res = gl.getTexParameter(target,pname);
       if (res === undefined){
         throw "Undefined in  getTexParameter"};
       return res;}
      ;}
     ;}
    ;
    exports.getUniform_ = function (program)
    {return function(location)
     {return function()
      {var res = gl.getUniform(program,location);
       if (res === undefined){
         throw "Undefined in  getUniform"};
       return res;}
      ;}
     ;}
    ;
    exports.getUniformLocation_ = function (program)
    {return function(name)
     {return function()
      {var res = gl.getUniformLocation(program,name);
       if (res === undefined){
         throw "Undefined in  getUniformLocation"};
       return res;}
      ;}
     ;}
    ;
    exports.getVertexAttrib_ = function (index)
    {return function(pname)
     {return function()
      {var res = gl.getVertexAttrib(index,pname);
       if (res === undefined){
         throw "Undefined in  getVertexAttrib"};
       return res;}
      ;}
     ;}
    ;
    exports.getVertexAttribOffset_ = function (index)
    {return function(pname)
     {return function()
      {var res = gl.getVertexAttribOffset(index,pname);
       if (res === undefined){
         throw "Undefined in  getVertexAttribOffset"};
       return res;}
      ;}
     ;}
    ;
    exports.hint_ = function (target)
    {return function(mode)
     {return function()
      {gl.hint(target,mode);}
      ;}
     ;}
    ;
    exports.isBuffer_ = function (buffer)
    {return function()
     {var res = gl.isBuffer(buffer);
      if (res === undefined){
        throw "Undefined in  isBuffer"};
      return res;}
     ;}
    ;
    exports.isEnabled_ = function (cap)
    {return function()
     {var res = gl.isEnabled(cap);
      if (res === undefined){
        throw "Undefined in  isEnabled"};
      return res;}
     ;}
    ;
    exports.isFramebuffer_ = function (framebuffer)
    {return function()
     {var res = gl.isFramebuffer(framebuffer);
      if (res === undefined){
        throw "Undefined in  isFramebuffer"};
      return res;}
     ;}
    ;
    exports.isProgram_ = function (program)
    {return function()
     {var res = gl.isProgram(program);
      if (res === undefined){
        throw "Undefined in  isProgram"};
      return res;}
     ;}
    ;
    exports.isRenderbuffer_ = function (renderbuffer)
    {return function()
     {var res = gl.isRenderbuffer(renderbuffer);
      if (res === undefined){
        throw "Undefined in  isRenderbuffer"};
      return res;}
     ;}
    ;
    exports.isShader_ = function (shader)
    {return function()
     {var res = gl.isShader(shader);
      if (res === undefined){
        throw "Undefined in  isShader"};
      return res;}
     ;}
    ;
    exports.isTexture_ = function (texture)
    {return function()
     {var res = gl.isTexture(texture);
      if (res === undefined){
        throw "Undefined in  isTexture"};
      return res;}
     ;}
    ;
    exports.lineWidth_ = function (width)
    {return function()
     {gl.lineWidth(width);}
     ;}
    ;
    exports.linkProgram_ = function (program)
    {return function()
     {gl.linkProgram(program);}
     ;}
    ;
    exports.pixelStorei_ = function (pname)
    {return function(param)
     {return function()
      {gl.pixelStorei(pname,param);}
      ;}
     ;}
    ;
    exports.polygonOffset_ = function (factor)
    {return function(units)
     {return function()
      {gl.polygonOffset(factor,units);}
      ;}
     ;}
    ;
    exports.readPixels_ = function (x)
    {return function(y)
     {return function(width)
      {return function(height)
       {return function(format)
        {return function(type)
         {return function(pixels)
          {return function()
           {gl.readPixels(x,y,width,height,format,type,pixels);}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.renderbufferStorage_ = function (target)
    {return function(internalformat)
     {return function(width)
      {return function(height)
       {return function()
        {gl.renderbufferStorage(target,internalformat,width,height);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.sampleCoverage_ = function (value)
    {return function(invert)
     {return function()
      {gl.sampleCoverage(value,invert);}
      ;}
     ;}
    ;
    exports.scissor_ = function (x)
    {return function(y)
     {return function(width)
      {return function(height)
       {return function()
        {gl.scissor(x,y,width,height);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.shaderSource_ = function (shader)
    {return function(source)
     {return function()
      {gl.shaderSource(shader,source);}
      ;}
     ;}
    ;
    exports.stencilFunc_ = function (func)
    {return function(ref)
     {return function(mask)
      {return function()
       {gl.stencilFunc(func,ref,mask);}
       ;}
      ;}
     ;}
    ;
    exports.stencilFuncSeparate_ = function (face)
    {return function(func)
     {return function(ref)
      {return function(mask)
       {return function()
        {gl.stencilFuncSeparate(face,func,ref,mask);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.stencilMask_ = function (mask)
    {return function()
     {gl.stencilMask(mask);}
     ;}
    ;
    exports.stencilMaskSeparate_ = function (face)
    {return function(mask)
     {return function()
      {gl.stencilMaskSeparate(face,mask);}
      ;}
     ;}
    ;
    exports.stencilOp_ = function (fail)
    {return function(zfail)
     {return function(zpass)
      {return function()
       {gl.stencilOp(fail,zfail,zpass);}
       ;}
      ;}
     ;}
    ;
    exports.stencilOpSeparate_ = function (face)
    {return function(fail)
     {return function(zfail)
      {return function(zpass)
       {return function()
        {gl.stencilOpSeparate(face,fail,zfail,zpass);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.texImage2D_ = function (target)
    {return function(level)
     {return function(internalformat)
      {return function(width)
       {return function(height)
        {return function(border)
         {return function(format)
          {return function(type)
           {return function(pixels)
            {return function()
             {gl.texImage2D(target,level,internalformat,width,height,border,format,type,pixels);}
             ;}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.texParameterf_ = function (target)
    {return function(pname)
     {return function(param)
      {return function()
       {gl.texParameterf(target,pname,param);}
       ;}
      ;}
     ;}
    ;
    exports.texParameteri_ = function (target)
    {return function(pname)
     {return function(param)
      {return function()
       {gl.texParameteri(target,pname,param);}
       ;}
      ;}
     ;}
    ;
    exports.texSubImage2D_ = function (target)
    {return function(level)
     {return function(xoffset)
      {return function(yoffset)
       {return function(width)
        {return function(height)
         {return function(format)
          {return function(type)
           {return function(pixels)
            {return function()
             {gl.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels);}
             ;}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.uniform1f_ = function (location)
    {return function(x)
     {return function()
      {gl.uniform1f(location,x);}
      ;}
     ;}
    ;
    exports.uniform1fv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform1fv(location,v);}
      ;}
     ;}
    ;
    exports.uniform1i_ = function (location)
    {return function(x)
     {return function()
      {gl.uniform1i(location,x);}
      ;}
     ;}
    ;
    exports.uniform1iv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform1iv(location,v);}
      ;}
     ;}
    ;
    exports.uniform2f_ = function (location)
    {return function(x)
     {return function(y)
      {return function()
       {gl.uniform2f(location,x,y);}
       ;}
      ;}
     ;}
    ;
    exports.uniform2fv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform2fv(location,v);}
      ;}
     ;}
    ;
    exports.uniform2i_ = function (location)
    {return function(x)
     {return function(y)
      {return function()
       {gl.uniform2i(location,x,y);}
       ;}
      ;}
     ;}
    ;
    exports.uniform2iv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform2iv(location,v);}
      ;}
     ;}
    ;
    exports.uniform3f_ = function (location)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function()
        {gl.uniform3f(location,x,y,z);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.uniform3fv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform3fv(location,v);}
      ;}
     ;}
    ;
    exports.uniform3i_ = function (location)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function()
        {gl.uniform3i(location,x,y,z);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.uniform3iv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform3iv(location,v);}
      ;}
     ;}
    ;
    exports.uniform4f_ = function (location)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function(w)
        {return function()
         {gl.uniform4f(location,x,y,z,w);}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.uniform4fv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform4fv(location,v);}
      ;}
     ;}
    ;
    exports.uniform4i_ = function (location)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function(w)
        {return function()
         {gl.uniform4i(location,x,y,z,w);}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.uniform4iv_ = function (location)
    {return function(v)
     {return function()
      {gl.uniform4iv(location,v);}
      ;}
     ;}
    ;
    exports.uniformMatrix2fv_ = function (location)
    {return function(transpose)
     {return function(value)
      {return function()
       {gl.uniformMatrix2fv(location,transpose,value);}
       ;}
      ;}
     ;}
    ;
    exports.uniformMatrix3fv_ = function (location)
    {return function(transpose)
     {return function(value)
      {return function()
       {gl.uniformMatrix3fv(location,transpose,value);}
       ;}
      ;}
     ;}
    ;
    exports.uniformMatrix4fv_ = function (location)
    {return function(transpose)
     {return function(value)
      {return function()
       {gl.uniformMatrix4fv(location,transpose,value);}
       ;}
      ;}
     ;}
    ;
    exports.useProgram_ = function (program)
    {return function()
     {gl.useProgram(program);}
     ;}
    ;
    exports.validateProgram_ = function (program)
    {return function()
     {gl.validateProgram(program);}
     ;}
    ;
    exports.vertexAttrib1f_ = function (indx)
    {return function(x)
     {return function()
      {gl.vertexAttrib1f(indx,x);}
      ;}
     ;}
    ;
    exports.vertexAttrib1fv_ = function (indx)
    {return function(values)
     {return function()
      {gl.vertexAttrib1fv(indx,values);}
      ;}
     ;}
    ;
    exports.vertexAttrib2f_ = function (indx)
    {return function(x)
     {return function(y)
      {return function()
       {gl.vertexAttrib2f(indx,x,y);}
       ;}
      ;}
     ;}
    ;
    exports.vertexAttrib2fv_ = function (indx)
    {return function(values)
     {return function()
      {gl.vertexAttrib2fv(indx,values);}
      ;}
     ;}
    ;
    exports.vertexAttrib3f_ = function (indx)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function()
        {gl.vertexAttrib3f(indx,x,y,z);}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.vertexAttrib3fv_ = function (indx)
    {return function(values)
     {return function()
      {gl.vertexAttrib3fv(indx,values);}
      ;}
     ;}
    ;
    exports.vertexAttrib4f_ = function (indx)
    {return function(x)
     {return function(y)
      {return function(z)
       {return function(w)
        {return function()
         {gl.vertexAttrib4f(indx,x,y,z,w);}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.vertexAttrib4fv_ = function (indx)
    {return function(values)
     {return function()
      {gl.vertexAttrib4fv(indx,values);}
      ;}
     ;}
    ;
    exports.vertexAttribPointer_ = function (indx)
    {return function(size)
     {return function(type)
      {return function(normalized)
       {return function(stride)
        {return function(offset)
         {return function()
          {gl.vertexAttribPointer(indx,size,type,normalized,stride,offset);}
          ;}
         ;}
        ;}
       ;}
      ;}
     ;}
    ;
    exports.viewport_ = function (x)
    {return function(y)
     {return function(width)
      {return function(height)
       {return function()
        {gl.viewport(x,y,width,height);}
        ;}
       ;}
      ;}
     ;}
    ;
  

},{}],238:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_WebGL = require("../Control.Monad.Eff.WebGL");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Prelude = require("../Prelude");
var _ZERO = 0;
var _VIEWPORT = 2978;
var _VERTEX_SHADER = 35633;
var _VERTEX_ATTRIB_ARRAY_TYPE = 34341;
var _VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
var _VERTEX_ATTRIB_ARRAY_SIZE = 34339;
var _VERTEX_ATTRIB_ARRAY_POINTER = 34373;
var _VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
var _VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
var _VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
var _VERSION = 7938;
var _VENDOR = 7936;
var _VALIDATE_STATUS = 35715;
var _UNSIGNED_SHORT_5_6_5 = 33635;
var _UNSIGNED_SHORT_5_5_5_1 = 32820;
var _UNSIGNED_SHORT_4_4_4_4 = 32819;
var _UNSIGNED_SHORT = 5123;
var _UNSIGNED_INT = 5125;
var _UNSIGNED_BYTE = 5121;
var _UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
var _UNPACK_FLIP_Y_WEBGL = 37440;
var _UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
var _UNPACK_ALIGNMENT = 3317;
var _TRIANGLE_STRIP = 5;
var _TRIANGLE_FAN = 6;
var _TRIANGLES = 4;
var _TEXTURE_WRAP_T = 10243;
var _TEXTURE_WRAP_S = 10242;
var _TEXTURE_MIN_FILTER = 10241;
var _TEXTURE_MAG_FILTER = 10240;
var _TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
var _TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
var _TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
var _TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
var _TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
var _TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
var _TEXTURE_CUBE_MAP = 34067;
var _TEXTURE_BINDING_CUBE_MAP = 34068;
var _TEXTURE_BINDING_2D = 32873;
var _TEXTURE_2D = 3553;
var _TEXTURE9 = 33993;
var _TEXTURE8 = 33992;
var _TEXTURE7 = 33991;
var _TEXTURE6 = 33990;
var _TEXTURE5 = 33989;
var _TEXTURE4 = 33988;
var _TEXTURE31 = 34015;
var _TEXTURE30 = 34014;
var _TEXTURE3 = 33987;
var _TEXTURE29 = 34013;
var _TEXTURE28 = 34012;
var _TEXTURE27 = 34011;
var _TEXTURE26 = 34010;
var _TEXTURE25 = 34009;
var _TEXTURE24 = 34008;
var _TEXTURE23 = 34007;
var _TEXTURE22 = 34006;
var _TEXTURE21 = 34005;
var _TEXTURE20 = 34004;
var _TEXTURE2 = 33986;
var _TEXTURE19 = 34003;
var _TEXTURE18 = 34002;
var _TEXTURE17 = 34001;
var _TEXTURE16 = 34000;
var _TEXTURE15 = 33999;
var _TEXTURE14 = 33998;
var _TEXTURE13 = 33997;
var _TEXTURE12 = 33996;
var _TEXTURE11 = 33995;
var _TEXTURE10 = 33994;
var _TEXTURE1 = 33985;
var _TEXTURE0 = 33984;
var _TEXTURE = 5890;
var _SUBPIXEL_BITS = 3408;
var _STREAM_DRAW = 35040;
var _STENCIL_WRITEMASK = 2968;
var _STENCIL_VALUE_MASK = 2963;
var _STENCIL_TEST = 2960;
var _STENCIL_REF = 2967;
var _STENCIL_PASS_DEPTH_PASS = 2966;
var _STENCIL_PASS_DEPTH_FAIL = 2965;
var _STENCIL_INDEX8 = 36168;
var _STENCIL_INDEX = 6401;
var _STENCIL_FUNC = 2962;
var _STENCIL_FAIL = 2964;
var _STENCIL_CLEAR_VALUE = 2961;
var _STENCIL_BUFFER_BIT = 1024;
var _STENCIL_BITS = 3415;
var _STENCIL_BACK_WRITEMASK = 36005;
var _STENCIL_BACK_VALUE_MASK = 36004;
var _STENCIL_BACK_REF = 36003;
var _STENCIL_BACK_PASS_DEPTH_PASS = 34819;
var _STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
var _STENCIL_BACK_FUNC = 34816;
var _STENCIL_BACK_FAIL = 34817;
var _STENCIL_ATTACHMENT = 36128;
var _STATIC_DRAW = 35044;
var _SRC_COLOR = 768;
var _SRC_ALPHA_SATURATE = 776;
var _SRC_ALPHA = 770;
var _SHORT = 5122;
var _SHADING_LANGUAGE_VERSION = 35724;
var _SHADER_TYPE = 35663;
var _SHADER_SOURCE_LENGTH = 35720;
var _SCISSOR_TEST = 3089;
var _SCISSOR_BOX = 3088;
var _SAMPLE_COVERAGE_VALUE = 32938;
var _SAMPLE_COVERAGE_INVERT = 32939;
var _SAMPLE_COVERAGE = 32928;
var _SAMPLE_BUFFERS = 32936;
var _SAMPLE_ALPHA_TO_COVERAGE = 32926;
var _SAMPLES = 32937;
var _SAMPLER_CUBE = 35680;
var _SAMPLER_2D = 35678;
var _RGBA4 = 32854;
var _RGBA = 6408;
var _RGB5_A1 = 32855;
var _RGB565 = 36194;
var _RGB = 6407;
var _REPLACE = 7681;
var _REPEAT = 10497;
var _RENDERER = 7937;
var _RENDERBUFFER_WIDTH = 36162;
var _RENDERBUFFER_STENCIL_SIZE = 36181;
var _RENDERBUFFER_RED_SIZE = 36176;
var _RENDERBUFFER_INTERNAL_FORMAT = 36164;
var _RENDERBUFFER_HEIGHT = 36163;
var _RENDERBUFFER_GREEN_SIZE = 36177;
var _RENDERBUFFER_DEPTH_SIZE = 36180;
var _RENDERBUFFER_BLUE_SIZE = 36178;
var _RENDERBUFFER_BINDING = 36007;
var _RENDERBUFFER_ALPHA_SIZE = 36179;
var _RENDERBUFFER = 36161;
var _RED_BITS = 3410;
var _POLYGON_OFFSET_UNITS = 10752;
var _POLYGON_OFFSET_FILL = 32823;
var _POLYGON_OFFSET_FACTOR = 32824;
var _POINTS = 0;
var _PACK_ALIGNMENT = 3333;
var _OUT_OF_MEMORY = 1285;
var _ONE_MINUS_SRC_COLOR = 769;
var _ONE_MINUS_SRC_ALPHA = 771;
var _ONE_MINUS_DST_COLOR = 775;
var _ONE_MINUS_DST_ALPHA = 773;
var _ONE_MINUS_CONSTANT_COLOR = 32770;
var _ONE_MINUS_CONSTANT_ALPHA = 32772;
var _ONE = 1;
var _NUM_COMPRESSED_TEXTURE_FORMATS = 34466;
var _NO_ERROR = 0;
var _NOTEQUAL = 517;
var _NONE = 0;
var _NICEST = 4354;
var _NEVER = 512;
var _NEAREST_MIPMAP_NEAREST = 9984;
var _NEAREST_MIPMAP_LINEAR = 9986;
var _NEAREST = 9728;
var _MIRRORED_REPEAT = 33648;
var _MEDIUM_INT = 36340;
var _MEDIUM_FLOAT = 36337;
var _MAX_VIEWPORT_DIMS = 3386;
var _MAX_VERTEX_UNIFORM_VECTORS = 36347;
var _MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
var _MAX_VERTEX_ATTRIBS = 34921;
var _MAX_VARYING_VECTORS = 36348;
var _MAX_TEXTURE_SIZE = 3379;
var _MAX_TEXTURE_IMAGE_UNITS = 34930;
var _MAX_RENDERBUFFER_SIZE = 34024;
var _MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
var _MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
var _MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
var _LUMINANCE_ALPHA = 6410;
var _LUMINANCE = 6409;
var _LOW_INT = 36339;
var _LOW_FLOAT = 36336;
var _LINK_STATUS = 35714;
var _LINE_WIDTH = 2849;
var _LINE_STRIP = 3;
var _LINE_LOOP = 2;
var _LINES = 1;
var _LINEAR_MIPMAP_NEAREST = 9985;
var _LINEAR_MIPMAP_LINEAR = 9987;
var _LINEAR = 9729;
var _LESS = 513;
var _LEQUAL = 515;
var _KEEP = 7680;
var _INVERT = 5386;
var _INVALID_VALUE = 1281;
var _INVALID_OPERATION = 1282;
var _INVALID_FRAMEBUFFER_OPERATION = 1286;
var _INVALID_ENUM = 1280;
var _INT_VEC4 = 35669;
var _INT_VEC3 = 35668;
var _INT_VEC2 = 35667;
var _INT = 5124;
var _INFO_LOG_LENGTH = 35716;
var _INCR_WRAP = 34055;
var _INCR = 7682;
var _HIGH_INT = 36341;
var _HIGH_FLOAT = 36338;
var _GREEN_BITS = 3411;
var _GREATER = 516;
var _GEQUAL = 518;
var _GENERATE_MIPMAP_HINT = 33170;
var _FUNC_SUBTRACT = 32778;
var _FUNC_REVERSE_SUBTRACT = 32779;
var _FUNC_ADD = 32774;
var _FRONT_FACE = 2886;
var _FRONT_AND_BACK = 1032;
var _FRONT = 1028;
var _FRAMEBUFFER_UNSUPPORTED = 36061;
var _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
var _FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
var _FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
var _FRAMEBUFFER_COMPLETE = 36053;
var _FRAMEBUFFER_BINDING = 36006;
var _FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
var _FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
var _FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
var _FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
var _FRAMEBUFFER = 36160;
var _FRAGMENT_SHADER = 35632;
var _FLOAT_VEC4 = 35666;
var _FLOAT_VEC3 = 35665;
var _FLOAT_VEC2 = 35664;
var _FLOAT_MAT4 = 35676;
var _FLOAT_MAT3 = 35675;
var _FLOAT_MAT2 = 35674;
var _FLOAT = 5126;
var _FASTEST = 4353;
var _EQUAL = 514;
var _ELEMENT_ARRAY_BUFFER_BINDING = 34965;
var _ELEMENT_ARRAY_BUFFER = 34963;
var _DYNAMIC_DRAW = 35048;
var _DST_COLOR = 774;
var _DST_ALPHA = 772;
var _DONT_CARE = 4352;
var _DITHER = 3024;
var _DEPTH_WRITEMASK = 2930;
var _DEPTH_TEST = 2929;
var _DEPTH_STENCIL_ATTACHMENT = 33306;
var _DEPTH_STENCIL = 34041;
var _DEPTH_RANGE = 2928;
var _DEPTH_FUNC = 2932;
var _DEPTH_COMPONENT16 = 33189;
var _DEPTH_COMPONENT = 6402;
var _DEPTH_CLEAR_VALUE = 2931;
var _DEPTH_BUFFER_BIT = 256;
var _DEPTH_BITS = 3414;
var _DEPTH_ATTACHMENT = 36096;
var _DELETE_STATUS = 35712;
var _DECR_WRAP = 34056;
var _DECR = 7683;
var _CW = 2304;
var _CURRENT_VERTEX_ATTRIB = 34342;
var _CURRENT_PROGRAM = 35725;
var _CULL_FACE_MODE = 2885;
var _CULL_FACE = 2884;
var _CONTEXT_LOST_WEBGL = 37442;
var _CONSTANT_COLOR = 32769;
var _CONSTANT_ALPHA = 32771;
var _COMPRESSED_TEXTURE_FORMATS = 34467;
var _COMPILE_STATUS = 35713;
var _COLOR_WRITEMASK = 3107;
var _COLOR_CLEAR_VALUE = 3106;
var _COLOR_BUFFER_BIT = 16384;
var _COLOR_ATTACHMENT0 = 36064;
var _CLAMP_TO_EDGE = 33071;
var _CCW = 2305;
var _BYTE = 5120;
var _BUFFER_USAGE = 34661;
var _BUFFER_SIZE = 34660;
var _BROWSER_DEFAULT_WEBGL = 37444;
var _BOOL_VEC4 = 35673;
var _BOOL_VEC3 = 35672;
var _BOOL_VEC2 = 35671;
var _BOOL = 35670;
var _BLUE_BITS = 3412;
var _BLEND_SRC_RGB = 32969;
var _BLEND_SRC_ALPHA = 32971;
var _BLEND_EQUATION_RGB = 32777;
var _BLEND_EQUATION_ALPHA = 34877;
var _BLEND_EQUATION = 32777;
var _BLEND_DST_RGB = 32968;
var _BLEND_DST_ALPHA = 32970;
var _BLEND_COLOR = 32773;
var _BLEND = 3042;
var _BACK = 1029;
var _ATTACHED_SHADERS = 35717;
var _ARRAY_BUFFER_BINDING = 34964;
var _ARRAY_BUFFER = 34962;
var _ALWAYS = 519;
var _ALPHA_BITS = 3413;
var _ALPHA = 6406;
var _ALIASED_POINT_SIZE_RANGE = 33901;
var _ALIASED_LINE_WIDTH_RANGE = 33902;
var _ACTIVE_UNIFORM_MAX_LENGTH = 35719;
var _ACTIVE_UNIFORMS = 35718;
var _ACTIVE_TEXTURE = 34016;
var _ACTIVE_ATTRIBUTE_MAX_LENGTH = 35722;
var _ACTIVE_ATTRIBUTES = 35721;
module.exports = {
    _DEPTH_BUFFER_BIT: _DEPTH_BUFFER_BIT,
    _STENCIL_BUFFER_BIT: _STENCIL_BUFFER_BIT,
    _COLOR_BUFFER_BIT: _COLOR_BUFFER_BIT,
    _POINTS: _POINTS,
    _LINES: _LINES,
    _LINE_LOOP: _LINE_LOOP,
    _LINE_STRIP: _LINE_STRIP,
    _TRIANGLES: _TRIANGLES,
    _TRIANGLE_STRIP: _TRIANGLE_STRIP,
    _TRIANGLE_FAN: _TRIANGLE_FAN,
    _ZERO: _ZERO,
    _ONE: _ONE,
    _SRC_COLOR: _SRC_COLOR,
    _ONE_MINUS_SRC_COLOR: _ONE_MINUS_SRC_COLOR,
    _SRC_ALPHA: _SRC_ALPHA,
    _ONE_MINUS_SRC_ALPHA: _ONE_MINUS_SRC_ALPHA,
    _DST_ALPHA: _DST_ALPHA,
    _ONE_MINUS_DST_ALPHA: _ONE_MINUS_DST_ALPHA,
    _DST_COLOR: _DST_COLOR,
    _ONE_MINUS_DST_COLOR: _ONE_MINUS_DST_COLOR,
    _SRC_ALPHA_SATURATE: _SRC_ALPHA_SATURATE,
    _FUNC_ADD: _FUNC_ADD,
    _BLEND_EQUATION: _BLEND_EQUATION,
    _BLEND_EQUATION_RGB: _BLEND_EQUATION_RGB,
    _BLEND_EQUATION_ALPHA: _BLEND_EQUATION_ALPHA,
    _FUNC_SUBTRACT: _FUNC_SUBTRACT,
    _FUNC_REVERSE_SUBTRACT: _FUNC_REVERSE_SUBTRACT,
    _BLEND_DST_RGB: _BLEND_DST_RGB,
    _BLEND_SRC_RGB: _BLEND_SRC_RGB,
    _BLEND_DST_ALPHA: _BLEND_DST_ALPHA,
    _BLEND_SRC_ALPHA: _BLEND_SRC_ALPHA,
    _CONSTANT_COLOR: _CONSTANT_COLOR,
    _ONE_MINUS_CONSTANT_COLOR: _ONE_MINUS_CONSTANT_COLOR,
    _CONSTANT_ALPHA: _CONSTANT_ALPHA,
    _ONE_MINUS_CONSTANT_ALPHA: _ONE_MINUS_CONSTANT_ALPHA,
    _BLEND_COLOR: _BLEND_COLOR,
    _ARRAY_BUFFER: _ARRAY_BUFFER,
    _ELEMENT_ARRAY_BUFFER: _ELEMENT_ARRAY_BUFFER,
    _ARRAY_BUFFER_BINDING: _ARRAY_BUFFER_BINDING,
    _ELEMENT_ARRAY_BUFFER_BINDING: _ELEMENT_ARRAY_BUFFER_BINDING,
    _STREAM_DRAW: _STREAM_DRAW,
    _STATIC_DRAW: _STATIC_DRAW,
    _DYNAMIC_DRAW: _DYNAMIC_DRAW,
    _BUFFER_SIZE: _BUFFER_SIZE,
    _BUFFER_USAGE: _BUFFER_USAGE,
    _CURRENT_VERTEX_ATTRIB: _CURRENT_VERTEX_ATTRIB,
    _FRONT: _FRONT,
    _BACK: _BACK,
    _FRONT_AND_BACK: _FRONT_AND_BACK,
    _TEXTURE_2D: _TEXTURE_2D,
    _CULL_FACE: _CULL_FACE,
    _BLEND: _BLEND,
    _DITHER: _DITHER,
    _STENCIL_TEST: _STENCIL_TEST,
    _DEPTH_TEST: _DEPTH_TEST,
    _SCISSOR_TEST: _SCISSOR_TEST,
    _POLYGON_OFFSET_FILL: _POLYGON_OFFSET_FILL,
    _SAMPLE_ALPHA_TO_COVERAGE: _SAMPLE_ALPHA_TO_COVERAGE,
    _SAMPLE_COVERAGE: _SAMPLE_COVERAGE,
    _NO_ERROR: _NO_ERROR,
    _INVALID_ENUM: _INVALID_ENUM,
    _INVALID_VALUE: _INVALID_VALUE,
    _INVALID_OPERATION: _INVALID_OPERATION,
    _OUT_OF_MEMORY: _OUT_OF_MEMORY,
    _CW: _CW,
    _CCW: _CCW,
    _LINE_WIDTH: _LINE_WIDTH,
    _ALIASED_POINT_SIZE_RANGE: _ALIASED_POINT_SIZE_RANGE,
    _ALIASED_LINE_WIDTH_RANGE: _ALIASED_LINE_WIDTH_RANGE,
    _CULL_FACE_MODE: _CULL_FACE_MODE,
    _FRONT_FACE: _FRONT_FACE,
    _DEPTH_RANGE: _DEPTH_RANGE,
    _DEPTH_WRITEMASK: _DEPTH_WRITEMASK,
    _DEPTH_CLEAR_VALUE: _DEPTH_CLEAR_VALUE,
    _DEPTH_FUNC: _DEPTH_FUNC,
    _STENCIL_CLEAR_VALUE: _STENCIL_CLEAR_VALUE,
    _STENCIL_FUNC: _STENCIL_FUNC,
    _STENCIL_FAIL: _STENCIL_FAIL,
    _STENCIL_PASS_DEPTH_FAIL: _STENCIL_PASS_DEPTH_FAIL,
    _STENCIL_PASS_DEPTH_PASS: _STENCIL_PASS_DEPTH_PASS,
    _STENCIL_REF: _STENCIL_REF,
    _STENCIL_VALUE_MASK: _STENCIL_VALUE_MASK,
    _STENCIL_WRITEMASK: _STENCIL_WRITEMASK,
    _STENCIL_BACK_FUNC: _STENCIL_BACK_FUNC,
    _STENCIL_BACK_FAIL: _STENCIL_BACK_FAIL,
    _STENCIL_BACK_PASS_DEPTH_FAIL: _STENCIL_BACK_PASS_DEPTH_FAIL,
    _STENCIL_BACK_PASS_DEPTH_PASS: _STENCIL_BACK_PASS_DEPTH_PASS,
    _STENCIL_BACK_REF: _STENCIL_BACK_REF,
    _STENCIL_BACK_VALUE_MASK: _STENCIL_BACK_VALUE_MASK,
    _STENCIL_BACK_WRITEMASK: _STENCIL_BACK_WRITEMASK,
    _VIEWPORT: _VIEWPORT,
    _SCISSOR_BOX: _SCISSOR_BOX,
    _COLOR_CLEAR_VALUE: _COLOR_CLEAR_VALUE,
    _COLOR_WRITEMASK: _COLOR_WRITEMASK,
    _UNPACK_ALIGNMENT: _UNPACK_ALIGNMENT,
    _PACK_ALIGNMENT: _PACK_ALIGNMENT,
    _MAX_TEXTURE_SIZE: _MAX_TEXTURE_SIZE,
    _MAX_VIEWPORT_DIMS: _MAX_VIEWPORT_DIMS,
    _SUBPIXEL_BITS: _SUBPIXEL_BITS,
    _RED_BITS: _RED_BITS,
    _GREEN_BITS: _GREEN_BITS,
    _BLUE_BITS: _BLUE_BITS,
    _ALPHA_BITS: _ALPHA_BITS,
    _DEPTH_BITS: _DEPTH_BITS,
    _STENCIL_BITS: _STENCIL_BITS,
    _POLYGON_OFFSET_UNITS: _POLYGON_OFFSET_UNITS,
    _POLYGON_OFFSET_FACTOR: _POLYGON_OFFSET_FACTOR,
    _TEXTURE_BINDING_2D: _TEXTURE_BINDING_2D,
    _SAMPLE_BUFFERS: _SAMPLE_BUFFERS,
    _SAMPLES: _SAMPLES,
    _SAMPLE_COVERAGE_VALUE: _SAMPLE_COVERAGE_VALUE,
    _SAMPLE_COVERAGE_INVERT: _SAMPLE_COVERAGE_INVERT,
    _NUM_COMPRESSED_TEXTURE_FORMATS: _NUM_COMPRESSED_TEXTURE_FORMATS,
    _COMPRESSED_TEXTURE_FORMATS: _COMPRESSED_TEXTURE_FORMATS,
    _DONT_CARE: _DONT_CARE,
    _FASTEST: _FASTEST,
    _NICEST: _NICEST,
    _GENERATE_MIPMAP_HINT: _GENERATE_MIPMAP_HINT,
    _BYTE: _BYTE,
    _UNSIGNED_BYTE: _UNSIGNED_BYTE,
    _SHORT: _SHORT,
    _UNSIGNED_SHORT: _UNSIGNED_SHORT,
    _INT: _INT,
    _UNSIGNED_INT: _UNSIGNED_INT,
    _FLOAT: _FLOAT,
    _DEPTH_COMPONENT: _DEPTH_COMPONENT,
    _ALPHA: _ALPHA,
    _RGB: _RGB,
    _RGBA: _RGBA,
    _LUMINANCE: _LUMINANCE,
    _LUMINANCE_ALPHA: _LUMINANCE_ALPHA,
    _UNSIGNED_SHORT_4_4_4_4: _UNSIGNED_SHORT_4_4_4_4,
    _UNSIGNED_SHORT_5_5_5_1: _UNSIGNED_SHORT_5_5_5_1,
    _UNSIGNED_SHORT_5_6_5: _UNSIGNED_SHORT_5_6_5,
    _FRAGMENT_SHADER: _FRAGMENT_SHADER,
    _VERTEX_SHADER: _VERTEX_SHADER,
    _MAX_VERTEX_ATTRIBS: _MAX_VERTEX_ATTRIBS,
    _MAX_VERTEX_UNIFORM_VECTORS: _MAX_VERTEX_UNIFORM_VECTORS,
    _MAX_VARYING_VECTORS: _MAX_VARYING_VECTORS,
    _MAX_COMBINED_TEXTURE_IMAGE_UNITS: _MAX_COMBINED_TEXTURE_IMAGE_UNITS,
    _MAX_VERTEX_TEXTURE_IMAGE_UNITS: _MAX_VERTEX_TEXTURE_IMAGE_UNITS,
    _MAX_TEXTURE_IMAGE_UNITS: _MAX_TEXTURE_IMAGE_UNITS,
    _MAX_FRAGMENT_UNIFORM_VECTORS: _MAX_FRAGMENT_UNIFORM_VECTORS,
    _SHADER_TYPE: _SHADER_TYPE,
    _DELETE_STATUS: _DELETE_STATUS,
    _LINK_STATUS: _LINK_STATUS,
    _VALIDATE_STATUS: _VALIDATE_STATUS,
    _ATTACHED_SHADERS: _ATTACHED_SHADERS,
    _ACTIVE_UNIFORMS: _ACTIVE_UNIFORMS,
    _ACTIVE_UNIFORM_MAX_LENGTH: _ACTIVE_UNIFORM_MAX_LENGTH,
    _ACTIVE_ATTRIBUTES: _ACTIVE_ATTRIBUTES,
    _ACTIVE_ATTRIBUTE_MAX_LENGTH: _ACTIVE_ATTRIBUTE_MAX_LENGTH,
    _SHADING_LANGUAGE_VERSION: _SHADING_LANGUAGE_VERSION,
    _CURRENT_PROGRAM: _CURRENT_PROGRAM,
    _NEVER: _NEVER,
    _LESS: _LESS,
    _EQUAL: _EQUAL,
    _LEQUAL: _LEQUAL,
    _GREATER: _GREATER,
    _NOTEQUAL: _NOTEQUAL,
    _GEQUAL: _GEQUAL,
    _ALWAYS: _ALWAYS,
    _KEEP: _KEEP,
    _REPLACE: _REPLACE,
    _INCR: _INCR,
    _DECR: _DECR,
    _INVERT: _INVERT,
    _INCR_WRAP: _INCR_WRAP,
    _DECR_WRAP: _DECR_WRAP,
    _VENDOR: _VENDOR,
    _RENDERER: _RENDERER,
    _VERSION: _VERSION,
    _NEAREST: _NEAREST,
    _LINEAR: _LINEAR,
    _NEAREST_MIPMAP_NEAREST: _NEAREST_MIPMAP_NEAREST,
    _LINEAR_MIPMAP_NEAREST: _LINEAR_MIPMAP_NEAREST,
    _NEAREST_MIPMAP_LINEAR: _NEAREST_MIPMAP_LINEAR,
    _LINEAR_MIPMAP_LINEAR: _LINEAR_MIPMAP_LINEAR,
    _TEXTURE_MAG_FILTER: _TEXTURE_MAG_FILTER,
    _TEXTURE_MIN_FILTER: _TEXTURE_MIN_FILTER,
    _TEXTURE_WRAP_S: _TEXTURE_WRAP_S,
    _TEXTURE_WRAP_T: _TEXTURE_WRAP_T,
    _TEXTURE: _TEXTURE,
    _TEXTURE_CUBE_MAP: _TEXTURE_CUBE_MAP,
    _TEXTURE_BINDING_CUBE_MAP: _TEXTURE_BINDING_CUBE_MAP,
    _TEXTURE_CUBE_MAP_POSITIVE_X: _TEXTURE_CUBE_MAP_POSITIVE_X,
    _TEXTURE_CUBE_MAP_NEGATIVE_X: _TEXTURE_CUBE_MAP_NEGATIVE_X,
    _TEXTURE_CUBE_MAP_POSITIVE_Y: _TEXTURE_CUBE_MAP_POSITIVE_Y,
    _TEXTURE_CUBE_MAP_NEGATIVE_Y: _TEXTURE_CUBE_MAP_NEGATIVE_Y,
    _TEXTURE_CUBE_MAP_POSITIVE_Z: _TEXTURE_CUBE_MAP_POSITIVE_Z,
    _TEXTURE_CUBE_MAP_NEGATIVE_Z: _TEXTURE_CUBE_MAP_NEGATIVE_Z,
    _MAX_CUBE_MAP_TEXTURE_SIZE: _MAX_CUBE_MAP_TEXTURE_SIZE,
    _TEXTURE0: _TEXTURE0,
    _TEXTURE1: _TEXTURE1,
    _TEXTURE2: _TEXTURE2,
    _TEXTURE3: _TEXTURE3,
    _TEXTURE4: _TEXTURE4,
    _TEXTURE5: _TEXTURE5,
    _TEXTURE6: _TEXTURE6,
    _TEXTURE7: _TEXTURE7,
    _TEXTURE8: _TEXTURE8,
    _TEXTURE9: _TEXTURE9,
    _TEXTURE10: _TEXTURE10,
    _TEXTURE11: _TEXTURE11,
    _TEXTURE12: _TEXTURE12,
    _TEXTURE13: _TEXTURE13,
    _TEXTURE14: _TEXTURE14,
    _TEXTURE15: _TEXTURE15,
    _TEXTURE16: _TEXTURE16,
    _TEXTURE17: _TEXTURE17,
    _TEXTURE18: _TEXTURE18,
    _TEXTURE19: _TEXTURE19,
    _TEXTURE20: _TEXTURE20,
    _TEXTURE21: _TEXTURE21,
    _TEXTURE22: _TEXTURE22,
    _TEXTURE23: _TEXTURE23,
    _TEXTURE24: _TEXTURE24,
    _TEXTURE25: _TEXTURE25,
    _TEXTURE26: _TEXTURE26,
    _TEXTURE27: _TEXTURE27,
    _TEXTURE28: _TEXTURE28,
    _TEXTURE29: _TEXTURE29,
    _TEXTURE30: _TEXTURE30,
    _TEXTURE31: _TEXTURE31,
    _ACTIVE_TEXTURE: _ACTIVE_TEXTURE,
    _REPEAT: _REPEAT,
    _CLAMP_TO_EDGE: _CLAMP_TO_EDGE,
    _MIRRORED_REPEAT: _MIRRORED_REPEAT,
    _FLOAT_VEC2: _FLOAT_VEC2,
    _FLOAT_VEC3: _FLOAT_VEC3,
    _FLOAT_VEC4: _FLOAT_VEC4,
    _INT_VEC2: _INT_VEC2,
    _INT_VEC3: _INT_VEC3,
    _INT_VEC4: _INT_VEC4,
    _BOOL: _BOOL,
    _BOOL_VEC2: _BOOL_VEC2,
    _BOOL_VEC3: _BOOL_VEC3,
    _BOOL_VEC4: _BOOL_VEC4,
    _FLOAT_MAT2: _FLOAT_MAT2,
    _FLOAT_MAT3: _FLOAT_MAT3,
    _FLOAT_MAT4: _FLOAT_MAT4,
    _SAMPLER_2D: _SAMPLER_2D,
    _SAMPLER_CUBE: _SAMPLER_CUBE,
    _VERTEX_ATTRIB_ARRAY_ENABLED: _VERTEX_ATTRIB_ARRAY_ENABLED,
    _VERTEX_ATTRIB_ARRAY_SIZE: _VERTEX_ATTRIB_ARRAY_SIZE,
    _VERTEX_ATTRIB_ARRAY_STRIDE: _VERTEX_ATTRIB_ARRAY_STRIDE,
    _VERTEX_ATTRIB_ARRAY_TYPE: _VERTEX_ATTRIB_ARRAY_TYPE,
    _VERTEX_ATTRIB_ARRAY_NORMALIZED: _VERTEX_ATTRIB_ARRAY_NORMALIZED,
    _VERTEX_ATTRIB_ARRAY_POINTER: _VERTEX_ATTRIB_ARRAY_POINTER,
    _VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: _VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,
    _COMPILE_STATUS: _COMPILE_STATUS,
    _INFO_LOG_LENGTH: _INFO_LOG_LENGTH,
    _SHADER_SOURCE_LENGTH: _SHADER_SOURCE_LENGTH,
    _LOW_FLOAT: _LOW_FLOAT,
    _MEDIUM_FLOAT: _MEDIUM_FLOAT,
    _HIGH_FLOAT: _HIGH_FLOAT,
    _LOW_INT: _LOW_INT,
    _MEDIUM_INT: _MEDIUM_INT,
    _HIGH_INT: _HIGH_INT,
    _FRAMEBUFFER: _FRAMEBUFFER,
    _RENDERBUFFER: _RENDERBUFFER,
    _RGBA4: _RGBA4,
    _RGB5_A1: _RGB5_A1,
    _RGB565: _RGB565,
    _DEPTH_COMPONENT16: _DEPTH_COMPONENT16,
    _STENCIL_INDEX: _STENCIL_INDEX,
    _STENCIL_INDEX8: _STENCIL_INDEX8,
    _DEPTH_STENCIL: _DEPTH_STENCIL,
    _RENDERBUFFER_WIDTH: _RENDERBUFFER_WIDTH,
    _RENDERBUFFER_HEIGHT: _RENDERBUFFER_HEIGHT,
    _RENDERBUFFER_INTERNAL_FORMAT: _RENDERBUFFER_INTERNAL_FORMAT,
    _RENDERBUFFER_RED_SIZE: _RENDERBUFFER_RED_SIZE,
    _RENDERBUFFER_GREEN_SIZE: _RENDERBUFFER_GREEN_SIZE,
    _RENDERBUFFER_BLUE_SIZE: _RENDERBUFFER_BLUE_SIZE,
    _RENDERBUFFER_ALPHA_SIZE: _RENDERBUFFER_ALPHA_SIZE,
    _RENDERBUFFER_DEPTH_SIZE: _RENDERBUFFER_DEPTH_SIZE,
    _RENDERBUFFER_STENCIL_SIZE: _RENDERBUFFER_STENCIL_SIZE,
    _FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: _FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,
    _FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: _FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,
    _FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: _FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,
    _FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: _FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,
    _COLOR_ATTACHMENT0: _COLOR_ATTACHMENT0,
    _DEPTH_ATTACHMENT: _DEPTH_ATTACHMENT,
    _STENCIL_ATTACHMENT: _STENCIL_ATTACHMENT,
    _DEPTH_STENCIL_ATTACHMENT: _DEPTH_STENCIL_ATTACHMENT,
    _NONE: _NONE,
    _FRAMEBUFFER_COMPLETE: _FRAMEBUFFER_COMPLETE,
    _FRAMEBUFFER_INCOMPLETE_ATTACHMENT: _FRAMEBUFFER_INCOMPLETE_ATTACHMENT,
    _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: _FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,
    _FRAMEBUFFER_INCOMPLETE_DIMENSIONS: _FRAMEBUFFER_INCOMPLETE_DIMENSIONS,
    _FRAMEBUFFER_UNSUPPORTED: _FRAMEBUFFER_UNSUPPORTED,
    _FRAMEBUFFER_BINDING: _FRAMEBUFFER_BINDING,
    _RENDERBUFFER_BINDING: _RENDERBUFFER_BINDING,
    _MAX_RENDERBUFFER_SIZE: _MAX_RENDERBUFFER_SIZE,
    _INVALID_FRAMEBUFFER_OPERATION: _INVALID_FRAMEBUFFER_OPERATION,
    _UNPACK_FLIP_Y_WEBGL: _UNPACK_FLIP_Y_WEBGL,
    _UNPACK_PREMULTIPLY_ALPHA_WEBGL: _UNPACK_PREMULTIPLY_ALPHA_WEBGL,
    _CONTEXT_LOST_WEBGL: _CONTEXT_LOST_WEBGL,
    _UNPACK_COLORSPACE_CONVERSION_WEBGL: _UNPACK_COLORSPACE_CONVERSION_WEBGL,
    _BROWSER_DEFAULT_WEBGL: _BROWSER_DEFAULT_WEBGL,
    getContextAttributes_: $foreign.getContextAttributes_,
    isContextLost_: $foreign.isContextLost_,
    getSupportedExtensions_: $foreign.getSupportedExtensions_,
    getExtension_: $foreign.getExtension_,
    activeTexture_: $foreign.activeTexture_,
    attachShader_: $foreign.attachShader_,
    bindAttribLocation_: $foreign.bindAttribLocation_,
    bindBuffer_: $foreign.bindBuffer_,
    bindFramebuffer_: $foreign.bindFramebuffer_,
    bindRenderbuffer_: $foreign.bindRenderbuffer_,
    bindTexture_: $foreign.bindTexture_,
    blendColor_: $foreign.blendColor_,
    blendEquation_: $foreign.blendEquation_,
    blendEquationSeparate_: $foreign.blendEquationSeparate_,
    blendFunc_: $foreign.blendFunc_,
    blendFuncSeparate_: $foreign.blendFuncSeparate_,
    bufferData_: $foreign.bufferData_,
    bufferSubData_: $foreign.bufferSubData_,
    checkFramebufferStatus_: $foreign.checkFramebufferStatus_,
    clear_: $foreign.clear_,
    clearColor_: $foreign.clearColor_,
    clearDepth_: $foreign.clearDepth_,
    clearStencil_: $foreign.clearStencil_,
    colorMask_: $foreign.colorMask_,
    compileShader_: $foreign.compileShader_,
    copyTexImage2D_: $foreign.copyTexImage2D_,
    copyTexSubImage2D_: $foreign.copyTexSubImage2D_,
    createBuffer_: $foreign.createBuffer_,
    createFramebuffer_: $foreign.createFramebuffer_,
    createProgram_: $foreign.createProgram_,
    createRenderbuffer_: $foreign.createRenderbuffer_,
    createShader_: $foreign.createShader_,
    createTexture_: $foreign.createTexture_,
    cullFace_: $foreign.cullFace_,
    deleteBuffer_: $foreign.deleteBuffer_,
    deleteFramebuffer_: $foreign.deleteFramebuffer_,
    deleteProgram_: $foreign.deleteProgram_,
    deleteRenderbuffer_: $foreign.deleteRenderbuffer_,
    deleteShader_: $foreign.deleteShader_,
    deleteTexture_: $foreign.deleteTexture_,
    depthFunc_: $foreign.depthFunc_,
    depthMask_: $foreign.depthMask_,
    depthRange_: $foreign.depthRange_,
    detachShader_: $foreign.detachShader_,
    disable_: $foreign.disable_,
    disableVertexAttribArray_: $foreign.disableVertexAttribArray_,
    drawArrays_: $foreign.drawArrays_,
    drawElements_: $foreign.drawElements_,
    enable_: $foreign.enable_,
    enableVertexAttribArray_: $foreign.enableVertexAttribArray_,
    finish_: $foreign.finish_,
    flush_: $foreign.flush_,
    framebufferRenderbuffer_: $foreign.framebufferRenderbuffer_,
    framebufferTexture2D_: $foreign.framebufferTexture2D_,
    frontFace_: $foreign.frontFace_,
    generateMipmap_: $foreign.generateMipmap_,
    getActiveAttrib_: $foreign.getActiveAttrib_,
    getActiveUniform_: $foreign.getActiveUniform_,
    getAttachedShaders_: $foreign.getAttachedShaders_,
    getAttribLocation_: $foreign.getAttribLocation_,
    getParameter_: $foreign.getParameter_,
    getBufferParameter_: $foreign.getBufferParameter_,
    getError_: $foreign.getError_,
    getFramebufferAttachmentParameter_: $foreign.getFramebufferAttachmentParameter_,
    getProgramParameter_: $foreign.getProgramParameter_,
    getProgramInfoLog_: $foreign.getProgramInfoLog_,
    getRenderbufferParameter_: $foreign.getRenderbufferParameter_,
    getShaderParameter_: $foreign.getShaderParameter_,
    getShaderInfoLog_: $foreign.getShaderInfoLog_,
    getShaderSource_: $foreign.getShaderSource_,
    getTexParameter_: $foreign.getTexParameter_,
    getUniform_: $foreign.getUniform_,
    getUniformLocation_: $foreign.getUniformLocation_,
    getVertexAttrib_: $foreign.getVertexAttrib_,
    getVertexAttribOffset_: $foreign.getVertexAttribOffset_,
    hint_: $foreign.hint_,
    isBuffer_: $foreign.isBuffer_,
    isEnabled_: $foreign.isEnabled_,
    isFramebuffer_: $foreign.isFramebuffer_,
    isProgram_: $foreign.isProgram_,
    isRenderbuffer_: $foreign.isRenderbuffer_,
    isShader_: $foreign.isShader_,
    isTexture_: $foreign.isTexture_,
    lineWidth_: $foreign.lineWidth_,
    linkProgram_: $foreign.linkProgram_,
    pixelStorei_: $foreign.pixelStorei_,
    polygonOffset_: $foreign.polygonOffset_,
    readPixels_: $foreign.readPixels_,
    renderbufferStorage_: $foreign.renderbufferStorage_,
    sampleCoverage_: $foreign.sampleCoverage_,
    scissor_: $foreign.scissor_,
    shaderSource_: $foreign.shaderSource_,
    stencilFunc_: $foreign.stencilFunc_,
    stencilFuncSeparate_: $foreign.stencilFuncSeparate_,
    stencilMask_: $foreign.stencilMask_,
    stencilMaskSeparate_: $foreign.stencilMaskSeparate_,
    stencilOp_: $foreign.stencilOp_,
    stencilOpSeparate_: $foreign.stencilOpSeparate_,
    texImage2D_: $foreign.texImage2D_,
    texParameterf_: $foreign.texParameterf_,
    texParameteri_: $foreign.texParameteri_,
    texSubImage2D_: $foreign.texSubImage2D_,
    uniform1f_: $foreign.uniform1f_,
    uniform1fv_: $foreign.uniform1fv_,
    uniform1i_: $foreign.uniform1i_,
    uniform1iv_: $foreign.uniform1iv_,
    uniform2f_: $foreign.uniform2f_,
    uniform2fv_: $foreign.uniform2fv_,
    uniform2i_: $foreign.uniform2i_,
    uniform2iv_: $foreign.uniform2iv_,
    uniform3f_: $foreign.uniform3f_,
    uniform3fv_: $foreign.uniform3fv_,
    uniform3i_: $foreign.uniform3i_,
    uniform3iv_: $foreign.uniform3iv_,
    uniform4f_: $foreign.uniform4f_,
    uniform4fv_: $foreign.uniform4fv_,
    uniform4i_: $foreign.uniform4i_,
    uniform4iv_: $foreign.uniform4iv_,
    uniformMatrix2fv_: $foreign.uniformMatrix2fv_,
    uniformMatrix3fv_: $foreign.uniformMatrix3fv_,
    uniformMatrix4fv_: $foreign.uniformMatrix4fv_,
    useProgram_: $foreign.useProgram_,
    validateProgram_: $foreign.validateProgram_,
    vertexAttrib1f_: $foreign.vertexAttrib1f_,
    vertexAttrib1fv_: $foreign.vertexAttrib1fv_,
    vertexAttrib2f_: $foreign.vertexAttrib2f_,
    vertexAttrib2fv_: $foreign.vertexAttrib2fv_,
    vertexAttrib3f_: $foreign.vertexAttrib3f_,
    vertexAttrib3fv_: $foreign.vertexAttrib3fv_,
    vertexAttrib4f_: $foreign.vertexAttrib4f_,
    vertexAttrib4fv_: $foreign.vertexAttrib4fv_,
    vertexAttribPointer_: $foreign.vertexAttribPointer_,
    viewport_: $foreign.viewport_
};

},{"../Control.Monad.Eff":40,"../Control.Monad.Eff.WebGL":38,"../Data.ArrayBuffer.Types":81,"../Prelude":263,"./foreign":237}],239:[function(require,module,exports){
/* global exports */

// module Graphics.WebGLTexture


    "use strict";

    exports.asArrayBufferView_ = function (it) {
        return (it);
    };

    exports.loadImage_ = function(name) {
        return function(continuation) {
            return function()
                {var i = new Image();
                 i.src = name;
                 i.onload = continuation (i);
                  };
              };
          };

    exports.texImage2D__ = function (target)
    {return function(level)
     {return function(internalformat)
         {return function(format)
          {return function(type)
           {return function(pixels)
            {return function()
             {gl.texImage2D(target,level,internalformat,format,type,pixels);}
            ;}
          ;}
        ;}
      ;}
    ;}
   ;};

    exports.texImage2DNull_ = function (target)
    {return function(level)
     {return function(internalformat)
      {return function(width)
       {return function(height)
        {return function(border)
         {return function(format)
          {return function(type)
            {return function()
             {gl.texImage2D(target,level,internalformat,width,height,border,format,type,null);}
             ;}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;}
    ;

    exports.bindTexture__ = function(target)
        {return function()
         {gl.bindTexture(target,null);};};

    exports.texSubImage2D__ = function (target)
    {return function(level)
     {return function(xoffset)
      {return function(yoffset)
       {return function(format)
          {return function(type)
           {return function(pixels)
            {return function()
             {gl.texSubImage2D(target,level,xoffset,yoffset,format,type,pixels);}
             ;}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;

},{}],240:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_WebGL = require("../Control.Monad.Eff.WebGL");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Ord = require("../Data.Ord");
var Data_Semiring = require("../Data.Semiring");
var Data_TypedArray = require("../Data.TypedArray");
var Data_Unit = require("../Data.Unit");
var Extensions = require("../Extensions");
var Graphics_Canvas = require("../Graphics.Canvas");
var Graphics_WebGL = require("../Graphics.WebGL");
var Graphics_WebGLRaw = require("../Graphics.WebGLRaw");
var Prelude = require("../Prelude");
var WebGLTex = function (x) {
    return x;
};
var UNSIGNED_BYTE = (function () {
    function UNSIGNED_BYTE() {

    };
    UNSIGNED_BYTE.value = new UNSIGNED_BYTE();
    return UNSIGNED_BYTE;
})();
var RGBA = (function () {
    function RGBA() {

    };
    RGBA.value = new RGBA();
    return RGBA;
})();
var FLOAT = (function () {
    function FLOAT() {

    };
    FLOAT.value = new FLOAT();
    return FLOAT;
})();
var UNSIGNED_SHORT_5_6_5 = (function () {
    function UNSIGNED_SHORT_5_6_5() {

    };
    UNSIGNED_SHORT_5_6_5.value = new UNSIGNED_SHORT_5_6_5();
    return UNSIGNED_SHORT_5_6_5;
})();
var UNSIGNED_SHORT_4_4_4_4 = (function () {
    function UNSIGNED_SHORT_4_4_4_4() {

    };
    UNSIGNED_SHORT_4_4_4_4.value = new UNSIGNED_SHORT_4_4_4_4();
    return UNSIGNED_SHORT_4_4_4_4;
})();
var UNSIGNED_SHORT_5_5_5_1 = (function () {
    function UNSIGNED_SHORT_5_5_5_1() {

    };
    UNSIGNED_SHORT_5_5_5_1.value = new UNSIGNED_SHORT_5_5_5_1();
    return UNSIGNED_SHORT_5_5_5_1;
})();
var TTEXTURE_2D = (function () {
    function TTEXTURE_2D() {

    };
    TTEXTURE_2D.value = new TTEXTURE_2D();
    return TTEXTURE_2D;
})();
var TTEXTURE_CUBE_MAP = (function () {
    function TTEXTURE_CUBE_MAP() {

    };
    TTEXTURE_CUBE_MAP.value = new TTEXTURE_CUBE_MAP();
    return TTEXTURE_CUBE_MAP;
})();
var TEXTURE_MIN_FILTER = (function () {
    function TEXTURE_MIN_FILTER() {

    };
    TEXTURE_MIN_FILTER.value = new TEXTURE_MIN_FILTER();
    return TEXTURE_MIN_FILTER;
})();
var TEXTURE_MAG_FILTER = (function () {
    function TEXTURE_MAG_FILTER() {

    };
    TEXTURE_MAG_FILTER.value = new TEXTURE_MAG_FILTER();
    return TEXTURE_MAG_FILTER;
})();
var TEXTURE_WRAP_S = (function () {
    function TEXTURE_WRAP_S() {

    };
    TEXTURE_WRAP_S.value = new TEXTURE_WRAP_S();
    return TEXTURE_WRAP_S;
})();
var TEXTURE_WRAP_T = (function () {
    function TEXTURE_WRAP_T() {

    };
    TEXTURE_WRAP_T.value = new TEXTURE_WRAP_T();
    return TEXTURE_WRAP_T;
})();
var NEAREST = (function () {
    function NEAREST() {

    };
    NEAREST.value = new NEAREST();
    return NEAREST;
})();
var LINEAR = (function () {
    function LINEAR() {

    };
    LINEAR.value = new LINEAR();
    return LINEAR;
})();
var MIPMAP = (function () {
    function MIPMAP() {

    };
    MIPMAP.value = new MIPMAP();
    return MIPMAP;
})();
var TEXTURE_2D = (function () {
    function TEXTURE_2D() {

    };
    TEXTURE_2D.value = new TEXTURE_2D();
    return TEXTURE_2D;
})();
var TEXTURE_CUBE_MAP_POSITIVE_X = (function () {
    function TEXTURE_CUBE_MAP_POSITIVE_X() {

    };
    TEXTURE_CUBE_MAP_POSITIVE_X.value = new TEXTURE_CUBE_MAP_POSITIVE_X();
    return TEXTURE_CUBE_MAP_POSITIVE_X;
})();
var TEXTURE_CUBE_MAP_NEGATIVE_X = (function () {
    function TEXTURE_CUBE_MAP_NEGATIVE_X() {

    };
    TEXTURE_CUBE_MAP_NEGATIVE_X.value = new TEXTURE_CUBE_MAP_NEGATIVE_X();
    return TEXTURE_CUBE_MAP_NEGATIVE_X;
})();
var TEXTURE_CUBE_MAP_POSITIVE_Y = (function () {
    function TEXTURE_CUBE_MAP_POSITIVE_Y() {

    };
    TEXTURE_CUBE_MAP_POSITIVE_Y.value = new TEXTURE_CUBE_MAP_POSITIVE_Y();
    return TEXTURE_CUBE_MAP_POSITIVE_Y;
})();
var TEXTURE_CUBE_MAP_NEGATIVE_Y = (function () {
    function TEXTURE_CUBE_MAP_NEGATIVE_Y() {

    };
    TEXTURE_CUBE_MAP_NEGATIVE_Y.value = new TEXTURE_CUBE_MAP_NEGATIVE_Y();
    return TEXTURE_CUBE_MAP_NEGATIVE_Y;
})();
var TEXTURE_CUBE_MAP_POSITIVE_Z = (function () {
    function TEXTURE_CUBE_MAP_POSITIVE_Z() {

    };
    TEXTURE_CUBE_MAP_POSITIVE_Z.value = new TEXTURE_CUBE_MAP_POSITIVE_Z();
    return TEXTURE_CUBE_MAP_POSITIVE_Z;
})();
var TEXTURE_CUBE_MAP_NEGATIVE_Z = (function () {
    function TEXTURE_CUBE_MAP_NEGATIVE_Z() {

    };
    TEXTURE_CUBE_MAP_NEGATIVE_Z.value = new TEXTURE_CUBE_MAP_NEGATIVE_Z();
    return TEXTURE_CUBE_MAP_NEGATIVE_Z;
})();
var PACK_ALIGNMENT = (function () {
    function PACK_ALIGNMENT() {

    };
    PACK_ALIGNMENT.value = new PACK_ALIGNMENT();
    return PACK_ALIGNMENT;
})();
var UNPACK_ALIGNMENT = (function () {
    function UNPACK_ALIGNMENT() {

    };
    UNPACK_ALIGNMENT.value = new UNPACK_ALIGNMENT();
    return UNPACK_ALIGNMENT;
})();
var UNPACK_FLIP_Y_WEBGL = (function () {
    function UNPACK_FLIP_Y_WEBGL() {

    };
    UNPACK_FLIP_Y_WEBGL.value = new UNPACK_FLIP_Y_WEBGL();
    return UNPACK_FLIP_Y_WEBGL;
})();
var UNPACK_PREMULTIPLY_ALPHA_WEBGL = (function () {
    function UNPACK_PREMULTIPLY_ALPHA_WEBGL() {

    };
    UNPACK_PREMULTIPLY_ALPHA_WEBGL.value = new UNPACK_PREMULTIPLY_ALPHA_WEBGL();
    return UNPACK_PREMULTIPLY_ALPHA_WEBGL;
})();
var UNPACK_COLORSPACE_CONVERSION_WEBGL = (function () {
    function UNPACK_COLORSPACE_CONVERSION_WEBGL() {

    };
    UNPACK_COLORSPACE_CONVERSION_WEBGL.value = new UNPACK_COLORSPACE_CONVERSION_WEBGL();
    return UNPACK_COLORSPACE_CONVERSION_WEBGL;
})();
var IF_ALPHA = (function () {
    function IF_ALPHA() {

    };
    IF_ALPHA.value = new IF_ALPHA();
    return IF_ALPHA;
})();
var IF_LUMINANCE = (function () {
    function IF_LUMINANCE() {

    };
    IF_LUMINANCE.value = new IF_LUMINANCE();
    return IF_LUMINANCE;
})();
var IF_LUMINANCE_ALPHA = (function () {
    function IF_LUMINANCE_ALPHA() {

    };
    IF_LUMINANCE_ALPHA.value = new IF_LUMINANCE_ALPHA();
    return IF_LUMINANCE_ALPHA;
})();
var IF_RGB = (function () {
    function IF_RGB() {

    };
    IF_RGB.value = new IF_RGB();
    return IF_RGB;
})();
var IF_RGBA = (function () {
    function IF_RGBA() {

    };
    IF_RGBA.value = new IF_RGBA();
    return IF_RGBA;
})();
var uniform1i = Graphics_WebGLRaw.uniform1i_;
var textureTypeToConst = function (v) {
    if (v instanceof UNSIGNED_BYTE) {
        return Graphics_WebGLRaw._UNSIGNED_BYTE;
    };
    if (v instanceof RGBA) {
        return Graphics_WebGLRaw._RGBA;
    };
    if (v instanceof FLOAT) {
        return Graphics_WebGLRaw._FLOAT;
    };
    if (v instanceof UNSIGNED_SHORT_5_6_5) {
        return Graphics_WebGLRaw._UNSIGNED_SHORT_5_6_5;
    };
    if (v instanceof UNSIGNED_SHORT_4_4_4_4) {
        return Graphics_WebGLRaw._UNSIGNED_SHORT_4_4_4_4;
    };
    if (v instanceof UNSIGNED_SHORT_5_5_5_1) {
        return Graphics_WebGLRaw._UNSIGNED_SHORT_5_5_5_1;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 100, column 1 - line 100, column 44: " + [ v.constructor.name ]);
};
var texTargetToConst = function (v) {
    if (v instanceof TTEXTURE_2D) {
        return Graphics_WebGLRaw._TEXTURE_2D;
    };
    if (v instanceof TTEXTURE_CUBE_MAP) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 126, column 1 - line 126, column 40: " + [ v.constructor.name ]);
};
var texParNameToConst = function (v) {
    if (v instanceof TEXTURE_MIN_FILTER) {
        return Graphics_WebGLRaw._TEXTURE_MIN_FILTER;
    };
    if (v instanceof TEXTURE_MAG_FILTER) {
        return Graphics_WebGLRaw._TEXTURE_MAG_FILTER;
    };
    if (v instanceof TEXTURE_WRAP_S) {
        return Graphics_WebGLRaw._TEXTURE_WRAP_S;
    };
    if (v instanceof TEXTURE_WRAP_T) {
        return Graphics_WebGLRaw._TEXTURE_WRAP_T;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 137, column 1 - line 137, column 42: " + [ v.constructor.name ]);
};
var texParameteri = function (target) {
    return function (pname) {
        return function (param) {
            return Graphics_WebGLRaw.texParameteri_(texTargetToConst(target))(texParNameToConst(pname))(param);
        };
    };
};
var texFilterSpecToMinConst = function (v) {
    if (v instanceof NEAREST) {
        return Graphics_WebGLRaw._NEAREST;
    };
    if (v instanceof LINEAR) {
        return Graphics_WebGLRaw._LINEAR;
    };
    if (v instanceof MIPMAP) {
        return Graphics_WebGLRaw._LINEAR_MIPMAP_NEAREST;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 154, column 1 - line 154, column 51: " + [ v.constructor.name ]);
};
var texFilterSpecToMagConst = function (v) {
    if (v instanceof NEAREST) {
        return Graphics_WebGLRaw._NEAREST;
    };
    if (v instanceof LINEAR) {
        return Graphics_WebGLRaw._LINEAR;
    };
    if (v instanceof MIPMAP) {
        return Graphics_WebGLRaw._LINEAR;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 149, column 1 - line 149, column 51: " + [ v.constructor.name ]);
};
var targetTypeToConst = function (v) {
    if (v instanceof TEXTURE_2D) {
        return Graphics_WebGLRaw._TEXTURE_2D;
    };
    if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_X) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_X;
    };
    if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_X) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_X;
    };
    if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_Y) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_Y;
    };
    if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_Y) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_Y;
    };
    if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_Z) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_Z;
    };
    if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_Z) {
        return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_Z;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 69, column 1 - line 69, column 42: " + [ v.constructor.name ]);
};
var unbindTexture = function (tt) {
    return $foreign.bindTexture__(targetTypeToConst(tt));
};
var symbolicParameterToConst = function (v) {
    if (v instanceof PACK_ALIGNMENT) {
        return Graphics_WebGLRaw._PACK_ALIGNMENT;
    };
    if (v instanceof UNPACK_ALIGNMENT) {
        return Graphics_WebGLRaw._UNPACK_ALIGNMENT;
    };
    if (v instanceof UNPACK_FLIP_Y_WEBGL) {
        return Graphics_WebGLRaw._UNPACK_FLIP_Y_WEBGL;
    };
    if (v instanceof UNPACK_PREMULTIPLY_ALPHA_WEBGL) {
        return Graphics_WebGLRaw._UNPACK_PREMULTIPLY_ALPHA_WEBGL;
    };
    if (v instanceof UNPACK_COLORSPACE_CONVERSION_WEBGL) {
        return Graphics_WebGLRaw._UNPACK_COLORSPACE_CONVERSION_WEBGL;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 115, column 1 - line 115, column 56: " + [ v.constructor.name ]);
};
var pixelStorei = function (symbolicParameter) {
    return function (num) {
        return Graphics_WebGLRaw.pixelStorei_(symbolicParameterToConst(symbolicParameter))(num);
    };
};
var internalFormatToConst = function (v) {
    if (v instanceof IF_ALPHA) {
        return Graphics_WebGLRaw._ALPHA;
    };
    if (v instanceof IF_LUMINANCE) {
        return Graphics_WebGLRaw._LUMINANCE;
    };
    if (v instanceof IF_LUMINANCE_ALPHA) {
        return Graphics_WebGLRaw._LUMINANCE_ALPHA;
    };
    if (v instanceof IF_RGB) {
        return Graphics_WebGLRaw._RGB;
    };
    if (v instanceof IF_RGBA) {
        return Graphics_WebGLRaw._RGBA;
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 85, column 1 - line 85, column 50: " + [ v.constructor.name ]);
};
var texImage2D = function (target) {
    return function (level) {
        return function (internalFormat) {
            return function (format) {
                return function (typ) {
                    return function (pixels) {
                        return $foreign.texImage2D__(targetTypeToConst(target))(level)(internalFormatToConst(internalFormat))(internalFormatToConst(format))(textureTypeToConst(typ))(pixels);
                    };
                };
            };
        };
    };
};
var texImage2DNull = function (target) {
    return function (level) {
        return function (internalFormat) {
            return function (width) {
                return function (height) {
                    return function (format) {
                        return function (typ) {
                            return $foreign.texImage2DNull_(targetTypeToConst(target))(level)(internalFormatToConst(internalFormat))(width)(height)(0)(internalFormatToConst(format))(textureTypeToConst(typ));
                        };
                    };
                };
            };
        };
    };
};
var texImage2DPixels = function (target) {
    return function (level) {
        return function (internalFormat) {
            return function (width) {
                return function (height) {
                    return function (format) {
                        return function (typ) {
                            return function (pixels) {
                                return Graphics_WebGLRaw.texImage2D_(targetTypeToConst(target))(level)(internalFormatToConst(internalFormat))(width)(height)(0)(internalFormatToConst(format))(textureTypeToConst(typ))(pixels);
                            };
                        };
                    };
                };
            };
        };
    };
};
var texSubImage2D = function (target) {
    return function (level) {
        return function (x) {
            return function (y) {
                return function (format) {
                    return function (typ) {
                        return function (pixels) {
                            return $foreign.texSubImage2D__(targetTypeToConst(target))(level)(x)(y)(internalFormatToConst(format))(textureTypeToConst(typ))(pixels);
                        };
                    };
                };
            };
        };
    };
};
var createTexture = function __do() {
    var v = Graphics_WebGLRaw.createTexture_();
    return v;
};
var bindTexture = function (tt) {
    return function (v) {
        return Graphics_WebGLRaw.bindTexture_(targetTypeToConst(tt))(v);
    };
};
var handleLoad2D = function (texture) {
    return function (filterSpec) {
        return function (whatever) {
            return function __do() {
                bindTexture(TEXTURE_2D.value)(texture)();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MAG_FILTER.value)(texFilterSpecToMagConst(filterSpec))();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MIN_FILTER.value)(texFilterSpecToMinConst(filterSpec))();
                pixelStorei(UNPACK_FLIP_Y_WEBGL.value)(0)();
                pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL.value)(0)();
                texImage2D(TEXTURE_2D.value)(0)(IF_RGBA.value)(IF_RGBA.value)(UNSIGNED_BYTE.value)(whatever)();
                (function () {
                    if (filterSpec instanceof MIPMAP) {
                        return Graphics_WebGLRaw.generateMipmap_(Graphics_WebGLRaw._TEXTURE_2D);
                    };
                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                })()();
                return unbindTexture(TEXTURE_2D.value)();
            };
        };
    };
};
var texture2DFor = function (name) {
    return function (filterSpec) {
        return function (continuation) {
            return function __do() {
                var v = createTexture();
                return $foreign.loadImage_(name)(function (image) {
                    return function __do() {
                        handleLoad2D(v)(filterSpec)(image)();
                        return continuation(v)();
                    };
                })();
            };
        };
    };
};
var handleSubLoad2D = function (texture) {
    return function (x) {
        return function (y) {
            return function (w) {
                return function (h) {
                    return function (filterSpec) {
                        return function (whatever) {
                            return function __do() {
                                bindTexture(TEXTURE_2D.value)(texture)();
                                texParameteri(TTEXTURE_2D.value)(TEXTURE_MAG_FILTER.value)(texFilterSpecToMagConst(filterSpec))();
                                texParameteri(TTEXTURE_2D.value)(TEXTURE_MIN_FILTER.value)(texFilterSpecToMinConst(filterSpec))();
                                pixelStorei(UNPACK_FLIP_Y_WEBGL.value)(0)();
                                pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL.value)(0)();
                                texSubImage2D(TEXTURE_2D.value)(0)(x)(y)(IF_RGBA.value)(UNSIGNED_BYTE.value)(whatever)();
                                (function () {
                                    if (filterSpec instanceof MIPMAP) {
                                        return Graphics_WebGLRaw.generateMipmap_(Graphics_WebGLRaw._TEXTURE_2D);
                                    };
                                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                                })()();
                                return unbindTexture(TEXTURE_2D.value)();
                            };
                        };
                    };
                };
            };
        };
    };
};
var newTexture = function (width) {
    return function (height) {
        return function (filterSpec) {
            return function __do() {
                var v = createTexture();
                bindTexture(TEXTURE_2D.value)(v)();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MAG_FILTER.value)(texFilterSpecToMagConst(filterSpec))();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MIN_FILTER.value)(texFilterSpecToMinConst(filterSpec))();
                Control_Applicative.when(Control_Monad_Eff.applicativeEff)(((width | height) & 1) === 1)(function __do() {
                    texParameteri(TTEXTURE_2D.value)(TEXTURE_WRAP_S.value)(Graphics_WebGLRaw._CLAMP_TO_EDGE)();
                    return texParameteri(TTEXTURE_2D.value)(TEXTURE_WRAP_T.value)(Graphics_WebGLRaw._CLAMP_TO_EDGE)();
                })();
                texImage2DNull(TEXTURE_2D.value)(0)(IF_RGBA.value)(width)(height)(IF_RGBA.value)(UNSIGNED_BYTE.value)();
                (function () {
                    if (filterSpec instanceof MIPMAP) {
                        return Graphics_WebGLRaw.generateMipmap_(Graphics_WebGLRaw._TEXTURE_2D);
                    };
                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                })()();
                unbindTexture(TEXTURE_2D.value)();
                return v;
            };
        };
    };
};
var newTextureInit = function (width) {
    return function (height) {
        return function (filterSpec) {
            return function __do() {
                var v = createTexture();
                var pixels = Data_TypedArray.newUint8Array((width * height | 0) * 4 | 0);
                bindTexture(TEXTURE_2D.value)(v)();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MAG_FILTER.value)(texFilterSpecToMagConst(filterSpec))();
                texParameteri(TTEXTURE_2D.value)(TEXTURE_MIN_FILTER.value)(texFilterSpecToMinConst(filterSpec))();
                Control_Applicative.when(Control_Monad_Eff.applicativeEff)(((width | height) & 1) === 1)(function __do() {
                    texParameteri(TTEXTURE_2D.value)(TEXTURE_WRAP_S.value)(Graphics_WebGLRaw._CLAMP_TO_EDGE)();
                    return texParameteri(TTEXTURE_2D.value)(TEXTURE_WRAP_T.value)(Graphics_WebGLRaw._CLAMP_TO_EDGE)();
                })();
                texImage2DPixels(TEXTURE_2D.value)(0)(IF_RGBA.value)(width)(height)(IF_RGBA.value)(UNSIGNED_BYTE.value)($foreign.asArrayBufferView_(pixels))();
                (function () {
                    if (filterSpec instanceof MIPMAP) {
                        return Graphics_WebGLRaw.generateMipmap_(Graphics_WebGLRaw._TEXTURE_2D);
                    };
                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                })()();
                unbindTexture(TEXTURE_2D.value)();
                return v;
            };
        };
    };
};
var activeTexture = function (n) {
    if (n < Graphics_WebGLRaw._MAX_COMBINED_TEXTURE_IMAGE_UNITS) {
        return Graphics_WebGLRaw.activeTexture_(Graphics_WebGLRaw._TEXTURE0 + n | 0);
    };
    if (Data_Boolean.otherwise) {
        return Extensions.fail("WebGLTexture>>activeTexture: wrong argument!");
    };
    throw new Error("Failed pattern match at Graphics.WebGLTexture line 268, column 1 - line 268, column 68: " + [ n.constructor.name ]);
};
var withTexture2D = function (texture) {
    return function (index) {
        return function (v) {
            return function (pos) {
                return function (continuation) {
                    return function __do() {
                        activeTexture(index)();
                        bindTexture(TEXTURE_2D.value)(texture)();
                        uniform1i(v.uLocation)(pos)();
                        continuation();
                        return unbindTexture(TEXTURE_2D.value)();
                    };
                };
            };
        };
    };
};
module.exports = {
    TEXTURE_2D: TEXTURE_2D,
    TEXTURE_CUBE_MAP_POSITIVE_X: TEXTURE_CUBE_MAP_POSITIVE_X,
    TEXTURE_CUBE_MAP_NEGATIVE_X: TEXTURE_CUBE_MAP_NEGATIVE_X,
    TEXTURE_CUBE_MAP_POSITIVE_Y: TEXTURE_CUBE_MAP_POSITIVE_Y,
    TEXTURE_CUBE_MAP_NEGATIVE_Y: TEXTURE_CUBE_MAP_NEGATIVE_Y,
    TEXTURE_CUBE_MAP_POSITIVE_Z: TEXTURE_CUBE_MAP_POSITIVE_Z,
    TEXTURE_CUBE_MAP_NEGATIVE_Z: TEXTURE_CUBE_MAP_NEGATIVE_Z,
    IF_ALPHA: IF_ALPHA,
    IF_LUMINANCE: IF_LUMINANCE,
    IF_LUMINANCE_ALPHA: IF_LUMINANCE_ALPHA,
    IF_RGB: IF_RGB,
    IF_RGBA: IF_RGBA,
    UNSIGNED_BYTE: UNSIGNED_BYTE,
    RGBA: RGBA,
    FLOAT: FLOAT,
    UNSIGNED_SHORT_5_6_5: UNSIGNED_SHORT_5_6_5,
    UNSIGNED_SHORT_4_4_4_4: UNSIGNED_SHORT_4_4_4_4,
    UNSIGNED_SHORT_5_5_5_1: UNSIGNED_SHORT_5_5_5_1,
    PACK_ALIGNMENT: PACK_ALIGNMENT,
    UNPACK_ALIGNMENT: UNPACK_ALIGNMENT,
    UNPACK_FLIP_Y_WEBGL: UNPACK_FLIP_Y_WEBGL,
    UNPACK_PREMULTIPLY_ALPHA_WEBGL: UNPACK_PREMULTIPLY_ALPHA_WEBGL,
    UNPACK_COLORSPACE_CONVERSION_WEBGL: UNPACK_COLORSPACE_CONVERSION_WEBGL,
    TTEXTURE_2D: TTEXTURE_2D,
    TTEXTURE_CUBE_MAP: TTEXTURE_CUBE_MAP,
    TEXTURE_MIN_FILTER: TEXTURE_MIN_FILTER,
    TEXTURE_MAG_FILTER: TEXTURE_MAG_FILTER,
    TEXTURE_WRAP_S: TEXTURE_WRAP_S,
    TEXTURE_WRAP_T: TEXTURE_WRAP_T,
    WebGLTex: WebGLTex,
    NEAREST: NEAREST,
    LINEAR: LINEAR,
    MIPMAP: MIPMAP,
    texture2DFor: texture2DFor,
    withTexture2D: withTexture2D,
    activeTexture: activeTexture,
    bindTexture: bindTexture,
    unbindTexture: unbindTexture,
    handleLoad2D: handleLoad2D,
    handleSubLoad2D: handleSubLoad2D,
    createTexture: createTexture,
    newTexture: newTexture,
    newTextureInit: newTextureInit,
    targetTypeToConst: targetTypeToConst
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.WebGL":38,"../Data.ArrayBuffer.Types":81,"../Data.Boolean":90,"../Data.Eq":111,"../Data.Function":125,"../Data.Int.Bits":144,"../Data.Ord":178,"../Data.Semiring":187,"../Data.TypedArray":215,"../Data.Unit":220,"../Extensions":227,"../Graphics.Canvas":231,"../Graphics.WebGL":233,"../Graphics.WebGLRaw":238,"../Prelude":263,"./foreign":239}],241:[function(require,module,exports){
"use strict";

// -----------------------------------------------------------------------------
// OBJ
// -----------------------------------------------------------------------------

var OBJFile = require('obj-file-parser');

exports.readWFObj = function(objString) {
    var objFile = new OBJFile(objString);
    var output = objFile.parse();
    console.log(output)
    return output;
}

function main() {
    var canvas = document.getElementById("glcanvas");

    var resize = function() {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    }

    resize();
    window.onresize = resize;
}

main();

},{"obj-file-parser":1}],242:[function(require,module,exports){
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Console = require("../Control.Monad.Eff.Console");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Random = require("../Control.Monad.Eff.Random");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM = require("../DOM");
var Data_Array = require("../Data.Array");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty");
var Data_Char = require("../Data.Char");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Foldable = require("../Data.Foldable");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Index = require("../Data.Foreign.Index");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Int = require("../Data.Int");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Data_Matrix = require("../Data.Matrix");
var Data_Matrix4 = require("../Data.Matrix4");
var Data_Maybe = require("../Data.Maybe");
var Data_Midi = require("../Data.Midi");
var Data_Midi_WebMidi = require("../Data.Midi.WebMidi");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Data_Symbol = require("../Data.Symbol");
var Data_Tuple = require("../Data.Tuple");
var Data_Tuple_Nested = require("../Data.Tuple.Nested");
var Data_TypeNat = require("../Data.TypeNat");
var Data_Vector = require("../Data.Vector");
var Data_Vector2 = require("../Data.Vector2");
var Data_Vector3 = require("../Data.Vector3");
var Extensions = require("../Extensions");
var Graphics_WebGL = require("../Graphics.WebGL");
var Graphics_WebGLAll = require("../Graphics.WebGLAll");
var $$Math = require("../Math");
var Network_HTTP_Affjax = require("../Network.HTTP.Affjax");
var Network_HTTP_Affjax_Response = require("../Network.HTTP.Affjax.Response");
var Partial_Unsafe = require("../Partial.Unsafe");
var Pathy = require("../Pathy");
var Pathy_Name = require("../Pathy.Name");
var Pathy_Parser = require("../Pathy.Parser");
var Pathy_Path = require("../Pathy.Path");
var Pathy_Phantom = require("../Pathy.Phantom");
var Pathy_Printer = require("../Pathy.Printer");
var Pathy_Sandboxed = require("../Pathy.Sandboxed");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var Signal_Channel = require("../Signal.Channel");
var Signal_DOM = require("../Signal.DOM");
var Signal_Time = require("../Signal.Time");
var Type_Data_Ordering = require("../Type.Data.Ordering");
var Type_Data_Symbol = require("../Type.Data.Symbol");
var Triangle = (function () {
    function Triangle(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Triangle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Triangle(value0, value1, value2);
            };
        };
    };
    return Triangle;
})();
var State = function (x) {
    return x;
};
var Scene = function (x) {
    return x;
};
var ScaleFn = (function () {
    function ScaleFn(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ScaleFn.create = function (value0) {
        return function (value1) {
            return new ScaleFn(value0, value1);
        };
    };
    return ScaleFn;
})();
var CharKey = (function () {
    function CharKey(value0) {
        this.value0 = value0;
    };
    CharKey.create = function (value0) {
        return new CharKey(value0);
    };
    return CharKey;
})();
var Input = (function () {
    function Input(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Input.create = function (value0) {
        return function (value1) {
            return new Input(value0, value1);
        };
    };
    return Input;
})();
var SigTime = (function () {
    function SigTime(value0) {
        this.value0 = value0;
    };
    SigTime.create = function (value0) {
        return new SigTime(value0);
    };
    return SigTime;
})();
var SigSize = (function () {
    function SigSize(value0) {
        this.value0 = value0;
    };
    SigSize.create = function (value0) {
        return new SigSize(value0);
    };
    return SigSize;
})();
var SigKey = (function () {
    function SigKey(value0) {
        this.value0 = value0;
    };
    SigKey.create = function (value0) {
        return new SigKey(value0);
    };
    return SigKey;
})();
var SigMouse = (function () {
    function SigMouse(value0) {
        this.value0 = value0;
    };
    SigMouse.create = function (value0) {
        return new SigMouse(value0);
    };
    return SigMouse;
})();
var SigMidi = (function () {
    function SigMidi() {

    };
    SigMidi.value = new SigMidi();
    return SigMidi;
})();
var SigInput = (function () {
    function SigInput(value0) {
        this.value0 = value0;
    };
    SigInput.create = function (value0) {
        return new SigInput(value0);
    };
    return SigInput;
})();

//------------------------------------------------------------------------------
// TYPES
//------------------------------------------------------------------------------
var Config = function (x) {
    return x;
};

//------------------------------------------------------------------------------
// CLASS
//------------------------------------------------------------------------------
var Morph = function (morph) {
    this.morph = morph;
};

//------------------------------------------------------------------------------
// SHORTHANDS
//------------------------------------------------------------------------------
var zero = 0.0;

//------------------------------------------------------------------------------
// SHADERS
//------------------------------------------------------------------------------
var vertexShader = "\x0a    attribute vec3 aVertexPosition;\x0a\x0a    uniform mat4 uMVMatrix;\x0a    uniform mat4 uPMatrix;\x0a\x0a    void main(void) {\x0a      gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\x0a    }\x0a  ";
var vec2to3 = function (vec) {
    return function (z) {
        return Data_Vector3.vec3(Data_Vector2.get2X(vec))(Data_Vector2.get2Y(vec))(z);
    };
};
var update = function (sig) {
    return function (v) {
        if (sig instanceof SigTime) {
            return State((function () {
                var $74 = {};
                for (var $75 in v) {
                    if ({}.hasOwnProperty.call(v, $75)) {
                        $74[$75] = v[$75];
                    };
                };
                $74.time = sig.value0;
                return $74;
            })());
        };
        if (sig instanceof SigSize) {
            return State((function () {
                var $78 = {};
                for (var $79 in v) {
                    if ({}.hasOwnProperty.call(v, $79)) {
                        $78[$79] = v[$79];
                    };
                };
                $78.size = Data_Vector2.vec2(sig.value0.w)(sig.value0.h);
                return $78;
            })());
        };
        if (sig instanceof SigInput && sig.value0.value0 === "1") {
            return State((function () {
                var $87 = {};
                for (var $88 in v) {
                    if ({}.hasOwnProperty.call(v, $88)) {
                        $87[$88] = v[$88];
                    };
                };
                $87.pcts = (function () {
                    var $84 = {};
                    for (var $85 in v.pcts) {
                        if ({}.hasOwnProperty.call(v.pcts, $85)) {
                            $84[$85] = v["pcts"][$85];
                        };
                    };
                    $84.n1 = sig.value0.value1;
                    return $84;
                })();
                return $87;
            })());
        };
        if (sig instanceof SigInput && sig.value0.value0 === "2") {
            return State((function () {
                var $96 = {};
                for (var $97 in v) {
                    if ({}.hasOwnProperty.call(v, $97)) {
                        $96[$97] = v[$97];
                    };
                };
                $96.pcts = (function () {
                    var $93 = {};
                    for (var $94 in v.pcts) {
                        if ({}.hasOwnProperty.call(v.pcts, $94)) {
                            $93[$94] = v["pcts"][$94];
                        };
                    };
                    $93.n2 = sig.value0.value1;
                    return $93;
                })();
                return $96;
            })());
        };
        return v;
    };
};
var two = 2.0;
var toFunction = function (v) {
    return v.value1;
};

//------------------------------------------------------------------------------
// MORPH CHAIN
//------------------------------------------------------------------------------
var semigroupScaleFn = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        var f = function (t) {
            var $107 = t < v.value0;
            if ($107) {
                return v.value1(t);
            };
            return v1.value1(t - v.value0);
        };
        return new ScaleFn(v.value0 + v1.value0, f);
    };
});
var section = function (stride) {
    return function (offset) {
        return function (xs) {
            var go = function ($copy_acc) {
                return function ($copy_xs1) {
                    var $tco_var_acc = $copy_acc;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(acc, xs1) {
                        var ys = Data_Array.take(stride)(xs1);
                        var $112 = Data_Array.length(ys) === stride;
                        if ($112) {
                            $tco_var_acc = Data_Array.snoc(acc)(ys);
                            $copy_xs1 = Data_Array.drop(offset)(xs1);
                            return;
                        };
                        $tco_done = true;
                        return acc;
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_acc, $copy_xs1);
                    };
                    return $tco_result;
                };
            };
            return go([  ])(xs);
        };
    };
};
var section2 = function (offset) {
    return function (xs) {
        return Data_Functor.map(Data_Functor.functorArray)(function (v) {
            var __unused = function (dictPartial1) {
                return function ($dollar55) {
                    return $dollar55;
                };
            };
            return __unused()((function () {
                if (v.length === 2) {
                    return new Data_Tuple.Tuple(v[0], v[1]);
                };
                throw new Error("Failed pattern match at Main line 487, column 25 - line 487, column 42: " + [ v.constructor.name ]);
            })());
        })(section(2)(offset)(xs));
    };
};

//------------------------------------------------------------------------------
// MAIN
//------------------------------------------------------------------------------
var runAff$prime = function (aff) {
    return function (errCb) {
        return function (okCb) {
            return Control_Monad_Aff.runAff(errCb)(okCb)(aff);
        };
    };
};
var renderInit = function (v) {
    return function __do() {
        Graphics_WebGL.clearColor(0.5)(0.5)(0.5)(1.0)();
        return Graphics_WebGL.enable(Graphics_WebGL.DEPTH_TEST.value)();
    };
};
var rangeChar = function (c1) {
    return function (c2) {
        return Data_Functor.map(Data_Functor.functorArray)(Data_Char.fromCharCode)(Data_Array.range(Data_Char.toCharCode(c1))(Data_Char.toCharCode(c2)));
    };
};
var randomVec3n = Control_Apply.apply(Control_Monad_Eff.applyEff)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Vector3.vec3)(Control_Monad_Eff_Random.random))(Control_Monad_Eff_Random.random))(Control_Monad_Eff_Random.random);
var randomVec2n = Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Vector2.vec2)(Control_Monad_Eff_Random.random))(Control_Monad_Eff_Random.random);
var printPath$prime = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return function (path) {
            return Pathy_Printer.unsafePrintPath(dictIsRelOrAbs)(dictIsDirOrFile)(Pathy_Printer.posixPrinter)(path);
        };
    };
};
var parseVertex = function (val) {
    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("x")(val))(Data_Foreign.readNumber))(function (v) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("y")(val))(Data_Foreign.readNumber))(function (v1) {
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("z")(val))(Data_Foreign.readNumber))(function (v2) {
                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Vector3.vec3(v)(v1)(v2));
            });
        });
    });
};
var parseIndexFile = function (str) {
    return Data_Maybe.maybe(new Data_Either.Left("Invalid index file"))(Data_Either.Right.create)(Extensions.mapM(Data_Maybe.monadMaybe)(Pathy_Parser.parseRelFile(Pathy_Parser.posixParser))(Data_Array.filter(Data_Eq.notEq(Data_Eq.eqString)(""))(Data_String.split("\x0a")(str))));
};
var onePos = 1.0;
var spacePos = Data_Vector2.vec2(zero)(onePos);
var oneNeg = -1.0;
var spaceNegPos = Data_Vector2.vec2(oneNeg)(onePos);
var one = onePos;
var morphNumber = new Morph(function (pct) {
    return function (x) {
        return function (y) {
            return x + pct * (y - x);
        };
    };
});
var morph = function (dict) {
    return dict.morph;
};
var morph$prime = function (dictMorph) {
    return function (x) {
        return function (y) {
            return function (t) {
                return morph(dictMorph)(t)(x)(y);
            };
        };
    };
};
var morphArray = function (dictMorph) {
    return new Morph(function (pct) {
        return function (xs) {
            return function (ys) {
                return Data_Array.zipWith(morph(dictMorph)(pct))(xs)(ys);
            };
        };
    });
};
var morphVec3 = function (dictMorph) {
    return new Morph(function (pct) {
        return function (x) {
            return function (y) {
                return Control_Apply.apply(Data_Vector.applyVec)(Data_Functor.map(Data_Vector.functorVec)(morph(dictMorph)(pct))(x))(y);
            };
        };
    });
};
var morphTriangle = new Morph(function (pct) {
    return function (v) {
        return function (v1) {
            var f = morph(morphVec3(morphNumber))(pct);
            return new Triangle(f(v.value0)(v1.value0), f(v.value1)(v1.value1), f(v.value2)(v1.value2));
        };
    };
});
var morphScene = new Morph(function (pct) {
    return function (v) {
        return function (v1) {
            return Scene(morph(morphArray(morphTriangle))(pct)(v)(v1));
        };
    };
});

//------------------------------------------------------------------------------
// SELECTORS
//------------------------------------------------------------------------------
var selectScaleFn = function (v) {
    return function (state) {
        var randomScene = Scene(Data_Functor.map(Data_Functor.functorArray)(function (v1) {
            return new Triangle(v1, v1, v1);
        })(v.randomField));
        var n = Data_Array_NonEmpty.length(v.scenes) * 2 | 0;
        var f = function (scene) {
            return Data_Semigroup.append(Data_Array_NonEmpty.semigroupNonEmptyArray)(Data_Array_NonEmpty.singleton(new ScaleFn(1.0, morph$prime(morphScene)(randomScene)(scene))))(Data_Array_NonEmpty.singleton(new ScaleFn(1.0, morph$prime(morphScene)(scene)(randomScene))));
        };
        return Data_Semigroup_Foldable.fold1(Data_Array_NonEmpty.foldable1NonEmptyArray)(semigroupScaleFn)(Data_Array_NonEmpty.concatMap(f)(v.scenes));
    };
};
var merge3 = function (s1) {
    return function (s2) {
        return function (s3) {
            return Signal.merge(s3)(Signal.merge(s1)(s2));
        };
    };
};
var merge4 = function (s1) {
    return function (s2) {
        return function (s3) {
            return function (s4) {
                return Signal.merge(s4)(merge3(s1)(s2)(s3));
            };
        };
    };
};
var mapWithPct = function (f) {
    return function (xs) {
        var n = Data_Int.toNumber(Data_Array.length(xs));
        return Data_Array.mapWithIndex(function (i) {
            return function (x) {
                return f(Data_Int.toNumber(i) / n)(x);
            };
        })(xs);
    };
};
var lookup = function (xs) {
    return function (indices) {
        var hunde = new Data_Tuple.Tuple(xs, indices);
        return Extensions.mapM(Data_Maybe.monadMaybe)(Data_Array.index(xs))(indices);
    };
};
var parseFace = function (verticesLookup) {
    return function (val) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("vertices")(val))(Data_Foreign.readArray))(Extensions.mapM(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(function (v) {
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("vertexIndex")(v))(Data_Foreign.readInt);
        })))(function (v) {
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Maybe["maybe'"](function (v1) {
                return Extensions.fail("lookup error");
            })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(lookup(verticesLookup)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                return x - 1 | 0;
            })(v))))(function (v1) {
                return Data_Maybe["maybe'"](function (_d) {
                    return Extensions.fail("triangle error");
                })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(v1)(0))(function (v2) {
                    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(v1)(1))(function (v3) {
                        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(v1)(2))(function (v4) {
                            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(v1)(3))(function (v5) {
                                return new Data_Maybe.Just([ new Triangle(v2, v3, v4), new Triangle(v2, v4, v5) ]);
                            });
                        });
                    });
                }));
            });
        });
    };
};
var parseModel = function (verticesLookup) {
    return function (val) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("faces")(val))(Data_Foreign.readArray))(Extensions.mapM(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(parseFace(verticesLookup))))(function (v) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.concat(v));
        });
    };
};
var parse = function (val) {
    var parseVertices = function (val1) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("vertices")(val1))(Data_Foreign.readArray))(Extensions.mapM(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(parseVertex));
    };
    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("models")(val))(Data_Foreign.readArray))(Extensions.mapM(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(parseVertices)))(Data_Array.concat))(function (v) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.readProp("models")(val))(Data_Foreign.readArray))(Extensions.mapM(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(parseModel(v))))(function (v1) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.concat(v1));
        });
    });
};
var keyToInt = function (key) {
    return Data_Char.toCharCode(key.value0);
};
var keysPressed = (function () {
    var keys = Data_Functor.map(Data_Functor.functorArray)(CharKey.create)(rangeChar("0")("9"));
    var f = function (key) {
        return Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Signal_DOM.keyPressed(keyToInt(key)))(Data_Functor.map(Signal.functorSignal)(Data_Function["const"](key)));
    };
    return Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Extensions.mapM(Control_Monad_Eff.monadEff)(f)(keys))(function ($226) {
        return Data_Maybe.fromJust()(Signal.mergeMany(Data_Functor.functorArray)(Data_Foldable.foldableArray)($226));
    });
})();
var keyboardMouseInput = (function () {
    var update1 = function (x) {
        return function (m) {
            var v = new Data_Tuple.Tuple(x, m);
            if (v.value0 instanceof SigKey) {
                var $147 = {};
                for (var $148 in m) {
                    if ({}.hasOwnProperty.call(m, $148)) {
                        $147[$148] = m[$148];
                    };
                };
                $147.lastKey = v.value0.value0;
                $147.value = Data_Maybe.Nothing.value;
                return $147;
            };
            if (v.value0 instanceof SigMouse && v.value1.lastKey.value0 === "1") {
                var $153 = {};
                for (var $154 in m) {
                    if ({}.hasOwnProperty.call(m, $154)) {
                        $153[$154] = m[$154];
                    };
                };
                $153.value = Data_Maybe.Just.create(Data_Int.toNumber(v.value0.value0.x));
                return $153;
            };
            if (v.value0 instanceof SigMouse && v.value1.lastKey.value0 === "2") {
                var $162 = {};
                for (var $163 in m) {
                    if ({}.hasOwnProperty.call(m, $163)) {
                        $162[$163] = m[$163];
                    };
                };
                $162.value = Data_Maybe.Just.create(Data_Int.toNumber(v.value0.value0.x));
                return $162;
            };
            return m;
        };
    };
    var init = {
        lastKey: new CharKey("0"),
        value: Data_Maybe.Nothing.value
    };
    return function __do() {
        var v = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(keysPressed)(Data_Functor.map(Signal.functorSignal)(SigKey.create))();
        var v1 = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Signal_DOM.mousePos)(Data_Functor.map(Signal.functorSignal)(SigMouse.create))();
        var v2 = Signal_DOM.windowDimensions();
        return Signal.map2(function (v3) {
            return function (v4) {
                return new Input(v4.value0, v4.value1 / Data_Int.toNumber(v3.w));
            };
        })(v2)(Signal.filterMap(function (v3) {
            return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Input.create)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v3.lastKey.value0)))(v3.value);
        })(new Input("0", 0.0))(Signal.foldp(update1)(init)(Signal.merge(v)(v1))));
    };
})();
var intToKey = function (n) {
    return new CharKey(Data_Char.fromCharCode(n));
};

//------------------------------------------------------------------------------
// UPDATE
//------------------------------------------------------------------------------
var initState = {
    pcts: {
        n1: 0.0,
        n2: 0.0
    },
    time: 0.0,
    size: Data_Vector2.vec2(0)(0)
};
var getScene = function (path) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.get(Network_HTTP_Affjax_Response.responsableString)(printPath$prime(Pathy_Phantom.relIsRelOrAbs)(Pathy_Phantom.isDirOrFileFile)(Pathy_Sandboxed.sandboxAny(path))))(function (v) {
        var v1 = Control_Monad_Except.runExcept(parse($foreign.readWFObj(v.response)));
        if (v1 instanceof Data_Either.Left) {
            return Extensions.fail(Data_Show.show(Data_Foreign.showForeignError)(Data_List_NonEmpty.head(v1.value0)));
        };
        if (v1 instanceof Data_Either.Right) {
            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1.value0);
        };
        throw new Error("Failed pattern match at Main line 383, column 3 - line 385, column 32: " + [ v1.constructor.name ]);
    });
};
var getIndex = function (folder) {
    var indexFile = Pathy_Path.file(Pathy_Name.isNameNESymbol(new Data_Symbol.IsSymbol(function () {
        return "index.txt";
    }))(Type_Data_Symbol.equalsSymbol(Type_Data_Symbol.CompareSymbol)(Type_Data_Ordering.equalsEQGT)))(Data_Symbol.SProxy.value);
    var path = Pathy_Path.appendPath(Pathy_Phantom.relIsRelOrAbs)(folder)(indexFile);
    return Data_Functor.mapFlipped(Control_Monad_Aff.functorAff)(Control_Bind.bind(Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.get(Network_HTTP_Affjax_Response.responsableString)(printPath$prime(Pathy_Phantom.relIsRelOrAbs)(Pathy_Phantom.isDirOrFileFile)(Pathy_Sandboxed.sandboxAny(path))))(function ($227) {
        return Data_Either.either(Extensions.fail)(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(parseIndexFile((function (v) {
            return v.response;
        })($227)));
    }))(Data_Functor.map(Data_Functor.functorArray)(Pathy_Path.appendPath(Pathy_Phantom.relIsRelOrAbs)(folder)));
};

//------------------------------------------------------------------------------
// DATA
//------------------------------------------------------------------------------
var getScenes = (function () {
    var objExt = Data_String_NonEmpty.unsafeFromString()("obj");
    var predFn = function ($228) {
        return (function ($229) {
            return Data_Maybe.maybe(false)(Control_Category.id(Control_Category.categoryFn))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Eq.eq(Data_String_NonEmpty.eqNonEmptyString)(objExt))($229));
        })(Pathy_Name.extension(Pathy_Path.fileName($228)));
    };
    var indexDir = Pathy_Path.dir(Pathy_Name.isNameNESymbol(new Data_Symbol.IsSymbol(function () {
        return "data";
    }))(Type_Data_Symbol.equalsSymbol(Type_Data_Symbol.CompareSymbol)(Type_Data_Ordering.equalsEQGT)))(Data_Symbol.SProxy.value);
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Functor.mapFlipped(Control_Monad_Aff.functorAff)(getIndex(indexDir))(Data_Array.filter(predFn)))(function (v) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Extensions.mapM(Control_Monad_Aff.monadAff)(getScene)(v))(function ($230) {
            return Data_Maybe["maybe'"](function (v1) {
                return Extensions.fail("no scenes");
            })(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(Data_Array_NonEmpty.fromArray($230));
        });
    });
})();
var get2 = function (vec) {
    return new Data_Tuple.Tuple(Data_Vector2.get2X(vec), Data_Vector2.get2Y(vec));
};

//------------------------------------------------------------------------------
// UTIL
//------------------------------------------------------------------------------
var reMap = function (pair1) {
    return function (pair2) {
        return function (value) {
            var sub$prime = Data_Tuple.uncurry(Data_Function.flip(Data_Ring.sub(Data_Ring.ringNumber)));
            var pivot2 = Data_Vector2.get2X(pair2);
            var pivot1 = Data_Vector2.get2X(pair1);
            var dist2 = sub$prime(get2(pair2));
            var dist1 = sub$prime(get2(pair1));
            var pct = (value - pivot1) / dist1;
            return pivot2 + pct * dist2;
        };
    };
};
var midiInput = (function () {
    var reMap$prime = function (n) {
        return reMap(Data_Vector2.vec2(0.0)(127.0))(spacePos)(Data_Int.toNumber(n));
    };
    var f = function (v) {
        if (v.event instanceof Data_Maybe.Just && v.event.value0 instanceof Data_Midi.ControlChange) {
            return Data_Maybe.Just.create(new Input("2", reMap$prime(v.event.value0.value2)));
        };
        return Data_Maybe.Nothing.value;
    };
    return function __do() {
        var v = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Data_Midi_WebMidi.createEventChannel)(Signal_Channel.subscribe)();
        return Signal.filterMap(f)(new Input("0", 0.5))(v);
    };
})();

//------------------------------------------------------------------------------
// CONFIG
//------------------------------------------------------------------------------
//mkConfig :: NonEmptyArray Scene -> Config
var mkConfig = function (scenes) {
    var randVec = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(randomVec2n)(function ($231) {
        return (function (v2) {
            return vec2to3(v2)(18.0);
        })(Data_Functor.map(Data_Vector.functorVec)(reMap(spacePos)(spaceNegPos))($231));
    });
    var n = Data_Foldable.foldr(Data_Array_NonEmpty.foldableNonEmptyArray)(Data_Ord.max(Data_Ord.ordInt))(0)(Data_Functor.map(Data_Array_NonEmpty.functorNonEmptyArray)(function (v) {
        return Data_Array.length(v);
    })(scenes));
    return function __do() {
        var v = Extensions.mapM(Control_Monad_Eff.monadEff)(Data_Function["const"](randVec))(Data_Array.range(0)(n))();
        return {
            randomField: v,
            scenes: scenes
        };
    };
};
var render = function (v) {
    return function (v1) {
        return function (bindings) {
            var v2 = selectScaleFn(v)(v1);
            var loopTime = 20.0 * 1000.0;
            var t = reMap(spaceNegPos)(spacePos)($$Math.sin((v1.time / loopTime) * two * $$Math.pi));
            var t$prime$prime = $$Math.remainder(v1.time / loopTime)(1.0);
            var xs = (function () {
                var v3 = v2.value1(t$prime$prime * v2.value0);
                return Control_Bind.bind(Control_Bind.bindArray)(v3)(function (v4) {
                    return Data_Array.concatMap(Data_Vector.toArray)([ v4.value0, v4.value1, v4.value2 ]);
                });
            })();
            var getPct = function (offsetPct) {
                return reMap(spacePos)(spaceNegPos)($$Math.sin((v1.time / loopTime) * two * $$Math.pi + offsetPct * loopTime));
            };
            var v3 = get2(v1.size);
            var pMatrix = Data_Matrix4.makePerspective(45.0)(Data_Int.toNumber(v3.value0) / Data_Int.toNumber(v3.value1))(0.1)(100.0);
            var mvMatrix = Data_Matrix4.translate(Data_Vector3.vec3(zero)(0.0)(-20.0))(Data_Matrix4.identity);
            return function __do() {
                Graphics_WebGL.clear([ Graphics_WebGL.COLOR_BUFFER_BIT.value, Graphics_WebGL.DEPTH_BUFFER_BIT.value ])();
                Graphics_WebGL.setUniformFloats(bindings.uPMatrix)(Data_Matrix.toArray(pMatrix))();
                Graphics_WebGL.setUniformFloats(bindings.uMVMatrix)(Data_Matrix.toArray(mvMatrix))();
                var v4 = get2(v1.size);
                Graphics_WebGL.viewport(0)(0)(v4.value0)(v4.value1)();
                Control_Monad_Eff_Console.log(Data_Show.show(Data_Show.showArray(Data_Show.showNumber))([ v1.pcts.n1, v1.pcts.n2 ]))();
                var v5 = Graphics_WebGL.makeBufferFloat(xs)();
                return Graphics_WebGL.drawArr(Graphics_WebGL.TRIANGLES.value)(v5)(bindings.aVertexPosition)();
            };
        };
    };
};

//------------------------------------------------------------------------------
// FRP
//------------------------------------------------------------------------------
var mainFrp = function (config) {
    return function (bindings) {
        return function __do() {
            var v = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Signal_DOM.animationFrame)(Data_Functor.map(Signal.functorSignal)(SigTime.create))();
            var v1 = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Signal_DOM.windowDimensions)(Data_Functor.map(Signal.functorSignal)(SigSize.create))();
            var v2 = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(keyboardMouseInput)(Data_Functor.map(Signal.functorSignal)(SigInput.create))();
            var v3 = Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(midiInput)(Data_Functor.map(Signal.functorSignal)(SigInput.create))();
            var sigState = Signal.foldp(update)(initState)(merge4(v)(v1)(v2)(v3));
            return Signal.runSignal(Signal.flippedMap(Signal.functorSignal)(sigState)(function (state) {
                return render(config)(state)(bindings);
            }))();
        };
    };
};
var fragmentShader = "\x0a    precision mediump float;\x0a\x0a    void main(void) {\x0a      gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\x0a    }\x0a  ";
var shaders = new Graphics_WebGL.Shaders(fragmentShader, vertexShader);

// main :: forall a.
//   Eff
//     ( ajax :: AJAX
//     , console :: CONSOLE
//     , clock :: CLOCK
//     , random :: RANDOM
//     | a
//     )
//     (Canceler
//        ( ajax :: AJAX
//        , console :: CONSOLE
//        , clock :: CLOCK
//        , random :: RANDOM
//        | a
//        )
//     )
var main = runAff$prime(getScenes)(function ($232) {
    return Control_Monad_Eff_Console.log(Data_Show.show(Control_Monad_Eff_Exception.showError)($232));
})(function (scenes) {
    return Graphics_WebGL.runWebGL("glcanvas")(Control_Monad_Eff_Console.log)(function (context) {
        return Graphics_WebGL.withShaders(shaders)(Control_Monad_Eff_Console.log)(function (bindings) {
            return function __do() {
                var v = mkConfig(scenes)();
                renderInit(v)();
                return mainFrp(v)(bindings)();
            };
        });
    });
});
module.exports = {
    morph: morph,
    vertexShader: vertexShader,
    fragmentShader: fragmentShader,
    shaders: shaders,
    "runAff'": runAff$prime,
    main: main,
    mainFrp: mainFrp,
    keysPressed: keysPressed,
    rangeChar: rangeChar,
    merge3: merge3,
    merge4: merge4,
    keyboardMouseInput: keyboardMouseInput,
    midiInput: midiInput,
    keyToInt: keyToInt,
    intToKey: intToKey,
    mkConfig: mkConfig,
    randomVec2n: randomVec2n,
    randomVec3n: randomVec3n,
    vec2to3: vec2to3,
    toFunction: toFunction,
    "morph'": morph$prime,
    initState: initState,
    update: update,
    selectScaleFn: selectScaleFn,
    render: render,
    mapWithPct: mapWithPct,
    renderInit: renderInit,
    get2: get2,
    getScenes: getScenes,
    getIndex: getIndex,
    "printPath'": printPath$prime,
    parseIndexFile: parseIndexFile,
    getScene: getScene,
    parse: parse,
    parseModel: parseModel,
    parseVertex: parseVertex,
    parseFace: parseFace,
    lookup: lookup,
    zero: zero,
    onePos: onePos,
    one: one,
    two: two,
    oneNeg: oneNeg,
    spaceNegPos: spaceNegPos,
    spacePos: spacePos,
    reMap: reMap,
    section: section,
    section2: section2,
    Morph: Morph,
    Config: Config,
    State: State,
    Scene: Scene,
    Triangle: Triangle,
    SigTime: SigTime,
    SigSize: SigSize,
    SigKey: SigKey,
    SigMouse: SigMouse,
    SigMidi: SigMidi,
    SigInput: SigInput,
    Input: Input,
    ScaleFn: ScaleFn,
    CharKey: CharKey,
    semigroupScaleFn: semigroupScaleFn,
    morphNumber: morphNumber,
    morphVec3: morphVec3,
    morphTriangle: morphTriangle,
    morphArray: morphArray,
    morphScene: morphScene,
    readWFObj: $foreign.readWFObj
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Monad.Aff":20,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Console":25,"../Control.Monad.Eff.Exception":28,"../Control.Monad.Eff.Random":30,"../Control.Monad.Except":43,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../DOM":68,"../Data.Array":80,"../Data.Array.NonEmpty":74,"../Data.Char":97,"../Data.Either":108,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Foldable":116,"../Data.Foreign":121,"../Data.Foreign.Index":119,"../Data.Function":125,"../Data.Functor":130,"../Data.Identity":142,"../Data.Int":146,"../Data.List.NonEmpty":149,"../Data.Matrix":152,"../Data.Matrix4":153,"../Data.Maybe":156,"../Data.Midi":162,"../Data.Midi.WebMidi":161,"../Data.Ord":178,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semigroup.Foldable":182,"../Data.Semiring":187,"../Data.Show":189,"../Data.String":201,"../Data.String.NonEmpty":194,"../Data.Symbol":202,"../Data.Tuple":212,"../Data.Tuple.Nested":211,"../Data.TypeNat":213,"../Data.Vector":221,"../Data.Vector2":222,"../Data.Vector3":223,"../Extensions":227,"../Graphics.WebGL":233,"../Graphics.WebGLAll":234,"../Math":244,"../Network.HTTP.Affjax":248,"../Network.HTTP.Affjax.Response":246,"../Partial.Unsafe":253,"../Pathy":262,"../Pathy.Name":256,"../Pathy.Parser":257,"../Pathy.Path":258,"../Pathy.Phantom":259,"../Pathy.Printer":260,"../Pathy.Sandboxed":261,"../Prelude":263,"../Signal":271,"../Signal.Channel":265,"../Signal.DOM":267,"../Signal.Time":269,"../Type.Data.Ordering":276,"../Type.Data.Symbol":277,"./foreign":241}],243:[function(require,module,exports){
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.trunc = Math.trunc || function (n) {
  return n < 0 ? Math.ceil(n) : Math.floor(n);
};

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports.remainder = function (n) {
  return function (m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.tau = 2 * Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],244:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    abs: $foreign.abs,
    acos: $foreign.acos,
    asin: $foreign.asin,
    atan: $foreign.atan,
    atan2: $foreign.atan2,
    ceil: $foreign.ceil,
    cos: $foreign.cos,
    exp: $foreign.exp,
    floor: $foreign.floor,
    log: $foreign.log,
    max: $foreign.max,
    min: $foreign.min,
    pow: $foreign.pow,
    round: $foreign.round,
    sin: $foreign.sin,
    sqrt: $foreign.sqrt,
    tan: $foreign.tan,
    trunc: $foreign.trunc,
    remainder: $foreign.remainder,
    e: $foreign.e,
    ln2: $foreign.ln2,
    ln10: $foreign.ln10,
    log2e: $foreign.log2e,
    log10e: $foreign.log10e,
    pi: $foreign.pi,
    tau: $foreign.tau,
    sqrt1_2: $foreign.sqrt1_2,
    sqrt2: $foreign.sqrt2
};

},{"./foreign":243}],245:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_File_Types = require("../DOM.File.Types");
var DOM_Node_Types = require("../DOM.Node.Types");
var DOM_XHR_Types = require("../DOM.XHR.Types");
var Data_Argonaut_Core = require("../Data.Argonaut.Core");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_FormURLEncoded = require("../Data.FormURLEncoded");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_MediaType_Common = require("../Data.MediaType.Common");
var Data_Show = require("../Data.Show");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Requestable = function (toRequest) {
    this.toRequest = toRequest;
};
var toRequest = function (dict) {
    return dict.toRequest;
};
var requestableJson = new Requestable(function (json) {
    return new Data_Tuple.Tuple(new Data_Maybe.Just(Data_MediaType_Common.applicationJSON), Data_Show.show(Data_Argonaut_Core.showJson)(json));
});
var requestableFormURLEncoded = new Requestable(function (form) {
    return new Data_Tuple.Tuple(new Data_Maybe.Just(Data_MediaType_Common.applicationFormURLEncoded), Data_FormURLEncoded.encode(form));
});
var defaultToRequest = function ($0) {
    return Data_Tuple.Tuple.create(Data_Maybe.Nothing.value)($0);
};
var requestableBlob = new Requestable(defaultToRequest);
var requestableDocument = new Requestable(defaultToRequest);
var requestableFloat32Array = new Requestable(defaultToRequest);
var requestableFloat64Array = new Requestable(defaultToRequest);
var requestableFormData = new Requestable(defaultToRequest);
var requestableInt16Array = new Requestable(defaultToRequest);
var requestableInt32Array = new Requestable(defaultToRequest);
var requestableInt8Array = new Requestable(defaultToRequest);
var requestableRequestContent = new Requestable(defaultToRequest);
var requestableString = new Requestable(defaultToRequest);
var requestableUint16Array = new Requestable(defaultToRequest);
var requestableUint32Array = new Requestable(defaultToRequest);
var requestableUint8Array = new Requestable(defaultToRequest);
var requestableUint8ClampedArray = new Requestable(defaultToRequest);
var requestableUnit = new Requestable(defaultToRequest);
module.exports = {
    Requestable: Requestable,
    toRequest: toRequest,
    requestableRequestContent: requestableRequestContent,
    requestableInt8Array: requestableInt8Array,
    requestableInt16Array: requestableInt16Array,
    requestableInt32Array: requestableInt32Array,
    requestableUint8Array: requestableUint8Array,
    requestableUint16Array: requestableUint16Array,
    requestableUint32Array: requestableUint32Array,
    requestableUint8ClampedArray: requestableUint8ClampedArray,
    requestableFloat32Array: requestableFloat32Array,
    requestableFloat64Array: requestableFloat64Array,
    requestableBlob: requestableBlob,
    requestableDocument: requestableDocument,
    requestableString: requestableString,
    requestableJson: requestableJson,
    requestableFormData: requestableFormData,
    requestableFormURLEncoded: requestableFormURLEncoded,
    requestableUnit: requestableUnit
};

},{"../Control.Semigroupoid":60,"../DOM.File.Types":63,"../DOM.Node.Types":64,"../DOM.XHR.Types":67,"../Data.Argonaut.Core":70,"../Data.ArrayBuffer.Types":81,"../Data.FormURLEncoded":122,"../Data.Maybe":156,"../Data.MediaType":158,"../Data.MediaType.Common":157,"../Data.Show":189,"../Data.Tuple":212,"../Prelude":263,"../Unsafe.Coerce":281}],246:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_File_Types = require("../DOM.File.Types");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Argonaut_Core = require("../Data.Argonaut.Core");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_MediaType_Common = require("../Data.MediaType.Common");
var Data_Show = require("../Data.Show");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ArrayBufferResponse = (function () {
    function ArrayBufferResponse() {

    };
    ArrayBufferResponse.value = new ArrayBufferResponse();
    return ArrayBufferResponse;
})();
var BlobResponse = (function () {
    function BlobResponse() {

    };
    BlobResponse.value = new BlobResponse();
    return BlobResponse;
})();
var DocumentResponse = (function () {
    function DocumentResponse() {

    };
    DocumentResponse.value = new DocumentResponse();
    return DocumentResponse;
})();
var JSONResponse = (function () {
    function JSONResponse() {

    };
    JSONResponse.value = new JSONResponse();
    return JSONResponse;
})();
var StringResponse = (function () {
    function StringResponse() {

    };
    StringResponse.value = new StringResponse();
    return StringResponse;
})();
var Respondable = function (fromResponse, responseType) {
    this.fromResponse = fromResponse;
    this.responseType = responseType;
};
var showResponseType = new Data_Show.Show(function (v) {
    if (v instanceof ArrayBufferResponse) {
        return "ArrayBufferResponse";
    };
    if (v instanceof BlobResponse) {
        return "BlobResponse";
    };
    if (v instanceof DocumentResponse) {
        return "DocumentResponse";
    };
    if (v instanceof JSONResponse) {
        return "JSONResponse";
    };
    if (v instanceof StringResponse) {
        return "StringResponse";
    };
    throw new Error("Failed pattern match at Network.HTTP.Affjax.Response line 41, column 1 - line 41, column 51: " + [ v.constructor.name ]);
});
var responseTypeToString = function (v) {
    if (v instanceof ArrayBufferResponse) {
        return "arraybuffer";
    };
    if (v instanceof BlobResponse) {
        return "blob";
    };
    if (v instanceof DocumentResponse) {
        return "document";
    };
    if (v instanceof JSONResponse) {
        return "text";
    };
    if (v instanceof StringResponse) {
        return "text";
    };
    throw new Error("Failed pattern match at Network.HTTP.Affjax.Response line 48, column 1 - line 48, column 61: " + [ v.constructor.name ]);
};
var responseType = function (dict) {
    return dict.responseType;
};
var responsableUnit = new Respondable(Data_Function["const"](Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit)), new Data_Tuple.Tuple(Data_Maybe.Nothing.value, StringResponse.value));
var responsableString = new Respondable(Data_Foreign.readString, new Data_Tuple.Tuple(Data_Maybe.Nothing.value, StringResponse.value));
var responsableJson = new Respondable(function ($8) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($8);
}, new Data_Tuple.Tuple(new Data_Maybe.Just(Data_MediaType_Common.applicationJSON), JSONResponse.value));
var responsableForeign = new Respondable(function ($9) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($9);
}, new Data_Tuple.Tuple(Data_Maybe.Nothing.value, JSONResponse.value));
var responsableDocument = new Respondable(Data_Foreign.unsafeReadTagged("Document"), new Data_Tuple.Tuple(Data_Maybe.Nothing.value, DocumentResponse.value));
var responsableBlob = new Respondable(Data_Foreign.unsafeReadTagged("Blob"), new Data_Tuple.Tuple(Data_Maybe.Nothing.value, BlobResponse.value));
var responsableArrayBuffer = new Respondable(Data_Foreign.unsafeReadTagged("ArrayBuffer"), new Data_Tuple.Tuple(Data_Maybe.Nothing.value, ArrayBufferResponse.value));
var fromResponse = function (dict) {
    return dict.fromResponse;
};
var eqResponseType = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof ArrayBufferResponse && v1 instanceof ArrayBufferResponse) {
            return true;
        };
        if (v instanceof BlobResponse && v1 instanceof BlobResponse) {
            return true;
        };
        if (v instanceof DocumentResponse && v1 instanceof DocumentResponse) {
            return true;
        };
        if (v instanceof JSONResponse && v1 instanceof JSONResponse) {
            return true;
        };
        if (v instanceof StringResponse && v1 instanceof StringResponse) {
            return true;
        };
        return false;
    };
});
module.exports = {
    ArrayBufferResponse: ArrayBufferResponse,
    BlobResponse: BlobResponse,
    DocumentResponse: DocumentResponse,
    JSONResponse: JSONResponse,
    StringResponse: StringResponse,
    responseTypeToString: responseTypeToString,
    Respondable: Respondable,
    responseType: responseType,
    fromResponse: fromResponse,
    eqResponseType: eqResponseType,
    showResponseType: showResponseType,
    responsableBlob: responsableBlob,
    responsableDocument: responsableDocument,
    responsableForeign: responsableForeign,
    responsableString: responsableString,
    responsableUnit: responsableUnit,
    responsableArrayBuffer: responsableArrayBuffer,
    responsableJson: responsableJson
};

},{"../Control.Applicative":4,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../DOM.File.Types":63,"../DOM.Node.Types":64,"../Data.Argonaut.Core":70,"../Data.ArrayBuffer.Types":81,"../Data.Eq":111,"../Data.Foreign":121,"../Data.Function":125,"../Data.Identity":142,"../Data.Maybe":156,"../Data.MediaType":158,"../Data.MediaType.Common":157,"../Data.Show":189,"../Data.Tuple":212,"../Data.Unit":220,"../Prelude":263,"../Unsafe.Coerce":281}],247:[function(require,module,exports){
(function (process){
/* global exports */
/* global XMLHttpRequest */
/* global module */
/* global process */
"use strict";

// module Network.HTTP.Affjax

// jshint maxparams: 5
exports._ajax = function (mkHeader, options, canceler, errback, callback) {
  var platformSpecific = { };
  if (typeof module !== "undefined" && module.require && !(typeof process !== "undefined" && process.versions["electron"])) {
    // We are on node.js
    platformSpecific.newXHR = function () {
      var XHR = module.require("xhr2");
      return new XHR();
    };

    platformSpecific.fixupUrl = function (url) {
      var urllib = module.require("url");
      var u = urllib.parse(url);
      u.protocol = u.protocol || "http:";
      u.hostname = u.hostname || "localhost";
      return urllib.format(u);
    };

    platformSpecific.getResponse = function (xhr) {
      return xhr.response;
    };
  } else {
    // We are in the browser
    platformSpecific.newXHR = function () {
      return new XMLHttpRequest();
    };

    platformSpecific.fixupUrl = function (url) {
      return url || "/";
    };

    platformSpecific.getResponse = function (xhr) {
      return xhr.response;
    };
  }

  return function () {
    var xhr = platformSpecific.newXHR();
    var fixedUrl = platformSpecific.fixupUrl(options.url);
    xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);
    if (options.headers) {
      try {
        for (var i = 0, header; (header = options.headers[i]) != null; i++) {
          xhr.setRequestHeader(header.field, header.value);
        }
      }
      catch (e) {
        errback(e)();
      }
    }
    xhr.onerror = function () {
      errback(new Error("AJAX request failed: " + options.method + " " + options.url))();
    };
    xhr.onload = function () {
      callback({
        status: xhr.status,
        headers: xhr.getAllResponseHeaders().split("\r\n")
          .filter(function (header) {
            return header.length > 0;
          })
          .map(function (header) {
            var i = header.indexOf(":");
            return mkHeader(header.substring(0, i))(header.substring(i + 2));
          }),
        response: platformSpecific.getResponse(xhr)
      })();
    };
    xhr.responseType = options.responseType;
    xhr.withCredentials = options.withCredentials;
    xhr.send(options.content);
    return canceler(xhr);
  };
};

// jshint maxparams: 4
exports._cancelAjax = function (xhr, cancelError, errback, callback) {
  return function () {
    try { xhr.abort(); } catch (e) { return callback(false)(); }
    return callback(true)();
  };
};


}).call(this,require('_process'))
},{"_process":283}],248:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM_XHR_Types = require("../DOM.XHR.Types");
var Data_Argonaut_Parser = require("../Data.Argonaut.Parser");
var Data_Array = require("../Data.Array");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_HTTP_Method = require("../Data.HTTP.Method");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Int = require("../Data.Int");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Tuple = require("../Data.Tuple");
var $$Math = require("../Math");
var Network_HTTP_Affjax_Request = require("../Network.HTTP.Affjax.Request");
var Network_HTTP_Affjax_Response = require("../Network.HTTP.Affjax.Response");
var Network_HTTP_RequestHeader = require("../Network.HTTP.RequestHeader");
var Network_HTTP_ResponseHeader = require("../Network.HTTP.ResponseHeader");
var Network_HTTP_StatusCode = require("../Network.HTTP.StatusCode");
var Prelude = require("../Prelude");
var retry = function (dictRequestable) {
    return function (policy) {
        return function (run) {
            return function (req) {
                var retryState = function (v) {
                    if (v instanceof Data_Either.Left) {
                        return Data_Either.Left.create(new Data_Either.Left(v.value0));
                    };
                    if (v instanceof Data_Either.Right) {
                        if (v.value0.status === 200) {
                            return new Data_Either.Right(v.value0);
                        };
                        var $49 = policy.shouldRetryWithStatusCode(v.value0.status);
                        if ($49) {
                            return Data_Either.Left.create(new Data_Either.Right(v.value0));
                        };
                        return new Data_Either.Right(v.value0);
                    };
                    throw new Error("Failed pattern match at Network.HTTP.Affjax line 214, column 5 - line 216, column 45: " + [ v.constructor.name ]);
                };
                var go = function (failureRef) {
                    return function (n) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Functor.map(Control_Monad_Aff.functorAff)(retryState)(Control_Monad_Aff.attempt(run(req))))(function (v) {
                            if (v instanceof Data_Either.Left) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(failureRef)(new Data_Maybe.Just(v.value0))))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Aff.delay(policy.delayCurve(n)))(function () {
                                        return go(failureRef)(n + 1 | 0);
                                    });
                                });
                            };
                            if (v instanceof Data_Either.Right) {
                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value0);
                            };
                            throw new Error("Failed pattern match at Network.HTTP.Affjax line 229, column 7 - line 234, column 32: " + [ v.constructor.name ]);
                        });
                    };
                };
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)))(function (v) {
                    var loop = go(v);
                    if (policy.timeout instanceof Data_Maybe.Nothing) {
                        return loop(1);
                    };
                    if (policy.timeout instanceof Data_Maybe.Just) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v1) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(loop(1))(function ($104) {
                                return Control_Monad_Aff_AVar.putVar(v1)(Data_Maybe.Just.create($104));
                            })))(function (v2) {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Aff.delay(policy.timeout.value0))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(v1)(Data_Maybe.Nothing.value))(function () {
                                        return Control_Monad_Aff.cancel(v2)(Control_Monad_Eff_Exception.error("Cancel"));
                                    });
                                })))(function (v3) {
                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(v1))(function (v4) {
                                        if (v4 instanceof Data_Maybe.Nothing) {
                                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v)))(function (v5) {
                                                if (v5 instanceof Data_Maybe.Nothing) {
                                                    return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Timeout"));
                                                };
                                                if (v5 instanceof Data_Maybe.Just) {
                                                    return Data_Either.either(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(v5.value0);
                                                };
                                                throw new Error("Failed pattern match at Network.HTTP.Affjax line 209, column 11 - line 211, column 61: " + [ v5.constructor.name ]);
                                            });
                                        };
                                        if (v4 instanceof Data_Maybe.Just) {
                                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v4.value0);
                                        };
                                        throw new Error("Failed pattern match at Network.HTTP.Affjax line 206, column 7 - line 212, column 31: " + [ v4.constructor.name ]);
                                    });
                                });
                            });
                        });
                    };
                    throw new Error("Failed pattern match at Network.HTTP.Affjax line 195, column 3 - line 212, column 31: " + [ policy.timeout.constructor.name ]);
                });
            };
        };
    };
};
var defaultRetryPolicy = {
    timeout: Data_Maybe.Nothing.value,
    delayCurve: function (n) {
        return Data_Time_Duration.Milliseconds($$Math.max(30.0 * 1000.0)(100.0 * $$Math.pow(2.0)(Data_Int.toNumber(n - 1 | 0))));
    },
    shouldRetryWithStatusCode: Data_Function["const"](false)
};
var defaultRequest = {
    method: new Data_Either.Left(Data_HTTP_Method.GET.value),
    url: "/",
    headers: [  ],
    content: Data_Maybe.Nothing.value,
    username: Data_Maybe.Nothing.value,
    password: Data_Maybe.Nothing.value,
    withCredentials: false
};
var cancelAjax = function (xhr) {
    return function (err) {
        return Control_Monad_Aff.makeAff(function (eb) {
            return function (cb) {
                return $foreign._cancelAjax(xhr, err, eb, cb);
            };
        });
    };
};
var affjax$prime = function (dictRequestable) {
    return function (dictRespondable) {
        return function (req) {
            return function (eb) {
                return function (cb) {
                    var responseSettings = Network_HTTP_Affjax_Response.responseType(dictRespondable);
                    var requestSettings = (function () {
                        var v = Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_Affjax_Request.toRequest(dictRequestable))(req.content);
                        if (v instanceof Data_Maybe.Nothing) {
                            return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
                        };
                        if (v instanceof Data_Maybe.Just) {
                            return new Data_Tuple.Tuple(v.value0.value0, new Data_Maybe.Just(v.value0.value1));
                        };
                        throw new Error("Failed pattern match at Network.HTTP.Affjax line 262, column 21 - line 264, column 49: " + [ v.constructor.name ]);
                    })();
                    var parseJSON = function ($105) {
                        return Data_Either.either(function ($106) {
                            return Data_Foreign.fail(Data_Foreign.JSONError.create($106));
                        })(function ($107) {
                            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Foreign.toForeign($107));
                        })(Data_Argonaut_Parser.jsonParser($105));
                    };
                    var fromResponse$prime = (function () {
                        var v = Data_Tuple.snd(responseSettings);
                        if (v instanceof Network_HTTP_Affjax_Response.JSONResponse) {
                            return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Network_HTTP_Affjax_Response.fromResponse(dictRespondable))(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(parseJSON)(Data_Foreign.readString));
                        };
                        return Network_HTTP_Affjax_Response.fromResponse(dictRespondable);
                    })();
                    var cb$prime = function (res) {
                        var v = Data_Functor.map(Data_Either.functorEither)(function (v1) {
                            var $72 = {};
                            for (var $73 in res) {
                                if ({}.hasOwnProperty.call(res, $73)) {
                                    $72[$73] = res[$73];
                                };
                            };
                            $72.response = v1;
                            return $72;
                        })(Control_Monad_Except.runExcept(fromResponse$prime(res.response)));
                        if (v instanceof Data_Either.Left) {
                            return eb(Control_Monad_Eff_Exception.error(Data_Show.show(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(v.value0)));
                        };
                        if (v instanceof Data_Either.Right) {
                            return cb(v.value0);
                        };
                        throw new Error("Failed pattern match at Network.HTTP.Affjax line 281, column 13 - line 283, column 26: " + [ v.constructor.name ]);
                    };
                    var addHeader = function (mh) {
                        return function (hs) {
                            if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Network_HTTP_RequestHeader.requestHeaderName)(mh.value0))(hs)) {
                                return Data_Array.snoc(hs)(mh.value0);
                            };
                            return hs;
                        };
                    };
                    var headers = addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_RequestHeader.ContentType.create)(Data_Tuple.fst(requestSettings)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_RequestHeader.Accept.create)(Data_Tuple.fst(responseSettings)))(req.headers));
                    var req$prime = {
                        method: Data_HTTP_Method.print(req.method),
                        url: req.url,
                        headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
                            return {
                                field: Network_HTTP_RequestHeader.requestHeaderName(h),
                                value: Network_HTTP_RequestHeader.requestHeaderValue(h)
                            };
                        })(headers),
                        content: Data_Nullable.toNullable(Data_Tuple.snd(requestSettings)),
                        responseType: Network_HTTP_Affjax_Response.responseTypeToString(Data_Tuple.snd(responseSettings)),
                        username: Data_Nullable.toNullable(req.username),
                        password: Data_Nullable.toNullable(req.password),
                        withCredentials: req.withCredentials
                    };
                    return $foreign._ajax(Network_HTTP_ResponseHeader.responseHeader, req$prime, cancelAjax, eb, cb$prime);
                };
            };
        };
    };
};
var affjax = function (dictRequestable) {
    return function (dictRespondable) {
        return function ($108) {
            return Control_Monad_Aff["makeAff'"](affjax$prime(dictRequestable)(dictRespondable)($108));
        };
    };
};
var $$delete = function (dictRespondable) {
    return function (u) {
        return affjax(Network_HTTP_Affjax_Request.requestableUnit)(dictRespondable)((function () {
            var $80 = {};
            for (var $81 in defaultRequest) {
                if ({}.hasOwnProperty.call(defaultRequest, $81)) {
                    $80[$81] = defaultRequest[$81];
                };
            };
            $80.method = new Data_Either.Left(Data_HTTP_Method.DELETE.value);
            $80.url = u;
            return $80;
        })());
    };
};
var delete_ = $$delete(Network_HTTP_Affjax_Response.responsableUnit);
var get = function (dictRespondable) {
    return function (u) {
        return affjax(Network_HTTP_Affjax_Request.requestableUnit)(dictRespondable)((function () {
            var $83 = {};
            for (var $84 in defaultRequest) {
                if ({}.hasOwnProperty.call(defaultRequest, $84)) {
                    $83[$84] = defaultRequest[$84];
                };
            };
            $83.url = u;
            return $83;
        })());
    };
};
var patch = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $86 = {};
                    for (var $87 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $87)) {
                            $86[$87] = defaultRequest[$87];
                        };
                    };
                    $86.method = new Data_Either.Left(Data_HTTP_Method.PATCH.value);
                    $86.url = u;
                    $86.content = new Data_Maybe.Just(c);
                    return $86;
                })());
            };
        };
    };
};
var patch_ = function (dictRequestable) {
    return patch(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var patch$prime = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $89 = {};
                    for (var $90 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $90)) {
                            $89[$90] = defaultRequest[$90];
                        };
                    };
                    $89.method = new Data_Either.Left(Data_HTTP_Method.PATCH.value);
                    $89.url = u;
                    $89.content = c;
                    return $89;
                })());
            };
        };
    };
};
var patch_$prime = function (dictRequestable) {
    return patch$prime(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var post = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $92 = {};
                    for (var $93 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $93)) {
                            $92[$93] = defaultRequest[$93];
                        };
                    };
                    $92.method = new Data_Either.Left(Data_HTTP_Method.POST.value);
                    $92.url = u;
                    $92.content = new Data_Maybe.Just(c);
                    return $92;
                })());
            };
        };
    };
};
var post_ = function (dictRequestable) {
    return post(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var post$prime = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $95 = {};
                    for (var $96 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $96)) {
                            $95[$96] = defaultRequest[$96];
                        };
                    };
                    $95.method = new Data_Either.Left(Data_HTTP_Method.POST.value);
                    $95.url = u;
                    $95.content = c;
                    return $95;
                })());
            };
        };
    };
};
var post_$prime = function (dictRequestable) {
    return post$prime(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var put = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $98 = {};
                    for (var $99 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $99)) {
                            $98[$99] = defaultRequest[$99];
                        };
                    };
                    $98.method = new Data_Either.Left(Data_HTTP_Method.PUT.value);
                    $98.url = u;
                    $98.content = new Data_Maybe.Just(c);
                    return $98;
                })());
            };
        };
    };
};
var put_ = function (dictRequestable) {
    return put(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var put$prime = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $101 = {};
                    for (var $102 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $102)) {
                            $101[$102] = defaultRequest[$102];
                        };
                    };
                    $101.method = new Data_Either.Left(Data_HTTP_Method.PUT.value);
                    $101.url = u;
                    $101.content = c;
                    return $101;
                })());
            };
        };
    };
};
var put_$prime = function (dictRequestable) {
    return put$prime(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
module.exports = {
    defaultRequest: defaultRequest,
    affjax: affjax,
    "affjax'": affjax$prime,
    get: get,
    post: post,
    post_: post_,
    "post'": post$prime,
    "post_'": post_$prime,
    put: put,
    put_: put_,
    "put'": put$prime,
    "put_'": put_$prime,
    "delete": $$delete,
    delete_: delete_,
    patch: patch,
    patch_: patch_,
    "patch'": patch$prime,
    "patch_'": patch_$prime,
    defaultRetryPolicy: defaultRetryPolicy,
    retry: retry
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Aff":20,"../Control.Monad.Aff.AVar":16,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Class":23,"../Control.Monad.Eff.Exception":28,"../Control.Monad.Eff.Ref":32,"../Control.Monad.Error.Class":41,"../Control.Monad.Except":43,"../Control.Monad.Except.Trans":42,"../Control.Semigroupoid":60,"../DOM.XHR.Types":67,"../Data.Argonaut.Parser":72,"../Data.Array":80,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Foreign":121,"../Data.Function":125,"../Data.Function.Uncurried":124,"../Data.Functor":130,"../Data.HTTP.Method":139,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.Int":146,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.MediaType":158,"../Data.Nullable":174,"../Data.Ring":181,"../Data.Semiring":187,"../Data.Show":189,"../Data.Time.Duration":204,"../Data.Tuple":212,"../Math":244,"../Network.HTTP.Affjax.Request":245,"../Network.HTTP.Affjax.Response":246,"../Network.HTTP.RequestHeader":249,"../Network.HTTP.ResponseHeader":250,"../Network.HTTP.StatusCode":251,"../Prelude":263,"./foreign":247}],249:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_MediaType = require("../Data.MediaType");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Accept = (function () {
    function Accept(value0) {
        this.value0 = value0;
    };
    Accept.create = function (value0) {
        return new Accept(value0);
    };
    return Accept;
})();
var ContentType = (function () {
    function ContentType(value0) {
        this.value0 = value0;
    };
    ContentType.create = function (value0) {
        return new ContentType(value0);
    };
    return ContentType;
})();
var RequestHeader = (function () {
    function RequestHeader(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    RequestHeader.create = function (value0) {
        return function (value1) {
            return new RequestHeader(value0, value1);
        };
    };
    return RequestHeader;
})();
var showRequestHeader = new Data_Show.Show(function (v) {
    if (v instanceof Accept) {
        return "(Accept " + (Data_Show.show(Data_MediaType.showMediaType)(v.value0) + ")");
    };
    if (v instanceof ContentType) {
        return "(ContentType " + (Data_Show.show(Data_MediaType.showMediaType)(v.value0) + ")");
    };
    if (v instanceof RequestHeader) {
        return "(RequestHeader " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 19, column 1 - line 19, column 49: " + [ v.constructor.name ]);
});
var requestHeaderValue = function (v) {
    if (v instanceof Accept) {
        return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
    };
    if (v instanceof ContentType) {
        return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
    };
    if (v instanceof RequestHeader) {
        return v.value1;
    };
    throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 29, column 1 - line 29, column 46: " + [ v.constructor.name ]);
};
var requestHeaderName = function (v) {
    if (v instanceof Accept) {
        return "Accept";
    };
    if (v instanceof ContentType) {
        return "Content-Type";
    };
    if (v instanceof RequestHeader) {
        return v.value0;
    };
    throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 24, column 1 - line 24, column 45: " + [ v.constructor.name ]);
};
var eqRequestHeader = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof Accept && v1 instanceof Accept) {
            return Data_Eq.eq(Data_MediaType.eqMediaType)(v.value0)(v1.value0);
        };
        if (v instanceof ContentType && v1 instanceof ContentType) {
            return Data_Eq.eq(Data_MediaType.eqMediaType)(v.value0)(v1.value0);
        };
        if (v instanceof RequestHeader && v1 instanceof RequestHeader) {
            return v.value0 === v1.value0 && v.value1 === v1.value1;
        };
        return false;
    };
});
module.exports = {
    Accept: Accept,
    ContentType: ContentType,
    RequestHeader: RequestHeader,
    requestHeaderName: requestHeaderName,
    requestHeaderValue: requestHeaderValue,
    eqRequestHeader: eqRequestHeader,
    showRequestHeader: showRequestHeader
};

},{"../Data.Eq":111,"../Data.HeytingAlgebra":141,"../Data.MediaType":158,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.Show":189,"../Prelude":263}],250:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var ResponseHeader = (function () {
    function ResponseHeader(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ResponseHeader.create = function (value0) {
        return function (value1) {
            return new ResponseHeader(value0, value1);
        };
    };
    return ResponseHeader;
})();
var showResponseHeader = new Data_Show.Show(function (v) {
    return "(ResponseHeader " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
});
var responseHeaderValue = function (v) {
    return v.value1;
};
var responseHeaderName = function (v) {
    return v.value0;
};
var responseHeader = function (field) {
    return function (value) {
        return new ResponseHeader(field, value);
    };
};
var genericResponseHeader = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Network.HTTP.ResponseHeader.ResponseHeader" && v.value1.length === 2)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(ResponseHeader.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][1](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Network.HTTP.ResponseHeader.ResponseHeader", [ {
        sigConstructor: "Network.HTTP.ResponseHeader.ResponseHeader",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Network.HTTP.ResponseHeader.ResponseHeader", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v.value1);
    } ]);
});
var eqResponseHeader = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v.value0 === v1.value0 && v.value1 === v1.value1;
    };
});
module.exports = {
    responseHeader: responseHeader,
    responseHeaderName: responseHeaderName,
    responseHeaderValue: responseHeaderValue,
    genericResponseHeader: genericResponseHeader,
    eqResponseHeader: eqResponseHeader,
    showResponseHeader: showResponseHeader
};

},{"../Control.Apply":6,"../Data.Eq":111,"../Data.Generic":138,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],251:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var StatusCode = function (x) {
    return x;
};
var showStatusCode = new Data_Show.Show(function (v) {
    return "(StatusCode " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});
var genericStatusCode = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Network.HTTP.StatusCode.StatusCode" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(StatusCode))(Data_Generic.fromSpine(Data_Generic.genericInt)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Network.HTTP.StatusCode.StatusCode", [ {
        sigConstructor: "Network.HTTP.StatusCode.StatusCode",
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Network.HTTP.StatusCode.StatusCode", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
    } ]);
});
var eqStatusCode = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v === v1;
    };
});
module.exports = {
    StatusCode: StatusCode,
    genericStatusCode: genericStatusCode,
    eqStatusCode: eqStatusCode,
    showStatusCode: showStatusCode
};

},{"../Control.Apply":6,"../Data.Eq":111,"../Data.Generic":138,"../Data.Maybe":156,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],252:[function(require,module,exports){
"use strict";

// module Partial.Unsafe

exports.unsafePartial = function (f) {
  return f();
};

},{}],253:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Partial = require("../Partial");
var unsafePartialBecause = function (v) {
    return function (x) {
        return $foreign.unsafePartial(function (dictPartial) {
            return x(dictPartial);
        });
    };
};
var unsafeCrashWith = function (msg) {
    return $foreign.unsafePartial(function (dictPartial) {
        return Partial.crashWith(dictPartial)(msg);
    });
};
module.exports = {
    unsafePartialBecause: unsafePartialBecause,
    unsafeCrashWith: unsafeCrashWith,
    unsafePartial: $foreign.unsafePartial
};

},{"../Partial":255,"./foreign":252}],254:[function(require,module,exports){
"use strict";

// module Partial

exports.crashWith = function () {
  return function (msg) {
    throw new Error(msg);
  };
};

},{}],255:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var crash = function (dictPartial) {
    return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
};
module.exports = {
    crash: crash,
    crashWith: $foreign.crashWith
};

},{"./foreign":254}],256:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Data_Symbol = require("../Data.Symbol");
var Pathy_Phantom = require("../Pathy.Phantom");
var Prelude = require("../Prelude");
var Type_Data_Boolean = require("../Type.Data.Boolean");
var Type_Data_Symbol = require("../Type.Data.Symbol");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Name = function (x) {
    return x;
};
var IsName = function (reflectName) {
    this.reflectName = reflectName;
};
var splitName = function (v) {
    return Data_Maybe.fromMaybe({
        name: v,
        ext: Data_Maybe.Nothing.value
    })(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_NonEmpty.lastIndexOf(".")(v))(function (v1) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_NonEmpty.take(v1)(v))(function (v2) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_NonEmpty.drop(v1 + 1 | 0)(v))(function (v3) {
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                    name: v2,
                    ext: new Data_Maybe.Just(v3)
                });
            });
        });
    }));
};
var showName = new Data_Show.Show(function (v) {
    return "(Name " + (Data_Show.show(Data_String_NonEmpty.showNonEmptyString)(v) + ")");
});
var reflectName = function (dict) {
    return dict.reflectName;
};
var ordName = Data_String_NonEmpty.ordNonEmptyString;
var newtypeName = new Data_Newtype.Newtype(function (n) {
    return n;
}, Name);
var joinName = function (v) {
    return Name((function () {
        if (v.ext instanceof Data_Maybe.Nothing) {
            return v.name;
        };
        if (v.ext instanceof Data_Maybe.Just) {
            return Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(v.name)(Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(Data_String_NonEmpty.singleton("."))(v.ext.value0));
        };
        throw new Error("Failed pattern match at Pathy.Name line 59, column 33 - line 61, column 49: " + [ v.ext.constructor.name ]);
    })());
};
var isNameNESymbol = function (dictIsSymbol) {
    return function (dictEquals) {
        return new IsName(function (v) {
            return Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
        });
    };
};
var extension = function ($27) {
    return (function (v) {
        return v.ext;
    })(splitName($27));
};
var eqName = Data_String_NonEmpty.eqNonEmptyString;
var alterExtension = function (f) {
    return function (n) {
        var spn = splitName(n);
        return joinName((function () {
            var $24 = {};
            for (var $25 in spn) {
                if ({}.hasOwnProperty.call(spn, $25)) {
                    $24[$25] = spn[$25];
                };
            };
            $24.ext = f(spn.ext);
            return $24;
        })());
    };
};
module.exports = {
    reflectName: reflectName,
    Name: Name,
    splitName: splitName,
    joinName: joinName,
    extension: extension,
    alterExtension: alterExtension,
    IsName: IsName,
    newtypeName: newtypeName,
    eqName: eqName,
    ordName: ordName,
    showName: showName,
    isNameNESymbol: isNameNESymbol
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Function":125,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.String":201,"../Data.String.NonEmpty":194,"../Data.Symbol":202,"../Pathy.Phantom":259,"../Prelude":263,"../Type.Data.Boolean":275,"../Type.Data.Symbol":277,"../Unsafe.Coerce":281}],257:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_String = require("../Data.String");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Pathy_Name = require("../Pathy.Name");
var Pathy_Path = require("../Pathy.Path");
var Pathy_Phantom = require("../Pathy.Phantom");
var Prelude = require("../Prelude");
var Parser = function (x) {
    return x;
};
var parsePath = function (v) {
    return v;
};
var parseRelDir = function (p) {
    return parsePath(p)(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Nothing.value);
};
var parseRelFile = function (p) {
    return parsePath(p)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Nothing.value);
};
var parseAbsFile = function (p) {
    return parsePath(p)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
};
var parseAbsDir = function (p) {
    return parsePath(p)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Nothing.value);
};
var buildPath = function (dictIsRelOrAbs) {
    return function (z) {
        return function (init) {
            return function (k) {
                return function (segs) {
                    var go = function (v) {
                        if (v instanceof Data_List_Types.Nil) {
                            return init;
                        };
                        if (v instanceof Data_List_Types.Cons) {
                            if (Data_String_NonEmpty.toString(v.value0) === "..") {
                                return Pathy_Path.parentOf(dictIsRelOrAbs)(go(v.value1));
                            };
                            if (Data_String_NonEmpty.toString(v.value0) === ".") {
                                return go(v.value1);
                            };
                            if (Data_Boolean.otherwise) {
                                return Pathy_Path.extendPath(go(v.value1))(v.value0);
                            };
                        };
                        throw new Error("Failed pattern match at Pathy.Parser line 77, column 10 - line 82, column 57: " + [ v.constructor.name ]);
                    };
                    if (segs instanceof Data_List_Types.Nil) {
                        return z;
                    };
                    if (segs instanceof Data_List_Types.Cons) {
                        if (Data_String_NonEmpty.toString(segs.value0) === "..") {
                            return k(new Data_Either.Left(Pathy_Path.parentOf(dictIsRelOrAbs)(go(segs.value1))));
                        };
                        if (Data_String_NonEmpty.toString(segs.value0) === ".") {
                            return k(new Data_Either.Left(go(segs.value1)));
                        };
                        if (Data_Boolean.otherwise) {
                            return k(new Data_Either.Right(Pathy_Path.extendPath(go(segs.value1))(segs.value0)));
                        };
                    };
                    throw new Error("Failed pattern match at Pathy.Parser line 69, column 3 - line 74, column 67: " + [ segs.constructor.name ]);
                };
            };
        };
    };
};
var asReversedList = Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(Data_List_Types.Cons.create))(Data_List_Types.Nil.value);
var posixParser = function (relDir) {
    return function (absDir) {
        return function (relFile) {
            return function (absFile) {
                return function (z) {
                    return function (v) {
                        if (v === "") {
                            return z;
                        };
                        if (v === "/") {
                            return absDir(Pathy_Path.rootDir);
                        };
                        var segs = asReversedList(Data_Array.mapMaybe(Data_String_NonEmpty.fromString)(Data_String.split("/")(v)));
                        var isFile = Data_String.takeRight(1)(v) !== "/";
                        var isAbs = Data_String.take(1)(v) === "/";
                        if (isAbs && isFile) {
                            return buildPath(Pathy_Phantom.absIsRelOrAbs)(z)(Pathy_Path.rootDir)(Data_Either.either(Data_Function["const"](z))(absFile))(segs);
                        };
                        if (isAbs && !isFile) {
                            return buildPath(Pathy_Phantom.absIsRelOrAbs)(z)(Pathy_Path.rootDir)(Data_Either.either(absDir)(absDir))(segs);
                        };
                        if (!isAbs && isFile) {
                            return buildPath(Pathy_Phantom.relIsRelOrAbs)(z)(Pathy_Path.currentDir)(Data_Either.either(Data_Function["const"](z))(relFile))(segs);
                        };
                        if (!isAbs && !isFile) {
                            return buildPath(Pathy_Phantom.relIsRelOrAbs)(z)(Pathy_Path.currentDir)(Data_Either.either(relDir)(relDir))(segs);
                        };
                        throw new Error("Failed pattern match at Pathy.Parser line 49, column 9 - line 53, column 77: " + [ isAbs.constructor.name, isFile.constructor.name ]);
                    };
                };
            };
        };
    };
};
module.exports = {
    Parser: Parser,
    posixParser: posixParser,
    parsePath: parsePath,
    parseRelFile: parseRelFile,
    parseAbsFile: parseAbsFile,
    parseRelDir: parseRelDir,
    parseAbsDir: parseAbsDir
};

},{"../Data.Array":80,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.List":151,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.String":201,"../Data.String.NonEmpty":194,"../Pathy.Name":256,"../Pathy.Path":258,"../Pathy.Phantom":259,"../Prelude":263}],258:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Data_Symbol = require("../Data.Symbol");
var Data_Tuple = require("../Data.Tuple");
var Partial_Unsafe = require("../Partial.Unsafe");
var Pathy_Name = require("../Pathy.Name");
var Pathy_Phantom = require("../Pathy.Phantom");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Init = (function () {
    function Init() {

    };
    Init.value = new Init();
    return Init;
})();
var ParentOf = (function () {
    function ParentOf(value0) {
        this.value0 = value0;
    };
    ParentOf.create = function (value0) {
        return new ParentOf(value0);
    };
    return ParentOf;
})();
var In = (function () {
    function In(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    In.create = function (value0) {
        return function (value1) {
            return new In(value0, value1);
        };
    };
    return In;
})();
var showPathRelDir = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Init) {
                return Pathy_Phantom.foldRelOrAbs(dictIsRelOrAbs)(Data_Function["const"]("currentDir"))(Data_Function["const"]("rootDir"))(v);
            };
            if (v instanceof ParentOf) {
                return "(parentOf " + (Data_Show.show(showPathRelDir(Pathy_Phantom.relIsRelOrAbs)(Pathy_Phantom.isDirOrFileDir))(v.value0) + ")");
            };
            if (v instanceof In) {
                return "(" + (Data_Show.show(showPathRelDir(dictIsRelOrAbs)(Pathy_Phantom.isDirOrFileDir))(v.value0) + (" </> " + (Pathy_Phantom.foldDirOrFile(dictIsDirOrFile)(function ($97) {
                    return (function (v1) {
                        return "dir " + v1;
                    })(Data_Show.show(Pathy_Name.showName)($97));
                })(function ($98) {
                    return (function (v1) {
                        return "file " + v1;
                    })(Data_Show.show(Pathy_Name.showName)($98));
                })(v.value1) + ")")));
            };
            throw new Error("Failed pattern match at Pathy.Path line 70, column 1 - line 70, column 76: " + [ v.constructor.name ]);
        });
    };
};
var rootDir = Init.value;
var renameTraverse = function (dictApplicative) {
    return function (f) {
        return function (v) {
            if (v instanceof In) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(In.create(v.value0))(f(v.value1));
            };
            return Control_Applicative.pure(dictApplicative)(v);
        };
    };
};
var rename = function (f) {
    return function ($99) {
        return Data_Newtype.un(Data_Identity.newtypeIdentity)(Data_Identity.Identity)(renameTraverse(Data_Identity.applicativeIdentity)(function ($100) {
            return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f($100));
        })($99));
    };
};
var setExtension = function (p) {
    return function (ext) {
        return rename(Pathy_Name.alterExtension(Data_Function["const"](Data_String_NonEmpty.fromString(ext))))(p);
    };
};
var refine = function (dictIsDirOrFile) {
    return function (f) {
        return function (d) {
            var go = function (dictIsDirOrFile1) {
                return function (v) {
                    if (v instanceof Init) {
                        return Init.value;
                    };
                    if (v instanceof ParentOf) {
                        return new ParentOf(go(Pathy_Phantom.isDirOrFileDir)(v.value0));
                    };
                    if (v instanceof In) {
                        return new In(go(Pathy_Phantom.isDirOrFileDir)(v.value0), Pathy_Phantom.onDirOrFile(dictIsDirOrFile1)(function (v1) {
                            return function ($101) {
                                return v1(d($101));
                            };
                        })(function (v1) {
                            return function ($102) {
                                return v1(f($102));
                            };
                        })(v.value1));
                    };
                    throw new Error("Failed pattern match at Pathy.Path line 302, column 5 - line 302, column 67: " + [ v.constructor.name ]);
                };
            };
            return go(dictIsDirOrFile);
        };
    };
};
var peelFile = function (v) {
    if (v instanceof Init) {
        return Partial_Unsafe.unsafeCrashWith("`Init` in Pathy.peelFile (this should be impossible)");
    };
    if (v instanceof ParentOf) {
        return Partial_Unsafe.unsafeCrashWith("`ParentOf` in Pathy.peelFile (this should be impossible)");
    };
    if (v instanceof In) {
        return new Data_Tuple.Tuple(v.value0, v.value1);
    };
    throw new Error("Failed pattern match at Pathy.Path line 214, column 12 - line 217, column 22: " + [ v.constructor.name ]);
};
var foldPath = function (r) {
    return function (f) {
        return function (g) {
            return function (v) {
                if (v instanceof Init) {
                    return r;
                };
                if (v instanceof ParentOf) {
                    return f(v.value0);
                };
                if (v instanceof In) {
                    return g(v.value0)(v.value1);
                };
                throw new Error("Failed pattern match at Pathy.Path line 199, column 18 - line 202, column 18: " + [ v.constructor.name ]);
            };
        };
    };
};
var name = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return foldPath(Data_Maybe.Nothing.value)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Function["const"](Data_Maybe.Just.create));
    };
};
var peel = foldPath(Data_Maybe.Nothing.value)(Data_Function["const"](Data_Maybe.Nothing.value))(function (p) {
    return function (n) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(p, n));
    };
});
var parentOf = function (dictIsRelOrAbs) {
    return Pathy_Phantom.onRelOrAbs(dictIsRelOrAbs)(function (coe) {
        return function (p) {
            return Data_Maybe.maybe(new ParentOf(p))(function ($103) {
                return coe(Data_Tuple.fst($103));
            })(peel(p));
        };
    })(function (coe) {
        return function ($104) {
            return coe(Data_Maybe.maybe(Init.value)(Data_Tuple.fst)(peel($104)));
        };
    });
};
var fileName = function ($105) {
    return Data_Tuple.snd(peelFile($105));
};
var extendPath = function (p) {
    return In.create(p);
};
var eqPath = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Init && y instanceof Init) {
            return true;
        };
        if (x instanceof ParentOf && y instanceof ParentOf) {
            return Data_Eq.eq(eqPath)(x.value0)(y.value0);
        };
        if (x instanceof In && y instanceof In) {
            return Data_Eq.eq(eqPath)(x.value0)(y.value0) && Data_Eq.eq(Pathy_Name.eqName)(x.value1)(y.value1);
        };
        return false;
    };
});
var ordPath = new Data_Ord.Ord(function () {
    return eqPath;
}, function (x) {
    return function (y) {
        if (x instanceof Init && y instanceof Init) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Init) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Init) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ParentOf && y instanceof ParentOf) {
            return Data_Ord.compare(ordPath)(x.value0)(y.value0);
        };
        if (x instanceof ParentOf) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ParentOf) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof In && y instanceof In) {
            var v = Data_Ord.compare(ordPath)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(Pathy_Name.ordName)(x.value1)(y.value1);
        };
        throw new Error("Failed pattern match at Pathy.Path line 68, column 8 - line 68, column 42: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var relativeTo = function (p) {
    var step = function (acc) {
        return function (v) {
            return function (v1) {
                if (Data_Eq.eq(eqPath)(v)(v1)) {
                    return acc;
                };
                if (v instanceof Init && v1 instanceof In) {
                    return step(new ParentOf(acc))(Init.value)(v1.value0);
                };
                if (v instanceof In && v1 instanceof Init) {
                    return new In(step(acc)(v.value0)(Init.value), v.value1);
                };
                if (v instanceof In) {
                    if (Data_Eq.eq(eqPath)(v.value0)(v1)) {
                        return new In(acc, v.value1);
                    };
                    if (Data_Boolean.otherwise) {
                        return new In(step(acc)(v.value0)(v1), v.value1);
                    };
                };
                return Partial_Unsafe.unsafeCrashWith("`ParentOf` in Pathy.relativeTo (this should be impossible)");
            };
        };
    };
    return function ($106) {
        return step(Init.value)(p)($106);
    };
};
var currentDir = Init.value;
var in$prime = In.create(currentDir);
var dir$prime = in$prime;
var dir = function (dictIsName) {
    return function ($107) {
        return dir$prime(Pathy_Name.reflectName(dictIsName)($107));
    };
};
var file$prime = in$prime;
var file = function (dictIsName) {
    return function ($108) {
        return file$prime(Pathy_Name.reflectName(dictIsName)($108));
    };
};
var appendPath = function (dictIsRelOrAbs) {
    return function (v) {
        return function (v1) {
            if (v instanceof Init && v1 instanceof Init) {
                return Init.value;
            };
            if (v instanceof ParentOf && v1 instanceof Init) {
                return new ParentOf(appendPath(Pathy_Phantom.relIsRelOrAbs)(v.value0)(Init.value));
            };
            if (v instanceof In && v1 instanceof Init) {
                return new In(appendPath(dictIsRelOrAbs)(v.value0)(Init.value), v.value1);
            };
            if (v1 instanceof ParentOf) {
                return parentOf(dictIsRelOrAbs)(appendPath(dictIsRelOrAbs)(v)(v1.value0));
            };
            if (v1 instanceof In) {
                return new In(appendPath(dictIsRelOrAbs)(v)(v1.value0), v1.value1);
            };
            throw new Error("Failed pattern match at Pathy.Path line 162, column 14 - line 167, column 34: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var parentAppend = function (dictIsRelOrAbs) {
    return function (d) {
        return function (p) {
            return appendPath(dictIsRelOrAbs)(parentOf(dictIsRelOrAbs)(d))(p);
        };
    };
};
module.exports = {
    rootDir: rootDir,
    currentDir: currentDir,
    dir: dir,
    "dir'": dir$prime,
    file: file,
    "file'": file$prime,
    "in'": in$prime,
    parentOf: parentOf,
    extendPath: extendPath,
    appendPath: appendPath,
    parentAppend: parentAppend,
    foldPath: foldPath,
    peel: peel,
    peelFile: peelFile,
    name: name,
    fileName: fileName,
    rename: rename,
    renameTraverse: renameTraverse,
    setExtension: setExtension,
    relativeTo: relativeTo,
    refine: refine,
    eqPath: eqPath,
    ordPath: ordPath,
    showPathRelDir: showPathRelDir
};

},{"../Control.Applicative":4,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Identity":142,"../Data.Maybe":156,"../Data.Newtype":171,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Data.String.NonEmpty":194,"../Data.Symbol":202,"../Data.Tuple":212,"../Partial.Unsafe":253,"../Pathy.Name":256,"../Pathy.Phantom":259,"../Prelude":263,"../Unsafe.Coerce":281}],259:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Data_Function = require("../Data.Function");
var Prelude = require("../Prelude");
var IsRelOrAbs = function (onRelOrAbs) {
    this.onRelOrAbs = onRelOrAbs;
};
var IsDirOrFile = function (onDirOrFile) {
    this.onDirOrFile = onDirOrFile;
};
var relIsRelOrAbs = new IsRelOrAbs(function (f) {
    return function (v) {
        return f(Control_Category.id(Control_Category.categoryFn));
    };
});
var onRelOrAbs = function (dict) {
    return dict.onRelOrAbs;
};
var onDirOrFile = function (dict) {
    return dict.onDirOrFile;
};
var isDirOrFileFile = new IsDirOrFile(function (v) {
    return function (f) {
        return f(Control_Category.id(Control_Category.categoryFn));
    };
});
var isDirOrFileDir = new IsDirOrFile(function (f) {
    return function (v) {
        return f(Control_Category.id(Control_Category.categoryFn));
    };
});
var foldRelOrAbs = function (dictIsRelOrAbs) {
    return function (f) {
        return function (g) {
            return onRelOrAbs(dictIsRelOrAbs)(Data_Function["const"](f))(Data_Function["const"](g));
        };
    };
};
var foldDirOrFile = function (dictIsDirOrFile) {
    return function (f) {
        return function (g) {
            return onDirOrFile(dictIsDirOrFile)(Data_Function["const"](f))(Data_Function["const"](g));
        };
    };
};
var absIsRelOrAbs = new IsRelOrAbs(function (v) {
    return function (f) {
        return f(Control_Category.id(Control_Category.categoryFn));
    };
});
module.exports = {
    onDirOrFile: onDirOrFile,
    onRelOrAbs: onRelOrAbs,
    IsRelOrAbs: IsRelOrAbs,
    foldRelOrAbs: foldRelOrAbs,
    IsDirOrFile: IsDirOrFile,
    foldDirOrFile: foldDirOrFile,
    relIsRelOrAbs: relIsRelOrAbs,
    absIsRelOrAbs: absIsRelOrAbs,
    isDirOrFileDir: isDirOrFileDir,
    isDirOrFileFile: isDirOrFileFile
};

},{"../Control.Category":11,"../Data.Function":125,"../Prelude":263}],260:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_String = require("../Data.String");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Partial_Unsafe = require("../Partial.Unsafe");
var Pathy_Name = require("../Pathy.Name");
var Pathy_Path = require("../Pathy.Path");
var Pathy_Phantom = require("../Pathy.Phantom");
var Pathy_Sandboxed = require("../Pathy.Sandboxed");
var Prelude = require("../Prelude");
var Escaper = function (x) {
    return x;
};
var slashEscaper = (function () {
    var dash = Data_String_NonEmpty.singleton("-");
    return Data_String_NonEmpty.replaceAll("/")(dash);
})();
var semigroupEscaper = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function ($29) {
            return v(v1($29));
        };
    };
});
var newtypeEscaper = new Data_Newtype.Newtype(function (n) {
    return n;
}, Escaper);
var printSegment = function (dictNewtype) {
    return function (printer) {
        return function ($30) {
            return Data_String_NonEmpty.toString(Data_Newtype.un(newtypeEscaper)(Escaper)(printer.escaper)(Data_Newtype.unwrap(dictNewtype)($30)));
        };
    };
};
var printPathRep = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return function (printer) {
            return function (inputPath) {
                var isAbs = Pathy_Phantom.foldRelOrAbs(dictIsRelOrAbs)(Data_Function["const"](false))(Data_Function["const"](true))(inputPath);
                var caseCurrent = (function () {
                    if (isAbs) {
                        return printer.root(Data_Maybe.Nothing.value);
                    };
                    return Data_String_NonEmpty.toString(Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(printer.current)(printer.sep));
                })();
                var go = function (dictIsRelOrAbs1) {
                    return function (dictIsDirOrFile1) {
                        return Pathy_Path.foldPath(caseCurrent)(caseParentOf)(caseIn(dictIsRelOrAbs1)(dictIsDirOrFile1));
                    };
                };
                var caseParentOf = function (p) {
                    return go(Pathy_Phantom.relIsRelOrAbs)(Pathy_Phantom.isDirOrFileDir)(p) + Data_String_NonEmpty.toString(Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(printer.up)(printer.sep));
                };
                var caseIn = function (dictIsRelOrAbs1) {
                    return function (dictIsDirOrFile1) {
                        return function (p) {
                            return function (name) {
                                return Pathy_Phantom.foldDirOrFile(dictIsDirOrFile1)(function (dirName) {
                                    return Pathy_Path.foldPath((function () {
                                        if (isAbs) {
                                            return printer.root(Data_Maybe.Just.create(Data_Newtype.unwrap(Pathy_Name.newtypeName)(dirName))) + Data_String_NonEmpty.toString(printer.sep);
                                        };
                                        return caseCurrent + (printSegment(Pathy_Name.newtypeName)(printer)(dirName) + Data_String_NonEmpty.toString(printer.sep));
                                    })())(function (p$prime) {
                                        return caseParentOf(p$prime) + (printSegment(Pathy_Name.newtypeName)(printer)(dirName) + Data_String_NonEmpty.toString(printer.sep));
                                    })(function (p$prime) {
                                        return function (n$prime) {
                                            return caseIn(dictIsRelOrAbs1)(Pathy_Phantom.isDirOrFileDir)(p$prime)(n$prime) + (printSegment(Pathy_Name.newtypeName)(printer)(dirName) + Data_String_NonEmpty.toString(printer.sep));
                                        };
                                    })(p);
                                })(function (fileName) {
                                    return go(dictIsRelOrAbs1)(Pathy_Phantom.isDirOrFileDir)(p) + printSegment(Pathy_Name.newtypeName)(printer)(fileName);
                                })(name);
                            };
                        };
                    };
                };
                return go(dictIsRelOrAbs)(dictIsDirOrFile)(inputPath);
            };
        };
    };
};
var printPath = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return function (r) {
            return function (sp) {
                var root = Pathy_Sandboxed.sandboxRoot(sp);
                var p = Pathy_Sandboxed.unsandbox(sp);
                return printPathRep(Pathy_Phantom.absIsRelOrAbs)(dictIsDirOrFile)(r)(Pathy_Phantom.foldRelOrAbs(dictIsRelOrAbs)(function (v) {
                    return Pathy_Path.appendPath(Pathy_Phantom.absIsRelOrAbs)(root)(v);
                })(Control_Category.id(Control_Category.categoryFn))(p));
            };
        };
    };
};
var unsafePrintPath = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return function (r) {
            return function (sp) {
                return printPathRep(dictIsRelOrAbs)(dictIsDirOrFile)(r)(Pathy_Sandboxed.unsandbox(sp));
            };
        };
    };
};
var monoidEscaper = new Data_Monoid.Monoid(function () {
    return semigroupEscaper;
}, Control_Category.id(Control_Category.categoryFn));
var $$escape = function (dictNewtype) {
    return function (r) {
        return function ($31) {
            return Data_String_NonEmpty.toString(Data_Newtype.un(newtypeEscaper)(Escaper)(r)(Data_Newtype.unwrap(dictNewtype)($31)));
        };
    };
};
var dotEscaper = function (s) {
    var v = Data_String_NonEmpty.toString(s);
    if (v === "..") {
        return Data_String_NonEmpty.unsafeFromString()("$dot$dot");
    };
    if (v === ".") {
        return Data_String_NonEmpty.unsafeFromString()("$dot");
    };
    return s;
};
var posixEscaper = Data_Semigroup.append(semigroupEscaper)(slashEscaper)(dotEscaper);
var posixPrinter = {
    root: Data_Maybe.maybe("/")(function (name) {
        return "/" + Data_String_NonEmpty.toString(Data_Newtype.un(newtypeEscaper)(Escaper)(posixEscaper)(name));
    }),
    current: Data_String_NonEmpty.singleton("."),
    up: Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(Data_String_NonEmpty.singleton("."))(Data_String_NonEmpty.singleton(".")),
    sep: Data_String_NonEmpty.singleton("/"),
    escaper: posixEscaper
};
var windowsEscaper = (function () {
    var dash = Data_String_NonEmpty.singleton("-");
    var badNameEscaper = Data_Foldable.fold(Data_Foldable.foldableArray)(monoidEscaper)(Data_Functor.map(Data_Functor.functorArray)(function (n) {
        return Data_String_NonEmpty.replaceAll(n)(Data_String_NonEmpty.cons("$")(n));
    })([ "CON", "PRN", "AUX", "NUL", "COM1", "COM2", "COM3", "COM4", "COM5", "COM6", "COM7", "COM8", "COM9", "LPT1", "LPT2", "LPT3", "LPT4", "LPT5", "LPT6", "LPT7", "LPT8", "LPT9" ]));
    var badCharEscaper = Data_Foldable.fold(Data_Foldable.foldableArray)(monoidEscaper)(Data_Functor.map(Data_Functor.functorArray)(function (c) {
        return Data_String_NonEmpty.replaceAll(Data_String.singleton(c))(dash);
    })([ "\\", "/", ":", "*", "?", "\"", "<", ">", "|" ]));
    return Data_Semigroup.append(semigroupEscaper)(badCharEscaper)(Data_Semigroup.append(semigroupEscaper)(badNameEscaper)(dotEscaper));
})();
var windowsPrinter = {
    root: Data_Maybe.maybe("\\")(function (drive) {
        return Data_String_NonEmpty.toString(drive) + ":";
    }),
    current: Data_String_NonEmpty.singleton("."),
    up: Data_Semigroup.append(Data_String_NonEmpty.semigroupNonEmptyString)(Data_String_NonEmpty.singleton("."))(Data_String_NonEmpty.singleton(".")),
    sep: Data_String_NonEmpty.singleton("\\"),
    escaper: windowsEscaper
};
var debugPrintPath = function (dictWarn) {
    return function (dictIsRelOrAbs) {
        return function (dictIsDirOrFile) {
            return printPathRep(dictIsRelOrAbs)(dictIsDirOrFile);
        };
    };
};
module.exports = {
    posixPrinter: posixPrinter,
    windowsPrinter: windowsPrinter,
    printPath: printPath,
    unsafePrintPath: unsafePrintPath,
    debugPrintPath: debugPrintPath,
    Escaper: Escaper,
    slashEscaper: slashEscaper,
    dotEscaper: dotEscaper,
    posixEscaper: posixEscaper,
    windowsEscaper: windowsEscaper,
    newtypeEscaper: newtypeEscaper,
    semigroupEscaper: semigroupEscaper,
    monoidEscaper: monoidEscaper
};

},{"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Newtype":171,"../Data.Semigroup":185,"../Data.String":201,"../Data.String.NonEmpty":194,"../Partial.Unsafe":253,"../Pathy.Name":256,"../Pathy.Path":258,"../Pathy.Phantom":259,"../Pathy.Sandboxed":261,"../Prelude":263}],261:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Pathy_Path = require("../Pathy.Path");
var Pathy_Phantom = require("../Pathy.Phantom");
var Prelude = require("../Prelude");
var SandboxedPath = (function () {
    function SandboxedPath(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SandboxedPath.create = function (value0) {
        return function (value1) {
            return new SandboxedPath(value0, value1);
        };
    };
    return SandboxedPath;
})();
var unsandbox = function (v) {
    return v.value1;
};
var showSandboxedPath = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return new Data_Show.Show(function (v) {
            return "(SandboxedPath " + (Data_Show.show(Pathy_Path.showPathRelDir(Pathy_Phantom.absIsRelOrAbs)(Pathy_Phantom.isDirOrFileDir))(v.value0) + (" " + (Data_Show.show(Pathy_Path.showPathRelDir(dictIsRelOrAbs)(dictIsDirOrFile))(v.value1) + ")")));
        });
    };
};
var sandboxRoot = function (v) {
    return v.value0;
};
var sandboxAny = function (p) {
    return new SandboxedPath(Pathy_Path.rootDir, p);
};
var sandbox = function (dictIsRelOrAbs) {
    return function (root) {
        var goesUp = Pathy_Path.foldPath(false)(Data_Function["const"](true))(function (p) {
            return function (v) {
                return goesUp(p);
            };
        });
        var go = function (f) {
            return function (coe) {
                return function (p) {
                    var $35 = goesUp(Pathy_Path.relativeTo(f(p))(root));
                    if ($35) {
                        return Data_Maybe.Nothing.value;
                    };
                    return new Data_Maybe.Just(coe(p));
                };
            };
        };
        return function ($49) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(SandboxedPath.create(root))(Pathy_Phantom.onRelOrAbs(dictIsRelOrAbs)(go(function (v) {
                return Pathy_Path.appendPath(Pathy_Phantom.absIsRelOrAbs)(root)(v);
            }))(go(Control_Category.id(Control_Category.categoryFn)))($49));
        };
    };
};
var eqSandboxedPath = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(Pathy_Path.eqPath)(x.value0)(y.value0) && Data_Eq.eq(Pathy_Path.eqPath)(x.value1)(y.value1);
            };
        });
    };
};
var ordSandboxedPath = function (dictIsRelOrAbs) {
    return function (dictIsDirOrFile) {
        return new Data_Ord.Ord(function () {
            return eqSandboxedPath(dictIsRelOrAbs)(dictIsDirOrFile);
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(Pathy_Path.ordPath)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(Pathy_Path.ordPath)(x.value1)(y.value1);
            };
        });
    };
};
module.exports = {
    sandbox: sandbox,
    sandboxAny: sandboxAny,
    sandboxRoot: sandboxRoot,
    unsandbox: unsandbox,
    eqSandboxedPath: eqSandboxedPath,
    ordSandboxedPath: ordSandboxedPath,
    showSandboxedPath: showSandboxedPath
};

},{"../Control.Category":11,"../Control.Semigroupoid":60,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Maybe":156,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Semigroup":185,"../Data.Show":189,"../Pathy.Path":258,"../Pathy.Phantom":259,"../Prelude":263}],262:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Pathy_Name = require("../Pathy.Name");
var Pathy_Parser = require("../Pathy.Parser");
var Pathy_Path = require("../Pathy.Path");
var Pathy_Phantom = require("../Pathy.Phantom");
var Pathy_Printer = require("../Pathy.Printer");
var Pathy_Sandboxed = require("../Pathy.Sandboxed");
module.exports = {};

},{"../Pathy.Name":256,"../Pathy.Parser":257,"../Pathy.Path":258,"../Pathy.Phantom":259,"../Pathy.Printer":260,"../Pathy.Sandboxed":261}],263:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_DivisionRing = require("../Data.DivisionRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_NaturalTransformation = require("../Data.NaturalTransformation");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
module.exports = {};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Category":11,"../Control.Monad":54,"../Control.Semigroupoid":60,"../Data.Boolean":90,"../Data.BooleanAlgebra":91,"../Data.Bounded":93,"../Data.CommutativeRing":98,"../Data.DivisionRing":107,"../Data.Eq":111,"../Data.EuclideanRing":113,"../Data.Field":114,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.NaturalTransformation":170,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.Unit":220,"../Data.Void":225}],264:[function(require,module,exports){
// module Signal.Channel

exports.channelP =
  function channelP(constant) {
    return function(v) {
      return function() {
        return constant(v);
      };
    };
  };

exports.sendP =
  function sendP(chan) {
    return function(v) {
      return function() {
        chan.set(v);
      };
    };
  };

exports.subscribe =
  function subscribe(chan) {
    return chan;
  };

},{}],265:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var send = $foreign.sendP;
var channel = $foreign.channelP(Signal.constant);
module.exports = {
    channel: channel,
    send: send,
    subscribe: $foreign.subscribe
};

},{"../Control.Monad.Eff":40,"../Prelude":263,"../Signal":271,"./foreign":264}],266:[function(require,module,exports){
// module Signal.DOM

exports.keyPressedP =
  function keyPressedP(constant) {
    return function(keyCode) {
      return function() {
        var out = constant(false);
        window.addEventListener("keydown", function(e) {
          if (e.keyCode === keyCode) out.set(true);
        });
        window.addEventListener("keyup", function(e) {
          if (e.keyCode === keyCode) out.set(false);
        });
        return out;
      };
    };
  };

exports.mouseButtonP =
  function mouseButtonP(constant) {
    return function(button) {
      return function() {
        var out = constant(false);
        window.addEventListener("mousedown", function(e) {
          if (e.button === button) out.set(true);
        });
        window.addEventListener("mouseup", function(e) {
          if (e.button === button) out.set(false);
        });
        return out;
      };
    };
  };

exports.touchP =
  function touchP(constant) {
    var out = constant([]);
    function report(e) {
      var touches = [], i, l = e.touches.length;
      for (i = 0; i < l; i++) touches.push(e.touches.item(i));
      out.set(touches);
    }
    window.addEventListener("touchstart", report);
    window.addEventListener("touchend", report);
    window.addEventListener("touchmove", report);
    window.addEventListener("touchcancel", report);
    return function() {
      return out;
    };
  };

exports.mousePosP =
  function mousePosP(constant) {
    var out = constant({x:0,y:0});
    window.addEventListener('mousemove', function(e) {
      if (e.pageX !== undefined && e.pageY !== undefined) {
        out.set({x: e.pageX, y: e.pageY});
      } else if (e.clientX !== undefined && e.clientY !== undefined) {
        out.set({
          x: e.clientX + document.body.scrollLeft +
             document.documentElement.scrollLeft,
          y: e.clientY + document.body.scrollTop +
             document.documentElement.scrollTop
        });
      } else {
        throw new Error('Mouse event has no coordinates I recognise!');
      }
    });
    return function() {
      return out;
    };
  };

exports.animationFrameP =
  function animationFrameP(constant) {
    return function(now) {
      return function() {
        var requestAnimFrame, cancelAnimFrame;
        if (window.requestAnimationFrame) {
          requestAnimFrame = window.requestAnimationFrame;
          cancelAnimFrame = window.cancelAnimationFrame;
        } else if (window.mozRequestAnimationFrame) {
          requestAnimFrame = window.mozRequestAnimationFrame;
          cancelAnimFrame = window.mozCancelAnimationFrame;
        } else if (window.webkitRequestAnimationFrame) {
          requestAnimFrame = window.webkitRequestAnimationFrame;
          cancelAnimFrame = window.webkitCancelAnimationFrame;
        } else if (window.msRequestAnimationFrame) {
          requestAnimFrame = window.msRequestAnimationFrame;
          cancelAnimFrame = window.msCancelAnimationFrame;
        } else if (window.oRequestAnimationFrame) {
          requestAnimFrame = window.oRequestAnimationFrame;
          cancelAnimFrame = window.oCancelAnimationFrame;
        } else {
          requestAnimFrame = function(cb) {setTimeout(function() {cb(now())}, 1000/60)};
          cancelAnimFrame = window.clearTimeout;
        }
        var out = constant(now());
        requestAnimFrame(function tick(t) {
          out.set(t); requestAnimFrame(tick);
        });
        return out;
      };
    };
  };

exports.windowDimensionsP = function windowDimensionsP(constant) {
  var out = constant({ w: window.innerWidth, h: window.innerHeight });
  window.addEventListener("resize", function() {
    out.set({ w: window.innerWidth, h: window.innerHeight });
  });
  return function() {
    return out;
  }
}

},{}],267:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Timer = require("../Control.Monad.Eff.Timer");
var DOM = require("../DOM");
var Data_Function = require("../Data.Function");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var Signal_Time = require("../Signal.Time");
var windowDimensions = $foreign.windowDimensionsP(Signal.constant);
var touch = $foreign.touchP(Signal.constant);
var tap = function __do() {
    var v = touch();
    return Signal.flippedMap(Signal.functorSignal)(v)(function (t) {
        if (t.length === 0) {
            return false;
        };
        return true;
    });
};
var mousePos = $foreign.mousePosP(Signal.constant);
var mouseButton = $foreign.mouseButtonP(Signal.constant);
var keyPressed = $foreign.keyPressedP(Signal.constant);
var animationFrame = $foreign.animationFrameP(Signal.constant)(Signal_Time.now);
module.exports = {
    animationFrame: animationFrame,
    keyPressed: keyPressed,
    mouseButton: mouseButton,
    touch: touch,
    tap: tap,
    mousePos: mousePos,
    windowDimensions: windowDimensions
};

},{"../Control.Applicative":4,"../Control.Bind":10,"../Control.Monad.Eff":40,"../Control.Monad.Eff.Timer":34,"../DOM":68,"../Data.Function":125,"../Prelude":263,"../Signal":271,"../Signal.Time":269,"./foreign":266}],268:[function(require,module,exports){
(function (process){
// module Signal.Time

function now() {
  var perf = typeof performance !== 'undefined' ? performance : null,
      proc = typeof process !== 'undefined' ? process : null;
  return (
    perf && (perf.now || perf.webkitNow || perf.msNow || perf.oNow || perf.mozNow) ||
    (proc && proc.hrtime && function() {
      var t = proc.hrtime();
      return (t[0] * 1e9 + t[1]) / 1e6;
    }) ||
    Date.now
  ).call(perf);
};

exports.now = now;

exports.everyP = function everyP(constant) {
  return function(t) {
    var out = constant(now());
    setInterval(function() {
      out.set(now());
    }, t);
    return out;
  };
};

exports.delayP = function delayP(constant) {
  return function(t) {
    return function(sig) {
      var out = constant(sig.get());
      var first = true;
      sig.subscribe(function(val) {
        if (first) {
          first = false;
        } else {
          setTimeout(function() {
            out.set(val);
          }, t);
        }
      });
      return out;
    }
  };
};

exports.sinceP = function sinceP(constant) {
  return function(t) {
    return function(sig) {
      var out = constant(false);
      var first = true;
      var timer = undefined;
      var tick = function() {
        out.set(false);
        timer = undefined;
      };
      sig.subscribe(function() {
        if (first) {
          first = false;
          return;
        }
        if (timer === undefined) {
          out.set(true);
          timer = setTimeout(tick, t);
        } else {
          clearTimeout(timer);
          timer = setTimeout(tick, t);
        }
      });
      return out;
    }
  };
};

}).call(this,require('_process'))
},{"_process":283}],269:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Timer = require("../Control.Monad.Eff.Timer");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var since = $foreign.sinceP(Signal.constant);
var second = 1000.0;
var millisecond = 1.0;
var every = $foreign.everyP(Signal.constant);
var delay = $foreign.delayP(Signal.constant);
var debounce = function (t) {
    return function (s) {
        var whenEqual = function (value) {
            return function (input) {
                return Signal.filter(Data_Eq.eq(Data_Eq.eqBoolean)(value))(value)(input);
            };
        };
        var whenChangeTo = function (value) {
            return function (input) {
                return whenEqual(value)(Signal.dropRepeats(Data_Eq.eqBoolean)(input));
            };
        };
        var leading = whenChangeTo(false)(since(t)(s));
        return Signal.sampleOn(leading)(s);
    };
};
module.exports = {
    every: every,
    delay: delay,
    since: since,
    debounce: debounce,
    millisecond: millisecond,
    second: second,
    now: $foreign.now
};

},{"../Control.Monad.Eff":40,"../Control.Monad.Eff.Timer":34,"../Data.Eq":111,"../Data.Function":125,"../Prelude":263,"../Signal":271,"./foreign":268}],270:[function(require,module,exports){
// module Signal

function make(initial) {
  var subs = [];
  var val = initial;
  var sig = {
    subscribe: function(sub) {
      subs.push(sub);
      sub(val);
    },
    get: function() { return val; },
    set: function(newval) {
      val = newval;
      subs.forEach(function(sub) { sub(newval); });
    }
  };
  return sig;
};

exports.constant = make;

exports.mapSig = function(fun) {
  return function(sig) {
    var out = make(fun(sig.get()));
    sig.subscribe(function(val) { out.set(fun(val)); });
    return out;
  };
};


exports.applySig = function(fun) {
  return function(sig) {
    var out = make(fun.get()(sig.get()));
    var produce = function() { out.set(fun.get()(sig.get())); };
    fun.subscribe(produce);
    sig.subscribe(produce);
    return out;
  };
};

exports.merge = function(sig1) {
  return function(sig2) {
    var out = make(sig1.get());
    sig2.subscribe(out.set);
    sig1.subscribe(out.set);
    return out;
  };
};

exports.foldp = function(fun) {
  return function(seed) {
    return function(sig) {
      var acc = seed;
      var out = make(acc);
      sig.subscribe(function(val) {
        acc = fun(val)(acc);
        out.set(acc);
      });
      return out;
    };
  };
};

exports.sampleOn = function(sig1) {
  return function(sig2) {
    var out = make(sig2.get());
    sig1.subscribe(function() {
      out.set(sig2.get());
    });
    return out;
  };
};

exports.dropRepeats = function(eq) {
  return function(sig) {
    var val = sig.get();
    var out = make(val);
    sig.subscribe(function(newval) {
      if (!eq["eq"](val)(newval)) {
        val = newval;
        out.set(val);
      }
    });
    return out;
  };
};

exports["dropRepeats'"] = function(sig) {
  var val = sig.get();
  var out = make(val);
  sig.subscribe(function(newval) {
    if (val !== newval) {
      val = newval;
      out.set(val);
    }
  });
  return out;
};

exports.runSignal =
  function runSignal(sig) {
    return function() {
      sig.subscribe(function(val) {
        val();
      });
      return {};
    };
  };

exports.unwrap = function(sig) {
  return function() {
    var out = make(sig.get()());
    sig.subscribe(function(val) { out.set(val()); });
    return out;
  };
};

exports.filter = function(fn) {
  return function(seed) {
    return function(sig) {
      var out = make(fn(sig.get()) ? sig.get() : seed);
      sig.subscribe(function(val) { if (fn(val)) out.set(val); });
      return out;
    };
  };
};

exports.flattenArray = function(sig) {
  return function(seed) {
    var first = sig.get().slice();
    if (first.length > 0) {
      seed = first[0];
    } else {
      first = null;
    }
    var out = make(seed);
    var feed = function(items) { items.forEach(out.set); };
    setTimeout(function() { sig.subscribe(function(val) {
      if (first === null) {
        feed(val);
      } else {
        feed(first.slice(1));
        first = null;
      }
    }); }, 0);
    return out;
  };
};

},{}],271:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var squigglyMap = function (dictFunctor) {
    return Data_Functor.map(dictFunctor);
};
var squigglyApply = function (dictApply) {
    return Control_Apply.apply(dictApply);
};
var semigroupSignal = new Data_Semigroup.Semigroup($foreign.merge);
var monoidSignal = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupSignal;
    }, $foreign.constant(Data_Monoid.mempty(dictMonoid)));
};
var mergeMany = function (dictFunctor) {
    return function (dictFoldable) {
        return function (sigs) {
            var mergeMaybe = function (v) {
                return function (v1) {
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return v;
                    };
                    if (v instanceof Data_Maybe.Nothing) {
                        return v1;
                    };
                    if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just($foreign.merge(v.value0)(v1.value0));
                    };
                    throw new Error("Failed pattern match at Signal line 53, column 9 - line 53, column 33: " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Data_Foldable.foldl(dictFoldable)(mergeMaybe)(Data_Maybe.Nothing.value)(Data_Functor.map(dictFunctor)(Data_Maybe.Just.create)(sigs));
        };
    };
};
var functorSignal = new Data_Functor.Functor($foreign.mapSig);
var flippedMap = function (dictFunctor) {
    return Data_Function.flip(Data_Functor.map(dictFunctor));
};
var flatten = function (dictFunctor) {
    return function (dictFoldable) {
        return function (sig) {
            return $foreign.flattenArray(flippedMap(functorSignal)(sig)(function ($14) {
                return Data_Foldable.fold(dictFoldable)(Data_Monoid.monoidArray)(Data_Functor.map(dictFunctor)(function (i) {
                    return [ i ];
                })($14));
            }));
        };
    };
};
var filterMap = function (f) {
    return function (def) {
        return function (sig) {
            return Data_Functor.map(functorSignal)(Data_Maybe.fromMaybe(def))($foreign.filter(Data_Maybe.isJust)(new Data_Maybe.Just(def))(Data_Functor.map(functorSignal)(f)(sig)));
        };
    };
};
var applySignal = new Control_Apply.Apply(function () {
    return functorSignal;
}, $foreign.applySig);
var map2 = function (f) {
    return function (a) {
        return function (b) {
            return squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b);
        };
    };
};
var map3 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c);
            };
        };
    };
};
var map4 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c))(d);
                };
            };
        };
    };
};
var map5 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c))(d))(e);
                    };
                };
            };
        };
    };
};
var applicativeSignal = new Control_Applicative.Applicative(function () {
    return applySignal;
}, $foreign.constant);
module.exports = {
    mergeMany: mergeMany,
    filterMap: filterMap,
    flatten: flatten,
    squigglyMap: squigglyMap,
    squigglyApply: squigglyApply,
    flippedMap: flippedMap,
    map2: map2,
    map3: map3,
    map4: map4,
    map5: map5,
    functorSignal: functorSignal,
    applySignal: applySignal,
    applicativeSignal: applicativeSignal,
    semigroupSignal: semigroupSignal,
    monoidSignal: monoidSignal,
    constant: $foreign.constant,
    merge: $foreign.merge,
    foldp: $foreign.foldp,
    sampleOn: $foreign.sampleOn,
    dropRepeats: $foreign.dropRepeats,
    "dropRepeats'": $foreign["dropRepeats'"],
    runSignal: $foreign.runSignal,
    unwrap: $foreign.unwrap,
    filter: $foreign.filter,
    flattenArray: $foreign.flattenArray
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Monad.Eff":40,"../Control.Semigroupoid":60,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Semigroup":185,"../Prelude":263,"./foreign":270}],272:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser");
var withError = function (p) {
    return function (msg) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Text_Parsing_StringParser.fail(msg));
    };
};
var sepEndBy1 = function (p) {
    return function (sep) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sep)(function (v1) {
                return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sepEndBy(p)(sep))(function (v2) {
                    return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_List_Types.Cons(v, v2));
                });
            }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List.singleton(v)));
        });
    };
};
var sepEndBy = function (p) {
    return function (sep) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(sepEndBy1(p)(sep))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value));
    };
};
var optional = function (p) {
    return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
    }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit));
};
var option = function (a) {
    return function (p) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
    };
};
var optionMaybe = function (p) {
    return option(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Maybe.Just.create)(p));
};
var many1Till = function (p) {
    return function (end) {
        var ending = function (acc) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(end)(function (v) {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Control_Monad_Rec_Class.Done(Data_List.reverse(acc)));
            });
        };
        var $$continue = function (acc) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Control_Monad_Rec_Class.Loop(new Data_List_Types.Cons(v, acc)));
            });
        };
        var inner = function (acc) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(ending(acc))($$continue(acc));
        };
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return Control_Monad_Rec_Class.tailRecM(Text_Parsing_StringParser.monadRecParser)(inner)(Control_Applicative.pure(Data_List_Types.applicativeList)(v));
        });
    };
};
var manyTill = function (p) {
    return function (end) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(end)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value)))(many1Till(p)(end));
    };
};
var many = Data_List.manyRec(Text_Parsing_StringParser.monadRecParser)(Text_Parsing_StringParser.alternativeParser);
var many1 = function (p) {
    return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_Types.Cons.create)(p))(many(p));
};
var sepBy1 = function (p) {
    return function (sep) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(sep)(p)))(function (v1) {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_List_Types.Cons(v, v1));
            });
        });
    };
};
var sepBy = function (p) {
    return function (sep) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(sepBy1(p)(sep))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value));
    };
};
var lookAhead = function (v) {
    return function (s) {
        var v1 = v(s);
        if (v1 instanceof Data_Either.Right) {
            return new Data_Either.Right({
                result: v1.value0.result,
                suffix: s
            });
        };
        return v1;
    };
};
var endBy1 = function (p) {
    return function (sep) {
        return many1(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(p)(sep));
    };
};
var endBy = function (p) {
    return function (sep) {
        return many(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(p)(sep));
    };
};
var choice = function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_StringParser.altParser))(Text_Parsing_StringParser.fail("Nothing to parse"));
};
var chainr1$prime = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(f)(function (v) {
                return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(chainr1(p)(f))(function (v1) {
                    return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v(a)(v1));
                });
            }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var chainr1 = function (p) {
    return function (f) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return chainr1$prime(p)(f)(v);
        });
    };
};
var chainr = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(chainr1(p)(f))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var chainl1$prime = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(f)(function (v) {
                return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v1) {
                    return chainl1$prime(p)(f)(v(a)(v1));
                });
            }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var chainl1 = function (p) {
    return function (f) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return chainl1$prime(p)(f)(v);
        });
    };
};
var chainl = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(chainl1(p)(f))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var between = function (open) {
    return function (close) {
        return function (p) {
            return Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(open)(p))(close);
        };
    };
};
module.exports = {
    lookAhead: lookAhead,
    many: many,
    many1: many1,
    withError: withError,
    between: between,
    option: option,
    optional: optional,
    optionMaybe: optionMaybe,
    sepBy: sepBy,
    sepBy1: sepBy1,
    sepEndBy: sepEndBy,
    sepEndBy1: sepEndBy1,
    endBy1: endBy1,
    endBy: endBy,
    chainr: chainr,
    chainl: chainl,
    chainl1: chainl1,
    "chainl1'": chainl1$prime,
    chainr1: chainr1,
    "chainr1'": chainr1$prime,
    choice: choice,
    manyTill: manyTill,
    many1Till: many1Till
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Lazy":15,"../Control.Monad.Rec.Class":47,"../Data.Either":108,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.List":151,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Unit":220,"../Prelude":263,"../Text.Parsing.StringParser":274}],273:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Char = require("../Data.Char");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_String_Regex = require("../Data.String.Regex");
var Data_String_Regex_Flags = require("../Data.String.Regex.Flags");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser");
var Text_Parsing_StringParser_Combinators = require("../Text.Parsing.StringParser.Combinators");
var string = function (nt) {
    return function (s) {
        if (Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String["indexOf'"](nt)(s.pos)(s.str))(new Data_Maybe.Just(s.pos))) {
            return new Data_Either.Right({
                result: nt,
                suffix: {
                    str: s.str,
                    pos: s.pos + Data_String.length(nt) | 0
                }
            });
        };
        return new Data_Either.Left({
            pos: s.pos,
            error: new Text_Parsing_StringParser.ParseError("Expected '" + (nt + "'."))
        });
    };
};
var regex = function (pat) {
    var pattern = (function () {
        var v = Data_String.stripPrefix("^")(pat);
        if (v instanceof Data_Maybe.Nothing) {
            return "^" + pat;
        };
        return pat;
    })();
    var matchRegex = function (r) {
        return function (v) {
            var remainder = Data_String.drop(v.pos)(v.str);
            var v1 = Data_Array.uncons(Data_Maybe.fromMaybe([  ])(Data_String_Regex.match(r)(remainder)));
            if (v1 instanceof Data_Maybe.Just && v1.value0.head instanceof Data_Maybe.Just) {
                return new Data_Either.Right({
                    result: v1.value0.head.value0,
                    suffix: {
                        str: v.str,
                        pos: v.pos + Data_String.length(v1.value0.head.value0) | 0
                    }
                });
            };
            return new Data_Either.Left({
                pos: v.pos,
                error: new Text_Parsing_StringParser.ParseError("no match")
            });
        };
    };
    var v = Data_String_Regex.regex(pattern)(Data_String_Regex_Flags.noFlags);
    if (v instanceof Data_Either.Left) {
        return Text_Parsing_StringParser.fail("Text.Parsing.StringParser.String.regex': illegal regex " + pat);
    };
    if (v instanceof Data_Either.Right) {
        return matchRegex(v.value0);
    };
    throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 121, column 3 - line 125, column 19: " + [ v.constructor.name ]);
};
var eof = function (s) {
    if (s.pos < Data_String.length(s.str)) {
        return new Data_Either.Left({
            pos: s.pos,
            error: new Text_Parsing_StringParser.ParseError("Expected EOF")
        });
    };
    return new Data_Either.Right({
        result: Data_Unit.unit,
        suffix: s
    });
};
var anyChar = function (v) {
    var v1 = Data_String.charAt(v.pos)(v.str);
    if (v1 instanceof Data_Maybe.Just) {
        return new Data_Either.Right({
            result: v1.value0,
            suffix: {
                str: v.str,
                pos: v.pos + 1 | 0
            }
        });
    };
    if (v1 instanceof Data_Maybe.Nothing) {
        return new Data_Either.Left({
            pos: v.pos,
            error: new Text_Parsing_StringParser.ParseError("Unexpected EOF")
        });
    };
    throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 45, column 3 - line 47, column 64: " + [ v1.constructor.name ]);
};
var anyDigit = Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
    var $39 = v >= "0" && v <= "9";
    if ($39) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
    };
    return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(v) + " is not a digit"));
}));
var lowerCaseChar = Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
    var $41 = Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqInt)(Data_Char.toCharCode(v))(Data_Array.range(97)(122));
    if ($41) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
    };
    return Text_Parsing_StringParser.fail("Expected a lower case character but found " + Data_Show.show(Data_Show.showChar)(v));
}));
var satisfy = function (f) {
    return Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
        var $43 = f(v);
        if ($43) {
            return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
        };
        return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(v) + " did not satisfy predicate"));
    }));
};
var $$char = function (c) {
    return Text_Parsing_StringParser_Combinators.withError(satisfy(function (v) {
        return v === c;
    }))("Could not match character " + Data_Show.show(Data_Show.showChar)(c));
};
var noneOf = function (dictFoldable) {
    return function ($47) {
        return satisfy(Data_Function.flip(Data_Foldable.notElem(dictFoldable)(Data_Eq.eqChar))($47));
    };
};
var oneOf = function (dictFoldable) {
    return function ($48) {
        return satisfy(Data_Function.flip(Data_Foldable.elem(dictFoldable)(Data_Eq.eqChar))($48));
    };
};
var whiteSpace = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(satisfy(function (c) {
    return c === "\x0a" || (c === "\x0d" || (c === " " || c === "\x09"));
})))(function (v) {
    return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String.singleton)(v));
});
var skipSpaces = Data_Functor["void"](Text_Parsing_StringParser.functorParser)(whiteSpace);
var upperCaseChar = Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
    var $46 = Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqInt)(Data_Char.toCharCode(v))(Data_Array.range(65)(90));
    if ($46) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
    };
    return Text_Parsing_StringParser.fail("Expected an upper case character but found " + Data_Show.show(Data_Show.showChar)(v));
}));
var anyLetter = Text_Parsing_StringParser_Combinators.withError(Control_Alt.alt(Text_Parsing_StringParser.altParser)(lowerCaseChar)(upperCaseChar))("Expected a letter");
var alphaNum = Text_Parsing_StringParser_Combinators.withError(Control_Alt.alt(Text_Parsing_StringParser.altParser)(anyLetter)(anyDigit))("Expected a letter or a number");
module.exports = {
    eof: eof,
    anyChar: anyChar,
    anyDigit: anyDigit,
    string: string,
    satisfy: satisfy,
    "char": $$char,
    whiteSpace: whiteSpace,
    skipSpaces: skipSpaces,
    oneOf: oneOf,
    noneOf: noneOf,
    lowerCaseChar: lowerCaseChar,
    upperCaseChar: upperCaseChar,
    anyLetter: anyLetter,
    alphaNum: alphaNum,
    regex: regex
};

},{"../Control.Alt":2,"../Control.Applicative":4,"../Control.Bind":10,"../Control.Semigroupoid":60,"../Data.Array":80,"../Data.Char":97,"../Data.Either":108,"../Data.Eq":111,"../Data.Foldable":116,"../Data.Function":125,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.List.Types":150,"../Data.Maybe":156,"../Data.Monoid":169,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Data.String":201,"../Data.String.Regex":197,"../Data.String.Regex.Flags":195,"../Data.Unit":220,"../Prelude":263,"../Text.Parsing.StringParser":274,"../Text.Parsing.StringParser.Combinators":272}],274:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var ParseError = (function () {
    function ParseError(value0) {
        this.value0 = value0;
    };
    ParseError.create = function (value0) {
        return new ParseError(value0);
    };
    return ParseError;
})();
var Parser = function (x) {
    return x;
};
var unParser = function (v) {
    return v;
};
var $$try = function (v) {
    return function (v1) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v2) {
            var $34 = {};
            for (var $35 in v2) {
                if ({}.hasOwnProperty.call(v2, $35)) {
                    $34[$35] = v2[$35];
                };
            };
            $34.pos = v1.pos;
            return $34;
        })(v(v1));
    };
};
var showParseError = new Data_Show.Show(function (v) {
    return v.value0;
});
var runParser = function (v) {
    return function (s) {
        return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(function (v1) {
            return v1.error;
        })(function (v1) {
            return v1.result;
        })(v({
            str: s,
            pos: 0
        }));
    };
};
var lazyParser = new Control_Lazy.Lazy(function (f) {
    return Parser(function (str) {
        return unParser(f(Data_Unit.unit))(str);
    });
});
var functorParser = new Data_Functor.Functor(function (f) {
    return function (v) {
        return function ($83) {
            return Data_Functor.map(Data_Either.functorEither)(function (v1) {
                return {
                    result: f(v1.result),
                    suffix: v1.suffix
                };
            })(v($83));
        };
    };
});
var fail = function (msg) {
    return function (v) {
        return new Data_Either.Left({
            pos: v.pos,
            error: new ParseError(msg)
        });
    };
};
var eqParseError = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x.value0 === y.value0;
    };
});
var ordParseError = new Data_Ord.Ord(function () {
    return eqParseError;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
    };
});
var applyParser = new Control_Apply.Apply(function () {
    return functorParser;
}, function (v) {
    return function (v1) {
        return function (s) {
            return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v2) {
                return Control_Bind.bind(Data_Either.bindEither)(v1(v2.suffix))(function (v3) {
                    return Control_Applicative.pure(Data_Either.applicativeEither)({
                        result: v2.result(v3.result),
                        suffix: v3.suffix
                    });
                });
            });
        };
    };
});
var bindParser = new Control_Bind.Bind(function () {
    return applyParser;
}, function (v) {
    return function (f) {
        return function (s) {
            return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v1) {
                return unParser(f(v1.result))(v1.suffix);
            });
        };
    };
});
var semigroupParser = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParser)(Data_Semigroup.append(dictSemigroup)));
};
var applicativeParser = new Control_Applicative.Applicative(function () {
    return applyParser;
}, function (a) {
    return function (s) {
        return new Data_Either.Right({
            result: a,
            suffix: s
        });
    };
});
var monadParser = new Control_Monad.Monad(function () {
    return applicativeParser;
}, function () {
    return bindParser;
});
var monadRecParser = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadParser;
}, function (f) {
    return function (a) {
        var split = function (v) {
            if (v.result instanceof Control_Monad_Rec_Class.Loop) {
                return new Control_Monad_Rec_Class.Loop({
                    state: v.result.value0,
                    str: v.suffix
                });
            };
            if (v.result instanceof Control_Monad_Rec_Class.Done) {
                return new Control_Monad_Rec_Class.Done({
                    result: v.result.value0,
                    suffix: v.suffix
                });
            };
            throw new Error("Failed pattern match at Text.Parsing.StringParser line 88, column 7 - line 88, column 70: " + [ v.constructor.name ]);
        };
        return function (str) {
            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEither)(function (st) {
                return Data_Functor.map(Data_Either.functorEither)(split)(unParser(f(st.state))(st.str));
            })({
                state: a,
                str: str
            });
        };
    };
});
var altParser = new Control_Alt.Alt(function () {
    return functorParser;
}, function (v) {
    return function (v1) {
        return function (s) {
            var v2 = v(s);
            if (v2 instanceof Data_Either.Left) {
                if (s.pos === v2.value0.pos) {
                    return v1(s);
                };
                if (Data_Boolean.otherwise) {
                    return new Data_Either.Left({
                        error: v2.value0.error,
                        pos: v2.value0.pos
                    });
                };
            };
            return v2;
        };
    };
});
var plusParser = new Control_Plus.Plus(function () {
    return altParser;
}, fail("No alternative"));
var alternativeParser = new Control_Alternative.Alternative(function () {
    return applicativeParser;
}, function () {
    return plusParser;
});
var monadZeroParser = new Control_MonadZero.MonadZero(function () {
    return alternativeParser;
}, function () {
    return monadParser;
});
var monadPlusParser = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroParser;
});
module.exports = {
    ParseError: ParseError,
    Parser: Parser,
    unParser: unParser,
    runParser: runParser,
    fail: fail,
    "try": $$try,
    showParseError: showParseError,
    eqParseError: eqParseError,
    ordParseError: ordParseError,
    functorParser: functorParser,
    applyParser: applyParser,
    applicativeParser: applicativeParser,
    altParser: altParser,
    plusParser: plusParser,
    alternativeParser: alternativeParser,
    bindParser: bindParser,
    monadParser: monadParser,
    monadZeroParser: monadZeroParser,
    monadPlusParser: monadPlusParser,
    monadRecParser: monadRecParser,
    lazyParser: lazyParser,
    semigroupParser: semigroupParser
};

},{"../Control.Alt":2,"../Control.Alternative":3,"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Lazy":15,"../Control.Monad":54,"../Control.Monad.Rec.Class":47,"../Control.MonadPlus":55,"../Control.MonadZero":56,"../Control.Plus":59,"../Control.Semigroupoid":60,"../Data.Bifunctor":88,"../Data.Boolean":90,"../Data.Either":108,"../Data.Eq":111,"../Data.Function":125,"../Data.Functor":130,"../Data.Ord":178,"../Data.Semigroup":185,"../Data.Show":189,"../Data.Unit":220,"../Prelude":263}],275:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Type_Proxy = require("../Type.Proxy");
var BProxy = (function () {
    function BProxy() {

    };
    BProxy.value = new BProxy();
    return BProxy;
})();
var IsBoolean = function (reflectBoolean) {
    this.reflectBoolean = reflectBoolean;
};
var And = {};
var Or = {};
var Not = {};
var If = {};
var reflectBoolean = function (dict) {
    return dict.reflectBoolean;
};
var orTrue = Or;
var orFalse = Or;
var or = function (dictOr) {
    return function (v) {
        return function (v1) {
            return BProxy.value;
        };
    };
};
var notTrue = Not;
var notFalse = Not;
var not = function (dictNot) {
    return function (v) {
        return BProxy.value;
    };
};
var isBooleanTrue = new IsBoolean(function (v) {
    return true;
});
var isBooleanFalse = new IsBoolean(function (v) {
    return false;
});
var reifyBoolean = function (v) {
    return function (f) {
        if (v) {
            return f(isBooleanTrue)(BProxy.value);
        };
        if (!v) {
            return f(isBooleanFalse)(BProxy.value);
        };
        throw new Error("Failed pattern match at Type.Data.Boolean line 36, column 1 - line 36, column 83: " + [ v.constructor.name, f.constructor.name ]);
    };
};
var if_ = function (dictIf) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                return Type_Proxy["Proxy"].value;
            };
        };
    };
};
var ifTrue = If;
var ifFalse = If;
var andTrue = And;
var andFalse = And;
var and = function (dictAnd) {
    return function (v) {
        return function (v1) {
            return BProxy.value;
        };
    };
};
module.exports = {
    BProxy: BProxy,
    IsBoolean: IsBoolean,
    reflectBoolean: reflectBoolean,
    reifyBoolean: reifyBoolean,
    And: And,
    and: and,
    Or: Or,
    or: or,
    Not: Not,
    not: not,
    If: If,
    if_: if_,
    isBooleanTrue: isBooleanTrue,
    isBooleanFalse: isBooleanFalse,
    andTrue: andTrue,
    andFalse: andFalse,
    orTrue: orTrue,
    orFalse: orFalse,
    notTrue: notTrue,
    notFalse: notFalse,
    ifTrue: ifTrue,
    ifFalse: ifFalse
};

},{"../Type.Proxy":279}],276:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Ordering = require("../Data.Ordering");
var Type_Data_Boolean = require("../Type.Data.Boolean");
var OProxy = (function () {
    function OProxy() {

    };
    OProxy.value = new OProxy();
    return OProxy;
})();
var IsOrdering = function (reflectOrdering) {
    this.reflectOrdering = reflectOrdering;
};
var AppendOrdering = {};
var InvertOrdering = {};
var Equals = {};
var reflectOrdering = function (dict) {
    return dict.reflectOrdering;
};
var isOrderingLT = new IsOrdering(function (v) {
    return Data_Ordering.LT.value;
});
var isOrderingGT = new IsOrdering(function (v) {
    return Data_Ordering.GT.value;
});
var isOrderingEQ = new IsOrdering(function (v) {
    return Data_Ordering.EQ.value;
});
var reifyOrdering = function (v) {
    return function (f) {
        if (v instanceof Data_Ordering.LT) {
            return f(isOrderingLT)(OProxy.value);
        };
        if (v instanceof Data_Ordering.EQ) {
            return f(isOrderingEQ)(OProxy.value);
        };
        if (v instanceof Data_Ordering.GT) {
            return f(isOrderingGT)(OProxy.value);
        };
        throw new Error("Failed pattern match at Type.Data.Ordering line 38, column 1 - line 38, column 86: " + [ v.constructor.name, f.constructor.name ]);
    };
};
var invertOrderingLT = InvertOrdering;
var invertOrderingGT = InvertOrdering;
var invertOrderingEQ = InvertOrdering;
var invertOrdering = function (dictInvertOrdering) {
    return function (v) {
        return OProxy.value;
    };
};
var equalsLTLT = Equals;
var equalsLTGT = Equals;
var equalsLTEQ = Equals;
var equalsGTLT = Equals;
var equalsGTGT = Equals;
var equalsGTEQ = Equals;
var equalsEQLT = Equals;
var equalsEQGT = Equals;
var equalsEQEQ = Equals;
var equals = function (dictEquals) {
    return function (v) {
        return function (v1) {
            return Type_Data_Boolean.BProxy.value;
        };
    };
};
var appendOrderingLT = AppendOrdering;
var appendOrderingGT = AppendOrdering;
var appendOrderingEQ = AppendOrdering;
var appendOrdering = function (dictAppendOrdering) {
    return function (v) {
        return function (v1) {
            return OProxy.value;
        };
    };
};
module.exports = {
    OProxy: OProxy,
    IsOrdering: IsOrdering,
    reflectOrdering: reflectOrdering,
    reifyOrdering: reifyOrdering,
    AppendOrdering: AppendOrdering,
    appendOrdering: appendOrdering,
    InvertOrdering: InvertOrdering,
    invertOrdering: invertOrdering,
    Equals: Equals,
    equals: equals,
    isOrderingLT: isOrderingLT,
    isOrderingEQ: isOrderingEQ,
    isOrderingGT: isOrderingGT,
    appendOrderingLT: appendOrderingLT,
    appendOrderingEQ: appendOrderingEQ,
    appendOrderingGT: appendOrderingGT,
    invertOrderingLT: invertOrderingLT,
    invertOrderingEQ: invertOrderingEQ,
    invertOrderingGT: invertOrderingGT,
    equalsEQEQ: equalsEQEQ,
    equalsLTLT: equalsLTLT,
    equalsGTGT: equalsGTGT,
    equalsEQLT: equalsEQLT,
    equalsEQGT: equalsEQGT,
    equalsLTEQ: equalsLTEQ,
    equalsLTGT: equalsLTGT,
    equalsGTLT: equalsGTLT,
    equalsGTEQ: equalsGTEQ
};

},{"../Data.Ordering":179,"../Type.Data.Boolean":275}],277:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Data_Symbol = require("../Data.Symbol");
var Type_Data_Boolean = require("../Type.Data.Boolean");
var Type_Data_Ordering = require("../Type.Data.Ordering");
var CompareSymbol = {};
var AppendSymbol = {};
var Equals = {};
var equalsSymbol = function (dictCompareSymbol) {
    return function (dictEquals) {
        return Equals;
    };
};
var equals = function (dictEquals) {
    return function (v) {
        return function (v1) {
            return Type_Data_Boolean.BProxy.value;
        };
    };
};
var compareSymbol = function (dictCompareSymbol) {
    return function (v) {
        return function (v1) {
            return Type_Data_Ordering.OProxy.value;
        };
    };
};
var appendSymbol = function (dictAppendSymbol) {
    return function (v) {
        return function (v1) {
            return Data_Symbol.SProxy.value;
        };
    };
};
module.exports = {
    CompareSymbol: CompareSymbol,
    compareSymbol: compareSymbol,
    AppendSymbol: AppendSymbol,
    appendSymbol: appendSymbol,
    Equals: Equals,
    equals: equals,
    equalsSymbol: equalsSymbol
};

},{"../Data.Symbol":202,"../Type.Data.Boolean":275,"../Type.Data.Ordering":276}],278:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var TypeEquals = function (from, to) {
    this.from = from;
    this.to = to;
};
var to = function (dict) {
    return dict.to;
};
var refl = new TypeEquals(function (a) {
    return a;
}, function (a) {
    return a;
});
var from = function (dict) {
    return dict.from;
};
module.exports = {
    TypeEquals: TypeEquals,
    to: to,
    from: from,
    refl: refl
};

},{}],279:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Proxy3 = (function () {
    function Proxy3() {

    };
    Proxy3.value = new Proxy3();
    return Proxy3;
})();
var Proxy2 = (function () {
    function Proxy2() {

    };
    Proxy2.value = new Proxy2();
    return Proxy2;
})();
var $$Proxy = (function () {
    function $$Proxy() {

    };
    $$Proxy.value = new $$Proxy();
    return $$Proxy;
})();
var showProxy3 = new Data_Show.Show(function (v) {
    return "Proxy3";
});
var showProxy2 = new Data_Show.Show(function (v) {
    return "Proxy2";
});
var showProxy = new Data_Show.Show(function (v) {
    return "Proxy";
});
var semiringProxy3 = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, Proxy3.value, Proxy3.value);
var semiringProxy2 = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, Proxy2.value, Proxy2.value);
var semiringProxy = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, $$Proxy.value, $$Proxy.value);
var semigroupProxy3 = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
});
var semigroupProxy2 = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
});
var semigroupProxy = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var ringProxy3 = new Data_Ring.Ring(function () {
    return semiringProxy3;
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
});
var ringProxy2 = new Data_Ring.Ring(function () {
    return semiringProxy2;
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
});
var ringProxy = new Data_Ring.Ring(function () {
    return semiringProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var heytingAlgebraProxy3 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, Proxy3.value, function (v) {
    return function (v1) {
        return Proxy3.value;
    };
}, function (v) {
    return Proxy3.value;
}, Proxy3.value);
var heytingAlgebraProxy2 = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, Proxy2.value, function (v) {
    return function (v1) {
        return Proxy2.value;
    };
}, function (v) {
    return Proxy2.value;
}, Proxy2.value);
var heytingAlgebraProxy = new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, $$Proxy.value, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
}, function (v) {
    return $$Proxy.value;
}, $$Proxy.value);
var functorProxy = new Data_Functor.Functor(function (f) {
    return function (m) {
        return $$Proxy.value;
    };
});
var eqProxy3 = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy3 = new Data_Ord.Ord(function () {
    return eqProxy3;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var eqProxy2 = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy2 = new Data_Ord.Ord(function () {
    return eqProxy2;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var eqProxy = new Data_Eq.Eq(function (x) {
    return function (y) {
        return true;
    };
});
var ordProxy = new Data_Ord.Ord(function () {
    return eqProxy;
}, function (x) {
    return function (y) {
        return Data_Ordering.EQ.value;
    };
});
var discardProxy3 = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var discardProxy2 = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var discardProxy = new Control_Bind.Discard(function (dictBind) {
    return Control_Bind.bind(dictBind);
});
var commutativeRingProxy3 = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy3;
});
var commutativeRingProxy2 = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy2;
});
var commutativeRingProxy = new Data_CommutativeRing.CommutativeRing(function () {
    return ringProxy;
});
var boundedProxy3 = new Data_Bounded.Bounded(function () {
    return ordProxy3;
}, Proxy3.value, Proxy3.value);
var boundedProxy2 = new Data_Bounded.Bounded(function () {
    return ordProxy2;
}, Proxy2.value, Proxy2.value);
var boundedProxy = new Data_Bounded.Bounded(function () {
    return ordProxy;
}, $$Proxy.value, $$Proxy.value);
var booleanAlgebraProxy3 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy3;
});
var booleanAlgebraProxy2 = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy2;
});
var booleanAlgebraProxy = new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraProxy;
});
var applyProxy = new Control_Apply.Apply(function () {
    return functorProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var bindProxy = new Control_Bind.Bind(function () {
    return applyProxy;
}, function (v) {
    return function (v1) {
        return $$Proxy.value;
    };
});
var applicativeProxy = new Control_Applicative.Applicative(function () {
    return applyProxy;
}, function (v) {
    return $$Proxy.value;
});
var monadProxy = new Control_Monad.Monad(function () {
    return applicativeProxy;
}, function () {
    return bindProxy;
});
module.exports = {
    "Proxy": $$Proxy,
    Proxy2: Proxy2,
    Proxy3: Proxy3,
    eqProxy: eqProxy,
    functorProxy: functorProxy,
    ordProxy: ordProxy,
    applicativeProxy: applicativeProxy,
    applyProxy: applyProxy,
    bindProxy: bindProxy,
    booleanAlgebraProxy: booleanAlgebraProxy,
    boundedProxy: boundedProxy,
    commutativeRingProxy: commutativeRingProxy,
    discardProxy: discardProxy,
    heytingAlgebraProxy: heytingAlgebraProxy,
    monadProxy: monadProxy,
    ringProxy: ringProxy,
    semigroupProxy: semigroupProxy,
    semiringProxy: semiringProxy,
    showProxy: showProxy,
    eqProxy2: eqProxy2,
    ordProxy2: ordProxy2,
    booleanAlgebraProxy2: booleanAlgebraProxy2,
    boundedProxy2: boundedProxy2,
    commutativeRingProxy2: commutativeRingProxy2,
    discardProxy2: discardProxy2,
    heytingAlgebraProxy2: heytingAlgebraProxy2,
    ringProxy2: ringProxy2,
    semigroupProxy2: semigroupProxy2,
    semiringProxy2: semiringProxy2,
    showProxy2: showProxy2,
    eqProxy3: eqProxy3,
    ordProxy3: ordProxy3,
    booleanAlgebraProxy3: booleanAlgebraProxy3,
    boundedProxy3: boundedProxy3,
    commutativeRingProxy3: commutativeRingProxy3,
    discardProxy3: discardProxy3,
    heytingAlgebraProxy3: heytingAlgebraProxy3,
    ringProxy3: ringProxy3,
    semigroupProxy3: semigroupProxy3,
    semiringProxy3: semiringProxy3,
    showProxy3: showProxy3
};

},{"../Control.Applicative":4,"../Control.Apply":6,"../Control.Bind":10,"../Control.Monad":54,"../Data.BooleanAlgebra":91,"../Data.Bounded":93,"../Data.CommutativeRing":98,"../Data.Eq":111,"../Data.Functor":130,"../Data.HeytingAlgebra":141,"../Data.Ord":178,"../Data.Ordering":179,"../Data.Ring":181,"../Data.Semigroup":185,"../Data.Semiring":187,"../Data.Show":189,"../Prelude":263}],280:[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function (x) {
  return x;
};

},{}],281:[function(require,module,exports){
// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":280}],282:[function(require,module,exports){
require('Main').main();

},{"Main":242}],283:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],284:[function(require,module,exports){
(function (setImmediate,clearImmediate){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":283,"timers":284}]},{},[282]);
